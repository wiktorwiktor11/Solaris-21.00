#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SafeZoneStorm

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SafeZoneStorm.BP_SafeZoneStorm_C
// 0x0160 (0x03F8 - 0x0298)
class ABP_SafeZoneStorm_C final : public AFortSafeZoneStorm
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_CloudBottomBlend;                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CloudRing_Mobile;                               // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CloudRingTopBlend;                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Storm_ScreenEffect;                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CloudsOuterRing;                                   // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh10;                                      // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh9;                                       // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh8;                                       // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh7;                                       // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh6;                                       // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh5;                                       // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh4;                                       // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh3;                                       // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain16;                                   // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain15;                                   // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain1;                                    // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain13;                                   // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain12;                                   // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain11;                                   // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain10;                                   // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain9;                                    // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain8;                                    // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain7;                                    // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain6;                                    // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain5;                                    // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain4;                                    // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain3;                                    // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain2;                                    // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain14;                                   // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormRings;                                        // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StormQuadMain;                                     // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          MobileMode;                                        // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowStorm;                                         // 0x03C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CA[0x2];                                      // 0x03CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StormSize;                                         // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         StormBias;                                         // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StormCenter;                                       // 0x03D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          UseNewStorm;                                       // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSeason11Storm;                                  // 0x03F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseVolumetricStorm;                                // 0x03F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ShowStormScreenEffect(bool Show);
	void ShowClouds(float Amount);
	void ReceiveBeginPlay();
	void MobileClouds(bool Mobile);
	void ExecuteUbergraph_BP_SafeZoneStorm(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SafeZoneStorm_C">();
	}
	static class ABP_SafeZoneStorm_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SafeZoneStorm_C>();
	}
};
static_assert(alignof(ABP_SafeZoneStorm_C) == 0x000008, "Wrong alignment on ABP_SafeZoneStorm_C");
static_assert(sizeof(ABP_SafeZoneStorm_C) == 0x0003F8, "Wrong size on ABP_SafeZoneStorm_C");
static_assert(offsetof(ABP_SafeZoneStorm_C, UberGraphFrame) == 0x000298, "Member 'ABP_SafeZoneStorm_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, SM_CloudBottomBlend) == 0x0002A0, "Member 'ABP_SafeZoneStorm_C::SM_CloudBottomBlend' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, SM_CloudRing_Mobile) == 0x0002A8, "Member 'ABP_SafeZoneStorm_C::SM_CloudRing_Mobile' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, SM_CloudRingTopBlend) == 0x0002B0, "Member 'ABP_SafeZoneStorm_C::SM_CloudRingTopBlend' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, SM_Storm_ScreenEffect) == 0x0002B8, "Member 'ABP_SafeZoneStorm_C::SM_Storm_ScreenEffect' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, PostProcess) == 0x0002C0, "Member 'ABP_SafeZoneStorm_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, Box) == 0x0002C8, "Member 'ABP_SafeZoneStorm_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, CloudsOuterRing) == 0x0002D0, "Member 'ABP_SafeZoneStorm_C::CloudsOuterRing' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh10) == 0x0002D8, "Member 'ABP_SafeZoneStorm_C::StaticMesh10' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh9) == 0x0002E0, "Member 'ABP_SafeZoneStorm_C::StaticMesh9' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh8) == 0x0002E8, "Member 'ABP_SafeZoneStorm_C::StaticMesh8' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh7) == 0x0002F0, "Member 'ABP_SafeZoneStorm_C::StaticMesh7' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh6) == 0x0002F8, "Member 'ABP_SafeZoneStorm_C::StaticMesh6' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh5) == 0x000300, "Member 'ABP_SafeZoneStorm_C::StaticMesh5' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh4) == 0x000308, "Member 'ABP_SafeZoneStorm_C::StaticMesh4' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh3) == 0x000310, "Member 'ABP_SafeZoneStorm_C::StaticMesh3' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh2) == 0x000318, "Member 'ABP_SafeZoneStorm_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh1) == 0x000320, "Member 'ABP_SafeZoneStorm_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StaticMesh) == 0x000328, "Member 'ABP_SafeZoneStorm_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain16) == 0x000330, "Member 'ABP_SafeZoneStorm_C::StormQuadMain16' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain15) == 0x000338, "Member 'ABP_SafeZoneStorm_C::StormQuadMain15' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain1) == 0x000340, "Member 'ABP_SafeZoneStorm_C::StormQuadMain1' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain13) == 0x000348, "Member 'ABP_SafeZoneStorm_C::StormQuadMain13' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain12) == 0x000350, "Member 'ABP_SafeZoneStorm_C::StormQuadMain12' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain11) == 0x000358, "Member 'ABP_SafeZoneStorm_C::StormQuadMain11' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain10) == 0x000360, "Member 'ABP_SafeZoneStorm_C::StormQuadMain10' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain9) == 0x000368, "Member 'ABP_SafeZoneStorm_C::StormQuadMain9' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain8) == 0x000370, "Member 'ABP_SafeZoneStorm_C::StormQuadMain8' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain7) == 0x000378, "Member 'ABP_SafeZoneStorm_C::StormQuadMain7' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain6) == 0x000380, "Member 'ABP_SafeZoneStorm_C::StormQuadMain6' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain5) == 0x000388, "Member 'ABP_SafeZoneStorm_C::StormQuadMain5' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain4) == 0x000390, "Member 'ABP_SafeZoneStorm_C::StormQuadMain4' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain3) == 0x000398, "Member 'ABP_SafeZoneStorm_C::StormQuadMain3' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain2) == 0x0003A0, "Member 'ABP_SafeZoneStorm_C::StormQuadMain2' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain14) == 0x0003A8, "Member 'ABP_SafeZoneStorm_C::StormQuadMain14' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormRings) == 0x0003B0, "Member 'ABP_SafeZoneStorm_C::StormRings' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormQuadMain) == 0x0003B8, "Member 'ABP_SafeZoneStorm_C::StormQuadMain' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, DefaultSceneRoot) == 0x0003C0, "Member 'ABP_SafeZoneStorm_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, MobileMode) == 0x0003C8, "Member 'ABP_SafeZoneStorm_C::MobileMode' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, ShowStorm) == 0x0003C9, "Member 'ABP_SafeZoneStorm_C::ShowStorm' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormSize) == 0x0003CC, "Member 'ABP_SafeZoneStorm_C::StormSize' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormBias) == 0x0003D0, "Member 'ABP_SafeZoneStorm_C::StormBias' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, StormCenter) == 0x0003D8, "Member 'ABP_SafeZoneStorm_C::StormCenter' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, UseNewStorm) == 0x0003F0, "Member 'ABP_SafeZoneStorm_C::UseNewStorm' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, UseSeason11Storm) == 0x0003F1, "Member 'ABP_SafeZoneStorm_C::UseSeason11Storm' has a wrong offset!");
static_assert(offsetof(ABP_SafeZoneStorm_C, UseVolumetricStorm) == 0x0003F2, "Member 'ABP_SafeZoneStorm_C::UseVolumetricStorm' has a wrong offset!");

}

