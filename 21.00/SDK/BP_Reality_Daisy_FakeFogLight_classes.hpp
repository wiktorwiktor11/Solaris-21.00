#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Reality_Daisy_FakeFogLight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Reality_Daisy_FakeFogLight.BP_Reality_Daisy_FakeFogLight_C
// 0x0048 (0x02B8 - 0x0270)
class ABP_Reality_Daisy_FakeFogLight_C final : public AActor
{
public:
	class UPointLightComponent*                   PointLight;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FakeLightSphereFar;                             // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FakeLightSphere;                                // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color;                                             // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Brightness;                                        // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BrightnesShadows;                                  // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawFadeLength;                                    // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawDistance;                                      // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SphereRadiusMargin;                                // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NearFadeDistance;                                  // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 TimeOfDayBrightness;                               // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DepthFade;                                         // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Reality_Daisy_FakeFogLight_C">();
	}
	static class ABP_Reality_Daisy_FakeFogLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Reality_Daisy_FakeFogLight_C>();
	}
};
static_assert(alignof(ABP_Reality_Daisy_FakeFogLight_C) == 0x000008, "Wrong alignment on ABP_Reality_Daisy_FakeFogLight_C");
static_assert(sizeof(ABP_Reality_Daisy_FakeFogLight_C) == 0x0002B8, "Wrong size on ABP_Reality_Daisy_FakeFogLight_C");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, PointLight) == 0x000270, "Member 'ABP_Reality_Daisy_FakeFogLight_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, SM_FakeLightSphereFar) == 0x000278, "Member 'ABP_Reality_Daisy_FakeFogLight_C::SM_FakeLightSphereFar' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, SM_FakeLightSphere) == 0x000280, "Member 'ABP_Reality_Daisy_FakeFogLight_C::SM_FakeLightSphere' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, DefaultSceneRoot) == 0x000288, "Member 'ABP_Reality_Daisy_FakeFogLight_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, Color) == 0x000290, "Member 'ABP_Reality_Daisy_FakeFogLight_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, Brightness) == 0x000294, "Member 'ABP_Reality_Daisy_FakeFogLight_C::Brightness' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, BrightnesShadows) == 0x000298, "Member 'ABP_Reality_Daisy_FakeFogLight_C::BrightnesShadows' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, DrawFadeLength) == 0x00029C, "Member 'ABP_Reality_Daisy_FakeFogLight_C::DrawFadeLength' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, DrawDistance) == 0x0002A0, "Member 'ABP_Reality_Daisy_FakeFogLight_C::DrawDistance' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, SphereRadiusMargin) == 0x0002A4, "Member 'ABP_Reality_Daisy_FakeFogLight_C::SphereRadiusMargin' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, NearFadeDistance) == 0x0002A8, "Member 'ABP_Reality_Daisy_FakeFogLight_C::NearFadeDistance' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, TimeOfDayBrightness) == 0x0002AC, "Member 'ABP_Reality_Daisy_FakeFogLight_C::TimeOfDayBrightness' has a wrong offset!");
static_assert(offsetof(ABP_Reality_Daisy_FakeFogLight_C, DepthFade) == 0x0002B0, "Member 'ABP_Reality_Daisy_FakeFogLight_C::DepthFade' has a wrong offset!");

}

