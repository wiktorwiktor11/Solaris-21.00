#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaSpectatorRebootWidget

#include "Basic.hpp"

#include "AthenaSpectatorRebootWidget_classes.hpp"
#include "AthenaSpectatorRebootWidget_parameters.hpp"


namespace SDK
{

// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAthenaSpectatorRebootWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAthenaSpectatorRebootWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.DisplayChipAvailableMessage
// (BlueprintCallable, BlueprintEvent)

void UAthenaSpectatorRebootWidget_C::DisplayChipAvailableMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "DisplayChipAvailableMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.ExecuteUbergraph_AthenaSpectatorRebootWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaSpectatorRebootWidget_C::ExecuteUbergraph_AthenaSpectatorRebootWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "ExecuteUbergraph_AthenaSpectatorRebootWidget");

	Params::AthenaSpectatorRebootWidget_C_ExecuteUbergraph_AthenaSpectatorRebootWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.HandleCardAvailableTimer
// (BlueprintCallable, BlueprintEvent)

void UAthenaSpectatorRebootWidget_C::HandleCardAvailableTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "HandleCardAvailableTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.HandleOnLoadScreenChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerControllerAthena*      PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnableLoadScreen                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             HUDReasonText                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UAthenaSpectatorRebootWidget_C::HandleOnLoadScreenChanged(class AFortPlayerControllerAthena* PlayerController, bool bEnableLoadScreen, const class FText& HUDReasonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "HandleOnLoadScreenChanged");

	Params::AthenaSpectatorRebootWidget_C_HandleOnLoadScreenChanged Parms{};

	Parms.PlayerController = PlayerController;
	Parms.bEnableLoadScreen = bEnableLoadScreen;
	Parms.HUDReasonText = std::move(HUDReasonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.HandleOnResurrectionStateChanged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAthenaSpectatorRebootWidget_C::HandleOnResurrectionStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "HandleOnResurrectionStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.HandleRebootActorChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InteractingActorCount                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MultiInteractMultiplier                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InteractingDuration                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaSpectatorRebootWidget_C::HandleRebootActorChanged(int32 InteractingActorCount, float MultiInteractMultiplier, float InteractingDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "HandleRebootActorChanged");

	Params::AthenaSpectatorRebootWidget_C_HandleRebootActorChanged Parms{};

	Parms.InteractingActorCount = InteractingActorCount;
	Parms.MultiInteractMultiplier = MultiInteractMultiplier;
	Parms.InteractingDuration = InteractingDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.OnFillComplete
// (BlueprintCallable, BlueprintEvent)

void UAthenaSpectatorRebootWidget_C::OnFillComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "OnFillComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.OnResurrectionStateChanged
// (Event, Protected, BlueprintEvent)

void UAthenaSpectatorRebootWidget_C::OnResurrectionStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "OnResurrectionStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.PlayRebootAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayMultiplier                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartDuration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaSpectatorRebootWidget_C::PlayRebootAnimation(float PlayMultiplier, float StartDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "PlayRebootAnimation");

	Params::AthenaSpectatorRebootWidget_C_PlayRebootAnimation Parms{};

	Parms.PlayMultiplier = PlayMultiplier;
	Parms.StartDuration = StartDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.PlayRebootProgress
// (BlueprintCallable, BlueprintEvent)

void UAthenaSpectatorRebootWidget_C::PlayRebootProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "PlayRebootProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaSpectatorRebootWidget.AthenaSpectatorRebootWidget_C.ResetProgressBar
// (BlueprintCallable, BlueprintEvent)

void UAthenaSpectatorRebootWidget_C::ResetProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorRebootWidget_C", "ResetProgressBar");

	UObject::ProcessEvent(Func, nullptr);
}

}

