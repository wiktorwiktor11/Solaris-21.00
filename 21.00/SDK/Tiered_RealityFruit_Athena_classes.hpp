#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tiered_RealityFruit_Athena

#include "Basic.hpp"

#include "Tiered_RealityFruit_Athena_Parent_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "SaplingFruitVariants_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Tiered_RealityFruit_Athena.Tiered_RealityFruit_Athena_C
// 0x03E0 (0x1508 - 0x1128)
class ATiered_RealityFruit_Athena_C : public ATiered_RealityFruit_Athena_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Tiered_RealityFruit_Athena_C;       // 0x1128(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMeshStem;                                    // 0x1130(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Min_World_Scale_Baby;                              // 0x1138(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cur_Min_World_Scale;                               // 0x113C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cur_Max_World_Scale;                               // 0x1140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Curr_World_Scale;                                  // 0x1144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CurInnerColor;                                     // 0x1148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CurOuterColor;                                     // 0x1158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           StartInnerColor;                                   // 0x1168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           StartOuterColor;                                   // 0x1178(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DestInnerColor;                                    // 0x1188(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DestOuterColor;                                    // 0x1198(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DestColor_Baby_Inner;                              // 0x11A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DestColor_Baby_Outer;                              // 0x11B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DestColor_Youth_Inner;                             // 0x11C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DestColor_Youth_Outer;                             // 0x11D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Uncommon_Inner;                         // 0x11E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Uncommon_Outer;                         // 0x11F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Common_Inner;                           // 0x1208(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Common_Outer;                           // 0x1218(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Rare_Inner;                             // 0x1228(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Rare_Outer;                             // 0x1238(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Epic_Inner;                             // 0x1248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Epic_Outer;                             // 0x1258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Legendary_Inner;                        // 0x1268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Legendary_Outer;                        // 0x1278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Mythic_Inner;                           // 0x1288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Mythic_Outer;                           // 0x1298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Mythic_Baby_Inner;                      // 0x12A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LerpTimerHandle;                                   // 0x12B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         LerpTimerInterval;                                 // 0x12C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_World_Size_Alpha_Mature;                       // 0x12C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_World_Size_Alpha_Youth_;                       // 0x12C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min_World_Size_Alpha_Baby;                         // 0x12CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_World_Size_Alpha_Baby;                         // 0x12D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D4[0x4];                                     // 0x12D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         PickedTimerLength;                                 // 0x12D8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         BabyTimerLength;                                   // 0x1300(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MatureTimerLength;                                 // 0x1328(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         YouthTimerLength;                                  // 0x1350(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               MaterialInstanceDynamic;                           // 0x1378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseShortTimes;                                     // 0x1380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1381[0x7];                                     // 0x1381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OrigOrigin;                                        // 0x1388(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FallCount_repped;                                  // 0x13A0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A4[0x4];                                     // 0x13A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LandingLocation;                                   // 0x13A8(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Landing;                                     // 0x13C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemAsset*                         LandingFX;                                         // 0x13C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Opened;                                            // 0x13D0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          LandInterrupted;                                   // 0x13D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D2[0x2];                                     // 0x13D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Max_World_Scale_Mythic_Mature;                     // 0x13D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dest_Color_Mythic_Baby_Outer;                      // 0x13D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasReachedDestInnerColor;                          // 0x13E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasReachedDestScale;                               // 0x13E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EA[0x2];                                     // 0x13EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale_Interp_Speed;                                // 0x13EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Color_Interp_Speed_Inner;                          // 0x13F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTierGroup_Nurtured0;                           // 0x13F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTierGroup_Nurtured1;                           // 0x13F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTierGroup_Nurtured2;                           // 0x13FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTierGroup_Nurtured3;                           // 0x1400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTierGroup_Nurtured4;                           // 0x1404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugFruit;                                        // 0x1408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMythicFruit;                                     // 0x1409(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESaplingFruitVariants                         VariantOrRarity;                                   // 0x140A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          FallOffWhenOverripe;                               // 0x140B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTierGroup_Nurtured5;                           // 0x140C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESaplingFruitVariants                         Gray;                                              // 0x1410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1411[0x7];                                     // 0x1411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           GrowthTimer;                                       // 0x1418(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x1420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1424[0x4];                                     // 0x1424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ShortTime;                                         // 0x1428(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DelayTimerLength;                                  // 0x1450(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HasEverFallen;                                     // 0x1478(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1479[0x7];                                     // 0x1479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              VariantOrRarityChangedEvent;                       // 0x1480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          UseCurvedStem;                                     // 0x1490(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          HasReachedDestOuterColor;                          // 0x1491(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1492[0x2];                                     // 0x1492(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Color_Interp_Speed_Outer;                          // 0x1494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           RarityTexts;                                       // 0x1498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   PickFruitTextFormat;                               // 0x14A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             FruitDestroyedSound;                               // 0x14C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FruitPickedSound;                                  // 0x14C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SoundCurrentlyPlaying;                             // 0x14D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cur_Max_World_Alpha;                               // 0x14D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasReachedDestAlpha;                               // 0x14DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14DD[0x3];                                     // 0x14DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Curr_World_Alpha;                                  // 0x14E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha_Interp_Speed;                                // 0x14E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_World_Scale_Youth;                             // 0x14E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_World_Scale_Baby;                              // 0x14EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cur_Min_World_Alpha;                               // 0x14F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_World_Scale_Mature;                            // 0x14F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_World_Size_Alpha_Mythic_Mature;                // 0x14F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket_Name;                                       // 0x14FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScaleOutAndDie;                                    // 0x1500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESaplingFruitVariants                         MythicBaby;                                        // 0x1501(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DestroyThisFruit();
	void EventFruitEndSound(class USoundBase* SoundToPlay);
	void ExecuteUbergraph_Tiered_RealityFruit_Athena(int32 EntryPoint);
	void Force_Open_Fruit();
	void ForceSetLocationOnLanding();
	void GetFruitRarityRichText(class FText* Text);
	void GetScalableFloatTime(const struct FScalableFloat& ScalableFloat, float* Value_0);
	void HandleProjectileMovementStop(const struct FHitResult& ImpactResult);
	void Increment_Growth_State();
	void LandingInterrupted();
	void Multicast_ApplyGravityForFall();
	void Multicast_ApplyGravityForFallOffSapling();
	void Notify_Sapling_Upgraded();
	void OnFruitLooted();
	void OnLandingLocationChanged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnLoot();
	void OnRep_LandingLocation();
	void OnRep_Opened();
	void OnRep_UseCurvedStem();
	void OnRep_VariantOrRarity();
	void OnSetSearched();
	void Play_Landing_FX(bool bSpawnVFX);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ResetLerpParamsAndLerpTimer(float StartingScale, float StartingSizeAlpha);
	void Scale_Out_and_Die();
	void Set_Loot_Tier_Group_From_Rarity();
	void Set_To_Use_Short_Times();
	void SetFruitScale(float Scale);
	void SetFruitSizeAlpha(float SizeAlpha);
	void Setup_Bind_To_Building_Actor(class UObject* Object);
	void StartDecay();
	void StartLerpTimer();
	void Update_Growth_Status();
	void UpdateLerpToDest();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Tiered_RealityFruit_Athena_C">();
	}
	static class ATiered_RealityFruit_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATiered_RealityFruit_Athena_C>();
	}
};
static_assert(alignof(ATiered_RealityFruit_Athena_C) == 0x000008, "Wrong alignment on ATiered_RealityFruit_Athena_C");
static_assert(sizeof(ATiered_RealityFruit_Athena_C) == 0x001508, "Wrong size on ATiered_RealityFruit_Athena_C");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, UberGraphFrame_Tiered_RealityFruit_Athena_C) == 0x001128, "Member 'ATiered_RealityFruit_Athena_C::UberGraphFrame_Tiered_RealityFruit_Athena_C' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, StaticMeshStem) == 0x001130, "Member 'ATiered_RealityFruit_Athena_C::StaticMeshStem' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Min_World_Scale_Baby) == 0x001138, "Member 'ATiered_RealityFruit_Athena_C::Min_World_Scale_Baby' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Cur_Min_World_Scale) == 0x00113C, "Member 'ATiered_RealityFruit_Athena_C::Cur_Min_World_Scale' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Cur_Max_World_Scale) == 0x001140, "Member 'ATiered_RealityFruit_Athena_C::Cur_Max_World_Scale' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Curr_World_Scale) == 0x001144, "Member 'ATiered_RealityFruit_Athena_C::Curr_World_Scale' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, CurInnerColor) == 0x001148, "Member 'ATiered_RealityFruit_Athena_C::CurInnerColor' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, CurOuterColor) == 0x001158, "Member 'ATiered_RealityFruit_Athena_C::CurOuterColor' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, StartInnerColor) == 0x001168, "Member 'ATiered_RealityFruit_Athena_C::StartInnerColor' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, StartOuterColor) == 0x001178, "Member 'ATiered_RealityFruit_Athena_C::StartOuterColor' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, DestInnerColor) == 0x001188, "Member 'ATiered_RealityFruit_Athena_C::DestInnerColor' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, DestOuterColor) == 0x001198, "Member 'ATiered_RealityFruit_Athena_C::DestOuterColor' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, DestColor_Baby_Inner) == 0x0011A8, "Member 'ATiered_RealityFruit_Athena_C::DestColor_Baby_Inner' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, DestColor_Baby_Outer) == 0x0011B8, "Member 'ATiered_RealityFruit_Athena_C::DestColor_Baby_Outer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, DestColor_Youth_Inner) == 0x0011C8, "Member 'ATiered_RealityFruit_Athena_C::DestColor_Youth_Inner' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, DestColor_Youth_Outer) == 0x0011D8, "Member 'ATiered_RealityFruit_Athena_C::DestColor_Youth_Outer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Uncommon_Inner) == 0x0011E8, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Uncommon_Inner' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Uncommon_Outer) == 0x0011F8, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Uncommon_Outer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Common_Inner) == 0x001208, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Common_Inner' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Common_Outer) == 0x001218, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Common_Outer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Rare_Inner) == 0x001228, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Rare_Inner' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Rare_Outer) == 0x001238, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Rare_Outer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Epic_Inner) == 0x001248, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Epic_Inner' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Epic_Outer) == 0x001258, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Epic_Outer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Legendary_Inner) == 0x001268, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Legendary_Inner' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Legendary_Outer) == 0x001278, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Legendary_Outer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Mythic_Inner) == 0x001288, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Mythic_Inner' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Mythic_Outer) == 0x001298, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Mythic_Outer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Mythic_Baby_Inner) == 0x0012A8, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Mythic_Baby_Inner' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LerpTimerHandle) == 0x0012B8, "Member 'ATiered_RealityFruit_Athena_C::LerpTimerHandle' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LerpTimerInterval) == 0x0012C0, "Member 'ATiered_RealityFruit_Athena_C::LerpTimerInterval' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Max_World_Size_Alpha_Mature) == 0x0012C4, "Member 'ATiered_RealityFruit_Athena_C::Max_World_Size_Alpha_Mature' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Max_World_Size_Alpha_Youth_) == 0x0012C8, "Member 'ATiered_RealityFruit_Athena_C::Max_World_Size_Alpha_Youth_' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Min_World_Size_Alpha_Baby) == 0x0012CC, "Member 'ATiered_RealityFruit_Athena_C::Min_World_Size_Alpha_Baby' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Max_World_Size_Alpha_Baby) == 0x0012D0, "Member 'ATiered_RealityFruit_Athena_C::Max_World_Size_Alpha_Baby' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, PickedTimerLength) == 0x0012D8, "Member 'ATiered_RealityFruit_Athena_C::PickedTimerLength' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, BabyTimerLength) == 0x001300, "Member 'ATiered_RealityFruit_Athena_C::BabyTimerLength' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, MatureTimerLength) == 0x001328, "Member 'ATiered_RealityFruit_Athena_C::MatureTimerLength' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, YouthTimerLength) == 0x001350, "Member 'ATiered_RealityFruit_Athena_C::YouthTimerLength' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, MaterialInstanceDynamic) == 0x001378, "Member 'ATiered_RealityFruit_Athena_C::MaterialInstanceDynamic' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, UseShortTimes) == 0x001380, "Member 'ATiered_RealityFruit_Athena_C::UseShortTimes' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, OrigOrigin) == 0x001388, "Member 'ATiered_RealityFruit_Athena_C::OrigOrigin' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, FallCount_repped) == 0x0013A0, "Member 'ATiered_RealityFruit_Athena_C::FallCount_repped' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LandingLocation) == 0x0013A8, "Member 'ATiered_RealityFruit_Athena_C::LandingLocation' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Sound_Landing) == 0x0013C0, "Member 'ATiered_RealityFruit_Athena_C::Sound_Landing' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LandingFX) == 0x0013C8, "Member 'ATiered_RealityFruit_Athena_C::LandingFX' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Opened) == 0x0013D0, "Member 'ATiered_RealityFruit_Athena_C::Opened' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LandInterrupted) == 0x0013D1, "Member 'ATiered_RealityFruit_Athena_C::LandInterrupted' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Max_World_Scale_Mythic_Mature) == 0x0013D4, "Member 'ATiered_RealityFruit_Athena_C::Max_World_Scale_Mythic_Mature' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Dest_Color_Mythic_Baby_Outer) == 0x0013D8, "Member 'ATiered_RealityFruit_Athena_C::Dest_Color_Mythic_Baby_Outer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, HasReachedDestInnerColor) == 0x0013E8, "Member 'ATiered_RealityFruit_Athena_C::HasReachedDestInnerColor' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, HasReachedDestScale) == 0x0013E9, "Member 'ATiered_RealityFruit_Athena_C::HasReachedDestScale' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Scale_Interp_Speed) == 0x0013EC, "Member 'ATiered_RealityFruit_Athena_C::Scale_Interp_Speed' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Color_Interp_Speed_Inner) == 0x0013F0, "Member 'ATiered_RealityFruit_Athena_C::Color_Interp_Speed_Inner' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LootTierGroup_Nurtured0) == 0x0013F4, "Member 'ATiered_RealityFruit_Athena_C::LootTierGroup_Nurtured0' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LootTierGroup_Nurtured1) == 0x0013F8, "Member 'ATiered_RealityFruit_Athena_C::LootTierGroup_Nurtured1' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LootTierGroup_Nurtured2) == 0x0013FC, "Member 'ATiered_RealityFruit_Athena_C::LootTierGroup_Nurtured2' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LootTierGroup_Nurtured3) == 0x001400, "Member 'ATiered_RealityFruit_Athena_C::LootTierGroup_Nurtured3' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LootTierGroup_Nurtured4) == 0x001404, "Member 'ATiered_RealityFruit_Athena_C::LootTierGroup_Nurtured4' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, DebugFruit) == 0x001408, "Member 'ATiered_RealityFruit_Athena_C::DebugFruit' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, IsMythicFruit) == 0x001409, "Member 'ATiered_RealityFruit_Athena_C::IsMythicFruit' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, VariantOrRarity) == 0x00140A, "Member 'ATiered_RealityFruit_Athena_C::VariantOrRarity' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, FallOffWhenOverripe) == 0x00140B, "Member 'ATiered_RealityFruit_Athena_C::FallOffWhenOverripe' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, LootTierGroup_Nurtured5) == 0x00140C, "Member 'ATiered_RealityFruit_Athena_C::LootTierGroup_Nurtured5' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Gray) == 0x001410, "Member 'ATiered_RealityFruit_Athena_C::Gray' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, GrowthTimer) == 0x001418, "Member 'ATiered_RealityFruit_Athena_C::GrowthTimer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Value) == 0x001420, "Member 'ATiered_RealityFruit_Athena_C::Value' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, ShortTime) == 0x001428, "Member 'ATiered_RealityFruit_Athena_C::ShortTime' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, DelayTimerLength) == 0x001450, "Member 'ATiered_RealityFruit_Athena_C::DelayTimerLength' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, HasEverFallen) == 0x001478, "Member 'ATiered_RealityFruit_Athena_C::HasEverFallen' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, VariantOrRarityChangedEvent) == 0x001480, "Member 'ATiered_RealityFruit_Athena_C::VariantOrRarityChangedEvent' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, UseCurvedStem) == 0x001490, "Member 'ATiered_RealityFruit_Athena_C::UseCurvedStem' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, HasReachedDestOuterColor) == 0x001491, "Member 'ATiered_RealityFruit_Athena_C::HasReachedDestOuterColor' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Color_Interp_Speed_Outer) == 0x001494, "Member 'ATiered_RealityFruit_Athena_C::Color_Interp_Speed_Outer' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, RarityTexts) == 0x001498, "Member 'ATiered_RealityFruit_Athena_C::RarityTexts' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, PickFruitTextFormat) == 0x0014A8, "Member 'ATiered_RealityFruit_Athena_C::PickFruitTextFormat' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, FruitDestroyedSound) == 0x0014C0, "Member 'ATiered_RealityFruit_Athena_C::FruitDestroyedSound' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, FruitPickedSound) == 0x0014C8, "Member 'ATiered_RealityFruit_Athena_C::FruitPickedSound' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, SoundCurrentlyPlaying) == 0x0014D0, "Member 'ATiered_RealityFruit_Athena_C::SoundCurrentlyPlaying' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Cur_Max_World_Alpha) == 0x0014D8, "Member 'ATiered_RealityFruit_Athena_C::Cur_Max_World_Alpha' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, HasReachedDestAlpha) == 0x0014DC, "Member 'ATiered_RealityFruit_Athena_C::HasReachedDestAlpha' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Curr_World_Alpha) == 0x0014E0, "Member 'ATiered_RealityFruit_Athena_C::Curr_World_Alpha' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Alpha_Interp_Speed) == 0x0014E4, "Member 'ATiered_RealityFruit_Athena_C::Alpha_Interp_Speed' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Max_World_Scale_Youth) == 0x0014E8, "Member 'ATiered_RealityFruit_Athena_C::Max_World_Scale_Youth' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Max_World_Scale_Baby) == 0x0014EC, "Member 'ATiered_RealityFruit_Athena_C::Max_World_Scale_Baby' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Cur_Min_World_Alpha) == 0x0014F0, "Member 'ATiered_RealityFruit_Athena_C::Cur_Min_World_Alpha' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Max_World_Scale_Mature) == 0x0014F4, "Member 'ATiered_RealityFruit_Athena_C::Max_World_Scale_Mature' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Max_World_Size_Alpha_Mythic_Mature) == 0x0014F8, "Member 'ATiered_RealityFruit_Athena_C::Max_World_Size_Alpha_Mythic_Mature' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, Socket_Name) == 0x0014FC, "Member 'ATiered_RealityFruit_Athena_C::Socket_Name' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, ScaleOutAndDie) == 0x001500, "Member 'ATiered_RealityFruit_Athena_C::ScaleOutAndDie' has a wrong offset!");
static_assert(offsetof(ATiered_RealityFruit_Athena_C, MythicBaby) == 0x001501, "Member 'ATiered_RealityFruit_Athena_C::MythicBaby' has a wrong offset!");

}

