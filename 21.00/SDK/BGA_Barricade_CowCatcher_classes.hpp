#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Barricade_CowCatcher

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CowCatcherModCodeRuntime_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C
// 0x0168 (0x0AE0 - 0x0978)
class ABGA_Barricade_CowCatcher_C final : public ACowCatcherBarricadeBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0978(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortSoundIndicatorComponent*           SoundIndicator;                                    // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DestructionCollision;                              // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLinkToActorComponent*              FortLinkToActor;                                   // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CowCatcherSM;                                      // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CowCatcherAppliedSound;                            // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         PendingDestructActors;                             // 0x09A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	float                                         SpawnZOffset;                                      // 0x09B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC[0x4];                                      // 0x09BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemAsset*                         FX_CowCatcherApplied_NS;                           // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LinkedSurfaceActor;                                // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_OnDeath;                                        // 0x09D0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DownwardTraceLength;                               // 0x09D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_OnSpawn;                                        // 0x09D8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          OnDeath_;                                          // 0x09DC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Active_;                                           // 0x09DD(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExecuteGC_;                                        // 0x09DE(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9DF[0x1];                                      // 0x09DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxCrinkleSeverity;                                // 0x09E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Health_ToShowDmgCrinkle;                           // 0x09E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthMaterialQuantizeSteps;                       // 0x09E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9EC[0x4];                                      // 0x09EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RepSnapTransform;                                  // 0x09F0(0x0060)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OnSpawn_;                                          // 0x0A50(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A51[0x7];                                      // 0x0A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         HF_EnviroDamage;                                   // 0x0A58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         HF_SpawnPickupVSArmor;                             // 0x0A80(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           ActivateDeploySafetyTimer;                         // 0x0AA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         HF_CanBlockBuilding_;                              // 0x0AB0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ActivateDeployMaterialAnimation();
	void BndEvt__BGA_Barricade_CowCatcher_FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature(class AActor* DamageCauser);
	bool CanDestroyBelow_(class ABuildingActor* TestActor, const struct FVector& Normal);
	bool CanSpawnOnActor_(class AActor* TestActor);
	void DestroyAllOverlapping();
	void DestroyAndSpawnPickup();
	void ExecuteUbergraph_BGA_Barricade_CowCatcher(int32 EntryPoint);
	void GetAllOverlapping(TArray<class AActor*>* Overlapped, bool* Success_);
	void HealthChanged();
	void HideDeployMaterialAnimation();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnPlacementBlockedByPawnChanged(const bool bBlockedByPawn);
	void OnRep_OnDeath_();
	void OnRep_OnSpawn_();
	void ReceiveBeginPlay();
	void SetBuildingRule();
	void SnapToSurface(float TraceLength, TArray<class AActor*>& IgnoredActors, bool* ReturnedHit_);
	void UpdateDamageMaterials();

	TArray<EFortTeamAffiliation> GetAffiliationsToShowFor() const;
	bool ShouldShowSoundIndicator(class AFortPlayerController* PlayerController) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Barricade_CowCatcher_C">();
	}
	static class ABGA_Barricade_CowCatcher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Barricade_CowCatcher_C>();
	}
};
static_assert(alignof(ABGA_Barricade_CowCatcher_C) == 0x000010, "Wrong alignment on ABGA_Barricade_CowCatcher_C");
static_assert(sizeof(ABGA_Barricade_CowCatcher_C) == 0x000AE0, "Wrong size on ABGA_Barricade_CowCatcher_C");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, UberGraphFrame) == 0x000978, "Member 'ABGA_Barricade_CowCatcher_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, SoundIndicator) == 0x000980, "Member 'ABGA_Barricade_CowCatcher_C::SoundIndicator' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, DestructionCollision) == 0x000988, "Member 'ABGA_Barricade_CowCatcher_C::DestructionCollision' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, FortLinkToActor) == 0x000990, "Member 'ABGA_Barricade_CowCatcher_C::FortLinkToActor' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, CowCatcherSM) == 0x000998, "Member 'ABGA_Barricade_CowCatcher_C::CowCatcherSM' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, CowCatcherAppliedSound) == 0x0009A0, "Member 'ABGA_Barricade_CowCatcher_C::CowCatcherAppliedSound' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, PendingDestructActors) == 0x0009A8, "Member 'ABGA_Barricade_CowCatcher_C::PendingDestructActors' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, SpawnZOffset) == 0x0009B8, "Member 'ABGA_Barricade_CowCatcher_C::SpawnZOffset' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, FX_CowCatcherApplied_NS) == 0x0009C0, "Member 'ABGA_Barricade_CowCatcher_C::FX_CowCatcherApplied_NS' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, LinkedSurfaceActor) == 0x0009C8, "Member 'ABGA_Barricade_CowCatcher_C::LinkedSurfaceActor' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, GC_OnDeath) == 0x0009D0, "Member 'ABGA_Barricade_CowCatcher_C::GC_OnDeath' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, DownwardTraceLength) == 0x0009D4, "Member 'ABGA_Barricade_CowCatcher_C::DownwardTraceLength' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, GC_OnSpawn) == 0x0009D8, "Member 'ABGA_Barricade_CowCatcher_C::GC_OnSpawn' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, OnDeath_) == 0x0009DC, "Member 'ABGA_Barricade_CowCatcher_C::OnDeath_' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, Active_) == 0x0009DD, "Member 'ABGA_Barricade_CowCatcher_C::Active_' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, ExecuteGC_) == 0x0009DE, "Member 'ABGA_Barricade_CowCatcher_C::ExecuteGC_' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, MaxCrinkleSeverity) == 0x0009E0, "Member 'ABGA_Barricade_CowCatcher_C::MaxCrinkleSeverity' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, Health_ToShowDmgCrinkle) == 0x0009E4, "Member 'ABGA_Barricade_CowCatcher_C::Health_ToShowDmgCrinkle' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, HealthMaterialQuantizeSteps) == 0x0009E8, "Member 'ABGA_Barricade_CowCatcher_C::HealthMaterialQuantizeSteps' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, RepSnapTransform) == 0x0009F0, "Member 'ABGA_Barricade_CowCatcher_C::RepSnapTransform' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, OnSpawn_) == 0x000A50, "Member 'ABGA_Barricade_CowCatcher_C::OnSpawn_' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, HF_EnviroDamage) == 0x000A58, "Member 'ABGA_Barricade_CowCatcher_C::HF_EnviroDamage' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, HF_SpawnPickupVSArmor) == 0x000A80, "Member 'ABGA_Barricade_CowCatcher_C::HF_SpawnPickupVSArmor' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, ActivateDeploySafetyTimer) == 0x000AA8, "Member 'ABGA_Barricade_CowCatcher_C::ActivateDeploySafetyTimer' has a wrong offset!");
static_assert(offsetof(ABGA_Barricade_CowCatcher_C, HF_CanBlockBuilding_) == 0x000AB0, "Member 'ABGA_Barricade_CowCatcher_C::HF_CanBlockBuilding_' has a wrong offset!");

}

