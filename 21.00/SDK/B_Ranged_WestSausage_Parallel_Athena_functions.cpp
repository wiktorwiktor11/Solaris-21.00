#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Ranged_WestSausage_Parallel_Athena

#include "Basic.hpp"

#include "B_Ranged_WestSausage_Parallel_Athena_classes.hpp"
#include "B_Ranged_WestSausage_Parallel_Athena_parameters.hpp"


namespace SDK
{

// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Added_3C0F91AD49CBFE1EDEA8C789181CF71C
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::Added_3C0F91AD49CBFE1EDEA8C789181CF71C()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Added_3C0F91AD49CBFE1EDEA8C789181CF71C");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Added_859E488E42BA5FA1ABBB659534E2C1B3
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::Added_859E488E42BA5FA1ABBB659534E2C1B3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Added_859E488E42BA5FA1ABBB659534E2C1B3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Added_B345AE024926D8E99FC1F9AED51F639A
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::Added_B345AE024926D8E99FC1F9AED51F639A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Added_B345AE024926D8E99FC1F9AED51F639A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.AllowStopSwinging
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    OutputPin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::AllowStopSwinging(bool* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "AllowStopSwinging");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_AllowStopSwinging Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.ApplyCooldown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::ApplyCooldown(bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "ApplyCooldown");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_ApplyCooldown Parms{};

	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.attach
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABGA_WestSausage_AttachmentPoint_C*Attach_Point_BGA                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::attach(class ABGA_WestSausage_AttachmentPoint_C* Attach_Point_BGA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "attach");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_attach Parms{};

	Parms.Attach_Point_BGA = Attach_Point_BGA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.CalculateChargeTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::CalculateChargeTime(float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "CalculateChargeTime");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_CalculateChargeTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.CalculateCooldownTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::CalculateCooldownTime(float* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "CalculateCooldownTime");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_CalculateCooldownTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.CalculateDetachmentForce
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          VectorToAttachPoint                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Launch_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchVector_                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AB_Ranged_WestSausage_Parallel_Athena_C::CalculateDetachmentForce(const struct FVector& VectorToAttachPoint, bool Launch_, const struct FVector& LaunchVector_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "CalculateDetachmentForce");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_CalculateDetachmentForce Parms{};

	Parms.VectorToAttachPoint = std::move(VectorToAttachPoint);
	Parms.Launch_ = Launch_;
	Parms.LaunchVector_ = std::move(LaunchVector_);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.CallReticleCooldown
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Cooldown_Duration                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::CallReticleCooldown(float Cooldown_Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "CallReticleCooldown");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_CallReticleCooldown Parms{};

	Parms.Cooldown_Duration = Cooldown_Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.CheckIfShouldLaunch
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldLaunch                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchVector                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::CheckIfShouldLaunch(bool* ShouldLaunch, struct FVector* LaunchVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "CheckIfShouldLaunch");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_CheckIfShouldLaunch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldLaunch != nullptr)
		*ShouldLaunch = Parms.ShouldLaunch;

	if (LaunchVector != nullptr)
		*LaunchVector = std::move(Parms.LaunchVector);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Client_ShowTip
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     TipTag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::Client_ShowTip(const struct FGameplayTag& TipTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Client_ShowTip");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_Client_ShowTip Parms{};

	Parms.TipTag = std::move(TipTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.ClientOnDestroyedOnDepleted
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::ClientOnDestroyedOnDepleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "ClientOnDestroyedOnDepleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Collision_FX_Reset
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::Collision_FX_Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Collision_FX_Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.CustomFire
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       TargetingHitResult_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AB_Ranged_WestSausage_Parallel_Athena_C::CustomFire(const struct FHitResult& TargetingHitResult_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "CustomFire");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_CustomFire Parms{};

	Parms.TargetingHitResult_0 = std::move(TargetingHitResult_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Damaged_Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::Damaged_Multicast(const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Damaged_Multicast");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_Damaged_Multicast Parms{};

	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Detach
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DetachFromHip                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontApplyForce                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceRun                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::Detach(bool DetachFromHip, bool DontApplyForce, bool ForceRun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Detach");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_Detach Parms{};

	Parms.DetachFromHip = DetachFromHip;
	Parms.DontApplyForce = DontApplyForce;
	Parms.ForceRun = ForceRun;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Detach_Client
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DetachFromHip                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontApplyForce                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceRun                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::Detach_Client(bool DetachFromHip, bool DontApplyForce, bool ForceRun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Detach_Client");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_Detach_Client Parms{};

	Parms.DetachFromHip = DetachFromHip;
	Parms.DontApplyForce = DontApplyForce;
	Parms.ForceRun = ForceRun;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Detach_Internal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DetachFromHip                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontApplyForce                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceRun                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::Detach_Internal(bool DetachFromHip, bool DontApplyForce, bool ForceRun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Detach_Internal");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_Detach_Internal Parms{};

	Parms.DetachFromHip = DetachFromHip;
	Parms.DontApplyForce = DontApplyForce;
	Parms.ForceRun = ForceRun;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.DonePullingPickup
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::DonePullingPickup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "DonePullingPickup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.End Animation
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::End_Animation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "End Animation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.ExecuteUbergraph_B_Ranged_WestSausage_Parallel_Athena
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::ExecuteUbergraph_B_Ranged_WestSausage_Parallel_Athena(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "ExecuteUbergraph_B_Ranged_WestSausage_Parallel_Athena");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_ExecuteUbergraph_B_Ranged_WestSausage_Parallel_Athena Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.ExitSwinging
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SkipRemovingSwingingGE                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::ExitSwinging(bool SkipRemovingSwingingGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "ExitSwinging");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_ExitSwinging Parms{};

	Parms.SkipRemovingSwingingGE = SkipRemovingSwingingGE;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Fall
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::Fall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Fall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Fall_Client
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::Fall_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Fall_Client");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.FillAudioComponentParams
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  Audio_Component                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::FillAudioComponentParams(class UAudioComponent* Audio_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "FillAudioComponentParams");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_FillAudioComponentParams Parms{};

	Parms.Audio_Component = Audio_Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Fired
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EDualWeaponHand                         Hand                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPersistantFire                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::Fired(EDualWeaponHand Hand, bool bPersistantFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Fired");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_Fired Parms{};

	Parms.Hand = Hand;
	Parms.bPersistantFire = bPersistantFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.FirePressed
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::FirePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "FirePressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.FireReleased
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::FireReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "FireReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.ForceExitSwinging
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::ForceExitSwinging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "ForceExitSwinging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.GiveFallDamageImmunity
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::GiveFallDamageImmunity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "GiveFallDamageImmunity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.HandleMovementModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PreviousCustomMode                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::HandleMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "HandleMovementModeChanged");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_HandleMovementModeChanged Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.InitialJumpMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   OutputPin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::InitialJumpMultiplier(float* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "InitialJumpMultiplier");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_InitialJumpMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.IsFiringBlocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    BlockedByTag                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BlockedByNoAmmo                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::IsFiringBlocked(bool* BlockedByTag, bool* BlockedByNoAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "IsFiringBlocked");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_IsFiringBlocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BlockedByTag != nullptr)
		*BlockedByTag = Parms.BlockedByTag;

	if (BlockedByNoAmmo != nullptr)
		*BlockedByNoAmmo = Parms.BlockedByNoAmmo;
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.IsSwingAttached
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsSwingAttached_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::IsSwingAttached(bool* IsSwingAttached_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "IsSwingAttached");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_IsSwingAttached Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSwingAttached_0 != nullptr)
		*IsSwingAttached_0 = Parms.IsSwingAttached_0;
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.IsSwinging
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsSwinging_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::IsSwinging(bool* IsSwinging_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "IsSwinging");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_IsSwinging Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSwinging_0 != nullptr)
		*IsSwinging_0 = Parms.IsSwinging_0;
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.JustTouchedGround
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::JustTouchedGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "JustTouchedGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.K2_OnUnEquip
// (Event, Public, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::K2_OnUnEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "K2_OnUnEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Multicast_PlayPickupEffects
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           PickUpActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::Multicast_PlayPickupEffects(const struct FVector& Location, class AActor* PickUpActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Multicast_PlayPickupEffects");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_Multicast_PlayPickupEffects Parms{};

	Parms.Location = std::move(Location);
	Parms.PickUpActor = PickUpActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.On Player DBNO
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::On_Player_DBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "On Player DBNO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnAttach
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnAttach()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnAttach");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnCooldownApplied
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnCooldownApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnCooldownApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnDetach
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnDetach()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnDetach");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnPlayerEnteredVehicle
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnPlayerEnteredVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnPlayerEnteredVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnPlayerEnteredWater
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  FortPlayerPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnPlayerEnteredWater(class AFortPlayerPawn* FortPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnPlayerEnteredWater");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_OnPlayerEnteredWater Parms{};

	Parms.FortPlayerPawn = FortPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnPlayerHitWallWhileSwinging
// (Event, Protected, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnPlayerHitWallWhileSwinging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnPlayerHitWallWhileSwinging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnPlayerHitWhileSwinging
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnPlayerHitWhileSwinging(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnPlayerHitWhileSwinging");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_OnPlayerHitWhileSwinging Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnPlayerSkydiving
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnPlayerSkydiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnPlayerSkydiving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnPlayerStartedZiplining
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnPlayerStartedZiplining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnPlayerStartedZiplining");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnPlayerStartSkidding
// (Event, Protected, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnPlayerStartSkidding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnPlayerStartSkidding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnPlayerTouchedGroundAfterSwingEnded
// (Event, Protected, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnPlayerTouchedGroundAfterSwingEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnPlayerTouchedGroundAfterSwingEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnPlayWeaponFireFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPersistentFire                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSecondaryFire                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnPlayWeaponFireFX");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_OnPlayWeaponFireFX Parms{};

	Parms.bPersistentFire = bPersistentFire;
	Parms.bSecondaryFire = bSecondaryFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnRideAnimal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class URiderComponent*                  Rider                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URidableComponent*                Ridable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnRideAnimal(class URiderComponent* Rider, class URidableComponent* Ridable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnRideAnimal");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_OnRideAnimal Parms{};

	Parms.Rider = Rider;
	Parms.Ridable = Ridable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnRopeAttached
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnRopeAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnRopeAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnRopeStartFadeOut
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnRopeStartFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnRopeStartFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnRopeUpdated
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// struct FVector                          RopeDirection                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RopeLength                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnRopeUpdated(const struct FVector& RopeDirection, const float RopeLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnRopeUpdated");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_OnRopeUpdated Parms{};

	Parms.RopeDirection = std::move(RopeDirection);
	Parms.RopeLength = RopeLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.OnWeaponAttached
// (Event, Public, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::OnWeaponAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "OnWeaponAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.PlayDetachSound_Multicast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::PlayDetachSound_Multicast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "PlayDetachSound_Multicast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.PlayerDamaged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              FHitComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::PlayerDamaged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "PlayerDamaged");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_PlayerDamaged Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.QuestAttachedToTree
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::QuestAttachedToTree(class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "QuestAttachedToTree");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_QuestAttachedToTree Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.ReplicatedFireSound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::ReplicatedFireSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "ReplicatedFireSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.RequestDetachFromClient
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DetachFromHip                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontApplyForce                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceRun                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::RequestDetachFromClient(bool DetachFromHip, bool DontApplyForce, bool ForceRun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "RequestDetachFromClient");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_RequestDetachFromClient Parms{};

	Parms.DetachFromHip = DetachFromHip;
	Parms.DontApplyForce = DontApplyForce;
	Parms.ForceRun = ForceRun;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.ResetMeshTransform
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::ResetMeshTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "ResetMeshTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.Server_ClientRequestedDetach
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DetachFromHip                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontApplyForce                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceRun                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::Server_ClientRequestedDetach(bool DetachFromHip, bool DontApplyForce, bool ForceRun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "Server_ClientRequestedDetach");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_Server_ClientRequestedDetach Parms{};

	Parms.DetachFromHip = DetachFromHip;
	Parms.DontApplyForce = DontApplyForce;
	Parms.ForceRun = ForceRun;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.SetJustFired
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::SetJustFired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "SetJustFired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.ShouldDisableFiring
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::ShouldDisableFiring(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "ShouldDisableFiring");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_ShouldDisableFiring Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.SlowerUpdate
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::SlowerUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "SlowerUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.SpawnAttachment
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::SpawnAttachment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "SpawnAttachment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.StartSlowerUpdateTimer
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::StartSlowerUpdateTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "StartSlowerUpdateTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.StopSkidding
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::StopSkidding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "StopSkidding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.TryToFire
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::TryToFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "TryToFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.UpdateAnimationStateServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldBeInLayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::UpdateAnimationStateServer(bool ShouldBeInLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "UpdateAnimationStateServer");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_UpdateAnimationStateServer Parms{};

	Parms.ShouldBeInLayer = ShouldBeInLayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.UpdateAnimLayer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldBeInLayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::UpdateAnimLayer(bool ShouldBeInLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "UpdateAnimLayer");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_UpdateAnimLayer Parms{};

	Parms.ShouldBeInLayer = ShouldBeInLayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.UpdatePendingRide
// (BlueprintCallable, BlueprintEvent)

void AB_Ranged_WestSausage_Parallel_Athena_C::UpdatePendingRide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "UpdatePendingRide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.UpdateReticleFromNative
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HitSomething                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BlockedUse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTargetAtAimLocation                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Ranged_WestSausage_Parallel_Athena_C::UpdateReticleFromNative(bool HitSomething, bool BlockedUse, bool IsTargetAtAimLocation, const struct FVector& TargetPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "UpdateReticleFromNative");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_UpdateReticleFromNative Parms{};

	Parms.HitSomething = HitSomething;
	Parms.BlockedUse = BlockedUse;
	Parms.IsTargetAtAimLocation = IsTargetAtAimLocation;
	Parms.TargetPosition = std::move(TargetPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Ranged_WestSausage_Parallel_Athena.B_Ranged_WestSausage_Parallel_Athena_C.GetAffiliationsToShowFor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<EFortTeamAffiliation>            ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<EFortTeamAffiliation> AB_Ranged_WestSausage_Parallel_Athena_C::GetAffiliationsToShowFor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Ranged_WestSausage_Parallel_Athena_C", "GetAffiliationsToShowFor");

	Params::B_Ranged_WestSausage_Parallel_Athena_C_GetAffiliationsToShowFor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

