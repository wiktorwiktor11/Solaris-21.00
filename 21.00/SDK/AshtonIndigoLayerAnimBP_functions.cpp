#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AshtonIndigoLayerAnimBP

#include "Basic.hpp"

#include "AshtonIndigoLayerAnimBP_classes.hpp"
#include "AshtonIndigoLayerAnimBP_parameters.hpp"


namespace SDK
{

// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "AnimGraph");

	Params::AshtonIndigoLayerAnimBP_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ExecuteUbergraph_AshtonIndigoLayerAnimBP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAshtonIndigoLayerAnimBP_C::ExecuteUbergraph_AshtonIndigoLayerAnimBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ExecuteUbergraph_AshtonIndigoLayerAnimBP");

	Params::AshtonIndigoLayerAnimBP_C_ExecuteUbergraph_AshtonIndigoLayerAnimBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemAimOffset
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPose_AimOffset                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   AimOffsetAlpha                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Yaw                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Pitch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPoseLink                        InPose_UpperLowerPreMeleeAO                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemAimOffset_0                                        (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemAimOffset(const struct FPoseLink& InPose_AimOffset, float AimOffsetAlpha, float Yaw, float Pitch, const struct FPoseLink& InPose_UpperLowerPreMeleeAO, struct FPoseLink* ItemAimOffset_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemAimOffset");

	Params::AshtonIndigoLayerAnimBP_C_ItemAimOffset Parms{};

	Parms.InPose_AimOffset = std::move(InPose_AimOffset);
	Parms.AimOffsetAlpha = AimOffsetAlpha;
	Parms.Yaw = Yaw;
	Parms.Pitch = Pitch;
	Parms.InPose_UpperLowerPreMeleeAO = std::move(InPose_UpperLowerPreMeleeAO);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemAimOffset_0 != nullptr)
		*ItemAimOffset_0 = std::move(Parms.ItemAimOffset_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemCrouchTurningAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemCrouchTurningAdditive_0                            (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemCrouchTurningAdditive(struct FPoseLink* ItemCrouchTurningAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemCrouchTurningAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemCrouchTurningAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemCrouchTurningAdditive_0 != nullptr)
		*ItemCrouchTurningAdditive_0 = std::move(Parms.ItemCrouchTurningAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemFallAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemFallAdditive_0                                     (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemFallAdditive(struct FPoseLink* ItemFallAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemFallAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemFallAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemFallAdditive_0 != nullptr)
		*ItemFallAdditive_0 = std::move(Parms.ItemFallAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemFallLandAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemFallLandAdditive_0                                 (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemFallLandAdditive(struct FPoseLink* ItemFallLandAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemFallLandAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemFallLandAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemFallLandAdditive_0 != nullptr)
		*ItemFallLandAdditive_0 = std::move(Parms.ItemFallLandAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemFlyModeLoopAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemFlyModeLoopAdditive_0                              (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemFlyModeLoopAdditive(struct FPoseLink* ItemFlyModeLoopAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemFlyModeLoopAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemFlyModeLoopAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemFlyModeLoopAdditive_0 != nullptr)
		*ItemFlyModeLoopAdditive_0 = std::move(Parms.ItemFlyModeLoopAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemFlyModeStartAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemFlyModeStartAdditive_0                             (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemFlyModeStartAdditive(struct FPoseLink* ItemFlyModeStartAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemFlyModeStartAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemFlyModeStartAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemFlyModeStartAdditive_0 != nullptr)
		*ItemFlyModeStartAdditive_0 = std::move(Parms.ItemFlyModeStartAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemFullBodyOverride
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseFullBody                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemFullBodyOverride_0                                 (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemFullBodyOverride(const struct FPoseLink& InPoseFullBody, struct FPoseLink* ItemFullBodyOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemFullBodyOverride");

	Params::AshtonIndigoLayerAnimBP_C_ItemFullBodyOverride Parms{};

	Parms.InPoseFullBody = std::move(InPoseFullBody);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemFullBodyOverride_0 != nullptr)
		*ItemFullBodyOverride_0 = std::move(Parms.ItemFullBodyOverride_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemFullBodySprint
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseSprint                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemFullBodySprint_0                                   (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemFullBodySprint(const struct FPoseLink& InPoseSprint, struct FPoseLink* ItemFullBodySprint_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemFullBodySprint");

	Params::AshtonIndigoLayerAnimBP_C_ItemFullBodySprint Parms{};

	Parms.InPoseSprint = std::move(InPoseSprint);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemFullBodySprint_0 != nullptr)
		*ItemFullBodySprint_0 = std::move(Parms.ItemFullBodySprint_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemIdleAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseIdleAdditive                                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemIdleAdditive_0                                     (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemIdleAdditive(const struct FPoseLink& InPoseIdleAdditive, struct FPoseLink* ItemIdleAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemIdleAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemIdleAdditive Parms{};

	Parms.InPoseIdleAdditive = std::move(InPoseIdleAdditive);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemIdleAdditive_0 != nullptr)
		*ItemIdleAdditive_0 = std::move(Parms.ItemIdleAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemJetPackJumpAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemJetPackJumpAdditive_0                              (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemJetPackJumpAdditive(struct FPoseLink* ItemJetPackJumpAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemJetPackJumpAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemJetPackJumpAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemJetPackJumpAdditive_0 != nullptr)
		*ItemJetPackJumpAdditive_0 = std::move(Parms.ItemJetPackJumpAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemJetPackStartAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemJetPackStartAdditive_0                             (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemJetPackStartAdditive(struct FPoseLink* ItemJetPackStartAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemJetPackStartAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemJetPackStartAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemJetPackStartAdditive_0 != nullptr)
		*ItemJetPackStartAdditive_0 = std::move(Parms.ItemJetPackStartAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemJogPostPivotAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPosePostPivotAdditive                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemJogPostPivotAdditive_0                             (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemJogPostPivotAdditive(const struct FPoseLink& InPosePostPivotAdditive, struct FPoseLink* ItemJogPostPivotAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemJogPostPivotAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemJogPostPivotAdditive Parms{};

	Parms.InPosePostPivotAdditive = std::move(InPosePostPivotAdditive);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemJogPostPivotAdditive_0 != nullptr)
		*ItemJogPostPivotAdditive_0 = std::move(Parms.ItemJogPostPivotAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemJogPrePivotAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPosePrePivotAdditive                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemJogPrePivotAdditive_0                              (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemJogPrePivotAdditive(const struct FPoseLink& InPosePrePivotAdditive, struct FPoseLink* ItemJogPrePivotAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemJogPrePivotAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemJogPrePivotAdditive Parms{};

	Parms.InPosePrePivotAdditive = std::move(InPosePrePivotAdditive);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemJogPrePivotAdditive_0 != nullptr)
		*ItemJogPrePivotAdditive_0 = std::move(Parms.ItemJogPrePivotAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemJogStartAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseJogStartAdditive                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemJogStartAdditive_0                                 (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemJogStartAdditive(const struct FPoseLink& InPoseJogStartAdditive, struct FPoseLink* ItemJogStartAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemJogStartAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemJogStartAdditive Parms{};

	Parms.InPoseJogStartAdditive = std::move(InPoseJogStartAdditive);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemJogStartAdditive_0 != nullptr)
		*ItemJogStartAdditive_0 = std::move(Parms.ItemJogStartAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemJogStopAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseJogStopAdditive                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemJogStopAdditive_0                                  (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemJogStopAdditive(const struct FPoseLink& InPoseJogStopAdditive, struct FPoseLink* ItemJogStopAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemJogStopAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemJogStopAdditive Parms{};

	Parms.InPoseJogStopAdditive = std::move(InPoseJogStopAdditive);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemJogStopAdditive_0 != nullptr)
		*ItemJogStopAdditive_0 = std::move(Parms.ItemJogStopAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemJumpLoopAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemJumpLoopAdditive_0                                 (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemJumpLoopAdditive(struct FPoseLink* ItemJumpLoopAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemJumpLoopAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemJumpLoopAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemJumpLoopAdditive_0 != nullptr)
		*ItemJumpLoopAdditive_0 = std::move(Parms.ItemJumpLoopAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemJumpUpAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemJumpUpAdditive_0                                   (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemJumpUpAdditive(struct FPoseLink* ItemJumpUpAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemJumpUpAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemJumpUpAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemJumpUpAdditive_0 != nullptr)
		*ItemJumpUpAdditive_0 = std::move(Parms.ItemJumpUpAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemLowerBodyJogPostPivot
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseLowerBodyJogPostPivot                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemLowerBodyJogPostPivot_0                            (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemLowerBodyJogPostPivot(const struct FPoseLink& InPoseLowerBodyJogPostPivot, struct FPoseLink* ItemLowerBodyJogPostPivot_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemLowerBodyJogPostPivot");

	Params::AshtonIndigoLayerAnimBP_C_ItemLowerBodyJogPostPivot Parms{};

	Parms.InPoseLowerBodyJogPostPivot = std::move(InPoseLowerBodyJogPostPivot);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemLowerBodyJogPostPivot_0 != nullptr)
		*ItemLowerBodyJogPostPivot_0 = std::move(Parms.ItemLowerBodyJogPostPivot_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemLowerBodyJogPrePivot
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseLowerBodyJogPrePivot                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemLowerBodyJogPrePivot_0                             (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemLowerBodyJogPrePivot(const struct FPoseLink& InPoseLowerBodyJogPrePivot, struct FPoseLink* ItemLowerBodyJogPrePivot_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemLowerBodyJogPrePivot");

	Params::AshtonIndigoLayerAnimBP_C_ItemLowerBodyJogPrePivot Parms{};

	Parms.InPoseLowerBodyJogPrePivot = std::move(InPoseLowerBodyJogPrePivot);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemLowerBodyJogPrePivot_0 != nullptr)
		*ItemLowerBodyJogPrePivot_0 = std::move(Parms.ItemLowerBodyJogPrePivot_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemLowerBodyJogStart
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseLowerBodyJogStart                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemLowerBodyJogStart_0                                (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemLowerBodyJogStart(const struct FPoseLink& InPoseLowerBodyJogStart, struct FPoseLink* ItemLowerBodyJogStart_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemLowerBodyJogStart");

	Params::AshtonIndigoLayerAnimBP_C_ItemLowerBodyJogStart Parms{};

	Parms.InPoseLowerBodyJogStart = std::move(InPoseLowerBodyJogStart);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemLowerBodyJogStart_0 != nullptr)
		*ItemLowerBodyJogStart_0 = std::move(Parms.ItemLowerBodyJogStart_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemLowerBodyJogStop
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseLowerBodyJogStop                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemLowerBodyJogStop_0                                 (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemLowerBodyJogStop(const struct FPoseLink& InPoseLowerBodyJogStop, struct FPoseLink* ItemLowerBodyJogStop_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemLowerBodyJogStop");

	Params::AshtonIndigoLayerAnimBP_C_ItemLowerBodyJogStop Parms{};

	Parms.InPoseLowerBodyJogStop = std::move(InPoseLowerBodyJogStop);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemLowerBodyJogStop_0 != nullptr)
		*ItemLowerBodyJogStop_0 = std::move(Parms.ItemLowerBodyJogStop_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemLowerBodyLeanAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseLowerBodyLeanAdditive                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemLowerBodyLeanAdditive_0                            (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemLowerBodyLeanAdditive(const struct FPoseLink& InPoseLowerBodyLeanAdditive, struct FPoseLink* ItemLowerBodyLeanAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemLowerBodyLeanAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemLowerBodyLeanAdditive Parms{};

	Parms.InPoseLowerBodyLeanAdditive = std::move(InPoseLowerBodyLeanAdditive);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemLowerBodyLeanAdditive_0 != nullptr)
		*ItemLowerBodyLeanAdditive_0 = std::move(Parms.ItemLowerBodyLeanAdditive_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemLowerBodyMovement
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseLowerBodyMovement                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemLowerBodyMovement_0                                (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemLowerBodyMovement(const struct FPoseLink& InPoseLowerBodyMovement, struct FPoseLink* ItemLowerBodyMovement_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemLowerBodyMovement");

	Params::AshtonIndigoLayerAnimBP_C_ItemLowerBodyMovement Parms{};

	Parms.InPoseLowerBodyMovement = std::move(InPoseLowerBodyMovement);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemLowerBodyMovement_0 != nullptr)
		*ItemLowerBodyMovement_0 = std::move(Parms.ItemLowerBodyMovement_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemPreIK
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPose_PreIK                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemPreIK_0                                            (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemPreIK(const struct FPoseLink& InPose_PreIK, struct FPoseLink* ItemPreIK_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemPreIK");

	Params::AshtonIndigoLayerAnimBP_C_ItemPreIK Parms{};

	Parms.InPose_PreIK = std::move(InPose_PreIK);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemPreIK_0 != nullptr)
		*ItemPreIK_0 = std::move(Parms.ItemPreIK_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemRelaxedEntry
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseRelaxedEntry                                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemRelaxedEntry_0                                     (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemRelaxedEntry(const struct FPoseLink& InPoseRelaxedEntry, struct FPoseLink* ItemRelaxedEntry_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemRelaxedEntry");

	Params::AshtonIndigoLayerAnimBP_C_ItemRelaxedEntry Parms{};

	Parms.InPoseRelaxedEntry = std::move(InPoseRelaxedEntry);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemRelaxedEntry_0 != nullptr)
		*ItemRelaxedEntry_0 = std::move(Parms.ItemRelaxedEntry_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemSkeletalControl
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemSkeletalControl_0                                  (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemSkeletalControl(const struct FPoseLink& InPose, struct FPoseLink* ItemSkeletalControl_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemSkeletalControl");

	Params::AshtonIndigoLayerAnimBP_C_ItemSkeletalControl Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemSkeletalControl_0 != nullptr)
		*ItemSkeletalControl_0 = std::move(Parms.ItemSkeletalControl_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemSlopeSliding
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemSlopeSliding_0                                     (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemSlopeSliding(struct FPoseLink* ItemSlopeSliding_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemSlopeSliding");

	Params::AshtonIndigoLayerAnimBP_C_ItemSlopeSliding Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemSlopeSliding_0 != nullptr)
		*ItemSlopeSliding_0 = std::move(Parms.ItemSlopeSliding_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemSwimJumpFallLoop
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemSwimJumpFallLoop_0                                 (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemSwimJumpFallLoop(struct FPoseLink* ItemSwimJumpFallLoop_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemSwimJumpFallLoop");

	Params::AshtonIndigoLayerAnimBP_C_ItemSwimJumpFallLoop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemSwimJumpFallLoop_0 != nullptr)
		*ItemSwimJumpFallLoop_0 = std::move(Parms.ItemSwimJumpFallLoop_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemSwimJumpStart
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemSwimJumpStart_0                                    (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemSwimJumpStart(struct FPoseLink* ItemSwimJumpStart_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemSwimJumpStart");

	Params::AshtonIndigoLayerAnimBP_C_ItemSwimJumpStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemSwimJumpStart_0 != nullptr)
		*ItemSwimJumpStart_0 = std::move(Parms.ItemSwimJumpStart_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemSwimJumpStartLoop
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemSwimJumpStartLoop_0                                (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemSwimJumpStartLoop(struct FPoseLink* ItemSwimJumpStartLoop_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemSwimJumpStartLoop");

	Params::AshtonIndigoLayerAnimBP_C_ItemSwimJumpStartLoop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemSwimJumpStartLoop_0 != nullptr)
		*ItemSwimJumpStartLoop_0 = std::move(Parms.ItemSwimJumpStartLoop_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemSwimJumpSurfaceEnd
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemSwimJumpSurfaceEnd_0                               (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemSwimJumpSurfaceEnd(struct FPoseLink* ItemSwimJumpSurfaceEnd_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemSwimJumpSurfaceEnd");

	Params::AshtonIndigoLayerAnimBP_C_ItemSwimJumpSurfaceEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemSwimJumpSurfaceEnd_0 != nullptr)
		*ItemSwimJumpSurfaceEnd_0 = std::move(Parms.ItemSwimJumpSurfaceEnd_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemSwimJumpSurfaceLoop
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemSwimJumpSurfaceLoop_0                              (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemSwimJumpSurfaceLoop(struct FPoseLink* ItemSwimJumpSurfaceLoop_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemSwimJumpSurfaceLoop");

	Params::AshtonIndigoLayerAnimBP_C_ItemSwimJumpSurfaceLoop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemSwimJumpSurfaceLoop_0 != nullptr)
		*ItemSwimJumpSurfaceLoop_0 = std::move(Parms.ItemSwimJumpSurfaceLoop_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemUpperBody
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPoseUpperBody                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FFortAnimInput_AdjustedAim       InputParam                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        ItemUpperBody_0                                        (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemUpperBody(const struct FPoseLink& InPoseUpperBody, const struct FFortAnimInput_AdjustedAim& InputParam, struct FPoseLink* ItemUpperBody_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemUpperBody");

	Params::AshtonIndigoLayerAnimBP_C_ItemUpperBody Parms{};

	Parms.InPoseUpperBody = std::move(InPoseUpperBody);
	Parms.InputParam = std::move(InputParam);

	UObject::ProcessEvent(Func, &Parms);

	if (ItemUpperBody_0 != nullptr)
		*ItemUpperBody_0 = std::move(Parms.ItemUpperBody_0);
}


// Function AshtonIndigoLayerAnimBP.AshtonIndigoLayerAnimBP_C.ItemZipLineStartAdditive
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        ItemZipLineStartAdditive_0                             (Parm, OutParm, NoDestructor)

void UAshtonIndigoLayerAnimBP_C::ItemZipLineStartAdditive(struct FPoseLink* ItemZipLineStartAdditive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AshtonIndigoLayerAnimBP_C", "ItemZipLineStartAdditive");

	Params::AshtonIndigoLayerAnimBP_C_ItemZipLineStartAdditive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemZipLineStartAdditive_0 != nullptr)
		*ItemZipLineStartAdditive_0 = std::move(Parms.ItemZipLineStartAdditive_0);
}

}

