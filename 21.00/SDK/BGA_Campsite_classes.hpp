#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Campsite

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_Campsite_Improvement_structs.hpp"
#include "AIModule_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Enum_Campsite_Improvements_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Campsite.BGA_Campsite_C
// 0x0130 (0x0AA0 - 0x0970)
class ABGA_Campsite_C final : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0970(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       CollisionSphere;                                   // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0988(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isDying;                                           // 0x0989(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         owningSquad;                                       // 0x098A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_98B[0x5];                                      // 0x098B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCampsite_Improvement_Component_C*> BuiltCampsiteImprovements;                         // 0x0990(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector                                SpawnImprovementTransformLocation;                 // 0x09A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CampsiteEstablished;                               // 0x09B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugShowExclusionZones;                           // 0x09B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BA[0x2];                                      // 0x09BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DebugLoopTickRate;                                 // 0x09BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpecialActorClass;                                 // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnvQuery*                              CampsiteImprovementEQSTemplate;                    // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_Campsite_Improvement>   CampsiteImprovementDefinitions;                    // 0x09D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         EnemyCampsiteExclusionRadius;                      // 0x09E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         FriendlyCampsiteExclusionRadius;                   // 0x0A08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ImprovementDeployAnimTime;                         // 0x0A30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                ImprovementMeshScale;                              // 0x0A58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         SpawnCampfireWithCampsite_;                        // 0x0A70(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 SpawendActor;                                      // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateCampsiteLocation(struct FVector* newCampsiteLoc);
	void TentColors(class UObject* Player_State, uint8* squad_ID, struct FLinearColor* squad_member_color, int32* random_squadmember_index);
	void Spawn_Secondary_Blueprint(const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, class APlayerState* ImprovementOwner, const struct FStruct_Campsite_Improvement& Struct_Campsite_Improvement);
	void RegisterCampsite();
	void ReceiveBeginPlay();
	void Post_Tent_Campsite_Setup();
	void OnRep_isDying();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void MoveCampsiteLocation(const struct FVector& NewLocation);
	void ImprovementDestroyed(class AActor* DestroyedActor);
	void Immediately_Hide___Kill();
	void GetIsDying_(bool* NewParam);
	void Get_Improvement_by_Type(Enum_Campsite_Improvements ImprovementDef, struct FStruct_Campsite_Improvement* Improvement);
	void ExecuteUbergraph_BGA_Campsite(int32 EntryPoint);
	void EstablishNewCampsite(class APlayerState* New_Campsite_Instigator, class AActor* SupportingActor, const struct FFortItemEntry& Instigating_Item);
	void EQS_Query_Finished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void Destroy_With_Effects();
	void DebugShapeDrawingLoop();
	void CountImprovementByType(Enum_Campsite_Improvements Improvement_Type, int32* NumberBuilt);
	void CleanupCampsiteImprovement(class UCampsite_Improvement_Component_C* Improvement);
	void Campsite__Improvement_Spawn_Feedback(Enum_Campsite_Improvements Improvement_Type, class AActor* Target, const struct FGameplayTag& DeplayGameplayCueTag);
	void BuildEQSPositionedCampsiteImprovement(Enum_Campsite_Improvements Improvement_Type, class APlayerState* Improvement_Owner);
	void Build_Campsite_Improvement(Enum_Campsite_Improvements Improvement_Type, class APlayerState* Improvement_Owner, const struct FVector& Spawn_Location, const struct FRotator& Spawn_Transform_Rotation, class AActor* SupportingActor, const struct FFortItemEntry& InstigatingWeapon);
	void BindtoSurfaceOnStart(const struct FVector& Impact_Normal, const struct FVector& Impact_Point, class AActor* Hit_Actor, class UPrimitiveComponent* Hit_Component, bool Hit_Water_);
	void BaseDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void BaseDestroyed(class AActor* DestroyedActor);
	void AttachToBindedActor(class UPrimitiveComponent* Attach_Comp);

	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Campsite_C">();
	}
	static class ABGA_Campsite_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Campsite_C>();
	}
};
static_assert(alignof(ABGA_Campsite_C) == 0x000008, "Wrong alignment on ABGA_Campsite_C");
static_assert(sizeof(ABGA_Campsite_C) == 0x000AA0, "Wrong size on ABGA_Campsite_C");
static_assert(offsetof(ABGA_Campsite_C, UberGraphFrame) == 0x000970, "Member 'ABGA_Campsite_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, CollisionSphere) == 0x000978, "Member 'ABGA_Campsite_C::CollisionSphere' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, DefaultSceneRoot) == 0x000980, "Member 'ABGA_Campsite_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, Debug) == 0x000988, "Member 'ABGA_Campsite_C::Debug' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, isDying) == 0x000989, "Member 'ABGA_Campsite_C::isDying' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, owningSquad) == 0x00098A, "Member 'ABGA_Campsite_C::owningSquad' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, BuiltCampsiteImprovements) == 0x000990, "Member 'ABGA_Campsite_C::BuiltCampsiteImprovements' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, SpawnImprovementTransformLocation) == 0x0009A0, "Member 'ABGA_Campsite_C::SpawnImprovementTransformLocation' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, CampsiteEstablished) == 0x0009B8, "Member 'ABGA_Campsite_C::CampsiteEstablished' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, DebugShowExclusionZones) == 0x0009B9, "Member 'ABGA_Campsite_C::DebugShowExclusionZones' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, DebugLoopTickRate) == 0x0009BC, "Member 'ABGA_Campsite_C::DebugLoopTickRate' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, SpecialActorClass) == 0x0009C0, "Member 'ABGA_Campsite_C::SpecialActorClass' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, CampsiteImprovementEQSTemplate) == 0x0009C8, "Member 'ABGA_Campsite_C::CampsiteImprovementEQSTemplate' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, CampsiteImprovementDefinitions) == 0x0009D0, "Member 'ABGA_Campsite_C::CampsiteImprovementDefinitions' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, EnemyCampsiteExclusionRadius) == 0x0009E0, "Member 'ABGA_Campsite_C::EnemyCampsiteExclusionRadius' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, FriendlyCampsiteExclusionRadius) == 0x000A08, "Member 'ABGA_Campsite_C::FriendlyCampsiteExclusionRadius' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, ImprovementDeployAnimTime) == 0x000A30, "Member 'ABGA_Campsite_C::ImprovementDeployAnimTime' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, ImprovementMeshScale) == 0x000A58, "Member 'ABGA_Campsite_C::ImprovementMeshScale' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, SpawnCampfireWithCampsite_) == 0x000A70, "Member 'ABGA_Campsite_C::SpawnCampfireWithCampsite_' has a wrong offset!");
static_assert(offsetof(ABGA_Campsite_C, SpawendActor) == 0x000A98, "Member 'ABGA_Campsite_C::SpawendActor' has a wrong offset!");

}

