#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ActorSpawner_Parent

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "FortniteAI_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ActorSpawner_Parent.B_ActorSpawner_Parent_C
// 0x01B0 (0x0430 - 0x0280)
class AB_ActorSpawner_Parent_C : public AFortEQSPrevisActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   EditorText_AmountToSpawn;                          // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PreVisMesh;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ClassToSpawn;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          UseWeightedSpawnClassList;                         // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortWeightedActorTypeList             WeightedSpawnClassList;                            // 0x02A8(0x0050)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FScalableFloat                         Row_Enabled;                                       // 0x02F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_SpawnChance;                                   // 0x0320(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_EQS_SpawnDensity;                              // 0x0348(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SpawnDelayMin;                                     // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnDelayMax;                                     // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyAfterSpawn;                                 // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DestroySelfLifeMin;                                // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DestroySelfLifeMax;                                // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyOnFailSpawnChance;                          // 0x0384(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SpawnLocationOffset;                               // 0x0388(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePrevisMeshScale;                                // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         cachedSpawnAmount;                                 // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnvQueryInstanceBlueprintWrapper*      QueryInstance;                                     // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        LocationsToSpawn;                                  // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          EQS_Enabled_MultiSpawn;                            // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EQS_RandomYaw;                                     // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EQS_AlignToSurfaceNormal;                          // 0x03C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRowsForMinMaxEQS;                               // 0x03C3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EQS_NumtoSpawnMIN;                                 // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EQS_NumtoSpawnMAX;                                 // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_EQS_NumtoSpawnMIN;                             // 0x03D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_EQS_NumtoSpawnMAX;                             // 0x03F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         EQS_ScaleMAX;                                      // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EQS_ScaleMIN;                                      // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnvQuery*                              EQS_QueryTemplate;                                 // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DestroySpawner();
	void EQS_Finished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance_0, EEnvQueryStatus QueryStatus);
	void ExecuteUbergraph_B_ActorSpawner_Parent(int32 EntryPoint);
	TSubclassOf<class AActor> GetActorClassToSpawn();
	int32 GetSpawnAmountForEQS();
	void OnReady_3020151C426C42F77FE60292E2524DFC(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void PrepForPrevis();
	void ReceiveBeginPlay();
	void ServerActorSpawned(class AActor* Actor);
	void SpawnActor(const struct FTransform& New_Transform);
	void StartEQSSpawnLoop();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ActorSpawner_Parent_C">();
	}
	static class AB_ActorSpawner_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_ActorSpawner_Parent_C>();
	}
};
static_assert(alignof(AB_ActorSpawner_Parent_C) == 0x000008, "Wrong alignment on AB_ActorSpawner_Parent_C");
static_assert(sizeof(AB_ActorSpawner_Parent_C) == 0x000430, "Wrong size on AB_ActorSpawner_Parent_C");
static_assert(offsetof(AB_ActorSpawner_Parent_C, UberGraphFrame) == 0x000280, "Member 'AB_ActorSpawner_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, EditorText_AmountToSpawn) == 0x000288, "Member 'AB_ActorSpawner_Parent_C::EditorText_AmountToSpawn' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, PreVisMesh) == 0x000290, "Member 'AB_ActorSpawner_Parent_C::PreVisMesh' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, ClassToSpawn) == 0x000298, "Member 'AB_ActorSpawner_Parent_C::ClassToSpawn' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, UseWeightedSpawnClassList) == 0x0002A0, "Member 'AB_ActorSpawner_Parent_C::UseWeightedSpawnClassList' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, WeightedSpawnClassList) == 0x0002A8, "Member 'AB_ActorSpawner_Parent_C::WeightedSpawnClassList' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, Row_Enabled) == 0x0002F8, "Member 'AB_ActorSpawner_Parent_C::Row_Enabled' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, Row_SpawnChance) == 0x000320, "Member 'AB_ActorSpawner_Parent_C::Row_SpawnChance' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, Row_EQS_SpawnDensity) == 0x000348, "Member 'AB_ActorSpawner_Parent_C::Row_EQS_SpawnDensity' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, SpawnDelayMin) == 0x000370, "Member 'AB_ActorSpawner_Parent_C::SpawnDelayMin' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, SpawnDelayMax) == 0x000374, "Member 'AB_ActorSpawner_Parent_C::SpawnDelayMax' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, DestroyAfterSpawn) == 0x000378, "Member 'AB_ActorSpawner_Parent_C::DestroyAfterSpawn' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, DestroySelfLifeMin) == 0x00037C, "Member 'AB_ActorSpawner_Parent_C::DestroySelfLifeMin' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, DestroySelfLifeMax) == 0x000380, "Member 'AB_ActorSpawner_Parent_C::DestroySelfLifeMax' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, DestroyOnFailSpawnChance) == 0x000384, "Member 'AB_ActorSpawner_Parent_C::DestroyOnFailSpawnChance' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, SpawnLocationOffset) == 0x000388, "Member 'AB_ActorSpawner_Parent_C::SpawnLocationOffset' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, UsePrevisMeshScale) == 0x0003A0, "Member 'AB_ActorSpawner_Parent_C::UsePrevisMeshScale' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, cachedSpawnAmount) == 0x0003A4, "Member 'AB_ActorSpawner_Parent_C::cachedSpawnAmount' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, QueryInstance) == 0x0003A8, "Member 'AB_ActorSpawner_Parent_C::QueryInstance' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, LocationsToSpawn) == 0x0003B0, "Member 'AB_ActorSpawner_Parent_C::LocationsToSpawn' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, EQS_Enabled_MultiSpawn) == 0x0003C0, "Member 'AB_ActorSpawner_Parent_C::EQS_Enabled_MultiSpawn' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, EQS_RandomYaw) == 0x0003C1, "Member 'AB_ActorSpawner_Parent_C::EQS_RandomYaw' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, EQS_AlignToSurfaceNormal) == 0x0003C2, "Member 'AB_ActorSpawner_Parent_C::EQS_AlignToSurfaceNormal' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, UseRowsForMinMaxEQS) == 0x0003C3, "Member 'AB_ActorSpawner_Parent_C::UseRowsForMinMaxEQS' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, EQS_NumtoSpawnMIN) == 0x0003C4, "Member 'AB_ActorSpawner_Parent_C::EQS_NumtoSpawnMIN' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, EQS_NumtoSpawnMAX) == 0x0003C8, "Member 'AB_ActorSpawner_Parent_C::EQS_NumtoSpawnMAX' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, Row_EQS_NumtoSpawnMIN) == 0x0003D0, "Member 'AB_ActorSpawner_Parent_C::Row_EQS_NumtoSpawnMIN' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, Row_EQS_NumtoSpawnMAX) == 0x0003F8, "Member 'AB_ActorSpawner_Parent_C::Row_EQS_NumtoSpawnMAX' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, EQS_ScaleMAX) == 0x000420, "Member 'AB_ActorSpawner_Parent_C::EQS_ScaleMAX' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, EQS_ScaleMIN) == 0x000424, "Member 'AB_ActorSpawner_Parent_C::EQS_ScaleMIN' has a wrong offset!");
static_assert(offsetof(AB_ActorSpawner_Parent_C, EQS_QueryTemplate) == 0x000428, "Member 'AB_ActorSpawner_Parent_C::EQS_QueryTemplate' has a wrong offset!");

}

