#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DefaultPlayer_InteractLockonConsumable_Weed

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_DefaultPlayer_InteractLockonConsumable_Weed.GA_DefaultPlayer_InteractLockonConsumable_Weed_C
// 0x0138 (0x0C48 - 0x0B10)
class UGA_DefaultPlayer_InteractLockonConsumable_Weed_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTimerLength;                                   // 0x0B20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B24[0x4];                                      // 0x0B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartPos;                                          // 0x0B28(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpAlpha;                                         // 0x0B40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpSpeedMult;                                     // 0x0B44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerForPawnAndControllerLerp;                     // 0x0B48(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bFirstUpdate;                                      // 0x0B50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B51[0x3];                                      // 0x0B51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartingYaw;                                       // 0x0B54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevYawDiffRemaining;                              // 0x0B58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5C[0x4];                                      // 0x0B5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  FortPlayerController;                              // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInitialized;                                    // 0x0B68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B69[0x7];                                      // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingGameplayActorBlade*            TargetBladeActor;                                  // 0x0B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortGameplayAbilityMontageInfo        MontagePullInfo;                                   // 0x0B78(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DesiredDistanceFromInteractiveItem;                // 0x0BD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD4[0x4];                                      // 0x0BD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurrentPosition;                                   // 0x0BD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DestinationPosition;                               // 0x0BF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetYaw;                                         // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YawDiffRemaining;                                  // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMatineeCameraShake*                    CameraShake;                                       // 0x0C10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GE_PullGCL;                                        // 0x0C18(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleForVFXToHideRotationPop;                      // 0x0C20(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedToUnHolster;                                  // 0x0C38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C39[0x3];                                      // 0x0C39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DisableCrouch;                                     // 0x0C3C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         StartSwordPullTime;                                // 0x0C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Triggered_4F3832D64EA7D0E39D93D9BDA1E5030E(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void TimeoutAndDie();
	void StopCameraShakes();
	void StartPullAnimation();
	void StartInteractSearch();
	void StartCameraTransition();
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void InterpolateToPosition();
	void InitializePawnAndControllerRot(class AFortPlayerPawn* PawnAthena, bool* bInitialized);
	void ForceNetUpdate();
	void ExecuteUbergraph_GA_DefaultPlayer_InteractLockonConsumable_Weed(int32 EntryPoint);
	void EndInteractSearch();
	void Completed_4F3832D64EA7D0E39D93D9BDA1E5030E(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_4F3832D64EA7D0E39D93D9BDA1E5030E(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_DefaultPlayer_InteractLockonConsumable_Weed_C">();
	}
	static class UGA_DefaultPlayer_InteractLockonConsumable_Weed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_DefaultPlayer_InteractLockonConsumable_Weed_C>();
	}
};
static_assert(alignof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C) == 0x000008, "Wrong alignment on UGA_DefaultPlayer_InteractLockonConsumable_Weed_C");
static_assert(sizeof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C) == 0x000C48, "Wrong size on UGA_DefaultPlayer_InteractLockonConsumable_Weed_C");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, UberGraphFrame) == 0x000B10, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, PlayerPawn) == 0x000B18, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, MoveTimerLength) == 0x000B20, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::MoveTimerLength' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, StartPos) == 0x000B28, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::StartPos' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, LerpAlpha) == 0x000B40, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::LerpAlpha' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, LerpSpeedMult) == 0x000B44, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::LerpSpeedMult' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, TimerForPawnAndControllerLerp) == 0x000B48, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::TimerForPawnAndControllerLerp' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, bFirstUpdate) == 0x000B50, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::bFirstUpdate' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, StartingYaw) == 0x000B54, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::StartingYaw' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, PrevYawDiffRemaining) == 0x000B58, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::PrevYawDiffRemaining' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, FortPlayerController) == 0x000B60, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::FortPlayerController' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, bIsInitialized) == 0x000B68, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::bIsInitialized' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, TargetBladeActor) == 0x000B70, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::TargetBladeActor' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, MontagePullInfo) == 0x000B78, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::MontagePullInfo' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, DesiredDistanceFromInteractiveItem) == 0x000BD0, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::DesiredDistanceFromInteractiveItem' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, CurrentPosition) == 0x000BD8, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::CurrentPosition' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, DestinationPosition) == 0x000BF0, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::DestinationPosition' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, TargetYaw) == 0x000C08, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::TargetYaw' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, YawDiffRemaining) == 0x000C0C, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::YawDiffRemaining' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, CameraShake) == 0x000C10, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::CameraShake' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, GE_PullGCL) == 0x000C18, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::GE_PullGCL' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, ScaleForVFXToHideRotationPop) == 0x000C20, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::ScaleForVFXToHideRotationPop' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, bNeedToUnHolster) == 0x000C38, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::bNeedToUnHolster' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, DisableCrouch) == 0x000C3C, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::DisableCrouch' has a wrong offset!");
static_assert(offsetof(UGA_DefaultPlayer_InteractLockonConsumable_Weed_C, StartSwordPullTime) == 0x000C40, "Member 'UGA_DefaultPlayer_InteractLockonConsumable_Weed_C::StartSwordPullTime' has a wrong offset!");

}

