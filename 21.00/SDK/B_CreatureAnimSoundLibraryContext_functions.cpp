#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CreatureAnimSoundLibraryContext

#include "Basic.hpp"

#include "B_CreatureAnimSoundLibraryContext_classes.hpp"
#include "B_CreatureAnimSoundLibraryContext_parameters.hpp"


namespace SDK
{

// Function B_CreatureAnimSoundLibraryContext.B_CreatureAnimSoundLibraryContext_C.PlaySound
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSoundLibraryPlaySoundResult     OutResults                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UB_CreatureAnimSoundLibraryContext_C::PlaySound(class USoundBase* sound, struct FSoundLibraryPlaySoundResult& OutResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreatureAnimSoundLibraryContext_C", "PlaySound");

	Params::B_CreatureAnimSoundLibraryContext_C_PlaySound Parms{};

	Parms.sound = sound;
	Parms.OutResults = std::move(OutResults);

	UObject::ProcessEvent(Func, &Parms);

	OutResults = std::move(Parms.OutResults);

	return Parms.ReturnValue;
}

}

