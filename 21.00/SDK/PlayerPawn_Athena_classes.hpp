#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Athena

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "PawnHighlight_structs.hpp"
#include "FCreativeEffectColorIndex_structs.hpp"
#include "AudioExtensions_structs.hpp"
#include "PlayerPawn_Athena_Generic_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Athena.PlayerPawn_Athena_C
// 0x0730 (0x58B0 - 0x5180)
class APlayerPawn_Athena_C final : public APlayerPawn_Athena_Generic_C
{
public:
	uint8                                         Pad_5171[0x7];                                     // 0x5171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Athena_C;                // 0x5178(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortContrailsComponent*                FortContrails;                                     // 0x5180(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortUnderwaterDamageComponent*         FortUnderwaterDamage;                              // 0x5188(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8; // 0x5190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8; // 0x5194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5195[0x3];                                     // 0x5195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x5198(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetHead;                                        // 0x51A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetBody;                                        // 0x51A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             PawnHeadMaterials_0;                               // 0x51B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             PawnBodyMaterials_0;                               // 0x51C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_FlakVest;                                       // 0x51D0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayEventData                     Event_Data;                                        // 0x51F0(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventSpawnEffect;                                  // 0x52A0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x52A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A5[0x3];                                     // 0x52A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            MenuGoingCommandowWeapon;                          // 0x52A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SafeZonePassThroughSound;                          // 0x52B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasBeenOutsideSafeZone;                           // 0x52B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B9[0x3];                                     // 0x52B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ThreatColor;                                       // 0x52BC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52CC[0x4];                                     // 0x52CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             PlayerKilledSound;                                 // 0x52D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               WindDebrisParticles;                               // 0x52D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FallingRainParticles;                              // 0x52E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               StormAuraParticles;                                // 0x52E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LightningSpawnLocation;                            // 0x52F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMin;                             // 0x5308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMax;                             // 0x530C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SafeZoneActor;                                     // 0x5310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensity;                                // 0x5318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531C[0x4];                                     // 0x531C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   RandomLightningLight;                              // 0x5320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMin;                     // 0x5328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMax;                     // 0x532C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashDiameter;                            // 0x5330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashHeight;                              // 0x5334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMin;                      // 0x5338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMax;                      // 0x533C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitterCameraLensEffectBase*           RainCameraLensParticles;                           // 0x5340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _ChanceOfLightningMesh;                            // 0x5348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowInvulnerableVisuals;                           // 0x534C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534D[0x3];                                     // 0x534D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        StormAudioLoop_Inst;                               // 0x5350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StormAudioVolume;                                  // 0x5358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_535C[0x4];                                     // 0x535C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        FallingAudioLoop_Inst;                             // 0x5360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayingFallingSound;                            // 0x5368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5369[0x3];                                     // 0x5369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayerAttributes_Speed_Walk;                       // 0x536C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAttributes_Speed_Run;                        // 0x5370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAttributes_Speed_Sprint;                     // 0x5374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrailsLOD;                                      // 0x5378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537C[0x4];                                     // 0x537C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  MobilePostProcess;                                 // 0x5380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOutsideSafeZoneCached;                          // 0x5388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5389[0x7];                                     // 0x5389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       ResOutMaterials;                                   // 0x5390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ADuplicateResOutMesh_C*                 RezInFXActor;                                      // 0x53A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bQueueRezIn;                                       // 0x53A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53A9[0x7];                                     // 0x53A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuplicateResOutMesh_C*                 RezOutFXActor;                                     // 0x53B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bQueueRezOut;                                      // 0x53B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasEverInWarmUp;                                  // 0x53B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStormAudioCleanedUp;                              // 0x53BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53BB[0x5];                                     // 0x53BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Box_Local_Transform;                               // 0x53C0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BoundsRadius;                                      // 0x5420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5424[0x4];                                     // 0x5424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   TeleportationPointLight;                           // 0x5428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxLightIntensity;                                 // 0x5430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket_MeshTop;                                    // 0x5434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket_MeshBot;                                    // 0x5438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_Transition;                               // 0x543C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolvePercent;                          // 0x5440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveDirection;                        // 0x5444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveBaseLoc;                          // 0x5448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveDistance;                         // 0x544C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveFirstSpawn;                       // 0x5450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5454[0x4];                                     // 0x5454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Mat_CharacterDissolve;                             // 0x5458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       DissolveMIDs;                                      // 0x5460(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bUseNewTeleportFX;                                 // 0x5470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5471[0x3];                                     // 0x5471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           OutsideSafeZoneGameplayCueTag;                     // 0x5474(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SafeZonePhase;                                     // 0x5478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WhichSafeZoneTag;                                  // 0x547C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutsideSafeZoneGameplayCueActive;                 // 0x5480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5481[0x7];                                     // 0x5481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         SafeZoneDamageScalableFloat;                       // 0x5488(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bFrontendPartyInProgress;                          // 0x54B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLockOnInteractionComplete;                        // 0x54B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54B2[0x6];                                     // 0x54B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              ResIn;                                             // 0x54B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              ResOut;                                            // 0x54C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              SwingRight;                                        // 0x54D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              SwingLeft;                                         // 0x54E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bSkeletalArrayReady;                               // 0x54F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F9[0x3];                                     // 0x54F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurDissolveSetupAttempt;                           // 0x54FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DBNOEnterSound;                                    // 0x5500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              onFadeToWhiteTeleported;                           // 0x5508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Is_Ashton;                                         // 0x5518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5519[0x7];                                     // 0x5519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Ashton;                                            // 0x5520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              SwingRightEnd;                                     // 0x5528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              SwingLeftEnd;                                      // 0x5538(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           PhoneGhostCue;                                     // 0x5548(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WhiteoutCue;                                       // 0x554C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZoneCue;                                // 0x5550(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZone2Cue;                               // 0x5554(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZone3Cue;                               // 0x5558(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayRespawnFXOnSpawn;                              // 0x555C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_555D[0x3];                                     // 0x555D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  PlayerPawnAthena;                                  // 0x5560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              SwingRight2;                                       // 0x5568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              SwingLeft2;                                        // 0x5578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          TestProceduralWaterInIsolation;                    // 0x5588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_0;                                          // 0x5589(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_First_Water_Body;                               // 0x558A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Last_Water_Body;                                // 0x558B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AccumulatedNormalizedDiveSpeed;                    // 0x558C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WaterSprintBoostTag;                               // 0x5590(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5594[0x4];                                     // 0x5594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool IsHidden)> CCPM_isHiddenInProp;                               // 0x5598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class UObject*, struct FPawnHighlight>   PawnHighlights;                                    // 0x55A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UObject*                                Current_Highlight_Source;                          // 0x55F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Highlight_Priority;                        // 0x5600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         Invulnerable_Highlight;                            // 0x5604(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFCreativeEffectColorIndex             LastCreativeEffectColorIndex;                      // 0x5634(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGalileo;                                         // 0x563C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_563D[0x3];                                     // 0x563D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         HotFixSnow;                                        // 0x5640(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<class FName>                             NoSnowPlaylists;                                   // 0x5668(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           GalileoPlaylistTag;                                // 0x56B8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56BC[0x4];                                     // 0x56BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       WeaponMIDs;                                        // 0x56C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         AmountOfTimesToAttemptRestoreMats;                 // 0x56D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_PawnAthenaNPC;                                  // 0x56D4(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         HitGlowBrightnessScalar;                           // 0x56D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56DC[0x4];                                     // 0x56DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CurrentWeaponMaterials;                            // 0x56E0(0x0010)(Edit, BlueprintVisible)
	TArray<class USkeletalMeshComponent*>         CurrentWeaponMeshes;                               // 0x56F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UMaterialInstanceDynamic*>       WeaponDissolveMIDs;                                // 0x5700(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         HitGlowBrightnessScalar_Mobile;                    // 0x5710(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_PawnAthenaDecoy;                                // 0x5714(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleRate;                                         // 0x5718(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571C[0x4];                                     // 0x571C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TetherQuestTag;                                    // 0x5720(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class FName                                   FirefliesTag;                                      // 0x5740(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5744[0xC];                                     // 0x5744(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RightSideRim_Transform;                            // 0x5750(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USpotLightComponent*                    Right_Side_Rim_Light;                              // 0x57B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rim_light_Shadow_Bias;                             // 0x57B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rim_Light_Attenuation_Radius;                      // 0x57BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rim_Light_Intensity;                               // 0x57C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C4[0x4];                                     // 0x57C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               PlayerAimRotation;                                 // 0x57C8(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FScalableFloat                         ControlRotationReplicationTickRate;                // 0x57E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           Elimination_Rez_Sequence_GC;                       // 0x5808(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Creative_Respawn_Teleportation_GC;                 // 0x580C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Teleport_In_GC;                                    // 0x5810(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         RimlightDistanceFromCamera;                        // 0x5814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RimlightOffsetFromCamera;                          // 0x5818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Rim_Light_Color___Night;                           // 0x581C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Rim_Light_Color___Day;                             // 0x582C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PhoneModeratorModeGameplayCue;                     // 0x583C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PhoneInvulnerableGameplayCue;                      // 0x5840(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Swinging_HandsUp;                                  // 0x5844(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Swinging_LockedToHip;                              // 0x5845(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5846[0x2];                                     // 0x5846(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InputDragCoefficient;                              // 0x5848(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleSwingNativized;                              // 0x584C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584D[0x3];                                     // 0x584D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        SwingingSound;                                     // 0x5850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Swinging_ReelingInCurve;                           // 0x5858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Swinging_NotReelingInCurve;                        // 0x5860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Swinging_OriginalVecToTarget;                      // 0x5868(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Swinging_ReelingIn;                                // 0x5880(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5881[0x3];                                     // 0x5881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Swinging_Goal_Length;                              // 0x5884(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Swinging_ReelingTimeCurve;                         // 0x5888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Swinging_ColliderBigger;                           // 0x5890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5891[0x7];                                     // 0x5891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAudioParameter>                SoundParams;                                       // 0x5898(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Swinging_UseNewRotationAlgorithm;                  // 0x58A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateInvincibleVisuals(float Duration);
	void AddHighlightFromSource(class UObject* Source, const struct FPawnHighlight& Highlight, bool OnlyUpdateIfCurrent);
	void AddSafeZoneGameplayCue();
	void AddSkeletalMeshComponentsFromWeaponObject(class AFortWeapon* WeaponObject);
	void AddStormFX();
	void AimTick();
	void ApplyColdTag();
	void ApplyColdTag_Retry(class UFortAbilitySystemComponent* AbilitySystemComponent_0, class AFortPlayerPawn* AffectedPawn);
	void ApplyPawnHighlight(class UObject* Source, const struct FPawnHighlight& HitGlow);
	void CleanupDissolveFX();
	void CleanUpTeleportationFXLight();
	void ClientRunSnowGC(bool Instant);
	void EnableWaterAudio(bool Is_Entering_Water);
	void EndRotationTick();
	void ExecuteUbergraph_PlayerPawn_Athena(int32 EntryPoint);
	void FindBounds();
	void GalileoMaterialSetup();
	void GameplayCue_Abilities_Activation_DBNOEnter(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_DBNOResurrect(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Athena_Boost(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Athena_Equipping(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Athena_Player_BeingRevivedFromDBNO(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Athena_Reloading(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage_Shielded(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Healing(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Shield_PotionConsumed(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void Get_Creative_Effect_Data(struct FFCreativeEffectColorIndex* Effect_Color);
	void Get_Highest_Priority_Highlight(class UObject** Source, struct FPawnHighlight* Top_Priority);
	void GetAimPoint(struct FRotator* ControlRotation);
	void GetLocationInCircle_XY(struct FVector* LocationLocalSpace);
	void handleCvarsUpdated(const class FString& CVarName);
	void Hide_Character_Parts(bool IsHidden);
	void Highlight_Pawn_from_Source(class UObject* Source, const struct FPawnHighlight& Highlight, bool Only_Update_If_Current);
	void InWarmup(bool* bInWarmup);
	void isHiddingInProp(bool IsHidden);
	void IsSwingAttached(bool* IsSwingAttached_0);
	void IsSwingGrounded(bool* IsSwingingGrounded);
	void IsSwinging(bool* IsSwinging_0);
	void K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void K2_UpdateCustomMovement(float DeltaTime);
	void LockonSearchCompleteTimedOut();
	void MeleeSwingLeft(bool First_Left);
	void MeleeSwingLeft_End();
	void MeleeSwingRight(bool First_Right);
	void MeleeSwingRight_End();
	void NotifyTeammateSkydivedFromBus();
	void OnBeginWaterSprintBoost();
	void OnCharacterCustomizationCompleted(class AFortPlayerPawn* Pawn);
	void OnCreativeModeratorModeActivate();
	void OnCreativeModeratorModeDeactivate();
	void OnCreativeStartGhost();
	void OnCreativeStartInvulnerable();
	void OnCreativeStopGhost();
	void OnCreativeStopInvulnerable();
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnEnteredReplayRelevancy();
	void OnEnteredWaterBody(class AFortWaterBodyActor* WaterBody, bool bIsFirstBody);
	void OnEnteredWaterVolume();
	void OnExitedWaterBody(class AFortWaterBodyActor* WaterBody, bool bIsLastBody);
	void OnExitedWaterVolume();
	void OnLandscapeCheckFailedAndTeleported();
	void OnLeftReplayRelevancy();
	void OnLockOnSearchCompleted(bool* bConsumeEvent);
	void OnOutsideSafeZonePhaseChanged(int32 SafeZonePhase_0);
	void OnReady_978607004CDEB137CACF38831BECEF40(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnReceivedStormSurgeDamage();
	void OnRep_PlayerAimRotation();
	void OnRep_PlayRespawnFXOnSpawn();
	void OnResInDuringWarmup();
	void OnSpawnImmunityTimeReset();
	void OnStartLongInteract(class AActor* ReceivingActor, bool* Out_bConsumeEvent, bool* Out_bSkipSetInteractDuration, bool* Out_bSkipStartAnimation, EItemInteractionType* Out_ItemInteractionType);
	void OnSuccessfulBuildingEdit();
	void OnTetheredExitPressed();
	void OnTetheredExitReleased();
	void OnTetherEnded(class APawn* LastTetherPawn);
	void OnTetherStarted(class APawn* LastTetherPawn);
	bool PawnIsDecoy();
	bool PawnIsNPC();
	void Play_Respawn_FX();
	void QueueTeleportIn();
	void QueueTeleportOut();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceivePossessed(class AController* NewController);
	void Remove_Pawn_Highlight_from_Source(class UObject* Source);
	void RemoveHighlightFromSource(class UObject* Source);
	void RemoveSafeZoneGameplayCue();
	void RemoveSafeZoneGameplayCueServerToClient();
	void RemoveSkeletalMeshComponentsFromWeaponObject(class AFortWeapon* WeaponObject);
	void RemoveStormFX();
	void ReplicateAimRotation(const struct FRotator& PlayerAimRotation_0);
	void RestoreCharacterMats(bool* bFullyCompleted);
	void SafeZoneStatusChanged();
	void ScalePlayerDown();
	void ScalePlayerUp();
	void ServerSetCreativeEffectColorIndex(const struct FFCreativeEffectColorIndex& Index_0);
	void SetPartyInProgress(bool bIsPartyInProgress);
	void SetPetHidden(bool NewHidden);
	void SetSafeZonePhaseAndGameplayCueTag(int32 InSafeZonePhase, bool bSpawnGameplayCue);
	void SetSafeZoneTagWhenChanged(int32 NewWhichSafeZoneTag, const struct FGameplayTag& GameplayTag, bool bSpawnGameplayCue);
	void SetupColdTag();
	void SetupDissolveFx();
	void SpawnTeleportationLight();
	void StartAImRotationTick();
	void StopLoopingAudio();
	struct FVector Swing_GetStartPoint();
	void SwingAttached(const struct FVector& AttachLocation, class AActor* AttachedActor);
	void SwingDetached();
	void Swinging_AttachLocation(struct FVector* Location, bool* AttachPointExists);
	void Swinging_CheckGrounded(bool* Grounded_, struct FVector* HitNormal, float* Distance);
	void Swinging_ResetMeshTransform();
	void Swinging_SetJumpHeight(float Jump_ZVelocity);
	void Swinging_StartReelingIn();
	void Swinging_StopReelingIn();
	struct FVector SwingingVectorToAttachPoint(const class FString& caller_ID);
	void TeleportInNSeconds(float SecondsTillTeleport, const struct FVector& DestLocation, const struct FRotator& DestRotation);
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Update_Rim_Light_Location();
	void UpdateDissolveFx(float Scalar_Transition, float Scalar_ZHeight, float Scalar_LightIntensity);
	void UserConstructionScript();
	void Validate_Rim_Light();
	void WhiteoutAndTeleport(const struct FVector& DestLocation, const struct FRotator& DestRotation, bool Instant, float Gravity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Athena_C">();
	}
	static class APlayerPawn_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Athena_C>();
	}
};
static_assert(alignof(APlayerPawn_Athena_C) == 0x000010, "Wrong alignment on APlayerPawn_Athena_C");
static_assert(sizeof(APlayerPawn_Athena_C) == 0x0058B0, "Wrong size on APlayerPawn_Athena_C");
static_assert(offsetof(APlayerPawn_Athena_C, UberGraphFrame_PlayerPawn_Athena_C) == 0x005178, "Member 'APlayerPawn_Athena_C::UberGraphFrame_PlayerPawn_Athena_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FortContrails) == 0x005180, "Member 'APlayerPawn_Athena_C::FortContrails' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FortUnderwaterDamage) == 0x005188, "Member 'APlayerPawn_Athena_C::FortUnderwaterDamage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8) == 0x005190, "Member 'APlayerPawn_Athena_C::Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8) == 0x005194, "Member 'APlayerPawn_Athena_C::Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0) == 0x005198, "Member 'APlayerPawn_Athena_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TargetHead) == 0x0051A0, "Member 'APlayerPawn_Athena_C::TargetHead' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TargetBody) == 0x0051A8, "Member 'APlayerPawn_Athena_C::TargetBody' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnHeadMaterials_0) == 0x0051B0, "Member 'APlayerPawn_Athena_C::PawnHeadMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnBodyMaterials_0) == 0x0051C0, "Member 'APlayerPawn_Athena_C::PawnBodyMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_FlakVest) == 0x0051D0, "Member 'APlayerPawn_Athena_C::TC_FlakVest' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Event_Data) == 0x0051F0, "Member 'APlayerPawn_Athena_C::Event_Data' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, EventSpawnEffect) == 0x0052A0, "Member 'APlayerPawn_Athena_C::EventSpawnEffect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, IsMale) == 0x0052A4, "Member 'APlayerPawn_Athena_C::IsMale' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MenuGoingCommandowWeapon) == 0x0052A8, "Member 'APlayerPawn_Athena_C::MenuGoingCommandowWeapon' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZonePassThroughSound) == 0x0052B0, "Member 'APlayerPawn_Athena_C::SafeZonePassThroughSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bHasBeenOutsideSafeZone) == 0x0052B8, "Member 'APlayerPawn_Athena_C::bHasBeenOutsideSafeZone' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ThreatColor) == 0x0052BC, "Member 'APlayerPawn_Athena_C::ThreatColor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerKilledSound) == 0x0052D0, "Member 'APlayerPawn_Athena_C::PlayerKilledSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WindDebrisParticles) == 0x0052D8, "Member 'APlayerPawn_Athena_C::WindDebrisParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FallingRainParticles) == 0x0052E0, "Member 'APlayerPawn_Athena_C::FallingRainParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAuraParticles) == 0x0052E8, "Member 'APlayerPawn_Athena_C::StormAuraParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningSpawnLocation) == 0x0052F0, "Member 'APlayerPawn_Athena_C::LightningSpawnLocation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensityMin) == 0x005308, "Member 'APlayerPawn_Athena_C::LightningIntensityMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensityMax) == 0x00530C, "Member 'APlayerPawn_Athena_C::LightningIntensityMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZoneActor) == 0x005310, "Member 'APlayerPawn_Athena_C::SafeZoneActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensity) == 0x005318, "Member 'APlayerPawn_Athena_C::LightningIntensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RandomLightningLight) == 0x005320, "Member 'APlayerPawn_Athena_C::RandomLightningLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningTimelinePlaySpeedMin) == 0x005328, "Member 'APlayerPawn_Athena_C::LightningTimelinePlaySpeedMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningTimelinePlaySpeedMax) == 0x00532C, "Member 'APlayerPawn_Athena_C::LightningTimelinePlaySpeedMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashDiameter) == 0x005330, "Member 'APlayerPawn_Athena_C::LightningFlashDiameter' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashHeight) == 0x005334, "Member 'APlayerPawn_Athena_C::LightningFlashHeight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashRepeatDelayMin) == 0x005338, "Member 'APlayerPawn_Athena_C::LightningFlashRepeatDelayMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashRepeatDelayMax) == 0x00533C, "Member 'APlayerPawn_Athena_C::LightningFlashRepeatDelayMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RainCameraLensParticles) == 0x005340, "Member 'APlayerPawn_Athena_C::RainCameraLensParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, _ChanceOfLightningMesh) == 0x005348, "Member 'APlayerPawn_Athena_C::_ChanceOfLightningMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ShowInvulnerableVisuals) == 0x00534C, "Member 'APlayerPawn_Athena_C::ShowInvulnerableVisuals' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAudioLoop_Inst) == 0x005350, "Member 'APlayerPawn_Athena_C::StormAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAudioVolume) == 0x005358, "Member 'APlayerPawn_Athena_C::StormAudioVolume' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FallingAudioLoop_Inst) == 0x005360, "Member 'APlayerPawn_Athena_C::FallingAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bIsPlayingFallingSound) == 0x005368, "Member 'APlayerPawn_Athena_C::bIsPlayingFallingSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Walk) == 0x00536C, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Walk' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Run) == 0x005370, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Run' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Sprint) == 0x005374, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Sprint' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MaxTrailsLOD) == 0x005378, "Member 'APlayerPawn_Athena_C::MaxTrailsLOD' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MobilePostProcess) == 0x005380, "Member 'APlayerPawn_Athena_C::MobilePostProcess' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bIsOutsideSafeZoneCached) == 0x005388, "Member 'APlayerPawn_Athena_C::bIsOutsideSafeZoneCached' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResOutMaterials) == 0x005390, "Member 'APlayerPawn_Athena_C::ResOutMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RezInFXActor) == 0x0053A0, "Member 'APlayerPawn_Athena_C::RezInFXActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bQueueRezIn) == 0x0053A8, "Member 'APlayerPawn_Athena_C::bQueueRezIn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RezOutFXActor) == 0x0053B0, "Member 'APlayerPawn_Athena_C::RezOutFXActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bQueueRezOut) == 0x0053B8, "Member 'APlayerPawn_Athena_C::bQueueRezOut' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bWasEverInWarmUp) == 0x0053B9, "Member 'APlayerPawn_Athena_C::bWasEverInWarmUp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bStormAudioCleanedUp) == 0x0053BA, "Member 'APlayerPawn_Athena_C::bStormAudioCleanedUp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Box_Local_Transform) == 0x0053C0, "Member 'APlayerPawn_Athena_C::Box_Local_Transform' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, BoundsRadius) == 0x005420, "Member 'APlayerPawn_Athena_C::BoundsRadius' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TeleportationPointLight) == 0x005428, "Member 'APlayerPawn_Athena_C::TeleportationPointLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MaxLightIntensity) == 0x005430, "Member 'APlayerPawn_Athena_C::MaxLightIntensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Socket_MeshTop) == 0x005434, "Member 'APlayerPawn_Athena_C::Socket_MeshTop' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Socket_MeshBot) == 0x005438, "Member 'APlayerPawn_Athena_C::Socket_MeshBot' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_Transition) == 0x00543C, "Member 'APlayerPawn_Athena_C::MIDParam_Transition' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolvePercent) == 0x005440, "Member 'APlayerPawn_Athena_C::MIDParam_DissolvePercent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveDirection) == 0x005444, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveDirection' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveBaseLoc) == 0x005448, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveBaseLoc' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveDistance) == 0x00544C, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveDistance' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveFirstSpawn) == 0x005450, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveFirstSpawn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Mat_CharacterDissolve) == 0x005458, "Member 'APlayerPawn_Athena_C::Mat_CharacterDissolve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, DissolveMIDs) == 0x005460, "Member 'APlayerPawn_Athena_C::DissolveMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bUseNewTeleportFX) == 0x005470, "Member 'APlayerPawn_Athena_C::bUseNewTeleportFX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZoneGameplayCueTag) == 0x005474, "Member 'APlayerPawn_Athena_C::OutsideSafeZoneGameplayCueTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZonePhase) == 0x005478, "Member 'APlayerPawn_Athena_C::SafeZonePhase' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WhichSafeZoneTag) == 0x00547C, "Member 'APlayerPawn_Athena_C::WhichSafeZoneTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bOutsideSafeZoneGameplayCueActive) == 0x005480, "Member 'APlayerPawn_Athena_C::bOutsideSafeZoneGameplayCueActive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZoneDamageScalableFloat) == 0x005488, "Member 'APlayerPawn_Athena_C::SafeZoneDamageScalableFloat' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bFrontendPartyInProgress) == 0x0054B0, "Member 'APlayerPawn_Athena_C::bFrontendPartyInProgress' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bLockOnInteractionComplete) == 0x0054B1, "Member 'APlayerPawn_Athena_C::bLockOnInteractionComplete' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResIn) == 0x0054B8, "Member 'APlayerPawn_Athena_C::ResIn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResOut) == 0x0054C8, "Member 'APlayerPawn_Athena_C::ResOut' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRight) == 0x0054D8, "Member 'APlayerPawn_Athena_C::SwingRight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeft) == 0x0054E8, "Member 'APlayerPawn_Athena_C::SwingLeft' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bSkeletalArrayReady) == 0x0054F8, "Member 'APlayerPawn_Athena_C::bSkeletalArrayReady' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurDissolveSetupAttempt) == 0x0054FC, "Member 'APlayerPawn_Athena_C::CurDissolveSetupAttempt' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, DBNOEnterSound) == 0x005500, "Member 'APlayerPawn_Athena_C::DBNOEnterSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, onFadeToWhiteTeleported) == 0x005508, "Member 'APlayerPawn_Athena_C::onFadeToWhiteTeleported' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_Ashton) == 0x005518, "Member 'APlayerPawn_Athena_C::Is_Ashton' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Ashton) == 0x005520, "Member 'APlayerPawn_Athena_C::Ashton' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRightEnd) == 0x005528, "Member 'APlayerPawn_Athena_C::SwingRightEnd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeftEnd) == 0x005538, "Member 'APlayerPawn_Athena_C::SwingLeftEnd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PhoneGhostCue) == 0x005548, "Member 'APlayerPawn_Athena_C::PhoneGhostCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WhiteoutCue) == 0x00554C, "Member 'APlayerPawn_Athena_C::WhiteoutCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZoneCue) == 0x005550, "Member 'APlayerPawn_Athena_C::OutsideSafeZoneCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZone2Cue) == 0x005554, "Member 'APlayerPawn_Athena_C::OutsideSafeZone2Cue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZone3Cue) == 0x005558, "Member 'APlayerPawn_Athena_C::OutsideSafeZone3Cue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayRespawnFXOnSpawn) == 0x00555C, "Member 'APlayerPawn_Athena_C::PlayRespawnFXOnSpawn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerPawnAthena) == 0x005560, "Member 'APlayerPawn_Athena_C::PlayerPawnAthena' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRight2) == 0x005568, "Member 'APlayerPawn_Athena_C::SwingRight2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeft2) == 0x005578, "Member 'APlayerPawn_Athena_C::SwingLeft2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TestProceduralWaterInIsolation) == 0x005588, "Member 'APlayerPawn_Athena_C::TestProceduralWaterInIsolation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, NewVar_0) == 0x005589, "Member 'APlayerPawn_Athena_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_First_Water_Body) == 0x00558A, "Member 'APlayerPawn_Athena_C::Is_First_Water_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_Last_Water_Body) == 0x00558B, "Member 'APlayerPawn_Athena_C::Is_Last_Water_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, AccumulatedNormalizedDiveSpeed) == 0x00558C, "Member 'APlayerPawn_Athena_C::AccumulatedNormalizedDiveSpeed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WaterSprintBoostTag) == 0x005590, "Member 'APlayerPawn_Athena_C::WaterSprintBoostTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CCPM_isHiddenInProp) == 0x005598, "Member 'APlayerPawn_Athena_C::CCPM_isHiddenInProp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnHighlights) == 0x0055A8, "Member 'APlayerPawn_Athena_C::PawnHighlights' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Current_Highlight_Source) == 0x0055F8, "Member 'APlayerPawn_Athena_C::Current_Highlight_Source' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Current_Highlight_Priority) == 0x005600, "Member 'APlayerPawn_Athena_C::Current_Highlight_Priority' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Invulnerable_Highlight) == 0x005604, "Member 'APlayerPawn_Athena_C::Invulnerable_Highlight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LastCreativeEffectColorIndex) == 0x005634, "Member 'APlayerPawn_Athena_C::LastCreativeEffectColorIndex' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, IsGalileo) == 0x00563C, "Member 'APlayerPawn_Athena_C::IsGalileo' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HotFixSnow) == 0x005640, "Member 'APlayerPawn_Athena_C::HotFixSnow' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, NoSnowPlaylists) == 0x005668, "Member 'APlayerPawn_Athena_C::NoSnowPlaylists' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, GalileoPlaylistTag) == 0x0056B8, "Member 'APlayerPawn_Athena_C::GalileoPlaylistTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WeaponMIDs) == 0x0056C0, "Member 'APlayerPawn_Athena_C::WeaponMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, AmountOfTimesToAttemptRestoreMats) == 0x0056D0, "Member 'APlayerPawn_Athena_C::AmountOfTimesToAttemptRestoreMats' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_PawnAthenaNPC) == 0x0056D4, "Member 'APlayerPawn_Athena_C::TC_PawnAthenaNPC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HitGlowBrightnessScalar) == 0x0056D8, "Member 'APlayerPawn_Athena_C::HitGlowBrightnessScalar' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurrentWeaponMaterials) == 0x0056E0, "Member 'APlayerPawn_Athena_C::CurrentWeaponMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurrentWeaponMeshes) == 0x0056F0, "Member 'APlayerPawn_Athena_C::CurrentWeaponMeshes' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WeaponDissolveMIDs) == 0x005700, "Member 'APlayerPawn_Athena_C::WeaponDissolveMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HitGlowBrightnessScalar_Mobile) == 0x005710, "Member 'APlayerPawn_Athena_C::HitGlowBrightnessScalar_Mobile' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_PawnAthenaDecoy) == 0x005714, "Member 'APlayerPawn_Athena_C::TC_PawnAthenaDecoy' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ScaleRate) == 0x005718, "Member 'APlayerPawn_Athena_C::ScaleRate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TetherQuestTag) == 0x005720, "Member 'APlayerPawn_Athena_C::TetherQuestTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FirefliesTag) == 0x005740, "Member 'APlayerPawn_Athena_C::FirefliesTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RightSideRim_Transform) == 0x005750, "Member 'APlayerPawn_Athena_C::RightSideRim_Transform' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Right_Side_Rim_Light) == 0x0057B0, "Member 'APlayerPawn_Athena_C::Right_Side_Rim_Light' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_light_Shadow_Bias) == 0x0057B8, "Member 'APlayerPawn_Athena_C::Rim_light_Shadow_Bias' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Attenuation_Radius) == 0x0057BC, "Member 'APlayerPawn_Athena_C::Rim_Light_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Intensity) == 0x0057C0, "Member 'APlayerPawn_Athena_C::Rim_Light_Intensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAimRotation) == 0x0057C8, "Member 'APlayerPawn_Athena_C::PlayerAimRotation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ControlRotationReplicationTickRate) == 0x0057E0, "Member 'APlayerPawn_Athena_C::ControlRotationReplicationTickRate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Elimination_Rez_Sequence_GC) == 0x005808, "Member 'APlayerPawn_Athena_C::Elimination_Rez_Sequence_GC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Creative_Respawn_Teleportation_GC) == 0x00580C, "Member 'APlayerPawn_Athena_C::Creative_Respawn_Teleportation_GC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Teleport_In_GC) == 0x005810, "Member 'APlayerPawn_Athena_C::Teleport_In_GC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RimlightDistanceFromCamera) == 0x005814, "Member 'APlayerPawn_Athena_C::RimlightDistanceFromCamera' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RimlightOffsetFromCamera) == 0x005818, "Member 'APlayerPawn_Athena_C::RimlightOffsetFromCamera' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Color___Night) == 0x00581C, "Member 'APlayerPawn_Athena_C::Rim_Light_Color___Night' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Color___Day) == 0x00582C, "Member 'APlayerPawn_Athena_C::Rim_Light_Color___Day' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PhoneModeratorModeGameplayCue) == 0x00583C, "Member 'APlayerPawn_Athena_C::PhoneModeratorModeGameplayCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PhoneInvulnerableGameplayCue) == 0x005840, "Member 'APlayerPawn_Athena_C::PhoneInvulnerableGameplayCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Swinging_HandsUp) == 0x005844, "Member 'APlayerPawn_Athena_C::Swinging_HandsUp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Swinging_LockedToHip) == 0x005845, "Member 'APlayerPawn_Athena_C::Swinging_LockedToHip' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, InputDragCoefficient) == 0x005848, "Member 'APlayerPawn_Athena_C::InputDragCoefficient' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ToggleSwingNativized) == 0x00584C, "Member 'APlayerPawn_Athena_C::ToggleSwingNativized' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingingSound) == 0x005850, "Member 'APlayerPawn_Athena_C::SwingingSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Swinging_ReelingInCurve) == 0x005858, "Member 'APlayerPawn_Athena_C::Swinging_ReelingInCurve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Swinging_NotReelingInCurve) == 0x005860, "Member 'APlayerPawn_Athena_C::Swinging_NotReelingInCurve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Swinging_OriginalVecToTarget) == 0x005868, "Member 'APlayerPawn_Athena_C::Swinging_OriginalVecToTarget' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Swinging_ReelingIn) == 0x005880, "Member 'APlayerPawn_Athena_C::Swinging_ReelingIn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Swinging_Goal_Length) == 0x005884, "Member 'APlayerPawn_Athena_C::Swinging_Goal_Length' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Swinging_ReelingTimeCurve) == 0x005888, "Member 'APlayerPawn_Athena_C::Swinging_ReelingTimeCurve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Swinging_ColliderBigger) == 0x005890, "Member 'APlayerPawn_Athena_C::Swinging_ColliderBigger' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SoundParams) == 0x005898, "Member 'APlayerPawn_Athena_C::SoundParams' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Swinging_UseNewRotationAlgorithm) == 0x0058A8, "Member 'APlayerPawn_Athena_C::Swinging_UseNewRotationAlgorithm' has a wrong offset!");

}

