#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MeleeManager_Variant_Template_Parent

#include "Basic.hpp"

#include "CreativeMeleeSecondaryAttacks_structs.hpp"
#include "Creative_Melee_Feedback_Scale_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CreativeMeleeKnockbackOptions_structs.hpp"
#include "CreativeMeleeLockOnOptions_structs.hpp"
#include "CreativeMelee_TargetAction_Selection_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_MeleeManager_Variant_Template_Parent.B_MeleeManager_Variant_Template_Parent_C
// 0x00D0 (0x01A0 - 0x00D0)
class UB_MeleeManager_Variant_Template_Parent_C final : public UFortCreativeItemTemplate
{
public:
	float                                         BaseDamage;                                        // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseAIDamage;                                      // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CritChance;                                        // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MCritChance;                                       // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CritDamageMult;                                    // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Knockback;                                         // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hit1DamMult;                                       // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hit1KnockMult;                                     // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hit2DamMult;                                       // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hit2KnockMult;                                     // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hit3DamMult;                                       // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hit3KnockMult;                                     // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hit4DamMult;                                       // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hit4KnockMult;                                     // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeMeleeSecondaryAttacks                SecondaryAttack;                                   // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EnvironmentDamage;                                 // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementBonus;                                     // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryDamage;                                   // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryKnockback;                                // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClassIndex;                                        // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Knob_AffectsClass;                                 // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamSetting;                                       // 0x0124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Knob_AffectsTeam;                                  // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsModifier;                                       // 0x012C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         mBaseDamage;                                       // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         mEnvironmentDamage;                                // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         mSecondaryDamage;                                  // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hit5DamMult;                                       // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hit5KnockMult;                                     // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         mCritDamageMult;                                   // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChargeTime;                                        // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeMeleeKnockbackOptions                KnockbackOptions;                                  // 0x014C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         JumpAttackDamage;                                  // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpAttackKnockbackPower;                          // 0x0154(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CannonballImpactRadius;                            // 0x0158(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SecondaryAttackBlockBreakEnabled;                  // 0x015C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreative_Melee_Feedback_Scale                FeedbackScale;                                     // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeMelee_TargetAction_Selection         TargetActionSelection;                             // 0x0161(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Modifier_Rank;                                     // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HigherPriority;                                    // 0x0168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         mJumpAttackDamage;                                 // 0x016C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         mJumpAttackKnockbackPower;                         // 0x0170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         mMovementBonus;                                    // 0x0174(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         mKnockback;                                        // 0x0178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         mSecondaryKnockback;                               // 0x017C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         mChargeTime;                                       // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AIKnockback;                                       // 0x0184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         mAIKnockback;                                      // 0x0188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeMeleeLockOnOptions                   LockOn;                                            // 0x018C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         mBaseAIDamage;                                     // 0x0190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageResistance;                                  // 0x0194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         mDamageResistance;                                 // 0x0198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Valid_for_Actor(class AActor* Actor, bool* Valid);
	void Priority_Check_And_Set(int32 ModifierRank);
	void IsValidTeam(const class AActor* Actor, bool* Valid);
	void IsValidClass(class AActor* Actor, bool* Valid);
	void GetCannonballImpactRadius(float* CannonballImpactRadius_0);
	void FindPerHitOptions(const struct FGameplayTag& HitTag, struct FCreativeMeleeHitOptions* MeleeHitOptions);
	void Accumulate(struct FCreativeMeleeOptions& AccumulatedState, class AActor* Target_Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_MeleeManager_Variant_Template_Parent_C">();
	}
	static class UB_MeleeManager_Variant_Template_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_MeleeManager_Variant_Template_Parent_C>();
	}
};
static_assert(alignof(UB_MeleeManager_Variant_Template_Parent_C) == 0x000008, "Wrong alignment on UB_MeleeManager_Variant_Template_Parent_C");
static_assert(sizeof(UB_MeleeManager_Variant_Template_Parent_C) == 0x0001A0, "Wrong size on UB_MeleeManager_Variant_Template_Parent_C");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, BaseDamage) == 0x0000D0, "Member 'UB_MeleeManager_Variant_Template_Parent_C::BaseDamage' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, BaseAIDamage) == 0x0000D4, "Member 'UB_MeleeManager_Variant_Template_Parent_C::BaseAIDamage' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, CritChance) == 0x0000D8, "Member 'UB_MeleeManager_Variant_Template_Parent_C::CritChance' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, MCritChance) == 0x0000DC, "Member 'UB_MeleeManager_Variant_Template_Parent_C::MCritChance' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, CritDamageMult) == 0x0000E0, "Member 'UB_MeleeManager_Variant_Template_Parent_C::CritDamageMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Knockback) == 0x0000E4, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Knockback' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Hit1DamMult) == 0x0000E8, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Hit1DamMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Hit1KnockMult) == 0x0000EC, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Hit1KnockMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Hit2DamMult) == 0x0000F0, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Hit2DamMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Hit2KnockMult) == 0x0000F4, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Hit2KnockMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Hit3DamMult) == 0x0000F8, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Hit3DamMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Hit3KnockMult) == 0x0000FC, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Hit3KnockMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Hit4DamMult) == 0x000100, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Hit4DamMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Hit4KnockMult) == 0x000104, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Hit4KnockMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, SecondaryAttack) == 0x000108, "Member 'UB_MeleeManager_Variant_Template_Parent_C::SecondaryAttack' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, EnvironmentDamage) == 0x00010C, "Member 'UB_MeleeManager_Variant_Template_Parent_C::EnvironmentDamage' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, MovementBonus) == 0x000110, "Member 'UB_MeleeManager_Variant_Template_Parent_C::MovementBonus' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, SecondaryDamage) == 0x000114, "Member 'UB_MeleeManager_Variant_Template_Parent_C::SecondaryDamage' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, SecondaryKnockback) == 0x000118, "Member 'UB_MeleeManager_Variant_Template_Parent_C::SecondaryKnockback' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, ClassIndex) == 0x00011C, "Member 'UB_MeleeManager_Variant_Template_Parent_C::ClassIndex' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Knob_AffectsClass) == 0x000120, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Knob_AffectsClass' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, TeamSetting) == 0x000124, "Member 'UB_MeleeManager_Variant_Template_Parent_C::TeamSetting' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Knob_AffectsTeam) == 0x000128, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Knob_AffectsTeam' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, bIsModifier) == 0x00012C, "Member 'UB_MeleeManager_Variant_Template_Parent_C::bIsModifier' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mBaseDamage) == 0x000130, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mBaseDamage' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mEnvironmentDamage) == 0x000134, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mEnvironmentDamage' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mSecondaryDamage) == 0x000138, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mSecondaryDamage' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Hit5DamMult) == 0x00013C, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Hit5DamMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Hit5KnockMult) == 0x000140, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Hit5KnockMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mCritDamageMult) == 0x000144, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mCritDamageMult' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, ChargeTime) == 0x000148, "Member 'UB_MeleeManager_Variant_Template_Parent_C::ChargeTime' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, KnockbackOptions) == 0x00014C, "Member 'UB_MeleeManager_Variant_Template_Parent_C::KnockbackOptions' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, JumpAttackDamage) == 0x000150, "Member 'UB_MeleeManager_Variant_Template_Parent_C::JumpAttackDamage' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, JumpAttackKnockbackPower) == 0x000154, "Member 'UB_MeleeManager_Variant_Template_Parent_C::JumpAttackKnockbackPower' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, CannonballImpactRadius) == 0x000158, "Member 'UB_MeleeManager_Variant_Template_Parent_C::CannonballImpactRadius' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, SecondaryAttackBlockBreakEnabled) == 0x00015C, "Member 'UB_MeleeManager_Variant_Template_Parent_C::SecondaryAttackBlockBreakEnabled' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, FeedbackScale) == 0x000160, "Member 'UB_MeleeManager_Variant_Template_Parent_C::FeedbackScale' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, TargetActionSelection) == 0x000161, "Member 'UB_MeleeManager_Variant_Template_Parent_C::TargetActionSelection' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, Modifier_Rank) == 0x000164, "Member 'UB_MeleeManager_Variant_Template_Parent_C::Modifier_Rank' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, HigherPriority) == 0x000168, "Member 'UB_MeleeManager_Variant_Template_Parent_C::HigherPriority' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mJumpAttackDamage) == 0x00016C, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mJumpAttackDamage' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mJumpAttackKnockbackPower) == 0x000170, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mJumpAttackKnockbackPower' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mMovementBonus) == 0x000174, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mMovementBonus' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mKnockback) == 0x000178, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mKnockback' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mSecondaryKnockback) == 0x00017C, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mSecondaryKnockback' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mChargeTime) == 0x000180, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mChargeTime' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, AIKnockback) == 0x000184, "Member 'UB_MeleeManager_Variant_Template_Parent_C::AIKnockback' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mAIKnockback) == 0x000188, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mAIKnockback' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, LockOn) == 0x00018C, "Member 'UB_MeleeManager_Variant_Template_Parent_C::LockOn' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mBaseAIDamage) == 0x000190, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mBaseAIDamage' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, DamageResistance) == 0x000194, "Member 'UB_MeleeManager_Variant_Template_Parent_C::DamageResistance' has a wrong offset!");
static_assert(offsetof(UB_MeleeManager_Variant_Template_Parent_C, mDamageResistance) == 0x000198, "Member 'UB_MeleeManager_Variant_Template_Parent_C::mDamageResistance' has a wrong offset!");

}

