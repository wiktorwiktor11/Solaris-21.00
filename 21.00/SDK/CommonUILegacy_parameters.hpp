#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonUILegacy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_structs.hpp"


namespace SDK::Params
{

// Function CommonUILegacy.CommonInputManagerLegacy.GetAvailableInputActions
// 0x0018 (0x0018 - 0x0000)
struct CommonInputManagerLegacy_GetAvailableInputActions final
{
public:
	TArray<struct FCommonInputActionHandlerData>  AvailableInputActions;                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonInputManagerLegacy_GetAvailableInputActions) == 0x000008, "Wrong alignment on CommonInputManagerLegacy_GetAvailableInputActions");
static_assert(sizeof(CommonInputManagerLegacy_GetAvailableInputActions) == 0x000018, "Wrong size on CommonInputManagerLegacy_GetAvailableInputActions");
static_assert(offsetof(CommonInputManagerLegacy_GetAvailableInputActions, AvailableInputActions) == 0x000000, "Member 'CommonInputManagerLegacy_GetAvailableInputActions::AvailableInputActions' has a wrong offset!");
static_assert(offsetof(CommonInputManagerLegacy_GetAvailableInputActions, ReturnValue) == 0x000010, "Member 'CommonInputManagerLegacy_GetAvailableInputActions::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonInputManagerLegacy.PopActivatablePanel
// 0x0008 (0x0008 - 0x0000)
struct CommonInputManagerLegacy_PopActivatablePanel final
{
public:
	class UCommonActivatablePanelLegacy*          ActivatablePanel;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputManagerLegacy_PopActivatablePanel) == 0x000008, "Wrong alignment on CommonInputManagerLegacy_PopActivatablePanel");
static_assert(sizeof(CommonInputManagerLegacy_PopActivatablePanel) == 0x000008, "Wrong size on CommonInputManagerLegacy_PopActivatablePanel");
static_assert(offsetof(CommonInputManagerLegacy_PopActivatablePanel, ActivatablePanel) == 0x000000, "Member 'CommonInputManagerLegacy_PopActivatablePanel::ActivatablePanel' has a wrong offset!");

// Function CommonUILegacy.CommonInputManagerLegacy.PushActivatablePanel
// 0x0010 (0x0010 - 0x0000)
struct CommonInputManagerLegacy_PushActivatablePanel final
{
public:
	class UCommonActivatablePanelLegacy*          ActivatablePanel;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIntroPanel;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutroPanelBelow;                                  // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonInputManagerLegacy_PushActivatablePanel) == 0x000008, "Wrong alignment on CommonInputManagerLegacy_PushActivatablePanel");
static_assert(sizeof(CommonInputManagerLegacy_PushActivatablePanel) == 0x000010, "Wrong size on CommonInputManagerLegacy_PushActivatablePanel");
static_assert(offsetof(CommonInputManagerLegacy_PushActivatablePanel, ActivatablePanel) == 0x000000, "Member 'CommonInputManagerLegacy_PushActivatablePanel::ActivatablePanel' has a wrong offset!");
static_assert(offsetof(CommonInputManagerLegacy_PushActivatablePanel, bIntroPanel) == 0x000008, "Member 'CommonInputManagerLegacy_PushActivatablePanel::bIntroPanel' has a wrong offset!");
static_assert(offsetof(CommonInputManagerLegacy_PushActivatablePanel, bOutroPanelBelow) == 0x000009, "Member 'CommonInputManagerLegacy_PushActivatablePanel::bOutroPanelBelow' has a wrong offset!");

// Function CommonUILegacy.CommonInputManagerLegacy.SetGlobalInputHandlerPriorityFilter
// 0x0004 (0x0004 - 0x0000)
struct CommonInputManagerLegacy_SetGlobalInputHandlerPriorityFilter final
{
public:
	int32                                         InFilterPriority;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputManagerLegacy_SetGlobalInputHandlerPriorityFilter) == 0x000004, "Wrong alignment on CommonInputManagerLegacy_SetGlobalInputHandlerPriorityFilter");
static_assert(sizeof(CommonInputManagerLegacy_SetGlobalInputHandlerPriorityFilter) == 0x000004, "Wrong size on CommonInputManagerLegacy_SetGlobalInputHandlerPriorityFilter");
static_assert(offsetof(CommonInputManagerLegacy_SetGlobalInputHandlerPriorityFilter, InFilterPriority) == 0x000000, "Member 'CommonInputManagerLegacy_SetGlobalInputHandlerPriorityFilter::InFilterPriority' has a wrong offset!");

// Function CommonUILegacy.CommonInputManagerLegacy.StartListeningForExistingHeldAction
// 0x0030 (0x0030 - 0x0000)
struct CommonInputManagerLegacy_StartListeningForExistingHeldAction final
{
public:
	struct FDataTableRowHandle                    InputActionDataRow;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             CompleteEvent;                                     // 0x0010(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(float HeldPercent)>            ProgressEvent;                                     // 0x001C(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonInputManagerLegacy_StartListeningForExistingHeldAction) == 0x000008, "Wrong alignment on CommonInputManagerLegacy_StartListeningForExistingHeldAction");
static_assert(sizeof(CommonInputManagerLegacy_StartListeningForExistingHeldAction) == 0x000030, "Wrong size on CommonInputManagerLegacy_StartListeningForExistingHeldAction");
static_assert(offsetof(CommonInputManagerLegacy_StartListeningForExistingHeldAction, InputActionDataRow) == 0x000000, "Member 'CommonInputManagerLegacy_StartListeningForExistingHeldAction::InputActionDataRow' has a wrong offset!");
static_assert(offsetof(CommonInputManagerLegacy_StartListeningForExistingHeldAction, CompleteEvent) == 0x000010, "Member 'CommonInputManagerLegacy_StartListeningForExistingHeldAction::CompleteEvent' has a wrong offset!");
static_assert(offsetof(CommonInputManagerLegacy_StartListeningForExistingHeldAction, ProgressEvent) == 0x00001C, "Member 'CommonInputManagerLegacy_StartListeningForExistingHeldAction::ProgressEvent' has a wrong offset!");
static_assert(offsetof(CommonInputManagerLegacy_StartListeningForExistingHeldAction, ReturnValue) == 0x000028, "Member 'CommonInputManagerLegacy_StartListeningForExistingHeldAction::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonInputManagerLegacy.StopListeningForExistingHeldAction
// 0x0030 (0x0030 - 0x0000)
struct CommonInputManagerLegacy_StopListeningForExistingHeldAction final
{
public:
	struct FDataTableRowHandle                    InputActionDataRow;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             CompleteEvent;                                     // 0x0010(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(float HeldPercent)>            ProgressEvent;                                     // 0x001C(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonInputManagerLegacy_StopListeningForExistingHeldAction) == 0x000008, "Wrong alignment on CommonInputManagerLegacy_StopListeningForExistingHeldAction");
static_assert(sizeof(CommonInputManagerLegacy_StopListeningForExistingHeldAction) == 0x000030, "Wrong size on CommonInputManagerLegacy_StopListeningForExistingHeldAction");
static_assert(offsetof(CommonInputManagerLegacy_StopListeningForExistingHeldAction, InputActionDataRow) == 0x000000, "Member 'CommonInputManagerLegacy_StopListeningForExistingHeldAction::InputActionDataRow' has a wrong offset!");
static_assert(offsetof(CommonInputManagerLegacy_StopListeningForExistingHeldAction, CompleteEvent) == 0x000010, "Member 'CommonInputManagerLegacy_StopListeningForExistingHeldAction::CompleteEvent' has a wrong offset!");
static_assert(offsetof(CommonInputManagerLegacy_StopListeningForExistingHeldAction, ProgressEvent) == 0x00001C, "Member 'CommonInputManagerLegacy_StopListeningForExistingHeldAction::ProgressEvent' has a wrong offset!");
static_assert(offsetof(CommonInputManagerLegacy_StopListeningForExistingHeldAction, ReturnValue) == 0x000028, "Member 'CommonInputManagerLegacy_StopListeningForExistingHeldAction::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonInputManagerLegacy.GetGlobalInputHandlerPriorityFilter
// 0x0004 (0x0004 - 0x0000)
struct CommonInputManagerLegacy_GetGlobalInputHandlerPriorityFilter final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputManagerLegacy_GetGlobalInputHandlerPriorityFilter) == 0x000004, "Wrong alignment on CommonInputManagerLegacy_GetGlobalInputHandlerPriorityFilter");
static_assert(sizeof(CommonInputManagerLegacy_GetGlobalInputHandlerPriorityFilter) == 0x000004, "Wrong size on CommonInputManagerLegacy_GetGlobalInputHandlerPriorityFilter");
static_assert(offsetof(CommonInputManagerLegacy_GetGlobalInputHandlerPriorityFilter, ReturnValue) == 0x000000, "Member 'CommonInputManagerLegacy_GetGlobalInputHandlerPriorityFilter::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonInputManagerLegacy.GetTopPanel
// 0x0008 (0x0008 - 0x0000)
struct CommonInputManagerLegacy_GetTopPanel final
{
public:
	class UCommonActivatablePanelLegacy*          ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputManagerLegacy_GetTopPanel) == 0x000008, "Wrong alignment on CommonInputManagerLegacy_GetTopPanel");
static_assert(sizeof(CommonInputManagerLegacy_GetTopPanel) == 0x000008, "Wrong size on CommonInputManagerLegacy_GetTopPanel");
static_assert(offsetof(CommonInputManagerLegacy_GetTopPanel, ReturnValue) == 0x000000, "Member 'CommonInputManagerLegacy_GetTopPanel::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonInputManagerLegacy.IsInputSuspended
// 0x0001 (0x0001 - 0x0000)
struct CommonInputManagerLegacy_IsInputSuspended final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputManagerLegacy_IsInputSuspended) == 0x000001, "Wrong alignment on CommonInputManagerLegacy_IsInputSuspended");
static_assert(sizeof(CommonInputManagerLegacy_IsInputSuspended) == 0x000001, "Wrong size on CommonInputManagerLegacy_IsInputSuspended");
static_assert(offsetof(CommonInputManagerLegacy_IsInputSuspended, ReturnValue) == 0x000000, "Member 'CommonInputManagerLegacy_IsInputSuspended::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonInputManagerLegacy.IsPanelOnStack
// 0x0010 (0x0010 - 0x0000)
struct CommonInputManagerLegacy_IsPanelOnStack final
{
public:
	const class UCommonActivatablePanelLegacy*    InPanel;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonInputManagerLegacy_IsPanelOnStack) == 0x000008, "Wrong alignment on CommonInputManagerLegacy_IsPanelOnStack");
static_assert(sizeof(CommonInputManagerLegacy_IsPanelOnStack) == 0x000010, "Wrong size on CommonInputManagerLegacy_IsPanelOnStack");
static_assert(offsetof(CommonInputManagerLegacy_IsPanelOnStack, InPanel) == 0x000000, "Member 'CommonInputManagerLegacy_IsPanelOnStack::InPanel' has a wrong offset!");
static_assert(offsetof(CommonInputManagerLegacy_IsPanelOnStack, ReturnValue) == 0x000008, "Member 'CommonInputManagerLegacy_IsPanelOnStack::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonButtonLegacy.HandleOnButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonLegacy_HandleOnButtonClicked final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonLegacy_HandleOnButtonClicked) == 0x000008, "Wrong alignment on CommonButtonLegacy_HandleOnButtonClicked");
static_assert(sizeof(CommonButtonLegacy_HandleOnButtonClicked) == 0x000008, "Wrong size on CommonButtonLegacy_HandleOnButtonClicked");
static_assert(offsetof(CommonButtonLegacy_HandleOnButtonClicked, Button) == 0x000000, "Member 'CommonButtonLegacy_HandleOnButtonClicked::Button' has a wrong offset!");

// Function CommonUILegacy.CommonButtonLegacy.HandleOnButtonDoubleClicked
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonLegacy_HandleOnButtonDoubleClicked final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonLegacy_HandleOnButtonDoubleClicked) == 0x000008, "Wrong alignment on CommonButtonLegacy_HandleOnButtonDoubleClicked");
static_assert(sizeof(CommonButtonLegacy_HandleOnButtonDoubleClicked) == 0x000008, "Wrong size on CommonButtonLegacy_HandleOnButtonDoubleClicked");
static_assert(offsetof(CommonButtonLegacy_HandleOnButtonDoubleClicked, Button) == 0x000000, "Member 'CommonButtonLegacy_HandleOnButtonDoubleClicked::Button' has a wrong offset!");

// Function CommonUILegacy.CommonButtonLegacy.HandleOnButtonHovered
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonLegacy_HandleOnButtonHovered final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonLegacy_HandleOnButtonHovered) == 0x000008, "Wrong alignment on CommonButtonLegacy_HandleOnButtonHovered");
static_assert(sizeof(CommonButtonLegacy_HandleOnButtonHovered) == 0x000008, "Wrong size on CommonButtonLegacy_HandleOnButtonHovered");
static_assert(offsetof(CommonButtonLegacy_HandleOnButtonHovered, Button) == 0x000000, "Member 'CommonButtonLegacy_HandleOnButtonHovered::Button' has a wrong offset!");

// Function CommonUILegacy.CommonButtonLegacy.HandleOnButtonUnhovered
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonLegacy_HandleOnButtonUnhovered final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonLegacy_HandleOnButtonUnhovered) == 0x000008, "Wrong alignment on CommonButtonLegacy_HandleOnButtonUnhovered");
static_assert(sizeof(CommonButtonLegacy_HandleOnButtonUnhovered) == 0x000008, "Wrong size on CommonButtonLegacy_HandleOnButtonUnhovered");
static_assert(offsetof(CommonButtonLegacy_HandleOnButtonUnhovered, Button) == 0x000000, "Member 'CommonButtonLegacy_HandleOnButtonUnhovered::Button' has a wrong offset!");

// Function CommonUILegacy.CommonButtonLegacy.HandleOnSelectedChanged
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonLegacy_HandleOnSelectedChanged final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InSelected;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonLegacy_HandleOnSelectedChanged) == 0x000008, "Wrong alignment on CommonButtonLegacy_HandleOnSelectedChanged");
static_assert(sizeof(CommonButtonLegacy_HandleOnSelectedChanged) == 0x000010, "Wrong size on CommonButtonLegacy_HandleOnSelectedChanged");
static_assert(offsetof(CommonButtonLegacy_HandleOnSelectedChanged, Button) == 0x000000, "Member 'CommonButtonLegacy_HandleOnSelectedChanged::Button' has a wrong offset!");
static_assert(offsetof(CommonButtonLegacy_HandleOnSelectedChanged, InSelected) == 0x000008, "Member 'CommonButtonLegacy_HandleOnSelectedChanged::InSelected' has a wrong offset!");

// Function CommonUILegacy.CommonButtonLegacy.SetTriggeredInputActionLegacy
// 0x0018 (0x0018 - 0x0000)
struct CommonButtonLegacy_SetTriggeredInputActionLegacy final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class UCommonActivatablePanelLegacy*          OldPanel;                                          // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonLegacy_SetTriggeredInputActionLegacy) == 0x000008, "Wrong alignment on CommonButtonLegacy_SetTriggeredInputActionLegacy");
static_assert(sizeof(CommonButtonLegacy_SetTriggeredInputActionLegacy) == 0x000018, "Wrong size on CommonButtonLegacy_SetTriggeredInputActionLegacy");
static_assert(offsetof(CommonButtonLegacy_SetTriggeredInputActionLegacy, InputActionRow) == 0x000000, "Member 'CommonButtonLegacy_SetTriggeredInputActionLegacy::InputActionRow' has a wrong offset!");
static_assert(offsetof(CommonButtonLegacy_SetTriggeredInputActionLegacy, OldPanel) == 0x000010, "Member 'CommonButtonLegacy_SetTriggeredInputActionLegacy::OldPanel' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.AddInputActionHandler
// 0x0018 (0x0018 - 0x0000)
struct CommonActivatablePanelLegacy_AddInputActionHandler final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowName;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool* bPassThrough)>           CommitedEvent;                                     // 0x000C(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_AddInputActionHandler) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_AddInputActionHandler");
static_assert(sizeof(CommonActivatablePanelLegacy_AddInputActionHandler) == 0x000018, "Wrong size on CommonActivatablePanelLegacy_AddInputActionHandler");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandler, DataTable) == 0x000000, "Member 'CommonActivatablePanelLegacy_AddInputActionHandler::DataTable' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandler, RowName) == 0x000008, "Member 'CommonActivatablePanelLegacy_AddInputActionHandler::RowName' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandler, CommitedEvent) == 0x00000C, "Member 'CommonActivatablePanelLegacy_AddInputActionHandler::CommitedEvent' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.AddInputActionHandlerWithPopup
// 0x0020 (0x0020 - 0x0000)
struct CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowName;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool* bPassThrough)>           CommitedEvent;                                     // 0x000C(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonPopupMenuLegacy*                 PopupMenu;                                         // 0x0018(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup");
static_assert(sizeof(CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup) == 0x000020, "Wrong size on CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup, DataTable) == 0x000000, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup::DataTable' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup, RowName) == 0x000008, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup::RowName' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup, CommitedEvent) == 0x00000C, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup::CommitedEvent' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup, PopupMenu) == 0x000018, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithPopup::PopupMenu' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.AddInputActionHandlerWithProgress
// 0x0028 (0x0028 - 0x0000)
struct CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowName;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool* bPassThrough)>           CommitedEvent;                                     // 0x000C(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(float HeldPercent)>            ProgressEvent;                                     // 0x0018(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress");
static_assert(sizeof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress) == 0x000028, "Wrong size on CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress, DataTable) == 0x000000, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress::DataTable' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress, RowName) == 0x000008, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress::RowName' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress, CommitedEvent) == 0x00000C, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress::CommitedEvent' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress, ProgressEvent) == 0x000018, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithProgress::ProgressEvent' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.AddInputActionHandlerWithProgressPopup
// 0x0030 (0x0030 - 0x0000)
struct CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowName;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool* bPassThrough)>           CommitedEvent;                                     // 0x000C(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(float HeldPercent)>            ProgressEvent;                                     // 0x0018(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonPopupMenuLegacy*                 PopupMenu;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup");
static_assert(sizeof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup) == 0x000030, "Wrong size on CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup, DataTable) == 0x000000, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup::DataTable' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup, RowName) == 0x000008, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup::RowName' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup, CommitedEvent) == 0x00000C, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup::CommitedEvent' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup, ProgressEvent) == 0x000018, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup::ProgressEvent' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup, PopupMenu) == 0x000028, "Member 'CommonActivatablePanelLegacy_AddInputActionHandlerWithProgressPopup::PopupMenu' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.AddInputActionNoHandler
// 0x0010 (0x0010 - 0x0000)
struct CommonActivatablePanelLegacy_AddInputActionNoHandler final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowName;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonActivatablePanelLegacy_AddInputActionNoHandler) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_AddInputActionNoHandler");
static_assert(sizeof(CommonActivatablePanelLegacy_AddInputActionNoHandler) == 0x000010, "Wrong size on CommonActivatablePanelLegacy_AddInputActionNoHandler");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionNoHandler, DataTable) == 0x000000, "Member 'CommonActivatablePanelLegacy_AddInputActionNoHandler::DataTable' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_AddInputActionNoHandler, RowName) == 0x000008, "Member 'CommonActivatablePanelLegacy_AddInputActionNoHandler::RowName' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.OnInputModeChanged
// 0x0001 (0x0001 - 0x0000)
struct CommonActivatablePanelLegacy_OnInputModeChanged final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_OnInputModeChanged) == 0x000001, "Wrong alignment on CommonActivatablePanelLegacy_OnInputModeChanged");
static_assert(sizeof(CommonActivatablePanelLegacy_OnInputModeChanged) == 0x000001, "Wrong size on CommonActivatablePanelLegacy_OnInputModeChanged");
static_assert(offsetof(CommonActivatablePanelLegacy_OnInputModeChanged, bUsingGamepad) == 0x000000, "Member 'CommonActivatablePanelLegacy_OnInputModeChanged::bUsingGamepad' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.RemoveInputActionHandler
// 0x0010 (0x0010 - 0x0000)
struct CommonActivatablePanelLegacy_RemoveInputActionHandler final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_RemoveInputActionHandler) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_RemoveInputActionHandler");
static_assert(sizeof(CommonActivatablePanelLegacy_RemoveInputActionHandler) == 0x000010, "Wrong size on CommonActivatablePanelLegacy_RemoveInputActionHandler");
static_assert(offsetof(CommonActivatablePanelLegacy_RemoveInputActionHandler, InputActionRow) == 0x000000, "Member 'CommonActivatablePanelLegacy_RemoveInputActionHandler::InputActionRow' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.SetActionHandlerState
// 0x0010 (0x0010 - 0x0000)
struct CommonActivatablePanelLegacy_SetActionHandlerState final
{
public:
	const class UDataTable*                       DataTable;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowName;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputActionState                             State;                                             // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonActivatablePanelLegacy_SetActionHandlerState) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_SetActionHandlerState");
static_assert(sizeof(CommonActivatablePanelLegacy_SetActionHandlerState) == 0x000010, "Wrong size on CommonActivatablePanelLegacy_SetActionHandlerState");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerState, DataTable) == 0x000000, "Member 'CommonActivatablePanelLegacy_SetActionHandlerState::DataTable' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerState, RowName) == 0x000008, "Member 'CommonActivatablePanelLegacy_SetActionHandlerState::RowName' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerState, State) == 0x00000C, "Member 'CommonActivatablePanelLegacy_SetActionHandlerState::State' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.SetActionHandlerStateFromHandle
// 0x0018 (0x0018 - 0x0000)
struct CommonActivatablePanelLegacy_SetActionHandlerStateFromHandle final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	EInputActionState                             State;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonActivatablePanelLegacy_SetActionHandlerStateFromHandle) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_SetActionHandlerStateFromHandle");
static_assert(sizeof(CommonActivatablePanelLegacy_SetActionHandlerStateFromHandle) == 0x000018, "Wrong size on CommonActivatablePanelLegacy_SetActionHandlerStateFromHandle");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerStateFromHandle, InputActionRow) == 0x000000, "Member 'CommonActivatablePanelLegacy_SetActionHandlerStateFromHandle::InputActionRow' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerStateFromHandle, State) == 0x000010, "Member 'CommonActivatablePanelLegacy_SetActionHandlerStateFromHandle::State' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.SetActionHandlerStateFromHandleWithDisabledCommitEvent
// 0x0020 (0x0020 - 0x0000)
struct CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	EInputActionState                             State;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool* bPassThrough)>           DisabledCommitEvent;                               // 0x0014(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent");
static_assert(sizeof(CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent) == 0x000020, "Wrong size on CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent, InputActionRow) == 0x000000, "Member 'CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent::InputActionRow' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent, State) == 0x000010, "Member 'CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent::State' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent, DisabledCommitEvent) == 0x000014, "Member 'CommonActivatablePanelLegacy_SetActionHandlerStateFromHandleWithDisabledCommitEvent::DisabledCommitEvent' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.SetActionHandlerStateWithDisabledCommitEvent
// 0x0020 (0x0020 - 0x0000)
struct CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowName;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputActionState                             State;                                             // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool* bPassThrough)>           DisabledCommitEvent;                               // 0x0010(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent");
static_assert(sizeof(CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent) == 0x000020, "Wrong size on CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent, DataTable) == 0x000000, "Member 'CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent::DataTable' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent, RowName) == 0x000008, "Member 'CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent::RowName' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent, State) == 0x00000C, "Member 'CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent::State' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent, DisabledCommitEvent) == 0x000010, "Member 'CommonActivatablePanelLegacy_SetActionHandlerStateWithDisabledCommitEvent::DisabledCommitEvent' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.SetInputActionHandler
// 0x0020 (0x0020 - 0x0000)
struct CommonActivatablePanelLegacy_SetInputActionHandler final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(bool* bPassThrough)>           CommitedEvent;                                     // 0x0010(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonActivatablePanelLegacy_SetInputActionHandler) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_SetInputActionHandler");
static_assert(sizeof(CommonActivatablePanelLegacy_SetInputActionHandler) == 0x000020, "Wrong size on CommonActivatablePanelLegacy_SetInputActionHandler");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandler, InputActionRow) == 0x000000, "Member 'CommonActivatablePanelLegacy_SetInputActionHandler::InputActionRow' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandler, CommitedEvent) == 0x000010, "Member 'CommonActivatablePanelLegacy_SetInputActionHandler::CommitedEvent' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.SetInputActionHandlerWithPopupMenu
// 0x0028 (0x0028 - 0x0000)
struct CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(bool* bPassThrough)>           CommitedEvent;                                     // 0x0010(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonPopupMenuLegacy*                 PopupMenu;                                         // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu");
static_assert(sizeof(CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu) == 0x000028, "Wrong size on CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu, InputActionRow) == 0x000000, "Member 'CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu::InputActionRow' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu, CommitedEvent) == 0x000010, "Member 'CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu::CommitedEvent' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu, PopupMenu) == 0x000020, "Member 'CommonActivatablePanelLegacy_SetInputActionHandlerWithPopupMenu::PopupMenu' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.SetInputActionHandlerWithProgress
// 0x0028 (0x0028 - 0x0000)
struct CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(bool* bPassThrough)>           CommitedEvent;                                     // 0x0010(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(float HeldPercent)>            ProgressEvent;                                     // 0x001C(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress");
static_assert(sizeof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress) == 0x000028, "Wrong size on CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress, InputActionRow) == 0x000000, "Member 'CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress::InputActionRow' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress, CommitedEvent) == 0x000010, "Member 'CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress::CommitedEvent' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress, ProgressEvent) == 0x00001C, "Member 'CommonActivatablePanelLegacy_SetInputActionHandlerWithProgress::ProgressEvent' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.SetInputActionHandlerWithProgressPopupMenu
// 0x0030 (0x0030 - 0x0000)
struct CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(bool* bPassThrough)>           CommitedEvent;                                     // 0x0010(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(float HeldPercent)>            ProgressEvent;                                     // 0x001C(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonPopupMenuLegacy*                 PopupMenu;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu");
static_assert(sizeof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu) == 0x000030, "Wrong size on CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu, InputActionRow) == 0x000000, "Member 'CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu::InputActionRow' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu, CommitedEvent) == 0x000010, "Member 'CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu::CommitedEvent' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu, ProgressEvent) == 0x00001C, "Member 'CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu::ProgressEvent' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu, PopupMenu) == 0x000028, "Member 'CommonActivatablePanelLegacy_SetInputActionHandlerWithProgressPopupMenu::PopupMenu' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.GetInputActions
// 0x0018 (0x0018 - 0x0000)
struct CommonActivatablePanelLegacy_GetInputActions final
{
public:
	TArray<struct FCommonInputActionHandlerData>  InputActionDataRows;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonActivatablePanelLegacy_GetInputActions) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_GetInputActions");
static_assert(sizeof(CommonActivatablePanelLegacy_GetInputActions) == 0x000018, "Wrong size on CommonActivatablePanelLegacy_GetInputActions");
static_assert(offsetof(CommonActivatablePanelLegacy_GetInputActions, InputActionDataRows) == 0x000000, "Member 'CommonActivatablePanelLegacy_GetInputActions::InputActionDataRows' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_GetInputActions, ReturnValue) == 0x000010, "Member 'CommonActivatablePanelLegacy_GetInputActions::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.HasInputActionHandler
// 0x0018 (0x0018 - 0x0000)
struct CommonActivatablePanelLegacy_HasInputActionHandler final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonActivatablePanelLegacy_HasInputActionHandler) == 0x000008, "Wrong alignment on CommonActivatablePanelLegacy_HasInputActionHandler");
static_assert(sizeof(CommonActivatablePanelLegacy_HasInputActionHandler) == 0x000018, "Wrong size on CommonActivatablePanelLegacy_HasInputActionHandler");
static_assert(offsetof(CommonActivatablePanelLegacy_HasInputActionHandler, InputActionRow) == 0x000000, "Member 'CommonActivatablePanelLegacy_HasInputActionHandler::InputActionRow' has a wrong offset!");
static_assert(offsetof(CommonActivatablePanelLegacy_HasInputActionHandler, ReturnValue) == 0x000010, "Member 'CommonActivatablePanelLegacy_HasInputActionHandler::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.IsInActivationStack
// 0x0001 (0x0001 - 0x0000)
struct CommonActivatablePanelLegacy_IsInActivationStack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_IsInActivationStack) == 0x000001, "Wrong alignment on CommonActivatablePanelLegacy_IsInActivationStack");
static_assert(sizeof(CommonActivatablePanelLegacy_IsInActivationStack) == 0x000001, "Wrong size on CommonActivatablePanelLegacy_IsInActivationStack");
static_assert(offsetof(CommonActivatablePanelLegacy_IsInActivationStack, ReturnValue) == 0x000000, "Member 'CommonActivatablePanelLegacy_IsInActivationStack::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonActivatablePanelLegacy.IsIntroed
// 0x0001 (0x0001 - 0x0000)
struct CommonActivatablePanelLegacy_IsIntroed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatablePanelLegacy_IsIntroed) == 0x000001, "Wrong alignment on CommonActivatablePanelLegacy_IsIntroed");
static_assert(sizeof(CommonActivatablePanelLegacy_IsIntroed) == 0x000001, "Wrong size on CommonActivatablePanelLegacy_IsIntroed");
static_assert(offsetof(CommonActivatablePanelLegacy_IsIntroed, ReturnValue) == 0x000000, "Member 'CommonActivatablePanelLegacy_IsIntroed::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.CreateButtonGroup
// 0x0018 (0x0018 - 0x0000)
struct CommonButtonGroupLegacy_CreateButtonGroup final
{
public:
	class UObject*                                ContextObject;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInSelectionRequired;                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonGroupLegacy*               ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupLegacy_CreateButtonGroup) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_CreateButtonGroup");
static_assert(sizeof(CommonButtonGroupLegacy_CreateButtonGroup) == 0x000018, "Wrong size on CommonButtonGroupLegacy_CreateButtonGroup");
static_assert(offsetof(CommonButtonGroupLegacy_CreateButtonGroup, ContextObject) == 0x000000, "Member 'CommonButtonGroupLegacy_CreateButtonGroup::ContextObject' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_CreateButtonGroup, bInSelectionRequired) == 0x000008, "Member 'CommonButtonGroupLegacy_CreateButtonGroup::bInSelectionRequired' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_CreateButtonGroup, ReturnValue) == 0x000010, "Member 'CommonButtonGroupLegacy_CreateButtonGroup::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.HandleNativeOnButtonClicked
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupLegacy_HandleNativeOnButtonClicked final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSelectedButtonIndex;                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupLegacy_HandleNativeOnButtonClicked) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_HandleNativeOnButtonClicked");
static_assert(sizeof(CommonButtonGroupLegacy_HandleNativeOnButtonClicked) == 0x000010, "Wrong size on CommonButtonGroupLegacy_HandleNativeOnButtonClicked");
static_assert(offsetof(CommonButtonGroupLegacy_HandleNativeOnButtonClicked, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_HandleNativeOnButtonClicked::BaseButton' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_HandleNativeOnButtonClicked, InSelectedButtonIndex) == 0x000008, "Member 'CommonButtonGroupLegacy_HandleNativeOnButtonClicked::InSelectedButtonIndex' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.HandleNativeOnButtonDoubleClicked
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupLegacy_HandleNativeOnButtonDoubleClicked final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSelectedButtonIndex;                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupLegacy_HandleNativeOnButtonDoubleClicked) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_HandleNativeOnButtonDoubleClicked");
static_assert(sizeof(CommonButtonGroupLegacy_HandleNativeOnButtonDoubleClicked) == 0x000010, "Wrong size on CommonButtonGroupLegacy_HandleNativeOnButtonDoubleClicked");
static_assert(offsetof(CommonButtonGroupLegacy_HandleNativeOnButtonDoubleClicked, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_HandleNativeOnButtonDoubleClicked::BaseButton' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_HandleNativeOnButtonDoubleClicked, InSelectedButtonIndex) == 0x000008, "Member 'CommonButtonGroupLegacy_HandleNativeOnButtonDoubleClicked::InSelectedButtonIndex' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.HandleNativeOnHoveredButtonChanged
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupLegacy_HandleNativeOnHoveredButtonChanged final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSelectedButtonIndex;                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupLegacy_HandleNativeOnHoveredButtonChanged) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_HandleNativeOnHoveredButtonChanged");
static_assert(sizeof(CommonButtonGroupLegacy_HandleNativeOnHoveredButtonChanged) == 0x000010, "Wrong size on CommonButtonGroupLegacy_HandleNativeOnHoveredButtonChanged");
static_assert(offsetof(CommonButtonGroupLegacy_HandleNativeOnHoveredButtonChanged, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_HandleNativeOnHoveredButtonChanged::BaseButton' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_HandleNativeOnHoveredButtonChanged, InSelectedButtonIndex) == 0x000008, "Member 'CommonButtonGroupLegacy_HandleNativeOnHoveredButtonChanged::InSelectedButtonIndex' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.HandleNativeOnSelectedButtonChanged
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupLegacy_HandleNativeOnSelectedButtonChanged final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSelectedButtonIndex;                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupLegacy_HandleNativeOnSelectedButtonChanged) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_HandleNativeOnSelectedButtonChanged");
static_assert(sizeof(CommonButtonGroupLegacy_HandleNativeOnSelectedButtonChanged) == 0x000010, "Wrong size on CommonButtonGroupLegacy_HandleNativeOnSelectedButtonChanged");
static_assert(offsetof(CommonButtonGroupLegacy_HandleNativeOnSelectedButtonChanged, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_HandleNativeOnSelectedButtonChanged::BaseButton' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_HandleNativeOnSelectedButtonChanged, InSelectedButtonIndex) == 0x000008, "Member 'CommonButtonGroupLegacy_HandleNativeOnSelectedButtonChanged::InSelectedButtonIndex' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.HandleOnButtonClicked
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupLegacy_HandleOnButtonClicked final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSelectedButtonIndex;                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupLegacy_HandleOnButtonClicked) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_HandleOnButtonClicked");
static_assert(sizeof(CommonButtonGroupLegacy_HandleOnButtonClicked) == 0x000010, "Wrong size on CommonButtonGroupLegacy_HandleOnButtonClicked");
static_assert(offsetof(CommonButtonGroupLegacy_HandleOnButtonClicked, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_HandleOnButtonClicked::BaseButton' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_HandleOnButtonClicked, InSelectedButtonIndex) == 0x000008, "Member 'CommonButtonGroupLegacy_HandleOnButtonClicked::InSelectedButtonIndex' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.HandleOnButtonDoubleClicked
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupLegacy_HandleOnButtonDoubleClicked final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSelectedButtonIndex;                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupLegacy_HandleOnButtonDoubleClicked) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_HandleOnButtonDoubleClicked");
static_assert(sizeof(CommonButtonGroupLegacy_HandleOnButtonDoubleClicked) == 0x000010, "Wrong size on CommonButtonGroupLegacy_HandleOnButtonDoubleClicked");
static_assert(offsetof(CommonButtonGroupLegacy_HandleOnButtonDoubleClicked, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_HandleOnButtonDoubleClicked::BaseButton' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_HandleOnButtonDoubleClicked, InSelectedButtonIndex) == 0x000008, "Member 'CommonButtonGroupLegacy_HandleOnButtonDoubleClicked::InSelectedButtonIndex' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.HandleOnHoveredButtonChanged
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupLegacy_HandleOnHoveredButtonChanged final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSelectedButtonIndex;                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupLegacy_HandleOnHoveredButtonChanged) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_HandleOnHoveredButtonChanged");
static_assert(sizeof(CommonButtonGroupLegacy_HandleOnHoveredButtonChanged) == 0x000010, "Wrong size on CommonButtonGroupLegacy_HandleOnHoveredButtonChanged");
static_assert(offsetof(CommonButtonGroupLegacy_HandleOnHoveredButtonChanged, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_HandleOnHoveredButtonChanged::BaseButton' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_HandleOnHoveredButtonChanged, InSelectedButtonIndex) == 0x000008, "Member 'CommonButtonGroupLegacy_HandleOnHoveredButtonChanged::InSelectedButtonIndex' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.HandleOnSelectedButtonChanged
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupLegacy_HandleOnSelectedButtonChanged final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSelectedButtonIndex;                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupLegacy_HandleOnSelectedButtonChanged) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_HandleOnSelectedButtonChanged");
static_assert(sizeof(CommonButtonGroupLegacy_HandleOnSelectedButtonChanged) == 0x000010, "Wrong size on CommonButtonGroupLegacy_HandleOnSelectedButtonChanged");
static_assert(offsetof(CommonButtonGroupLegacy_HandleOnSelectedButtonChanged, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_HandleOnSelectedButtonChanged::BaseButton' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_HandleOnSelectedButtonChanged, InSelectedButtonIndex) == 0x000008, "Member 'CommonButtonGroupLegacy_HandleOnSelectedButtonChanged::InSelectedButtonIndex' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.OnButtonHovered
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupLegacy_OnButtonHovered final
{
public:
	class UCommonButtonLegacy*                    BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupLegacy_OnButtonHovered) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_OnButtonHovered");
static_assert(sizeof(CommonButtonGroupLegacy_OnButtonHovered) == 0x000008, "Wrong size on CommonButtonGroupLegacy_OnButtonHovered");
static_assert(offsetof(CommonButtonGroupLegacy_OnButtonHovered, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_OnButtonHovered::BaseButton' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.OnButtonUnhovered
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupLegacy_OnButtonUnhovered final
{
public:
	class UCommonButtonLegacy*                    BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupLegacy_OnButtonUnhovered) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_OnButtonUnhovered");
static_assert(sizeof(CommonButtonGroupLegacy_OnButtonUnhovered) == 0x000008, "Wrong size on CommonButtonGroupLegacy_OnButtonUnhovered");
static_assert(offsetof(CommonButtonGroupLegacy_OnButtonUnhovered, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_OnButtonUnhovered::BaseButton' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.OnHandleButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupLegacy_OnHandleButtonClicked final
{
public:
	class UCommonButtonLegacy*                    BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupLegacy_OnHandleButtonClicked) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_OnHandleButtonClicked");
static_assert(sizeof(CommonButtonGroupLegacy_OnHandleButtonClicked) == 0x000008, "Wrong size on CommonButtonGroupLegacy_OnHandleButtonClicked");
static_assert(offsetof(CommonButtonGroupLegacy_OnHandleButtonClicked, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_OnHandleButtonClicked::BaseButton' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.OnHandleButtonDoubleClicked
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupLegacy_OnHandleButtonDoubleClicked final
{
public:
	class UCommonButtonLegacy*                    BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupLegacy_OnHandleButtonDoubleClicked) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_OnHandleButtonDoubleClicked");
static_assert(sizeof(CommonButtonGroupLegacy_OnHandleButtonDoubleClicked) == 0x000008, "Wrong size on CommonButtonGroupLegacy_OnHandleButtonDoubleClicked");
static_assert(offsetof(CommonButtonGroupLegacy_OnHandleButtonDoubleClicked, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_OnHandleButtonDoubleClicked::BaseButton' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.OnSelectionStateChanged
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupLegacy_OnSelectionStateChanged final
{
public:
	class UCommonButtonLegacy*                    BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupLegacy_OnSelectionStateChanged) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_OnSelectionStateChanged");
static_assert(sizeof(CommonButtonGroupLegacy_OnSelectionStateChanged) == 0x000010, "Wrong size on CommonButtonGroupLegacy_OnSelectionStateChanged");
static_assert(offsetof(CommonButtonGroupLegacy_OnSelectionStateChanged, BaseButton) == 0x000000, "Member 'CommonButtonGroupLegacy_OnSelectionStateChanged::BaseButton' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_OnSelectionStateChanged, bIsSelected) == 0x000008, "Member 'CommonButtonGroupLegacy_OnSelectionStateChanged::bIsSelected' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.GetButtonAtIndex
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupLegacy_GetButtonAtIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupLegacy_GetButtonAtIndex) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_GetButtonAtIndex");
static_assert(sizeof(CommonButtonGroupLegacy_GetButtonAtIndex) == 0x000010, "Wrong size on CommonButtonGroupLegacy_GetButtonAtIndex");
static_assert(offsetof(CommonButtonGroupLegacy_GetButtonAtIndex, Index_0) == 0x000000, "Member 'CommonButtonGroupLegacy_GetButtonAtIndex::Index_0' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupLegacy_GetButtonAtIndex, ReturnValue) == 0x000008, "Member 'CommonButtonGroupLegacy_GetButtonAtIndex::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonButtonGroupLegacy.GetSelectedButton
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupLegacy_GetSelectedButton final
{
public:
	class UCommonButtonLegacy*                    ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupLegacy_GetSelectedButton) == 0x000008, "Wrong alignment on CommonButtonGroupLegacy_GetSelectedButton");
static_assert(sizeof(CommonButtonGroupLegacy_GetSelectedButton) == 0x000008, "Wrong size on CommonButtonGroupLegacy_GetSelectedButton");
static_assert(offsetof(CommonButtonGroupLegacy_GetSelectedButton, ReturnValue) == 0x000000, "Member 'CommonButtonGroupLegacy_GetSelectedButton::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonInputReflectorLegacy.OnButtonAdded
// 0x0028 (0x0028 - 0x0000)
struct CommonInputReflectorLegacy_OnButtonAdded final
{
public:
	class UCommonButtonLegacy*                    AddedButton;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCommonInputActionHandlerData          Data;                                              // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonInputReflectorLegacy_OnButtonAdded) == 0x000008, "Wrong alignment on CommonInputReflectorLegacy_OnButtonAdded");
static_assert(sizeof(CommonInputReflectorLegacy_OnButtonAdded) == 0x000028, "Wrong size on CommonInputReflectorLegacy_OnButtonAdded");
static_assert(offsetof(CommonInputReflectorLegacy_OnButtonAdded, AddedButton) == 0x000000, "Member 'CommonInputReflectorLegacy_OnButtonAdded::AddedButton' has a wrong offset!");
static_assert(offsetof(CommonInputReflectorLegacy_OnButtonAdded, Data) == 0x000008, "Member 'CommonInputReflectorLegacy_OnButtonAdded::Data' has a wrong offset!");

// Function CommonUILegacy.CommonPopupButtonLegacy.GetMenuAnchorWidget
// 0x0008 (0x0008 - 0x0000)
struct CommonPopupButtonLegacy_GetMenuAnchorWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonPopupButtonLegacy_GetMenuAnchorWidget) == 0x000008, "Wrong alignment on CommonPopupButtonLegacy_GetMenuAnchorWidget");
static_assert(sizeof(CommonPopupButtonLegacy_GetMenuAnchorWidget) == 0x000008, "Wrong size on CommonPopupButtonLegacy_GetMenuAnchorWidget");
static_assert(offsetof(CommonPopupButtonLegacy_GetMenuAnchorWidget, ReturnValue) == 0x000000, "Member 'CommonPopupButtonLegacy_GetMenuAnchorWidget::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonPopupMenuLegacy.OnIsOpenChanged
// 0x0001 (0x0001 - 0x0000)
struct CommonPopupMenuLegacy_OnIsOpenChanged final
{
public:
	bool                                          IsOpen;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonPopupMenuLegacy_OnIsOpenChanged) == 0x000001, "Wrong alignment on CommonPopupMenuLegacy_OnIsOpenChanged");
static_assert(sizeof(CommonPopupMenuLegacy_OnIsOpenChanged) == 0x000001, "Wrong size on CommonPopupMenuLegacy_OnIsOpenChanged");
static_assert(offsetof(CommonPopupMenuLegacy_OnIsOpenChanged, IsOpen) == 0x000000, "Member 'CommonPopupMenuLegacy_OnIsOpenChanged::IsOpen' has a wrong offset!");

// Function CommonUILegacy.CommonPopupMenuLegacy.SetContextProvider
// 0x0008 (0x0008 - 0x0000)
struct CommonPopupMenuLegacy_SetContextProvider final
{
public:
	const class UObject*                          ContextProvidingObject_0;                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonPopupMenuLegacy_SetContextProvider) == 0x000008, "Wrong alignment on CommonPopupMenuLegacy_SetContextProvider");
static_assert(sizeof(CommonPopupMenuLegacy_SetContextProvider) == 0x000008, "Wrong size on CommonPopupMenuLegacy_SetContextProvider");
static_assert(offsetof(CommonPopupMenuLegacy_SetContextProvider, ContextProvidingObject_0) == 0x000000, "Member 'CommonPopupMenuLegacy_SetContextProvider::ContextProvidingObject_0' has a wrong offset!");

// Function CommonUILegacy.CommonPopupMenuLegacy.SetOwningMenuAnchor
// 0x0008 (0x0008 - 0x0000)
struct CommonPopupMenuLegacy_SetOwningMenuAnchor final
{
public:
	const class UMenuAnchor*                      MenuAnchor;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonPopupMenuLegacy_SetOwningMenuAnchor) == 0x000008, "Wrong alignment on CommonPopupMenuLegacy_SetOwningMenuAnchor");
static_assert(sizeof(CommonPopupMenuLegacy_SetOwningMenuAnchor) == 0x000008, "Wrong size on CommonPopupMenuLegacy_SetOwningMenuAnchor");
static_assert(offsetof(CommonPopupMenuLegacy_SetOwningMenuAnchor, MenuAnchor) == 0x000000, "Member 'CommonPopupMenuLegacy_SetOwningMenuAnchor::MenuAnchor' has a wrong offset!");

// Function CommonUILegacy.CommonTabListWidgetLegacy.GetTabButtonByID
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetLegacy_GetTabButtonByID final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetLegacy_GetTabButtonByID) == 0x000008, "Wrong alignment on CommonTabListWidgetLegacy_GetTabButtonByID");
static_assert(sizeof(CommonTabListWidgetLegacy_GetTabButtonByID) == 0x000010, "Wrong size on CommonTabListWidgetLegacy_GetTabButtonByID");
static_assert(offsetof(CommonTabListWidgetLegacy_GetTabButtonByID, TabNameID) == 0x000000, "Member 'CommonTabListWidgetLegacy_GetTabButtonByID::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetLegacy_GetTabButtonByID, ReturnValue) == 0x000008, "Member 'CommonTabListWidgetLegacy_GetTabButtonByID::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonTabListWidgetLegacy.HandleOnTabButtonCreated
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetLegacy_HandleOnTabButtonCreated final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetLegacy_HandleOnTabButtonCreated) == 0x000008, "Wrong alignment on CommonTabListWidgetLegacy_HandleOnTabButtonCreated");
static_assert(sizeof(CommonTabListWidgetLegacy_HandleOnTabButtonCreated) == 0x000010, "Wrong size on CommonTabListWidgetLegacy_HandleOnTabButtonCreated");
static_assert(offsetof(CommonTabListWidgetLegacy_HandleOnTabButtonCreated, TabId) == 0x000000, "Member 'CommonTabListWidgetLegacy_HandleOnTabButtonCreated::TabId' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetLegacy_HandleOnTabButtonCreated, TabButton) == 0x000008, "Member 'CommonTabListWidgetLegacy_HandleOnTabButtonCreated::TabButton' has a wrong offset!");

// Function CommonUILegacy.CommonTabListWidgetLegacy.HandleOnTabButtonRemoved
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetLegacy_HandleOnTabButtonRemoved final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetLegacy_HandleOnTabButtonRemoved) == 0x000008, "Wrong alignment on CommonTabListWidgetLegacy_HandleOnTabButtonRemoved");
static_assert(sizeof(CommonTabListWidgetLegacy_HandleOnTabButtonRemoved) == 0x000010, "Wrong size on CommonTabListWidgetLegacy_HandleOnTabButtonRemoved");
static_assert(offsetof(CommonTabListWidgetLegacy_HandleOnTabButtonRemoved, TabId) == 0x000000, "Member 'CommonTabListWidgetLegacy_HandleOnTabButtonRemoved::TabId' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetLegacy_HandleOnTabButtonRemoved, TabButton) == 0x000008, "Member 'CommonTabListWidgetLegacy_HandleOnTabButtonRemoved::TabButton' has a wrong offset!");

// Function CommonUILegacy.CommonTabListWidgetLegacy.HandleTabCreated
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetLegacy_HandleTabCreated final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetLegacy_HandleTabCreated) == 0x000008, "Wrong alignment on CommonTabListWidgetLegacy_HandleTabCreated");
static_assert(sizeof(CommonTabListWidgetLegacy_HandleTabCreated) == 0x000010, "Wrong size on CommonTabListWidgetLegacy_HandleTabCreated");
static_assert(offsetof(CommonTabListWidgetLegacy_HandleTabCreated, TabNameID) == 0x000000, "Member 'CommonTabListWidgetLegacy_HandleTabCreated::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetLegacy_HandleTabCreated, TabButton) == 0x000008, "Member 'CommonTabListWidgetLegacy_HandleTabCreated::TabButton' has a wrong offset!");

// Function CommonUILegacy.CommonTabListWidgetLegacy.HandleTabRemoved
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetLegacy_HandleTabRemoved final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetLegacy_HandleTabRemoved) == 0x000008, "Wrong alignment on CommonTabListWidgetLegacy_HandleTabRemoved");
static_assert(sizeof(CommonTabListWidgetLegacy_HandleTabRemoved) == 0x000010, "Wrong size on CommonTabListWidgetLegacy_HandleTabRemoved");
static_assert(offsetof(CommonTabListWidgetLegacy_HandleTabRemoved, TabNameID) == 0x000000, "Member 'CommonTabListWidgetLegacy_HandleTabRemoved::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetLegacy_HandleTabRemoved, TabButton) == 0x000008, "Member 'CommonTabListWidgetLegacy_HandleTabRemoved::TabButton' has a wrong offset!");

// Function CommonUILegacy.CommonUISubsystemLegacy.GetInputManager
// 0x0008 (0x0008 - 0x0000)
struct CommonUISubsystemLegacy_GetInputManager final
{
public:
	class UCommonInputManagerLegacy*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUISubsystemLegacy_GetInputManager) == 0x000008, "Wrong alignment on CommonUISubsystemLegacy_GetInputManager");
static_assert(sizeof(CommonUISubsystemLegacy_GetInputManager) == 0x000008, "Wrong size on CommonUISubsystemLegacy_GetInputManager");
static_assert(offsetof(CommonUISubsystemLegacy_GetInputManager, ReturnValue) == 0x000000, "Member 'CommonUISubsystemLegacy_GetInputManager::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonWidgetStackLegacy.PopWidget
// 0x0008 (0x0008 - 0x0000)
struct CommonWidgetStackLegacy_PopWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetStackLegacy_PopWidget) == 0x000008, "Wrong alignment on CommonWidgetStackLegacy_PopWidget");
static_assert(sizeof(CommonWidgetStackLegacy_PopWidget) == 0x000008, "Wrong size on CommonWidgetStackLegacy_PopWidget");
static_assert(offsetof(CommonWidgetStackLegacy_PopWidget, ReturnValue) == 0x000000, "Member 'CommonWidgetStackLegacy_PopWidget::ReturnValue' has a wrong offset!");

// Function CommonUILegacy.CommonWidgetStackLegacy.PushWidget
// 0x0008 (0x0008 - 0x0000)
struct CommonWidgetStackLegacy_PushWidget final
{
public:
	class UWidget*                                InWidget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetStackLegacy_PushWidget) == 0x000008, "Wrong alignment on CommonWidgetStackLegacy_PushWidget");
static_assert(sizeof(CommonWidgetStackLegacy_PushWidget) == 0x000008, "Wrong size on CommonWidgetStackLegacy_PushWidget");
static_assert(offsetof(CommonWidgetStackLegacy_PushWidget, InWidget) == 0x000000, "Member 'CommonWidgetStackLegacy_PushWidget::InWidget' has a wrong offset!");

// Function CommonUILegacy.CommonWidgetSwitcherLegacy.HandleActiveWidgetDeactivated
// 0x0008 (0x0008 - 0x0000)
struct CommonWidgetSwitcherLegacy_HandleActiveWidgetDeactivated final
{
public:
	class UCommonActivatablePanelLegacy*          DeactivatedPanel;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetSwitcherLegacy_HandleActiveWidgetDeactivated) == 0x000008, "Wrong alignment on CommonWidgetSwitcherLegacy_HandleActiveWidgetDeactivated");
static_assert(sizeof(CommonWidgetSwitcherLegacy_HandleActiveWidgetDeactivated) == 0x000008, "Wrong size on CommonWidgetSwitcherLegacy_HandleActiveWidgetDeactivated");
static_assert(offsetof(CommonWidgetSwitcherLegacy_HandleActiveWidgetDeactivated, DeactivatedPanel) == 0x000000, "Member 'CommonWidgetSwitcherLegacy_HandleActiveWidgetDeactivated::DeactivatedPanel' has a wrong offset!");

// Function CommonUILegacy.CommonWidgetSwitcherLegacy.SetActiveWidget_Advanced
// 0x0010 (0x0010 - 0x0000)
struct CommonWidgetSwitcherLegacy_SetActiveWidget_Advanced final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttemptActivationChange;                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonWidgetSwitcherLegacy_SetActiveWidget_Advanced) == 0x000008, "Wrong alignment on CommonWidgetSwitcherLegacy_SetActiveWidget_Advanced");
static_assert(sizeof(CommonWidgetSwitcherLegacy_SetActiveWidget_Advanced) == 0x000010, "Wrong size on CommonWidgetSwitcherLegacy_SetActiveWidget_Advanced");
static_assert(offsetof(CommonWidgetSwitcherLegacy_SetActiveWidget_Advanced, Widget) == 0x000000, "Member 'CommonWidgetSwitcherLegacy_SetActiveWidget_Advanced::Widget' has a wrong offset!");
static_assert(offsetof(CommonWidgetSwitcherLegacy_SetActiveWidget_Advanced, AttemptActivationChange) == 0x000008, "Member 'CommonWidgetSwitcherLegacy_SetActiveWidget_Advanced::AttemptActivationChange' has a wrong offset!");

// Function CommonUILegacy.CommonWidgetSwitcherLegacy.SetActiveWidgetIndex_Advanced
// 0x0008 (0x0008 - 0x0000)
struct CommonWidgetSwitcherLegacy_SetActiveWidgetIndex_Advanced final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttemptActivationChange;                           // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonWidgetSwitcherLegacy_SetActiveWidgetIndex_Advanced) == 0x000004, "Wrong alignment on CommonWidgetSwitcherLegacy_SetActiveWidgetIndex_Advanced");
static_assert(sizeof(CommonWidgetSwitcherLegacy_SetActiveWidgetIndex_Advanced) == 0x000008, "Wrong size on CommonWidgetSwitcherLegacy_SetActiveWidgetIndex_Advanced");
static_assert(offsetof(CommonWidgetSwitcherLegacy_SetActiveWidgetIndex_Advanced, Index_0) == 0x000000, "Member 'CommonWidgetSwitcherLegacy_SetActiveWidgetIndex_Advanced::Index_0' has a wrong offset!");
static_assert(offsetof(CommonWidgetSwitcherLegacy_SetActiveWidgetIndex_Advanced, AttemptActivationChange) == 0x000004, "Member 'CommonWidgetSwitcherLegacy_SetActiveWidgetIndex_Advanced::AttemptActivationChange' has a wrong offset!");

}

