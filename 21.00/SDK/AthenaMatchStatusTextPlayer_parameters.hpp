#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMatchStatusTextPlayer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function AthenaMatchStatusTextPlayer.AthenaMatchStatusTextPlayer_C.ExecuteUbergraph_AthenaMatchStatusTextPlayer
// 0x0008 (0x0008 - 0x0000)
struct AthenaMatchStatusTextPlayer_C_ExecuteUbergraph_AthenaMatchStatusTextPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMatchStatusTextPlayer_C_ExecuteUbergraph_AthenaMatchStatusTextPlayer) == 0x000004, "Wrong alignment on AthenaMatchStatusTextPlayer_C_ExecuteUbergraph_AthenaMatchStatusTextPlayer");
static_assert(sizeof(AthenaMatchStatusTextPlayer_C_ExecuteUbergraph_AthenaMatchStatusTextPlayer) == 0x000008, "Wrong size on AthenaMatchStatusTextPlayer_C_ExecuteUbergraph_AthenaMatchStatusTextPlayer");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_ExecuteUbergraph_AthenaMatchStatusTextPlayer, EntryPoint) == 0x000000, "Member 'AthenaMatchStatusTextPlayer_C_ExecuteUbergraph_AthenaMatchStatusTextPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_ExecuteUbergraph_AthenaMatchStatusTextPlayer, K2Node_Event_IsDesignTime) == 0x000004, "Member 'AthenaMatchStatusTextPlayer_C_ExecuteUbergraph_AthenaMatchStatusTextPlayer::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function AthenaMatchStatusTextPlayer.AthenaMatchStatusTextPlayer_C.GetFont
// 0x0050 (0x0050 - 0x0000)
struct AthenaMatchStatusTextPlayer_C_GetFont final
{
public:
	struct FSlateFontInfo                         Output;                                            // 0x0000(0x0050)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMatchStatusTextPlayer_C_GetFont) == 0x000008, "Wrong alignment on AthenaMatchStatusTextPlayer_C_GetFont");
static_assert(sizeof(AthenaMatchStatusTextPlayer_C_GetFont) == 0x000050, "Wrong size on AthenaMatchStatusTextPlayer_C_GetFont");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_GetFont, Output) == 0x000000, "Member 'AthenaMatchStatusTextPlayer_C_GetFont::Output' has a wrong offset!");

// Function AthenaMatchStatusTextPlayer.AthenaMatchStatusTextPlayer_C.HighlightMaterialControl
// 0x00F0 (0x00F0 - 0x0000)
struct AthenaMatchStatusTextPlayer_C_HighlightMaterialControl final
{
public:
	struct FSlateFontInfo                         NewLocalVar_0;                                     // 0x0000(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0050(0x0050)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x00A0(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(AthenaMatchStatusTextPlayer_C_HighlightMaterialControl) == 0x000008, "Wrong alignment on AthenaMatchStatusTextPlayer_C_HighlightMaterialControl");
static_assert(sizeof(AthenaMatchStatusTextPlayer_C_HighlightMaterialControl) == 0x0000F0, "Wrong size on AthenaMatchStatusTextPlayer_C_HighlightMaterialControl");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_HighlightMaterialControl, NewLocalVar_0) == 0x000000, "Member 'AthenaMatchStatusTextPlayer_C_HighlightMaterialControl::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_HighlightMaterialControl, K2Node_MakeStruct_SlateFontInfo) == 0x000050, "Member 'AthenaMatchStatusTextPlayer_C_HighlightMaterialControl::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_HighlightMaterialControl, K2Node_MakeStruct_SlateFontInfo_1) == 0x0000A0, "Member 'AthenaMatchStatusTextPlayer_C_HighlightMaterialControl::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");

// Function AthenaMatchStatusTextPlayer.AthenaMatchStatusTextPlayer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaMatchStatusTextPlayer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMatchStatusTextPlayer_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaMatchStatusTextPlayer_C_PreConstruct");
static_assert(sizeof(AthenaMatchStatusTextPlayer_C_PreConstruct) == 0x000001, "Wrong size on AthenaMatchStatusTextPlayer_C_PreConstruct");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaMatchStatusTextPlayer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaMatchStatusTextPlayer.AthenaMatchStatusTextPlayer_C.SetFont
// 0x0050 (0x0050 - 0x0000)
struct AthenaMatchStatusTextPlayer_C_SetFont final
{
public:
	struct FSlateFontInfo                         FontIn;                                            // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMatchStatusTextPlayer_C_SetFont) == 0x000008, "Wrong alignment on AthenaMatchStatusTextPlayer_C_SetFont");
static_assert(sizeof(AthenaMatchStatusTextPlayer_C_SetFont) == 0x000050, "Wrong size on AthenaMatchStatusTextPlayer_C_SetFont");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_SetFont, FontIn) == 0x000000, "Member 'AthenaMatchStatusTextPlayer_C_SetFont::FontIn' has a wrong offset!");

// Function AthenaMatchStatusTextPlayer.AthenaMatchStatusTextPlayer_C.SetOpacityAndColor
// 0x0014 (0x0014 - 0x0000)
struct AthenaMatchStatusTextPlayer_C_SetOpacityAndColor final
{
public:
	struct FSlateColor                            ColorIn;                                           // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AthenaMatchStatusTextPlayer_C_SetOpacityAndColor) == 0x000004, "Wrong alignment on AthenaMatchStatusTextPlayer_C_SetOpacityAndColor");
static_assert(sizeof(AthenaMatchStatusTextPlayer_C_SetOpacityAndColor) == 0x000014, "Wrong size on AthenaMatchStatusTextPlayer_C_SetOpacityAndColor");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_SetOpacityAndColor, ColorIn) == 0x000000, "Member 'AthenaMatchStatusTextPlayer_C_SetOpacityAndColor::ColorIn' has a wrong offset!");

// Function AthenaMatchStatusTextPlayer.AthenaMatchStatusTextPlayer_C.SetText
// 0x0020 (0x0020 - 0x0000)
struct AthenaMatchStatusTextPlayer_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ApplyImmediately;                                  // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMatchStatusTextPlayer_C_SetText) == 0x000008, "Wrong alignment on AthenaMatchStatusTextPlayer_C_SetText");
static_assert(sizeof(AthenaMatchStatusTextPlayer_C_SetText) == 0x000020, "Wrong size on AthenaMatchStatusTextPlayer_C_SetText");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_SetText, InText) == 0x000000, "Member 'AthenaMatchStatusTextPlayer_C_SetText::InText' has a wrong offset!");
static_assert(offsetof(AthenaMatchStatusTextPlayer_C_SetText, ApplyImmediately) == 0x000018, "Member 'AthenaMatchStatusTextPlayer_C_SetText::ApplyImmediately' has a wrong offset!");

}

