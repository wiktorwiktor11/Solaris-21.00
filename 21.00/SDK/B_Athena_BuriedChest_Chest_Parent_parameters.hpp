#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_BuriedChest_Chest_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function B_Athena_BuriedChest_Chest_Parent.B_Athena_BuriedChest_Chest_Parent_C.OnRep_ChestCurrentLoc
// 0x00E8 (0x00E8 - 0x0000)
struct B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentLoc final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0000(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentLoc) == 0x000008, "Wrong alignment on B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentLoc");
static_assert(sizeof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentLoc) == 0x0000E8, "Wrong size on B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentLoc");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentLoc, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000000, "Member 'B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentLoc::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentLoc, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000E0, "Member 'B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentLoc::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function B_Athena_BuriedChest_Chest_Parent.B_Athena_BuriedChest_Chest_Parent_C.OnRep_ChestCurrentRot
// 0x0001 (0x0001 - 0x0000)
struct B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentRot final
{
public:
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentRot) == 0x000001, "Wrong alignment on B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentRot");
static_assert(sizeof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentRot) == 0x000001, "Wrong size on B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentRot");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentRot, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000000, "Member 'B_Athena_BuriedChest_Chest_Parent_C_OnRep_ChestCurrentRot::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function B_Athena_BuriedChest_Chest_Parent.B_Athena_BuriedChest_Chest_Parent_C.OnRep_TimesDug
// 0x0008 (0x0008 - 0x0000)
struct B_Athena_BuriedChest_Chest_Parent_C_OnRep_TimesDug final
{
public:
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_TimesDug) == 0x000004, "Wrong alignment on B_Athena_BuriedChest_Chest_Parent_C_OnRep_TimesDug");
static_assert(sizeof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_TimesDug) == 0x000008, "Wrong size on B_Athena_BuriedChest_Chest_Parent_C_OnRep_TimesDug");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_TimesDug, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000000, "Member 'B_Athena_BuriedChest_Chest_Parent_C_OnRep_TimesDug::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_OnRep_TimesDug, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000004, "Member 'B_Athena_BuriedChest_Chest_Parent_C_OnRep_TimesDug::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function B_Athena_BuriedChest_Chest_Parent.B_Athena_BuriedChest_Chest_Parent_C.ShouldDie
// 0x0020 (0x0020 - 0x0000)
struct B_Athena_BuriedChest_Chest_Parent_C_ShouldDie final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            EventInstigator;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDie_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Athena_BuriedChest_Chest_Parent_C_ShouldDie) == 0x000008, "Wrong alignment on B_Athena_BuriedChest_Chest_Parent_C_ShouldDie");
static_assert(sizeof(B_Athena_BuriedChest_Chest_Parent_C_ShouldDie) == 0x000020, "Wrong size on B_Athena_BuriedChest_Chest_Parent_C_ShouldDie");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_ShouldDie, Damage) == 0x000000, "Member 'B_Athena_BuriedChest_Chest_Parent_C_ShouldDie::Damage' has a wrong offset!");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_ShouldDie, EventInstigator) == 0x000008, "Member 'B_Athena_BuriedChest_Chest_Parent_C_ShouldDie::EventInstigator' has a wrong offset!");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_ShouldDie, DamageCauser) == 0x000010, "Member 'B_Athena_BuriedChest_Chest_Parent_C_ShouldDie::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_ShouldDie, ReturnValue) == 0x000018, "Member 'B_Athena_BuriedChest_Chest_Parent_C_ShouldDie::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_ShouldDie, CallFunc_ShouldDie_ReturnValue) == 0x000019, "Member 'B_Athena_BuriedChest_Chest_Parent_C_ShouldDie::CallFunc_ShouldDie_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_ShouldDie, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'B_Athena_BuriedChest_Chest_Parent_C_ShouldDie::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_Athena_BuriedChest_Chest_Parent.B_Athena_BuriedChest_Chest_Parent_C.BlueprintCanInteract
// 0x0010 (0x0010 - 0x0000)
struct B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             InteractionType;                                   // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract) == 0x000008, "Wrong alignment on B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract");
static_assert(sizeof(B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract) == 0x000010, "Wrong size on B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract, InteractionBeingAttempted) == 0x000008, "Member 'B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract, InteractionType) == 0x000009, "Member 'B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract, ReturnValue) == 0x00000A, "Member 'B_Athena_BuriedChest_Chest_Parent_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");

}

