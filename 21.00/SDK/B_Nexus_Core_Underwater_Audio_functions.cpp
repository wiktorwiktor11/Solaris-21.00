#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Nexus_Core_Underwater_Audio

#include "Basic.hpp"

#include "B_Nexus_Core_Underwater_Audio_classes.hpp"
#include "B_Nexus_Core_Underwater_Audio_parameters.hpp"


namespace SDK
{

// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.AssignLocalPC
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Nexus_Core_Underwater_Audio_C::AssignLocalPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "AssignLocalPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.BndEvt__B_Nexus_Core_Underwater_Audio_AudioBelowHaptics_K2Node_ComponentBoundEvent_0_OnAudioMultiEnvelopeValue__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   AverageEnvelopeValue                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxEnvelope                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumWaveInstances                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Nexus_Core_Underwater_Audio_C::BndEvt__B_Nexus_Core_Underwater_Audio_AudioBelowHaptics_K2Node_ComponentBoundEvent_0_OnAudioMultiEnvelopeValue__DelegateSignature(const float AverageEnvelopeValue, const float MaxEnvelope, const int32 NumWaveInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "BndEvt__B_Nexus_Core_Underwater_Audio_AudioBelowHaptics_K2Node_ComponentBoundEvent_0_OnAudioMultiEnvelopeValue__DelegateSignature");

	Params::B_Nexus_Core_Underwater_Audio_C_BndEvt__B_Nexus_Core_Underwater_Audio_AudioBelowHaptics_K2Node_ComponentBoundEvent_0_OnAudioMultiEnvelopeValue__DelegateSignature Parms{};

	Parms.AverageEnvelopeValue = AverageEnvelopeValue;
	Parms.MaxEnvelope = MaxEnvelope;
	Parms.NumWaveInstances = NumWaveInstances;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.BndEvt__B_RealityForest_ZP_Controller_AudioGameplayVolumeProxy_K2Node_ComponentBoundEvent_0_OnAudioGameplayVolumeProxyStateChange__DelegateSignature
// (BlueprintEvent)

void AB_Nexus_Core_Underwater_Audio_C::BndEvt__B_RealityForest_ZP_Controller_AudioGameplayVolumeProxy_K2Node_ComponentBoundEvent_0_OnAudioGameplayVolumeProxyStateChange__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "BndEvt__B_RealityForest_ZP_Controller_AudioGameplayVolumeProxy_K2Node_ComponentBoundEvent_0_OnAudioGameplayVolumeProxyStateChange__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.BndEvt__B_RealityForest_ZP_Controller_AudioGameplayVolumeProxy_K2Node_ComponentBoundEvent_1_OnAudioGameplayVolumeProxyStateChange__DelegateSignature
// (BlueprintEvent)

void AB_Nexus_Core_Underwater_Audio_C::BndEvt__B_RealityForest_ZP_Controller_AudioGameplayVolumeProxy_K2Node_ComponentBoundEvent_1_OnAudioGameplayVolumeProxyStateChange__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "BndEvt__B_RealityForest_ZP_Controller_AudioGameplayVolumeProxy_K2Node_ComponentBoundEvent_1_OnAudioGameplayVolumeProxyStateChange__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.Crossfade__FinishedFunc
// (BlueprintEvent)

void AB_Nexus_Core_Underwater_Audio_C::Crossfade__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "Crossfade__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.Crossfade__UpdateFunc
// (BlueprintEvent)

void AB_Nexus_Core_Underwater_Audio_C::Crossfade__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "Crossfade__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.ExecuteUbergraph_B_Nexus_Core_Underwater_Audio
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Nexus_Core_Underwater_Audio_C::ExecuteUbergraph_B_Nexus_Core_Underwater_Audio(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "ExecuteUbergraph_B_Nexus_Core_Underwater_Audio");

	Params::B_Nexus_Core_Underwater_Audio_C_ExecuteUbergraph_B_Nexus_Core_Underwater_Audio Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.Start Rumble
// (BlueprintCallable, BlueprintEvent)

void AB_Nexus_Core_Underwater_Audio_C::Start_Rumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "Start Rumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.Stop Rumble
// (BlueprintCallable, BlueprintEvent)

void AB_Nexus_Core_Underwater_Audio_C::Stop_Rumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "Stop Rumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.ConditionMet
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AB_Nexus_Core_Underwater_Audio_C::ConditionMet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "ConditionMet");

	Params::B_Nexus_Core_Underwater_Audio_C_ConditionMet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_Nexus_Core_Underwater_Audio.B_Nexus_Core_Underwater_Audio_C.ConditionMet_Position
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Position                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AB_Nexus_Core_Underwater_Audio_C::ConditionMet_Position(const struct FVector& Position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Nexus_Core_Underwater_Audio_C", "ConditionMet_Position");

	Params::B_Nexus_Core_Underwater_Audio_C_ConditionMet_Position Parms{};

	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

