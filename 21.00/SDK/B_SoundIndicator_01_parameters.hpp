#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SoundIndicator_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_SoundIndicator_01.B_SoundIndicator_01_C.ExecuteUbergraph_B_SoundIndicator_01
// 0x0004 (0x0004 - 0x0000)
struct B_SoundIndicator_01_C_ExecuteUbergraph_B_SoundIndicator_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SoundIndicator_01_C_ExecuteUbergraph_B_SoundIndicator_01) == 0x000004, "Wrong alignment on B_SoundIndicator_01_C_ExecuteUbergraph_B_SoundIndicator_01");
static_assert(sizeof(B_SoundIndicator_01_C_ExecuteUbergraph_B_SoundIndicator_01) == 0x000004, "Wrong size on B_SoundIndicator_01_C_ExecuteUbergraph_B_SoundIndicator_01");
static_assert(offsetof(B_SoundIndicator_01_C_ExecuteUbergraph_B_SoundIndicator_01, EntryPoint) == 0x000000, "Member 'B_SoundIndicator_01_C_ExecuteUbergraph_B_SoundIndicator_01::EntryPoint' has a wrong offset!");

// Function B_SoundIndicator_01.B_SoundIndicator_01_C.GetDefaultIcon
// 0x0060 (0x0060 - 0x0000)
struct B_SoundIndicator_01_C_GetDefaultIcon final
{
public:
	class UTexture*                               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortSoundIndicatorTypes                      Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SoundIndicator_01_C_GetDefaultIcon) == 0x000008, "Wrong alignment on B_SoundIndicator_01_C_GetDefaultIcon");
static_assert(sizeof(B_SoundIndicator_01_C_GetDefaultIcon) == 0x000060, "Wrong size on B_SoundIndicator_01_C_GetDefaultIcon");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, ReturnValue) == 0x000000, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, Temp_byte_Variable) == 0x000008, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, Temp_object_Variable) == 0x000010, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, Temp_object_Variable_1) == 0x000018, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, Temp_object_Variable_2) == 0x000020, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, Temp_object_Variable_3) == 0x000028, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, Temp_object_Variable_4) == 0x000030, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, Temp_object_Variable_5) == 0x000038, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, Temp_object_Variable_6) == 0x000040, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, Temp_object_Variable_7) == 0x000048, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, Temp_object_Variable_8) == 0x000050, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultIcon, K2Node_Select_Default) == 0x000058, "Member 'B_SoundIndicator_01_C_GetDefaultIcon::K2Node_Select_Default' has a wrong offset!");

// Function B_SoundIndicator_01.B_SoundIndicator_01_C.GetDefaultTint
// 0x00B4 (0x00B4 - 0x0000)
struct B_SoundIndicator_01_C_GetDefaultTint final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortSoundIndicatorTypes                      Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SoundIndicator_01_C_GetDefaultTint) == 0x000004, "Wrong alignment on B_SoundIndicator_01_C_GetDefaultTint");
static_assert(sizeof(B_SoundIndicator_01_C_GetDefaultTint) == 0x0000B4, "Wrong size on B_SoundIndicator_01_C_GetDefaultTint");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, ReturnValue) == 0x000000, "Member 'B_SoundIndicator_01_C_GetDefaultTint::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, Temp_byte_Variable) == 0x000010, "Member 'B_SoundIndicator_01_C_GetDefaultTint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, Temp_struct_Variable) == 0x000014, "Member 'B_SoundIndicator_01_C_GetDefaultTint::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, Temp_struct_Variable_1) == 0x000024, "Member 'B_SoundIndicator_01_C_GetDefaultTint::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, Temp_struct_Variable_2) == 0x000034, "Member 'B_SoundIndicator_01_C_GetDefaultTint::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, Temp_struct_Variable_3) == 0x000044, "Member 'B_SoundIndicator_01_C_GetDefaultTint::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, Temp_struct_Variable_4) == 0x000054, "Member 'B_SoundIndicator_01_C_GetDefaultTint::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, Temp_struct_Variable_5) == 0x000064, "Member 'B_SoundIndicator_01_C_GetDefaultTint::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, Temp_struct_Variable_6) == 0x000074, "Member 'B_SoundIndicator_01_C_GetDefaultTint::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, Temp_struct_Variable_7) == 0x000084, "Member 'B_SoundIndicator_01_C_GetDefaultTint::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, Temp_struct_Variable_8) == 0x000094, "Member 'B_SoundIndicator_01_C_GetDefaultTint::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetDefaultTint, K2Node_Select_Default) == 0x0000A4, "Member 'B_SoundIndicator_01_C_GetDefaultTint::K2Node_Select_Default' has a wrong offset!");

// Function B_SoundIndicator_01.B_SoundIndicator_01_C.GetStrengthCurveForActiveType
// 0x0228 (0x0228 - 0x0000)
struct B_SoundIndicator_01_C_GetStrengthCurveForActiveType final
{
public:
	struct FRuntimeFloatCurve                     ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	EFortSoundIndicatorTypes                      Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     Temp_struct_Variable;                              // 0x0090(0x0088)()
	struct FRuntimeFloatCurve                     CallFunc_GetWeaponCurve_ReturnValue;               // 0x0118(0x0088)()
	struct FRuntimeFloatCurve                     K2Node_Select_Default;                             // 0x01A0(0x0088)()
};
static_assert(alignof(B_SoundIndicator_01_C_GetStrengthCurveForActiveType) == 0x000008, "Wrong alignment on B_SoundIndicator_01_C_GetStrengthCurveForActiveType");
static_assert(sizeof(B_SoundIndicator_01_C_GetStrengthCurveForActiveType) == 0x000228, "Wrong size on B_SoundIndicator_01_C_GetStrengthCurveForActiveType");
static_assert(offsetof(B_SoundIndicator_01_C_GetStrengthCurveForActiveType, ReturnValue) == 0x000000, "Member 'B_SoundIndicator_01_C_GetStrengthCurveForActiveType::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetStrengthCurveForActiveType, Temp_byte_Variable) == 0x000088, "Member 'B_SoundIndicator_01_C_GetStrengthCurveForActiveType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetStrengthCurveForActiveType, Temp_struct_Variable) == 0x000090, "Member 'B_SoundIndicator_01_C_GetStrengthCurveForActiveType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetStrengthCurveForActiveType, CallFunc_GetWeaponCurve_ReturnValue) == 0x000118, "Member 'B_SoundIndicator_01_C_GetStrengthCurveForActiveType::CallFunc_GetWeaponCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetStrengthCurveForActiveType, K2Node_Select_Default) == 0x0001A0, "Member 'B_SoundIndicator_01_C_GetStrengthCurveForActiveType::K2Node_Select_Default' has a wrong offset!");

// Function B_SoundIndicator_01.B_SoundIndicator_01_C.GetWeaponCurve
// 0x01A0 (0x01A0 - 0x0000)
struct B_SoundIndicator_01_C_GetWeaponCurve final
{
public:
	struct FRuntimeFloatCurve                     ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     K2Node_Select_Default;                             // 0x0090(0x0088)()
	struct FRuntimeFloatCurve                     K2Node_Select_Default_1;                           // 0x0118(0x0088)()
};
static_assert(alignof(B_SoundIndicator_01_C_GetWeaponCurve) == 0x000008, "Wrong alignment on B_SoundIndicator_01_C_GetWeaponCurve");
static_assert(sizeof(B_SoundIndicator_01_C_GetWeaponCurve) == 0x0001A0, "Wrong size on B_SoundIndicator_01_C_GetWeaponCurve");
static_assert(offsetof(B_SoundIndicator_01_C_GetWeaponCurve, ReturnValue) == 0x000000, "Member 'B_SoundIndicator_01_C_GetWeaponCurve::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetWeaponCurve, Temp_bool_Variable) == 0x000088, "Member 'B_SoundIndicator_01_C_GetWeaponCurve::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetWeaponCurve, Temp_bool_Variable_1) == 0x000089, "Member 'B_SoundIndicator_01_C_GetWeaponCurve::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetWeaponCurve, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00008A, "Member 'B_SoundIndicator_01_C_GetWeaponCurve::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetWeaponCurve, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00008B, "Member 'B_SoundIndicator_01_C_GetWeaponCurve::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetWeaponCurve, K2Node_Select_Default) == 0x000090, "Member 'B_SoundIndicator_01_C_GetWeaponCurve::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_SoundIndicator_01_C_GetWeaponCurve, K2Node_Select_Default_1) == 0x000118, "Member 'B_SoundIndicator_01_C_GetWeaponCurve::K2Node_Select_Default_1' has a wrong offset!");

}

