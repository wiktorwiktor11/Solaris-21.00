#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryItemStatEntry

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function AthenaInventoryItemStatEntry.AthenaInventoryItemStatEntry_C.ExecuteUbergraph_AthenaInventoryItemStatEntry
// 0x00C0 (0x00C0 - 0x0000)
struct AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   K2Node_Event_ItemRarity;                           // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    K2Node_Event_RarityItemData;                       // 0x0018(0x0080)(ConstParm)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Value;                                // 0x00A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ComparisonValue;                      // 0x00A4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MinValue;                             // 0x00A8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxValue;                             // 0x00AC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry) == 0x000008, "Wrong alignment on AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry");
static_assert(sizeof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry) == 0x0000C0, "Wrong size on AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, EntryPoint) == 0x000000, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, K2Node_Event_ItemRarity) == 0x000010, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::K2Node_Event_ItemRarity' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, K2Node_Event_RarityItemData) == 0x000018, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::K2Node_Event_RarityItemData' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000098, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, K2Node_Event_Value) == 0x0000A0, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, K2Node_Event_ComparisonValue) == 0x0000A4, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::K2Node_Event_ComparisonValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, K2Node_Event_MinValue) == 0x0000A8, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::K2Node_Event_MinValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, K2Node_Event_MaxValue) == 0x0000AC, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::K2Node_Event_MaxValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, CallFunc_MapRangeClamped_ReturnValue) == 0x0000B0, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000B4, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry, CallFunc_SelectFloat_ReturnValue_1) == 0x0000BC, "Member 'AthenaInventoryItemStatEntry_C_ExecuteUbergraph_AthenaInventoryItemStatEntry::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function AthenaInventoryItemStatEntry.AthenaInventoryItemStatEntry_C.OnItemRaritySet
// 0x0088 (0x0088 - 0x0000)
struct AthenaInventoryItemStatEntry_C_OnItemRaritySet final
{
public:
	EFortRarity                                   ItemRarity;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    RarityItemData;                                    // 0x0008(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AthenaInventoryItemStatEntry_C_OnItemRaritySet) == 0x000008, "Wrong alignment on AthenaInventoryItemStatEntry_C_OnItemRaritySet");
static_assert(sizeof(AthenaInventoryItemStatEntry_C_OnItemRaritySet) == 0x000088, "Wrong size on AthenaInventoryItemStatEntry_C_OnItemRaritySet");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_OnItemRaritySet, ItemRarity) == 0x000000, "Member 'AthenaInventoryItemStatEntry_C_OnItemRaritySet::ItemRarity' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_OnItemRaritySet, RarityItemData) == 0x000008, "Member 'AthenaInventoryItemStatEntry_C_OnItemRaritySet::RarityItemData' has a wrong offset!");

// Function AthenaInventoryItemStatEntry.AthenaInventoryItemStatEntry_C.OnStatInitialized
// 0x0010 (0x0010 - 0x0000)
struct AthenaInventoryItemStatEntry_C_OnStatInitialized final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ComparisonValue;                                   // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinValue;                                          // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x000C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryItemStatEntry_C_OnStatInitialized) == 0x000004, "Wrong alignment on AthenaInventoryItemStatEntry_C_OnStatInitialized");
static_assert(sizeof(AthenaInventoryItemStatEntry_C_OnStatInitialized) == 0x000010, "Wrong size on AthenaInventoryItemStatEntry_C_OnStatInitialized");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_OnStatInitialized, Value) == 0x000000, "Member 'AthenaInventoryItemStatEntry_C_OnStatInitialized::Value' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_OnStatInitialized, ComparisonValue) == 0x000004, "Member 'AthenaInventoryItemStatEntry_C_OnStatInitialized::ComparisonValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_OnStatInitialized, MinValue) == 0x000008, "Member 'AthenaInventoryItemStatEntry_C_OnStatInitialized::MinValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemStatEntry_C_OnStatInitialized, MaxValue) == 0x00000C, "Member 'AthenaInventoryItemStatEntry_C_OnStatInitialized::MaxValue' has a wrong offset!");

}

