#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MoleUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum MoleUI.EMoleQuickChatTokenState
// NumValues: 0x0006
enum class EMoleQuickChatTokenState : uint32
{
	None                                     = 0,
	AnyPlayer                                = 1,
	AlivePlayer                              = 2,
	DeadPlayer                               = 3,
	Location                                 = 4,
	EMoleQuickChatTokenState_MAX             = 5,
};

// Enum MoleUI.EMoleQuickChatPreviousState
// NumValues: 0x0003
enum class EMoleQuickChatPreviousState : uint8
{
	Filled                                   = 0,
	Skipped                                  = 1,
	EMoleQuickChatPreviousState_MAX          = 2,
};

// ScriptStruct MoleUI.MoleAbilityUIData
// 0x0050 (0x0058 - 0x0008)
struct FMoleAbilityUIData final : public FTableRowBase
{
public:
	class UObject*                                Icon;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0010(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   HUDText;                                           // 0x0028(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   HUDSubText;                                        // 0x0040(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMoleAbilityUIData) == 0x000008, "Wrong alignment on FMoleAbilityUIData");
static_assert(sizeof(FMoleAbilityUIData) == 0x000058, "Wrong size on FMoleAbilityUIData");
static_assert(offsetof(FMoleAbilityUIData, Icon) == 0x000008, "Member 'FMoleAbilityUIData::Icon' has a wrong offset!");
static_assert(offsetof(FMoleAbilityUIData, DisplayName) == 0x000010, "Member 'FMoleAbilityUIData::DisplayName' has a wrong offset!");
static_assert(offsetof(FMoleAbilityUIData, HUDText) == 0x000028, "Member 'FMoleAbilityUIData::HUDText' has a wrong offset!");
static_assert(offsetof(FMoleAbilityUIData, HUDSubText) == 0x000040, "Member 'FMoleAbilityUIData::HUDSubText' has a wrong offset!");

// ScriptStruct MoleUI.MoleLocationData
// 0x0030 (0x0038 - 0x0008)
struct FMoleLocationData final : public FTableRowBase
{
public:
	class FText                                   Name;                                              // 0x0008(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   QuickChatName;                                     // 0x0020(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMoleLocationData) == 0x000008, "Wrong alignment on FMoleLocationData");
static_assert(sizeof(FMoleLocationData) == 0x000038, "Wrong size on FMoleLocationData");
static_assert(offsetof(FMoleLocationData, Name) == 0x000008, "Member 'FMoleLocationData::Name' has a wrong offset!");
static_assert(offsetof(FMoleLocationData, QuickChatName) == 0x000020, "Member 'FMoleLocationData::QuickChatName' has a wrong offset!");

// ScriptStruct MoleUI.MolePlayerUIData
// 0x0008 (0x0010 - 0x0008)
struct FMolePlayerUIData final : public FTableRowBase
{
public:
	struct FColor                                 Color;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DecoratorID;                                       // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMolePlayerUIData) == 0x000008, "Wrong alignment on FMolePlayerUIData");
static_assert(sizeof(FMolePlayerUIData) == 0x000010, "Wrong size on FMolePlayerUIData");
static_assert(offsetof(FMolePlayerUIData, Color) == 0x000008, "Member 'FMolePlayerUIData::Color' has a wrong offset!");
static_assert(offsetof(FMolePlayerUIData, DecoratorID) == 0x00000C, "Member 'FMolePlayerUIData::DecoratorID' has a wrong offset!");

// ScriptStruct MoleUI.MoleQuickChatMessageData
// 0x0038 (0x0040 - 0x0008)
struct FMoleQuickChatMessageData final : public FTableRowBase
{
public:
	class FText                                   Message;                                           // 0x0008(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   SelfMessage;                                       // 0x0020(0x0018)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMoleQuickChatMessageData) == 0x000008, "Wrong alignment on FMoleQuickChatMessageData");
static_assert(sizeof(FMoleQuickChatMessageData) == 0x000040, "Wrong size on FMoleQuickChatMessageData");
static_assert(offsetof(FMoleQuickChatMessageData, Message) == 0x000008, "Member 'FMoleQuickChatMessageData::Message' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatMessageData, SelfMessage) == 0x000020, "Member 'FMoleQuickChatMessageData::SelfMessage' has a wrong offset!");

// ScriptStruct MoleUI.MoleQuickChatStepData
// 0x0030 (0x0038 - 0x0008)
struct FMoleQuickChatStepData final : public FTableRowBase
{
public:
	class FText                                   Text;                                              // 0x0008(0x0018)(Edit, NativeAccessSpecifierPublic)
	bool                                          bIsRequired;                                       // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EMoleQuickChatTokenState                      TokenType;                                         // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<EMoleQuickChatPreviousState>           PreviousTokenStates;                               // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMoleQuickChatStepData) == 0x000008, "Wrong alignment on FMoleQuickChatStepData");
static_assert(sizeof(FMoleQuickChatStepData) == 0x000038, "Wrong size on FMoleQuickChatStepData");
static_assert(offsetof(FMoleQuickChatStepData, Text) == 0x000008, "Member 'FMoleQuickChatStepData::Text' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatStepData, bIsRequired) == 0x000020, "Member 'FMoleQuickChatStepData::bIsRequired' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatStepData, TokenType) == 0x000024, "Member 'FMoleQuickChatStepData::TokenType' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatStepData, PreviousTokenStates) == 0x000028, "Member 'FMoleQuickChatStepData::PreviousTokenStates' has a wrong offset!");

// ScriptStruct MoleUI.MoleQuickChatActionData
// 0x0048 (0x0050 - 0x0008)
struct FMoleQuickChatActionData final : public FTableRowBase
{
public:
	class FText                                   ActionName;                                        // 0x0008(0x0018)(Edit, NativeAccessSpecifierPublic)
	bool                                          OmitSelf;                                          // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMoleQuickChatStepData>         Steps;                                             // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMoleQuickChatMessageData>      Messages;                                          // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMoleQuickChatActionData) == 0x000008, "Wrong alignment on FMoleQuickChatActionData");
static_assert(sizeof(FMoleQuickChatActionData) == 0x000050, "Wrong size on FMoleQuickChatActionData");
static_assert(offsetof(FMoleQuickChatActionData, ActionName) == 0x000008, "Member 'FMoleQuickChatActionData::ActionName' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatActionData, OmitSelf) == 0x000020, "Member 'FMoleQuickChatActionData::OmitSelf' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatActionData, Steps) == 0x000028, "Member 'FMoleQuickChatActionData::Steps' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatActionData, Messages) == 0x000038, "Member 'FMoleQuickChatActionData::Messages' has a wrong offset!");

// ScriptStruct MoleUI.MoleQuickChatCategoryData
// 0x0060 (0x0068 - 0x0008)
struct FMoleQuickChatCategoryData final : public FTableRowBase
{
public:
	class FText                                   CategoryName;                                      // 0x0008(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                           CategoryColor;                                     // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              CategoryImage;                                     // 0x0030(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMoleQuickChatActionData>       Actions;                                           // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMoleQuickChatCategoryData) == 0x000008, "Wrong alignment on FMoleQuickChatCategoryData");
static_assert(sizeof(FMoleQuickChatCategoryData) == 0x000068, "Wrong size on FMoleQuickChatCategoryData");
static_assert(offsetof(FMoleQuickChatCategoryData, CategoryName) == 0x000008, "Member 'FMoleQuickChatCategoryData::CategoryName' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatCategoryData, CategoryColor) == 0x000020, "Member 'FMoleQuickChatCategoryData::CategoryColor' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatCategoryData, CategoryImage) == 0x000030, "Member 'FMoleQuickChatCategoryData::CategoryImage' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatCategoryData, Actions) == 0x000058, "Member 'FMoleQuickChatCategoryData::Actions' has a wrong offset!");

// ScriptStruct MoleUI.MoleQuickChatData
// 0x0010 (0x0018 - 0x0008)
struct FMoleQuickChatData final : public FTableRowBase
{
public:
	TArray<struct FMoleQuickChatCategoryData>     Categories;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMoleQuickChatData) == 0x000008, "Wrong alignment on FMoleQuickChatData");
static_assert(sizeof(FMoleQuickChatData) == 0x000018, "Wrong size on FMoleQuickChatData");
static_assert(offsetof(FMoleQuickChatData, Categories) == 0x000008, "Member 'FMoleQuickChatData::Categories' has a wrong offset!");

// ScriptStruct MoleUI.MoleQuickChatSelection
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FMoleQuickChatSelection final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMoleQuickChatSelection) == 0x000008, "Wrong alignment on FMoleQuickChatSelection");
static_assert(sizeof(FMoleQuickChatSelection) == 0x000020, "Wrong size on FMoleQuickChatSelection");

// ScriptStruct MoleUI.MoleQuickChatRawMessage
// 0x0040 (0x0040 - 0x0000)
struct FMoleQuickChatRawMessage final
{
public:
	class APlayerState*                           Sender;                                            // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   RawMessage;                                        // 0x0008(0x0018)(Transient, NativeAccessSpecifierPublic)
	struct FMoleQuickChatSelection                Selection;                                         // 0x0020(0x0020)(Transient, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMoleQuickChatRawMessage) == 0x000008, "Wrong alignment on FMoleQuickChatRawMessage");
static_assert(sizeof(FMoleQuickChatRawMessage) == 0x000040, "Wrong size on FMoleQuickChatRawMessage");
static_assert(offsetof(FMoleQuickChatRawMessage, Sender) == 0x000000, "Member 'FMoleQuickChatRawMessage::Sender' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatRawMessage, RawMessage) == 0x000008, "Member 'FMoleQuickChatRawMessage::RawMessage' has a wrong offset!");
static_assert(offsetof(FMoleQuickChatRawMessage, Selection) == 0x000020, "Member 'FMoleQuickChatRawMessage::Selection' has a wrong offset!");

// ScriptStruct MoleUI.MoleTaskObjectiveUIInfo
// 0x0020 (0x0020 - 0x0000)
struct FMoleTaskObjectiveUIInfo final
{
public:
	class FText                                   ObjectiveText;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         CurrentValue;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetValue;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMoleTaskObjectiveUIInfo) == 0x000008, "Wrong alignment on FMoleTaskObjectiveUIInfo");
static_assert(sizeof(FMoleTaskObjectiveUIInfo) == 0x000020, "Wrong size on FMoleTaskObjectiveUIInfo");
static_assert(offsetof(FMoleTaskObjectiveUIInfo, ObjectiveText) == 0x000000, "Member 'FMoleTaskObjectiveUIInfo::ObjectiveText' has a wrong offset!");
static_assert(offsetof(FMoleTaskObjectiveUIInfo, CurrentValue) == 0x000018, "Member 'FMoleTaskObjectiveUIInfo::CurrentValue' has a wrong offset!");
static_assert(offsetof(FMoleTaskObjectiveUIInfo, TargetValue) == 0x00001C, "Member 'FMoleTaskObjectiveUIInfo::TargetValue' has a wrong offset!");

// ScriptStruct MoleUI.MoleVotingPlayerInfo
// 0x0010 (0x0010 - 0x0000)
struct FMoleVotingPlayerInfo final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                    PlayerItemDefinition;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMoleVotingPlayerInfo) == 0x000008, "Wrong alignment on FMoleVotingPlayerInfo");
static_assert(sizeof(FMoleVotingPlayerInfo) == 0x000010, "Wrong size on FMoleVotingPlayerInfo");
static_assert(offsetof(FMoleVotingPlayerInfo, PlayerState) == 0x000000, "Member 'FMoleVotingPlayerInfo::PlayerState' has a wrong offset!");
static_assert(offsetof(FMoleVotingPlayerInfo, PlayerItemDefinition) == 0x000008, "Member 'FMoleVotingPlayerInfo::PlayerItemDefinition' has a wrong offset!");

}

