#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MultiInteractActorComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_0_structs.hpp"


namespace SDK::Params
{

// Function MultiInteractActorComponent.MultiInteractActorComponent_C.AddGCNL
// 0x0108 (0x0108 - 0x0000)
struct MultiInteractActorComponent_C_AddGCNL final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInteractingActorCount_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0030(0x00D0)(ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MultiInteractActorComponent_C_AddGCNL) == 0x000008, "Wrong alignment on MultiInteractActorComponent_C_AddGCNL");
static_assert(sizeof(MultiInteractActorComponent_C_AddGCNL) == 0x000108, "Wrong size on MultiInteractActorComponent_C_AddGCNL");
static_assert(offsetof(MultiInteractActorComponent_C_AddGCNL, Owner) == 0x000000, "Member 'MultiInteractActorComponent_C_AddGCNL::Owner' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_AddGCNL, CallFunc_GetInteractingActorCount_ReturnValue) == 0x000008, "Member 'MultiInteractActorComponent_C_AddGCNL::CallFunc_GetInteractingActorCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_AddGCNL, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'MultiInteractActorComponent_C_AddGCNL::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_AddGCNL, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'MultiInteractActorComponent_C_AddGCNL::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_AddGCNL, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'MultiInteractActorComponent_C_AddGCNL::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_AddGCNL, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000030, "Member 'MultiInteractActorComponent_C_AddGCNL::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_AddGCNL, CallFunc_GetOwner_ReturnValue) == 0x000100, "Member 'MultiInteractActorComponent_C_AddGCNL::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function MultiInteractActorComponent.MultiInteractActorComponent_C.ExecuteGCNFromTag
// 0x0118 (0x0118 - 0x0000)
struct MultiInteractActorComponent_C_ExecuteGCNFromTag final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           InteractTag;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousInteractPlayerCount;                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInteractingActorCount_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInteractionDuration_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0048(0x00D0)(ContainsInstancedReference)
};
static_assert(alignof(MultiInteractActorComponent_C_ExecuteGCNFromTag) == 0x000008, "Wrong alignment on MultiInteractActorComponent_C_ExecuteGCNFromTag");
static_assert(sizeof(MultiInteractActorComponent_C_ExecuteGCNFromTag) == 0x000118, "Wrong size on MultiInteractActorComponent_C_ExecuteGCNFromTag");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, PlayerPawn) == 0x000000, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::PlayerPawn' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, InteractTag) == 0x000008, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::InteractTag' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, PreviousInteractPlayerCount) == 0x00000C, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::PreviousInteractPlayerCount' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, CallFunc_GetInteractingActorCount_ReturnValue) == 0x000010, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::CallFunc_GetInteractingActorCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, CallFunc_GetInteractionDuration_ReturnValue) == 0x000040, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::CallFunc_GetInteractionDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, CallFunc_SafeDivide_ReturnValue) == 0x000044, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteGCNFromTag, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000048, "Member 'MultiInteractActorComponent_C_ExecuteGCNFromTag::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function MultiInteractActorComponent.MultiInteractActorComponent_C.ExecuteUbergraph_MultiInteractActorComponent
// 0x0048 (0x0048 - 0x0000)
struct MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInteractingActorCount_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AFortPlayerStateAthena*           K2Node_Event_JoinedPlayer;                         // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawnOrVehicleDriver_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AFortPlayerStateAthena*           K2Node_Event_LeftPlayer;                           // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawnOrVehicleDriver_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInteractingActorCount_ReturnValue_1;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent) == 0x000008, "Wrong alignment on MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent");
static_assert(sizeof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent) == 0x000048, "Wrong size on MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, EntryPoint) == 0x000000, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_GetInteractingActorCount_ReturnValue) == 0x000004, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_GetInteractingActorCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, K2Node_Event_JoinedPlayer) == 0x000008, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::K2Node_Event_JoinedPlayer' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_GetPlayerPawnOrVehicleDriver_ReturnValue) == 0x000018, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_GetPlayerPawnOrVehicleDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, K2Node_Event_LeftPlayer) == 0x000020, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::K2Node_Event_LeftPlayer' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_GetPlayerPawnOrVehicleDriver_ReturnValue_1) == 0x000028, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_GetPlayerPawnOrVehicleDriver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_IsLocallyControlled_ReturnValue) == 0x000030, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_GetInteractingActorCount_ReturnValue_1) == 0x000034, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_GetInteractingActorCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_BooleanAND_ReturnValue_1) == 0x000040, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent, CallFunc_BooleanAND_ReturnValue_2) == 0x000042, "Member 'MultiInteractActorComponent_C_ExecuteUbergraph_MultiInteractActorComponent::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function MultiInteractActorComponent.MultiInteractActorComponent_C.RemoveGCNL
// 0x00E8 (0x00E8 - 0x0000)
struct MultiInteractActorComponent_C_RemoveGCNL final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0008(0x00D0)(ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MultiInteractActorComponent_C_RemoveGCNL) == 0x000008, "Wrong alignment on MultiInteractActorComponent_C_RemoveGCNL");
static_assert(sizeof(MultiInteractActorComponent_C_RemoveGCNL) == 0x0000E8, "Wrong size on MultiInteractActorComponent_C_RemoveGCNL");
static_assert(offsetof(MultiInteractActorComponent_C_RemoveGCNL, Owner) == 0x000000, "Member 'MultiInteractActorComponent_C_RemoveGCNL::Owner' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_RemoveGCNL, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000008, "Member 'MultiInteractActorComponent_C_RemoveGCNL::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_RemoveGCNL, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'MultiInteractActorComponent_C_RemoveGCNL::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MultiInteractActorComponent_C_RemoveGCNL, CallFunc_GetOwner_ReturnValue) == 0x0000E0, "Member 'MultiInteractActorComponent_C_RemoveGCNL::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function MultiInteractActorComponent.MultiInteractActorComponent_C.SetRequiredDuration
// 0x0004 (0x0004 - 0x0000)
struct MultiInteractActorComponent_C_SetRequiredDuration final
{
public:
	float                                         NewRequiredDuration;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MultiInteractActorComponent_C_SetRequiredDuration) == 0x000004, "Wrong alignment on MultiInteractActorComponent_C_SetRequiredDuration");
static_assert(sizeof(MultiInteractActorComponent_C_SetRequiredDuration) == 0x000004, "Wrong size on MultiInteractActorComponent_C_SetRequiredDuration");
static_assert(offsetof(MultiInteractActorComponent_C_SetRequiredDuration, NewRequiredDuration) == 0x000000, "Member 'MultiInteractActorComponent_C_SetRequiredDuration::NewRequiredDuration' has a wrong offset!");

// Function MultiInteractActorComponent.MultiInteractActorComponent_C.UpdateForPlayerJustJoinedInteraction
// 0x0008 (0x0008 - 0x0000)
struct MultiInteractActorComponent_C_UpdateForPlayerJustJoinedInteraction final
{
public:
	const class AFortPlayerStateAthena*           JoinedPlayer;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MultiInteractActorComponent_C_UpdateForPlayerJustJoinedInteraction) == 0x000008, "Wrong alignment on MultiInteractActorComponent_C_UpdateForPlayerJustJoinedInteraction");
static_assert(sizeof(MultiInteractActorComponent_C_UpdateForPlayerJustJoinedInteraction) == 0x000008, "Wrong size on MultiInteractActorComponent_C_UpdateForPlayerJustJoinedInteraction");
static_assert(offsetof(MultiInteractActorComponent_C_UpdateForPlayerJustJoinedInteraction, JoinedPlayer) == 0x000000, "Member 'MultiInteractActorComponent_C_UpdateForPlayerJustJoinedInteraction::JoinedPlayer' has a wrong offset!");

// Function MultiInteractActorComponent.MultiInteractActorComponent_C.UpdateForPlayerJustLeftInteraction
// 0x0008 (0x0008 - 0x0000)
struct MultiInteractActorComponent_C_UpdateForPlayerJustLeftInteraction final
{
public:
	const class AFortPlayerStateAthena*           LeftPlayer;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MultiInteractActorComponent_C_UpdateForPlayerJustLeftInteraction) == 0x000008, "Wrong alignment on MultiInteractActorComponent_C_UpdateForPlayerJustLeftInteraction");
static_assert(sizeof(MultiInteractActorComponent_C_UpdateForPlayerJustLeftInteraction) == 0x000008, "Wrong size on MultiInteractActorComponent_C_UpdateForPlayerJustLeftInteraction");
static_assert(offsetof(MultiInteractActorComponent_C_UpdateForPlayerJustLeftInteraction, LeftPlayer) == 0x000000, "Member 'MultiInteractActorComponent_C_UpdateForPlayerJustLeftInteraction::LeftPlayer' has a wrong offset!");

}

