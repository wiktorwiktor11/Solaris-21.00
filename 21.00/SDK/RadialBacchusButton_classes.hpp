#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadialBacchusButton

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RadialBacchusButton.RadialBacchusButton_C
// 0x0078 (0x03E8 - 0x0370)
class URadialBacchusButton_C final : public URadialBacchusButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TapAnim;                                           // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               ButtonSizeBox;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Timer;                                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ImageSizeBox;                                      // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                TextTimeRemaining;                                 // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPaperSprite*                           DefaultIcon;                                       // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Pressed_Color;                                     // 0x03A8(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            Unpressed_Color;                                   // 0x03BC(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           VerifyCueCountTimerHandle;                         // 0x03D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CueCount;                                          // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BoostCue;                                          // 0x03DC(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ReloadingCue;                                      // 0x03E0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void ExecuteUbergraph_RadialBacchusButton(int32 EntryPoint);
	void HideSelf();
	void IsListenedTag(const struct FGameplayTag& MatchedTag, bool* Match);
	void OnCooldownCompleted();
	void OnCooldownStarted();
	void OnCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget);
	void ReceiveRadialProgressEvent_Blueprint(class FName EventName, EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void UpdateDuration_Blueprint(float Remaining, float Duration);
	void VerifyCueCountIsClear();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RadialBacchusButton_C">();
	}
	static class URadialBacchusButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URadialBacchusButton_C>();
	}
};
static_assert(alignof(URadialBacchusButton_C) == 0x000008, "Wrong alignment on URadialBacchusButton_C");
static_assert(sizeof(URadialBacchusButton_C) == 0x0003E8, "Wrong size on URadialBacchusButton_C");
static_assert(offsetof(URadialBacchusButton_C, UberGraphFrame) == 0x000370, "Member 'URadialBacchusButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, TapAnim) == 0x000378, "Member 'URadialBacchusButton_C::TapAnim' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, ButtonSizeBox) == 0x000380, "Member 'URadialBacchusButton_C::ButtonSizeBox' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, Image_Timer) == 0x000388, "Member 'URadialBacchusButton_C::Image_Timer' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, ImageSizeBox) == 0x000390, "Member 'URadialBacchusButton_C::ImageSizeBox' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, TextTimeRemaining) == 0x000398, "Member 'URadialBacchusButton_C::TextTimeRemaining' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, DefaultIcon) == 0x0003A0, "Member 'URadialBacchusButton_C::DefaultIcon' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, Pressed_Color) == 0x0003A8, "Member 'URadialBacchusButton_C::Pressed_Color' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, Unpressed_Color) == 0x0003BC, "Member 'URadialBacchusButton_C::Unpressed_Color' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, VerifyCueCountTimerHandle) == 0x0003D0, "Member 'URadialBacchusButton_C::VerifyCueCountTimerHandle' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, CueCount) == 0x0003D8, "Member 'URadialBacchusButton_C::CueCount' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, BoostCue) == 0x0003DC, "Member 'URadialBacchusButton_C::BoostCue' has a wrong offset!");
static_assert(offsetof(URadialBacchusButton_C, ReloadingCue) == 0x0003E0, "Member 'URadialBacchusButton_C::ReloadingCue' has a wrong offset!");

}

