#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveItem_Tall

#include "Basic.hpp"

#include "BattlePassBase_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ProgressiveItem_Tall.ProgressiveItem_Tall_C.BP_OnInitializeSetInfo
// 0x00A0 (0x00A0 - 0x0000)
struct ProgressiveItem_Tall_C_BP_OnInitializeSetInfo final
{
public:
	struct FProgressiveSetInfo                    InSetInfo;                                         // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   BottomText;                                        // 0x0068(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   BottomSubtext;                                     // 0x0080(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bSubscribed;                                       // 0x0098(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItem_Tall_C_BP_OnInitializeSetInfo) == 0x000008, "Wrong alignment on ProgressiveItem_Tall_C_BP_OnInitializeSetInfo");
static_assert(sizeof(ProgressiveItem_Tall_C_BP_OnInitializeSetInfo) == 0x0000A0, "Wrong size on ProgressiveItem_Tall_C_BP_OnInitializeSetInfo");
static_assert(offsetof(ProgressiveItem_Tall_C_BP_OnInitializeSetInfo, InSetInfo) == 0x000000, "Member 'ProgressiveItem_Tall_C_BP_OnInitializeSetInfo::InSetInfo' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_BP_OnInitializeSetInfo, BottomText) == 0x000068, "Member 'ProgressiveItem_Tall_C_BP_OnInitializeSetInfo::BottomText' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_BP_OnInitializeSetInfo, BottomSubtext) == 0x000080, "Member 'ProgressiveItem_Tall_C_BP_OnInitializeSetInfo::BottomSubtext' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_BP_OnInitializeSetInfo, bSubscribed) == 0x000098, "Member 'ProgressiveItem_Tall_C_BP_OnInitializeSetInfo::bSubscribed' has a wrong offset!");

// Function ProgressiveItem_Tall.ProgressiveItem_Tall_C.ExecuteUbergraph_ProgressiveItem_Tall
// 0x00A8 (0x00A8 - 0x0000)
struct ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressiveSetInfo                    K2Node_Event_InSetInfo;                            // 0x0008(0x0068)(ConstParm)
	class FText                                   K2Node_Event_BottomText;                           // 0x0070(0x0018)(ConstParm)
	class FText                                   K2Node_Event_BottomSubtext;                        // 0x0088(0x0018)(ConstParm)
	bool                                          K2Node_Event_bSubscribed;                          // 0x00A0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall) == 0x000008, "Wrong alignment on ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall");
static_assert(sizeof(ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall) == 0x0000A8, "Wrong size on ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall");
static_assert(offsetof(ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall, EntryPoint) == 0x000000, "Member 'ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall, K2Node_Event_InSetInfo) == 0x000008, "Member 'ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall::K2Node_Event_InSetInfo' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall, K2Node_Event_BottomText) == 0x000070, "Member 'ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall::K2Node_Event_BottomText' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall, K2Node_Event_BottomSubtext) == 0x000088, "Member 'ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall::K2Node_Event_BottomSubtext' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall, K2Node_Event_bSubscribed) == 0x0000A0, "Member 'ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall::K2Node_Event_bSubscribed' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall, K2Node_Event_IsDesignTime) == 0x0000A1, "Member 'ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall, CallFunc_Less_IntInt_ReturnValue) == 0x0000A2, "Member 'ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall, CallFunc_Not_PreBool_ReturnValue) == 0x0000A3, "Member 'ProgressiveItem_Tall_C_ExecuteUbergraph_ProgressiveItem_Tall::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ProgressiveItem_Tall.ProgressiveItem_Tall_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ProgressiveItem_Tall_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItem_Tall_C_PreConstruct) == 0x000001, "Wrong alignment on ProgressiveItem_Tall_C_PreConstruct");
static_assert(sizeof(ProgressiveItem_Tall_C_PreConstruct) == 0x000001, "Wrong size on ProgressiveItem_Tall_C_PreConstruct");
static_assert(offsetof(ProgressiveItem_Tall_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ProgressiveItem_Tall_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ProgressiveItem_Tall.ProgressiveItem_Tall_C.UpdateVisualState
// 0x0080 (0x0080 - 0x0000)
struct ProgressiveItem_Tall_C_UpdateVisualState final
{
public:
	bool                                          Hover;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Subbed;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Completed;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_4;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0014)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x005C(0x0014)()
	class UWidgetAnimation*                       K2Node_Select_Default_5;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItem_Tall_C_UpdateVisualState) == 0x000008, "Wrong alignment on ProgressiveItem_Tall_C_UpdateVisualState");
static_assert(sizeof(ProgressiveItem_Tall_C_UpdateVisualState) == 0x000080, "Wrong size on ProgressiveItem_Tall_C_UpdateVisualState");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Hover) == 0x000000, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Hover' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Subbed) == 0x000001, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Subbed' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Completed) == 0x000002, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Completed' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_bool_Variable) == 0x000003, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_byte_Variable) == 0x000004, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_byte_Variable_1) == 0x000005, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_bool_Variable_1) == 0x000006, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_bool_Variable_2) == 0x000007, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_byte_Variable_2) == 0x000008, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_byte_Variable_3) == 0x000009, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_bool_Variable_3) == 0x00000A, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_byte_Variable_4) == 0x00000B, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_byte_Variable_5) == 0x00000C, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_bool_Variable_4) == 0x00000D, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, Temp_bool_Variable_5) == 0x00000E, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, K2Node_Select_Default) == 0x00000F, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, K2Node_Select_Default_1) == 0x000010, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, K2Node_Select_Default_2) == 0x000011, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, K2Node_Select_Default_3) == 0x000012, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, K2Node_Select_Default_4) == 0x000018, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, CallFunc_SelectColor_ReturnValue_1) == 0x00004C, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, K2Node_MakeStruct_SlateColor_1) == 0x00005C, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, K2Node_Select_Default_5) == 0x000070, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tall_C_UpdateVisualState, CallFunc_PlayAnimation_ReturnValue_1) == 0x000078, "Member 'ProgressiveItem_Tall_C_UpdateVisualState::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

}

