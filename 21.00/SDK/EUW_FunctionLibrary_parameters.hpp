#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EUW_FunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function EUW_FunctionLibrary.EUW_FunctionLibrary_C.Create SliderLabel
// 0x0120 (0x0120 - 0x0000)
struct EUW_FunctionLibrary_C_Create_SliderLabel final
{
public:
	struct FPaintContext                          OnPaintContext;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class USlider*                                Slider;                                            // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PositionalShift;                                   // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Label;                                             // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           Label_Color;                                       // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FontSize;                                          // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPaintContext                          ContextOut;                                        // 0x0078(0x0030)(Parm, OutParm, NoDestructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A8(0x0018)()
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x00C0(0x0040)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalTopLeft_ReturnValue;              // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EUW_FunctionLibrary_C_Create_SliderLabel) == 0x000008, "Wrong alignment on EUW_FunctionLibrary_C_Create_SliderLabel");
static_assert(sizeof(EUW_FunctionLibrary_C_Create_SliderLabel) == 0x000120, "Wrong size on EUW_FunctionLibrary_C_Create_SliderLabel");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, OnPaintContext) == 0x000000, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::OnPaintContext' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, Slider) == 0x000030, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::Slider' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, PositionalShift) == 0x000038, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::PositionalShift' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, Label) == 0x000048, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::Label' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, Label_Color) == 0x000058, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::Label_Color' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, FontSize) == 0x000068, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::FontSize' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, __WorldContext) == 0x000070, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::__WorldContext' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, ContextOut) == 0x000078, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::ContextOut' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A8, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, CallFunc_GetCachedGeometry_ReturnValue) == 0x0000C0, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, CallFunc_GetLocalTopLeft_ReturnValue) == 0x000100, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::CallFunc_GetLocalTopLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Create_SliderLabel, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000110, "Member 'EUW_FunctionLibrary_C_Create_SliderLabel::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function EUW_FunctionLibrary.EUW_FunctionLibrary_C.Lerp Vector 2D
// 0x00B8 (0x00B8 - 0x0000)
struct EUW_FunctionLibrary_C_Lerp_Vector_2D final
{
public:
	struct FVector2D                              A;                                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              B;                                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EUW_FunctionLibrary_C_Lerp_Vector_2D) == 0x000008, "Wrong alignment on EUW_FunctionLibrary_C_Lerp_Vector_2D");
static_assert(sizeof(EUW_FunctionLibrary_C_Lerp_Vector_2D) == 0x0000B8, "Wrong size on EUW_FunctionLibrary_C_Lerp_Vector_2D");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, A) == 0x000000, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::A' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, B) == 0x000010, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::B' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, Alpha) == 0x000020, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::Alpha' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, __WorldContext) == 0x000028, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::__WorldContext' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, ReturnValue) == 0x000030, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_BreakVector2D_X) == 0x000040, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_BreakVector2D_Y) == 0x000044, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_BreakVector2D_X_1) == 0x000048, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_BreakVector2D_Y_1) == 0x00004C, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_MakeVector_ReturnValue_1) == 0x000068, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_VLerp_ReturnValue) == 0x000080, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_BreakVector_X) == 0x000098, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_BreakVector_Y) == 0x00009C, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_BreakVector_Z) == 0x0000A0, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_Lerp_Vector_2D, CallFunc_MakeVector2D_ReturnValue) == 0x0000A8, "Member 'EUW_FunctionLibrary_C_Lerp_Vector_2D::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function EUW_FunctionLibrary.EUW_FunctionLibrary_C.PointVector PointVector Intersection
// 0x0248 (0x0248 - 0x0000)
struct EUW_FunctionLibrary_C_PointVector_PointVector_Intersection final
{
public:
	struct FVector                                FirstVectorOrigin;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FirstVectorDirection;                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SecondVectorOrigin;                                // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SecondVectorDirection;                             // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IntersectionPoint;                                 // 0x0068(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoVectorsInersect_;                                // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_2;         // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_3;         // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue_1;    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue_2;    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection) == 0x000008, "Wrong alignment on EUW_FunctionLibrary_C_PointVector_PointVector_Intersection");
static_assert(sizeof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection) == 0x000248, "Wrong size on EUW_FunctionLibrary_C_PointVector_PointVector_Intersection");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, FirstVectorOrigin) == 0x000000, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::FirstVectorOrigin' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, FirstVectorDirection) == 0x000018, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::FirstVectorDirection' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, SecondVectorOrigin) == 0x000030, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::SecondVectorOrigin' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, SecondVectorDirection) == 0x000048, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::SecondVectorDirection' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, __WorldContext) == 0x000060, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::__WorldContext' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, IntersectionPoint) == 0x000068, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::IntersectionPoint' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, DoVectorsInersect_) == 0x000080, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::DoVectorsInersect_' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Cross_VectorVector_ReturnValue) == 0x000088, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A0, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Normal_ReturnValue) == 0x0000B8, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_VSize_ReturnValue) == 0x0000E8, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Normal_ReturnValue_1) == 0x0000F0, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_VSize_ReturnValue_1) == 0x000108, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000110, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000128, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x00012C, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000130, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Add_VectorVector_ReturnValue) == 0x000148, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000160, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Conv_VectorToString_ReturnValue) == 0x000178, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000188, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000198, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Cross_VectorVector_ReturnValue_2) == 0x0001B0, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Cross_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Cross_VectorVector_ReturnValue_3) == 0x0001C8, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Cross_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Normal_ReturnValue_2) == 0x0001E0, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Normal_ReturnValue_3) == 0x0001F8, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000210, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x000228, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_EqualEqual_VectorVector_ReturnValue_1) == 0x000240, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_EqualEqual_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_EqualEqual_VectorVector_ReturnValue_2) == 0x000241, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_EqualEqual_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EUW_FunctionLibrary_C_PointVector_PointVector_Intersection, CallFunc_BooleanOR_ReturnValue) == 0x000242, "Member 'EUW_FunctionLibrary_C_PointVector_PointVector_Intersection::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

