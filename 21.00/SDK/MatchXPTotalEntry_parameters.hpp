#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchXPTotalEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MatchXPTotalEntry.MatchXPTotalEntry_C.ExecuteUbergraph_MatchXPTotalEntry
// 0x0088 (0x0088 - 0x0000)
struct MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_InitialDelay;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetXPTarget_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_2;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry) == 0x000008, "Wrong alignment on MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry");
static_assert(sizeof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry) == 0x000088, "Wrong size on MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, EntryPoint) == 0x000000, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, Temp_byte_Variable) == 0x000004, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, Temp_byte_Variable_1) == 0x000005, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, Temp_bool_Variable) == 0x000006, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, Temp_struct_Variable) == 0x000008, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, Temp_struct_Variable_1) == 0x000018, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, Temp_bool_Variable_1) == 0x000028, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, Temp_bool_Variable_2) == 0x000029, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, CallFunc_IsValid_ReturnValue_1) == 0x00002B, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, K2Node_CustomEvent_InitialDelay) == 0x00002C, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::K2Node_CustomEvent_InitialDelay' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, K2Node_Select_Default) == 0x000030, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, CallFunc_GetXPTarget_ReturnValue) == 0x000040, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::CallFunc_GetXPTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, CallFunc_SpawnSound2D_ReturnValue) == 0x000048, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, K2Node_Select_Default_1) == 0x000058, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, CallFunc_PlayAnimation_ReturnValue) == 0x000060, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, K2Node_Select_Default_2) == 0x000068, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, Temp_bool_Variable_3) == 0x000070, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, CallFunc_GetEndTime_ReturnValue) == 0x000074, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, CallFunc_PlayAnimation_ReturnValue_1) == 0x000078, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, K2Node_Select_Default_3) == 0x000080, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry, K2Node_Event_IsDesignTime) == 0x000081, "Member 'MatchXPTotalEntry_C_ExecuteUbergraph_MatchXPTotalEntry::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function MatchXPTotalEntry.MatchXPTotalEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct MatchXPTotalEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPTotalEntry_C_PreConstruct) == 0x000001, "Wrong alignment on MatchXPTotalEntry_C_PreConstruct");
static_assert(sizeof(MatchXPTotalEntry_C_PreConstruct) == 0x000001, "Wrong size on MatchXPTotalEntry_C_PreConstruct");
static_assert(offsetof(MatchXPTotalEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'MatchXPTotalEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function MatchXPTotalEntry.MatchXPTotalEntry_C.StartIntro
// 0x0004 (0x0004 - 0x0000)
struct MatchXPTotalEntry_C_StartIntro final
{
public:
	float                                         InitialDelay;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPTotalEntry_C_StartIntro) == 0x000004, "Wrong alignment on MatchXPTotalEntry_C_StartIntro");
static_assert(sizeof(MatchXPTotalEntry_C_StartIntro) == 0x000004, "Wrong size on MatchXPTotalEntry_C_StartIntro");
static_assert(offsetof(MatchXPTotalEntry_C_StartIntro, InitialDelay) == 0x000000, "Member 'MatchXPTotalEntry_C_StartIntro::InitialDelay' has a wrong offset!");

}

