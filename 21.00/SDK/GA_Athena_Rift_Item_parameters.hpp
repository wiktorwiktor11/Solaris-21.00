#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Rift_Item

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Athena_Rift_Item.GA_Athena_Rift_Item_C.Cancelled_1B4C20DD4792D45069FE6C8D47581114
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_Rift_Item_C_Cancelled_1B4C20DD4792D45069FE6C8D47581114 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_Rift_Item_C_Cancelled_1B4C20DD4792D45069FE6C8D47581114) == 0x000008, "Wrong alignment on GA_Athena_Rift_Item_C_Cancelled_1B4C20DD4792D45069FE6C8D47581114");
static_assert(sizeof(GA_Athena_Rift_Item_C_Cancelled_1B4C20DD4792D45069FE6C8D47581114) == 0x000030, "Wrong size on GA_Athena_Rift_Item_C_Cancelled_1B4C20DD4792D45069FE6C8D47581114");
static_assert(offsetof(GA_Athena_Rift_Item_C_Cancelled_1B4C20DD4792D45069FE6C8D47581114, TargetData) == 0x000000, "Member 'GA_Athena_Rift_Item_C_Cancelled_1B4C20DD4792D45069FE6C8D47581114::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_Cancelled_1B4C20DD4792D45069FE6C8D47581114, ApplicationTag) == 0x000028, "Member 'GA_Athena_Rift_Item_C_Cancelled_1B4C20DD4792D45069FE6C8D47581114::ApplicationTag' has a wrong offset!");

// Function GA_Athena_Rift_Item.GA_Athena_Rift_Item_C.Completed_1B4C20DD4792D45069FE6C8D47581114
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_Rift_Item_C_Completed_1B4C20DD4792D45069FE6C8D47581114 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_Rift_Item_C_Completed_1B4C20DD4792D45069FE6C8D47581114) == 0x000008, "Wrong alignment on GA_Athena_Rift_Item_C_Completed_1B4C20DD4792D45069FE6C8D47581114");
static_assert(sizeof(GA_Athena_Rift_Item_C_Completed_1B4C20DD4792D45069FE6C8D47581114) == 0x000030, "Wrong size on GA_Athena_Rift_Item_C_Completed_1B4C20DD4792D45069FE6C8D47581114");
static_assert(offsetof(GA_Athena_Rift_Item_C_Completed_1B4C20DD4792D45069FE6C8D47581114, TargetData) == 0x000000, "Member 'GA_Athena_Rift_Item_C_Completed_1B4C20DD4792D45069FE6C8D47581114::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_Completed_1B4C20DD4792D45069FE6C8D47581114, ApplicationTag) == 0x000028, "Member 'GA_Athena_Rift_Item_C_Completed_1B4C20DD4792D45069FE6C8D47581114::ApplicationTag' has a wrong offset!");

// Function GA_Athena_Rift_Item.GA_Athena_Rift_Item_C.ExecuteUbergraph_GA_Athena_Rift_Item
// 0x03B0 (0x03B0 - 0x0000)
struct GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable_1;                            // 0x0008(0x0028)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_NetworkSyncPoint*          CallFunc_WaitNetSync_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0050(0x0048)(ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x00A8(0x0028)()
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x00D0(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x00F8(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0100(0x0010)(ReferenceParm)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_2;                   // 0x0110(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_2;               // 0x0138(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x013C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0148(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0160(0x00D0)(ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue_1;           // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_1;                   // 0x0248(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_1;               // 0x0270(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0274(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Flying_NewParam;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue; // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0xE];                                      // 0x0282(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0290(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0340(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_RiftPortal_Item_Athena_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item) == 0x000010, "Wrong alignment on GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item");
static_assert(sizeof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item) == 0x0003B0, "Wrong size on GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, EntryPoint) == 0x000000, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, Temp_struct_Variable) == 0x000004, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, Temp_struct_Variable_1) == 0x000008, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_WaitNetSync_ReturnValue) == 0x000040, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_WaitNetSync_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_GetActorInfo_ReturnValue) == 0x000050, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000098, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x0000A8, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_CustomEvent_TargetData) == 0x0000D0, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_CustomEvent_ApplicationTag) == 0x0000F8, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000100, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_CustomEvent_TargetData_2) == 0x000110, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_CustomEvent_TargetData_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_CustomEvent_ApplicationTag_2) == 0x000138, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_CustomEvent_ApplicationTag_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_CreateDelegate_OutputDelegate_1) == 0x00013C, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_CreateDelegate_OutputDelegate_2) == 0x000148, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_IsDedicatedServer_ReturnValue) == 0x000154, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_K2_CommitAbility_ReturnValue) == 0x000155, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x000158, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000160, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_IsValid_ReturnValue_1) == 0x000230, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_Event_bWasCancelled) == 0x000231, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_K2_CommitAbility_ReturnValue_1) == 0x000232, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_K2_CommitAbility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_IsValid_ReturnValue_2) == 0x000233, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000238, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_GetQuestManager_ReturnValue) == 0x000240, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_CustomEvent_TargetData_1) == 0x000248, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_CustomEvent_TargetData_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_CustomEvent_ApplicationTag_1) == 0x000270, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_CustomEvent_ApplicationTag_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, K2Node_CreateDelegate_OutputDelegate_3) == 0x000274, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_Is_Flying_NewParam) == 0x000280, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_Is_Flying_NewParam' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue) == 0x000281, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000290, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_BreakTransform_Location) == 0x0002F0, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_BreakTransform_Rotation) == 0x000308, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_BreakTransform_Scale) == 0x000320, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_MakeTransform_ReturnValue) == 0x000340, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0003A0, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item, CallFunc_FinishSpawningActor_ReturnValue) == 0x0003A8, "Member 'GA_Athena_Rift_Item_C_ExecuteUbergraph_GA_Athena_Rift_Item::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function GA_Athena_Rift_Item.GA_Athena_Rift_Item_C.Is Flying
// 0x0020 (0x0020 - 0x0000)
struct GA_Athena_Rift_Item_C_Is_Flying final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMovementComp_Character*            K2Node_DynamicCast_AsFort_Movement_Comp_Character; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_Rift_Item_C_Is_Flying) == 0x000008, "Wrong alignment on GA_Athena_Rift_Item_C_Is_Flying");
static_assert(sizeof(GA_Athena_Rift_Item_C_Is_Flying) == 0x000020, "Wrong size on GA_Athena_Rift_Item_C_Is_Flying");
static_assert(offsetof(GA_Athena_Rift_Item_C_Is_Flying, NewParam) == 0x000000, "Member 'GA_Athena_Rift_Item_C_Is_Flying::NewParam' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_Is_Flying, CallFunc_GetMovementComponent_ReturnValue) == 0x000008, "Member 'GA_Athena_Rift_Item_C_Is_Flying::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_Is_Flying, K2Node_DynamicCast_AsFort_Movement_Comp_Character) == 0x000010, "Member 'GA_Athena_Rift_Item_C_Is_Flying::K2Node_DynamicCast_AsFort_Movement_Comp_Character' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_Is_Flying, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Athena_Rift_Item_C_Is_Flying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_Is_Flying, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'GA_Athena_Rift_Item_C_Is_Flying::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GA_Athena_Rift_Item.GA_Athena_Rift_Item_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_Rift_Item_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_Rift_Item_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Athena_Rift_Item_C_K2_OnEndAbility");
static_assert(sizeof(GA_Athena_Rift_Item_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Athena_Rift_Item_C_K2_OnEndAbility");
static_assert(offsetof(GA_Athena_Rift_Item_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Athena_Rift_Item_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Athena_Rift_Item.GA_Athena_Rift_Item_C.Triggered_1B4C20DD4792D45069FE6C8D47581114
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_Rift_Item_C_Triggered_1B4C20DD4792D45069FE6C8D47581114 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_Rift_Item_C_Triggered_1B4C20DD4792D45069FE6C8D47581114) == 0x000008, "Wrong alignment on GA_Athena_Rift_Item_C_Triggered_1B4C20DD4792D45069FE6C8D47581114");
static_assert(sizeof(GA_Athena_Rift_Item_C_Triggered_1B4C20DD4792D45069FE6C8D47581114) == 0x000030, "Wrong size on GA_Athena_Rift_Item_C_Triggered_1B4C20DD4792D45069FE6C8D47581114");
static_assert(offsetof(GA_Athena_Rift_Item_C_Triggered_1B4C20DD4792D45069FE6C8D47581114, TargetData) == 0x000000, "Member 'GA_Athena_Rift_Item_C_Triggered_1B4C20DD4792D45069FE6C8D47581114::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_Triggered_1B4C20DD4792D45069FE6C8D47581114, ApplicationTag) == 0x000028, "Member 'GA_Athena_Rift_Item_C_Triggered_1B4C20DD4792D45069FE6C8D47581114::ApplicationTag' has a wrong offset!");

// Function GA_Athena_Rift_Item.GA_Athena_Rift_Item_C.K2_CanActivateAbility
// 0x0088 (0x0088 - 0x0000)
struct GA_Athena_Rift_Item_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_Rift_Item_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_Athena_Rift_Item_C_K2_CanActivateAbility");
static_assert(sizeof(GA_Athena_Rift_Item_C_K2_CanActivateAbility) == 0x000088, "Wrong size on GA_Athena_Rift_Item_C_K2_CanActivateAbility");
static_assert(offsetof(GA_Athena_Rift_Item_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_Athena_Rift_Item_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_Athena_Rift_Item_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_Athena_Rift_Item_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_Athena_Rift_Item_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_K2_CanActivateAbility, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000078, "Member 'GA_Athena_Rift_Item_C_K2_CanActivateAbility::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GA_Athena_Rift_Item_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'GA_Athena_Rift_Item_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

