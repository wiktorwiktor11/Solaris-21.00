#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DuelObserver

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function GA_DuelObserver.GA_DuelObserver_C.ExecuteUbergraph_GA_DuelObserver
// 0x0200 (0x0200 - 0x0000)
struct GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDuelState                                    K2Node_Event_NewDuelState;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDuelOverlayData                       K2Node_Event_ChangedDuelOverlayData;               // 0x0008(0x0088)(ConstParm)
	EDuelState                                    K2Node_CustomEvent_Duel_State;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDuelOverlayData                       K2Node_CustomEvent_Cached_Duel_Overlay_Data;       // 0x0098(0x0088)()
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0128(0x00B0)(ConstParm)
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue;                   // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver) == 0x000008, "Wrong alignment on GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver");
static_assert(sizeof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver) == 0x000200, "Wrong size on GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, EntryPoint) == 0x000000, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_Event_NewDuelState) == 0x000004, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_Event_NewDuelState' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_Event_ChangedDuelOverlayData) == 0x000008, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_Event_ChangedDuelOverlayData' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_CustomEvent_Duel_State) == 0x000090, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_CustomEvent_Duel_State' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_CustomEvent_Cached_Duel_Overlay_Data) == 0x000098, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_CustomEvent_Cached_Duel_Overlay_Data' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, CallFunc_IsServer_ReturnValue) == 0x000120, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_Event_EventData) == 0x000128, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, CallFunc_GetContext_ReturnValue) == 0x0001D8, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0001E0, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, CallFunc_IsValid_ReturnValue) == 0x0001E9, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x0001F0, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver, K2Node_DynamicCast_bSuccess_1) == 0x0001F8, "Member 'GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_DuelObserver.GA_DuelObserver_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_DuelObserver_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_DuelObserver_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_DuelObserver_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_DuelObserver_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_DuelObserver_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_DuelObserver_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_DuelObserver_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_DuelObserver.GA_DuelObserver_C.OnDuelChange
// 0x0090 (0x0090 - 0x0000)
struct GA_DuelObserver_C_OnDuelChange final
{
public:
	EDuelState                                    NewDuelState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDuelOverlayData                       ChangedDuelOverlayData;                            // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_DuelObserver_C_OnDuelChange) == 0x000008, "Wrong alignment on GA_DuelObserver_C_OnDuelChange");
static_assert(sizeof(GA_DuelObserver_C_OnDuelChange) == 0x000090, "Wrong size on GA_DuelObserver_C_OnDuelChange");
static_assert(offsetof(GA_DuelObserver_C_OnDuelChange, NewDuelState) == 0x000000, "Member 'GA_DuelObserver_C_OnDuelChange::NewDuelState' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_OnDuelChange, ChangedDuelOverlayData) == 0x000008, "Member 'GA_DuelObserver_C_OnDuelChange::ChangedDuelOverlayData' has a wrong offset!");

// Function GA_DuelObserver.GA_DuelObserver_C.UpdateDuelUI
// 0x0090 (0x0090 - 0x0000)
struct GA_DuelObserver_C_UpdateDuelUI final
{
public:
	EDuelState                                    Duel_State;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDuelOverlayData                       Cached_Duel_Overlay_Data;                          // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_DuelObserver_C_UpdateDuelUI) == 0x000008, "Wrong alignment on GA_DuelObserver_C_UpdateDuelUI");
static_assert(sizeof(GA_DuelObserver_C_UpdateDuelUI) == 0x000090, "Wrong size on GA_DuelObserver_C_UpdateDuelUI");
static_assert(offsetof(GA_DuelObserver_C_UpdateDuelUI, Duel_State) == 0x000000, "Member 'GA_DuelObserver_C_UpdateDuelUI::Duel_State' has a wrong offset!");
static_assert(offsetof(GA_DuelObserver_C_UpdateDuelUI, Cached_Duel_Overlay_Data) == 0x000008, "Member 'GA_DuelObserver_C_UpdateDuelUI::Cached_Duel_Overlay_Data' has a wrong offset!");

}

