#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteConversationUI

#include "Basic.hpp"

#include "FortniteConversationUI_structs.hpp"
#include "CommonUI_classes.hpp"
#include "FortniteConversationRuntime_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_classes.hpp"
#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayMessages_structs.hpp"


namespace SDK
{

// Class FortniteConversationUI.FortConversationMessageWidget
// 0x0000 (0x02B8 - 0x02B8)
class UFortConversationMessageWidget final : public UUserWidget
{
public:
	void OnMainMessageSet(const class FText& NPCName, const class FText& MessageBody);
	void OnMessageHidden();
	void OnMessageShown();
	void OnPreviewMessageSet(const class FText& PreviewText);
	void SetPreviewMessage(const class FText& MessageToSet);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationMessageWidget">();
	}
	static class UFortConversationMessageWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationMessageWidget>();
	}
};
static_assert(alignof(UFortConversationMessageWidget) == 0x000008, "Wrong alignment on UFortConversationMessageWidget");
static_assert(sizeof(UFortConversationMessageWidget) == 0x0002B8, "Wrong size on UFortConversationMessageWidget");

// Class FortniteConversationUI.FortConversationOptionBrief
// 0x0000 (0x02E0 - 0x02E0)
class UFortConversationOptionBrief : public UCommonUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationOptionBrief">();
	}
	static class UFortConversationOptionBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationOptionBrief>();
	}
};
static_assert(alignof(UFortConversationOptionBrief) == 0x000008, "Wrong alignment on UFortConversationOptionBrief");
static_assert(sizeof(UFortConversationOptionBrief) == 0x0002E0, "Wrong size on UFortConversationOptionBrief");

// Class FortniteConversationUI.FortItemTransactionBrief
// 0x0018 (0x02F8 - 0x02E0)
class UFortItemTransactionBrief : public UFortConversationOptionBrief
{
public:
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortTransactionStrip*                  TransactionStrip_Main;                             // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortItem*                              DisplayItem;                                       // 0x02F0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnTransactionInfoReceived(class UFortItem* Item);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortItemTransactionBrief">();
	}
	static class UFortItemTransactionBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortItemTransactionBrief>();
	}
};
static_assert(alignof(UFortItemTransactionBrief) == 0x000008, "Wrong alignment on UFortItemTransactionBrief");
static_assert(sizeof(UFortItemTransactionBrief) == 0x0002F8, "Wrong size on UFortItemTransactionBrief");
static_assert(offsetof(UFortItemTransactionBrief, TransactionStrip_Main) == 0x0002E8, "Member 'UFortItemTransactionBrief::TransactionStrip_Main' has a wrong offset!");
static_assert(offsetof(UFortItemTransactionBrief, DisplayItem) == 0x0002F0, "Member 'UFortItemTransactionBrief::DisplayItem' has a wrong offset!");

// Class FortniteConversationUI.FortApplyAbilityBrief
// 0x0020 (0x0318 - 0x02F8)
class UFortApplyAbilityBrief final : public UFortItemTransactionBrief
{
public:
	class FText                                   PurchaseServiceText;                               // 0x02F8(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                   Text_Display;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnAbleToPurchase();
	void OnUnableToPurchase(EPreventAbilityUseReason Reason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortApplyAbilityBrief">();
	}
	static class UFortApplyAbilityBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortApplyAbilityBrief>();
	}
};
static_assert(alignof(UFortApplyAbilityBrief) == 0x000008, "Wrong alignment on UFortApplyAbilityBrief");
static_assert(sizeof(UFortApplyAbilityBrief) == 0x000318, "Wrong size on UFortApplyAbilityBrief");
static_assert(offsetof(UFortApplyAbilityBrief, PurchaseServiceText) == 0x0002F8, "Member 'UFortApplyAbilityBrief::PurchaseServiceText' has a wrong offset!");
static_assert(offsetof(UFortApplyAbilityBrief, Text_Display) == 0x000310, "Member 'UFortApplyAbilityBrief::Text_Display' has a wrong offset!");

// Class FortniteConversationUI.FortBasicBrief
// 0x0000 (0x02E0 - 0x02E0)
class UFortBasicBrief final : public UFortConversationOptionBrief
{
public:
	void OnChoiceTextReceived(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBasicBrief">();
	}
	static class UFortBasicBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBasicBrief>();
	}
};
static_assert(alignof(UFortBasicBrief) == 0x000008, "Wrong alignment on UFortBasicBrief");
static_assert(sizeof(UFortBasicBrief) == 0x0002E0, "Wrong size on UFortBasicBrief");

// Class FortniteConversationUI.FortBasicItemBrief
// 0x0070 (0x0350 - 0x02E0)
class UFortBasicItemBrief final : public UFortConversationOptionBrief
{
public:
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       Text_TitleBar;                                     // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortTransactionStrip*                  TransactionStrip_Main;                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortItem*                              DisplayItem;                                       // 0x02F8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FDataDrivenServiceBriefConfig> ServiceConfigs;                                    // 0x0300(0x0050)(Edit, NativeAccessSpecifierPrivate)

public:
	void OnAbleToUse(const bool bShowWarningMessage);
	void OnItemInfoReceived(class UFortItem* Item, int32 StackSize);
	void OnUnableToUse(const class FText& Reason);
	void OnUpdateDescriptionText(const class FText& DescriptionText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBasicItemBrief">();
	}
	static class UFortBasicItemBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBasicItemBrief>();
	}
};
static_assert(alignof(UFortBasicItemBrief) == 0x000008, "Wrong alignment on UFortBasicItemBrief");
static_assert(sizeof(UFortBasicItemBrief) == 0x000350, "Wrong size on UFortBasicItemBrief");
static_assert(offsetof(UFortBasicItemBrief, Text_TitleBar) == 0x0002E8, "Member 'UFortBasicItemBrief::Text_TitleBar' has a wrong offset!");
static_assert(offsetof(UFortBasicItemBrief, TransactionStrip_Main) == 0x0002F0, "Member 'UFortBasicItemBrief::TransactionStrip_Main' has a wrong offset!");
static_assert(offsetof(UFortBasicItemBrief, DisplayItem) == 0x0002F8, "Member 'UFortBasicItemBrief::DisplayItem' has a wrong offset!");
static_assert(offsetof(UFortBasicItemBrief, ServiceConfigs) == 0x000300, "Member 'UFortBasicItemBrief::ServiceConfigs' has a wrong offset!");

// Class FortniteConversationUI.FortBuyBrief
// 0x0000 (0x02F8 - 0x02F8)
class UFortBuyBrief final : public UFortItemTransactionBrief
{
public:
	void OnDisplayUnavailability(ECannotBuyReason CannotBuyReason);
	void OnPurchaseDataReceived(int32 StackSize, int32 RemainingForSale);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBuyBrief">();
	}
	static class UFortBuyBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBuyBrief>();
	}
};
static_assert(alignof(UFortBuyBrief) == 0x000008, "Wrong alignment on UFortBuyBrief");
static_assert(sizeof(UFortBuyBrief) == 0x0002F8, "Wrong size on UFortBuyBrief");

// Class FortniteConversationUI.FortConversationMarker
// 0x00D0 (0x0488 - 0x03B8)
class UFortConversationMarker final : public UFortActorIndicatorWidget
{
public:
	uint8                                         Pad_3B8[0x38];                                     // 0x03B8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InitialOffset;                                     // 0x03F0(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                ManualOffset;                                      // 0x0408(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MessageBubbleDuration;                             // 0x0420(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LastTextBubbleDuration;                            // 0x0424(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonVisibilitySwitcher*              Switcher_States;                                   // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Overlay_PreviewState;                              // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_438[0x8];                                      // 0x0438(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortConversationMessageWidget*         ConversationMessage_Main;                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       Text_ParticipantName;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortKeybindWidget*                     Keybind_Nameplate;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 NPCIcon;                                           // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                             CustomDialogMarkerIndicatorIcon;                   // 0x0470(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                             DefaultDialogMarkerIndicatorIcon;                  // 0x0478(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_480[0x8];                                      // 0x0480(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCanInteract(bool bCanInteract);
	void OnConversationActorProximityChanged(EInteractionRange TargetInteractionRange, class UFortNonPlayerConversationParticipantComponent* ConversationComponent);
	void OnInteractionRangeChanged(EInteractionRange TargetInteractionRange);
	void OnMessageShownOverActor(class AActor* OverActor);
	void OnSetIndicatedActor(class AActor* NewIndicatorActor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationMarker">();
	}
	static class UFortConversationMarker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationMarker>();
	}
};
static_assert(alignof(UFortConversationMarker) == 0x000008, "Wrong alignment on UFortConversationMarker");
static_assert(sizeof(UFortConversationMarker) == 0x000488, "Wrong size on UFortConversationMarker");
static_assert(offsetof(UFortConversationMarker, InitialOffset) == 0x0003F0, "Member 'UFortConversationMarker::InitialOffset' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, ManualOffset) == 0x000408, "Member 'UFortConversationMarker::ManualOffset' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, MessageBubbleDuration) == 0x000420, "Member 'UFortConversationMarker::MessageBubbleDuration' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, LastTextBubbleDuration) == 0x000424, "Member 'UFortConversationMarker::LastTextBubbleDuration' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, Switcher_States) == 0x000428, "Member 'UFortConversationMarker::Switcher_States' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, Overlay_PreviewState) == 0x000430, "Member 'UFortConversationMarker::Overlay_PreviewState' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, ConversationMessage_Main) == 0x000440, "Member 'UFortConversationMarker::ConversationMessage_Main' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, Text_ParticipantName) == 0x000450, "Member 'UFortConversationMarker::Text_ParticipantName' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, Keybind_Nameplate) == 0x000460, "Member 'UFortConversationMarker::Keybind_Nameplate' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, NPCIcon) == 0x000468, "Member 'UFortConversationMarker::NPCIcon' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, CustomDialogMarkerIndicatorIcon) == 0x000470, "Member 'UFortConversationMarker::CustomDialogMarkerIndicatorIcon' has a wrong offset!");
static_assert(offsetof(UFortConversationMarker, DefaultDialogMarkerIndicatorIcon) == 0x000478, "Member 'UFortConversationMarker::DefaultDialogMarkerIndicatorIcon' has a wrong offset!");

// Class FortniteConversationUI.FortConversationOption
// 0x00C0 (0x1140 - 0x1080)
class UFortConversationOption final : public UFortRadialPickerEntry
{
public:
	class USoundBase*                             OnOptionConfirmedSound;                            // 0x1080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                             OnOptionHoveredSound;                              // 0x1088(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonVisibilitySwitcher*              Switcher_DisplayAsset;                             // 0x1090(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UObject>                 DefaultSoftTaskIcon;                               // 0x1098(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>              DefaultConfirmChoiceSound;                         // 0x10C0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>              DefaultHoverChoiceSound;                           // 0x10E8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1110[0x30];                                    // 0x1110(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnOptionConfirmed();
	void OnSetupFromDisplayAsset(class UObject* DisplayAsset);
	void OnSetupFromItemDef(class UFortItem* Item);
	void OnSetupPivotFromRadialInformation(int32 NumElements, int32 ItemIndex);

	bool IsAvailable() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationOption">();
	}
	static class UFortConversationOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationOption>();
	}
};
static_assert(alignof(UFortConversationOption) == 0x000010, "Wrong alignment on UFortConversationOption");
static_assert(sizeof(UFortConversationOption) == 0x001140, "Wrong size on UFortConversationOption");
static_assert(offsetof(UFortConversationOption, OnOptionConfirmedSound) == 0x001080, "Member 'UFortConversationOption::OnOptionConfirmedSound' has a wrong offset!");
static_assert(offsetof(UFortConversationOption, OnOptionHoveredSound) == 0x001088, "Member 'UFortConversationOption::OnOptionHoveredSound' has a wrong offset!");
static_assert(offsetof(UFortConversationOption, Switcher_DisplayAsset) == 0x001090, "Member 'UFortConversationOption::Switcher_DisplayAsset' has a wrong offset!");
static_assert(offsetof(UFortConversationOption, DefaultSoftTaskIcon) == 0x001098, "Member 'UFortConversationOption::DefaultSoftTaskIcon' has a wrong offset!");
static_assert(offsetof(UFortConversationOption, DefaultConfirmChoiceSound) == 0x0010C0, "Member 'UFortConversationOption::DefaultConfirmChoiceSound' has a wrong offset!");
static_assert(offsetof(UFortConversationOption, DefaultHoverChoiceSound) == 0x0010E8, "Member 'UFortConversationOption::DefaultHoverChoiceSound' has a wrong offset!");

// Class FortniteConversationUI.FortConversationOptionsPanel
// 0x0018 (0x0178 - 0x0160)
class UFortConversationOptionsPanel final : public UPanelWidget
{
public:
	uint8                                         Pad_160[0x10];                                     // 0x0160(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxRows;                                           // 0x0170(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MiddleColumnWidth;                                 // 0x0174(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UPanelSlot* AddChildToDynamicPanel(class UWidget* Content);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationOptionsPanel">();
	}
	static class UFortConversationOptionsPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationOptionsPanel>();
	}
};
static_assert(alignof(UFortConversationOptionsPanel) == 0x000008, "Wrong alignment on UFortConversationOptionsPanel");
static_assert(sizeof(UFortConversationOptionsPanel) == 0x000178, "Wrong size on UFortConversationOptionsPanel");
static_assert(offsetof(UFortConversationOptionsPanel, MaxRows) == 0x000170, "Member 'UFortConversationOptionsPanel::MaxRows' has a wrong offset!");
static_assert(offsetof(UFortConversationOptionsPanel, MiddleColumnWidth) == 0x000174, "Member 'UFortConversationOptionsPanel::MiddleColumnWidth' has a wrong offset!");

// Class FortniteConversationUI.FortConversationScreen
// 0x01D0 (0x05C8 - 0x03F8)
class UFortConversationScreen : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_3F8[0x10];                                     // 0x03F8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonVisibilitySwitcher*              Switcher_Details;                                  // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_410[0x38];                                     // 0x0410(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputComponent*                        ConversationInputComp;                             // 0x0448(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         CurrentlySelectedIndex;                            // 0x0450(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bBlockOptionIntroAnimation;                        // 0x0454(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RadialSelectionMaterialParameterName;              // 0x0458(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   TagPriorities;                                     // 0x0460(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class FName                                   InteractActionNameKBM;                             // 0x0470(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   ADSInputAction;                                    // 0x0474(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   InteractActionNameGamepad;                         // 0x0478(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    ConfirmBinding;                                    // 0x0480(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    MakeSelectionBinding;                              // 0x0490(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    ADSMouseBinding;                                   // 0x04A0(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    CancelActionBinding;                               // 0x04B0(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    RightTriggerBinding;                               // 0x04C0(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TMap<class FString, TSoftClassPtr<class UClass>> DetailsNodeTypeToBrief;                            // 0x04D0(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   ChatBrief;                                         // 0x0520(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 DataDrivenBriefPrefix;                             // 0x0548(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   DataDrivenBrief;                                   // 0x0558(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortSlottedRadialMenu*                 RadialMenu_DialogOptions;                          // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_RadialHighlight;                             // 0x0588(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortKeybindWidget*                     Keybind_Confirm;                                   // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBasicBrief*                        BasicBrief_Main;                                   // 0x0598(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SizeBox_RadialMenu;                                // 0x05A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Overlay_Details;                                   // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Overlay_WheelContainer;                            // 0x05B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Background;                                  // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_LoadingSpinner;                              // 0x05C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void EndConversation();
	void OnConversationOptionUnavailable(class UFortRadialSlot* SelectedEntry);
	void OnConversationStarted();
	void OnItemSelected(int32 OriginalIndex);
	void OnOptionsPopulated();
	void OnSelectedItemAvailabilityChanged(bool bIsAvailable);

	bool ShouldBlockOptionIntroAnim() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationScreen">();
	}
	static class UFortConversationScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationScreen>();
	}
};
static_assert(alignof(UFortConversationScreen) == 0x000008, "Wrong alignment on UFortConversationScreen");
static_assert(sizeof(UFortConversationScreen) == 0x0005C8, "Wrong size on UFortConversationScreen");
static_assert(offsetof(UFortConversationScreen, Switcher_Details) == 0x000408, "Member 'UFortConversationScreen::Switcher_Details' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, ConversationInputComp) == 0x000448, "Member 'UFortConversationScreen::ConversationInputComp' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, CurrentlySelectedIndex) == 0x000450, "Member 'UFortConversationScreen::CurrentlySelectedIndex' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, bBlockOptionIntroAnimation) == 0x000454, "Member 'UFortConversationScreen::bBlockOptionIntroAnimation' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, RadialSelectionMaterialParameterName) == 0x000458, "Member 'UFortConversationScreen::RadialSelectionMaterialParameterName' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, TagPriorities) == 0x000460, "Member 'UFortConversationScreen::TagPriorities' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, InteractActionNameKBM) == 0x000470, "Member 'UFortConversationScreen::InteractActionNameKBM' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, ADSInputAction) == 0x000474, "Member 'UFortConversationScreen::ADSInputAction' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, InteractActionNameGamepad) == 0x000478, "Member 'UFortConversationScreen::InteractActionNameGamepad' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, ConfirmBinding) == 0x000480, "Member 'UFortConversationScreen::ConfirmBinding' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, MakeSelectionBinding) == 0x000490, "Member 'UFortConversationScreen::MakeSelectionBinding' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, ADSMouseBinding) == 0x0004A0, "Member 'UFortConversationScreen::ADSMouseBinding' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, CancelActionBinding) == 0x0004B0, "Member 'UFortConversationScreen::CancelActionBinding' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, RightTriggerBinding) == 0x0004C0, "Member 'UFortConversationScreen::RightTriggerBinding' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, DetailsNodeTypeToBrief) == 0x0004D0, "Member 'UFortConversationScreen::DetailsNodeTypeToBrief' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, ChatBrief) == 0x000520, "Member 'UFortConversationScreen::ChatBrief' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, DataDrivenBriefPrefix) == 0x000548, "Member 'UFortConversationScreen::DataDrivenBriefPrefix' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, DataDrivenBrief) == 0x000558, "Member 'UFortConversationScreen::DataDrivenBrief' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, RadialMenu_DialogOptions) == 0x000580, "Member 'UFortConversationScreen::RadialMenu_DialogOptions' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, Image_RadialHighlight) == 0x000588, "Member 'UFortConversationScreen::Image_RadialHighlight' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, Keybind_Confirm) == 0x000590, "Member 'UFortConversationScreen::Keybind_Confirm' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, BasicBrief_Main) == 0x000598, "Member 'UFortConversationScreen::BasicBrief_Main' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, SizeBox_RadialMenu) == 0x0005A0, "Member 'UFortConversationScreen::SizeBox_RadialMenu' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, Overlay_Details) == 0x0005A8, "Member 'UFortConversationScreen::Overlay_Details' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, Overlay_WheelContainer) == 0x0005B0, "Member 'UFortConversationScreen::Overlay_WheelContainer' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, Image_Background) == 0x0005B8, "Member 'UFortConversationScreen::Image_Background' has a wrong offset!");
static_assert(offsetof(UFortConversationScreen, Image_LoadingSpinner) == 0x0005C0, "Member 'UFortConversationScreen::Image_LoadingSpinner' has a wrong offset!");

// Class FortniteConversationUI.FortDataDrivenServiceBrief
// 0x0078 (0x0358 - 0x02E0)
class UFortDataDrivenServiceBrief final : public UFortConversationOptionBrief
{
public:
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       Text_TitleBar;                                     // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                   RichText_Description;                              // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_StockRemaining;                               // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortTransactionStrip*                  TransactionStrip_Main;                             // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, struct FDataDrivenServiceBriefConfig> ServiceConfigs;                                    // 0x0308(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	void OnAbleToPurchase();
	void OnTransactionInfoReceived(class UFortItem* Item);
	void OnUnableToPurchase(const class FText& Reason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortDataDrivenServiceBrief">();
	}
	static class UFortDataDrivenServiceBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortDataDrivenServiceBrief>();
	}
};
static_assert(alignof(UFortDataDrivenServiceBrief) == 0x000008, "Wrong alignment on UFortDataDrivenServiceBrief");
static_assert(sizeof(UFortDataDrivenServiceBrief) == 0x000358, "Wrong size on UFortDataDrivenServiceBrief");
static_assert(offsetof(UFortDataDrivenServiceBrief, Text_TitleBar) == 0x0002E8, "Member 'UFortDataDrivenServiceBrief::Text_TitleBar' has a wrong offset!");
static_assert(offsetof(UFortDataDrivenServiceBrief, RichText_Description) == 0x0002F0, "Member 'UFortDataDrivenServiceBrief::RichText_Description' has a wrong offset!");
static_assert(offsetof(UFortDataDrivenServiceBrief, Text_StockRemaining) == 0x0002F8, "Member 'UFortDataDrivenServiceBrief::Text_StockRemaining' has a wrong offset!");
static_assert(offsetof(UFortDataDrivenServiceBrief, TransactionStrip_Main) == 0x000300, "Member 'UFortDataDrivenServiceBrief::TransactionStrip_Main' has a wrong offset!");
static_assert(offsetof(UFortDataDrivenServiceBrief, ServiceConfigs) == 0x000308, "Member 'UFortDataDrivenServiceBrief::ServiceConfigs' has a wrong offset!");

// Class FortniteConversationUI.FortDuelBrief
// 0x0028 (0x0320 - 0x02F8)
class UFortDuelBrief final : public UFortItemTransactionBrief
{
public:
	class FText                                   TextTemplate;                                      // 0x02F8(0x0018)(Edit, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   Text_Objective;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTileView*                        TileView;                                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DisplayLootItems(const TArray<class UFortItem*>& Items);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortDuelBrief">();
	}
	static class UFortDuelBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortDuelBrief>();
	}
};
static_assert(alignof(UFortDuelBrief) == 0x000008, "Wrong alignment on UFortDuelBrief");
static_assert(sizeof(UFortDuelBrief) == 0x000320, "Wrong size on UFortDuelBrief");
static_assert(offsetof(UFortDuelBrief, TextTemplate) == 0x0002F8, "Member 'UFortDuelBrief::TextTemplate' has a wrong offset!");
static_assert(offsetof(UFortDuelBrief, Text_Objective) == 0x000310, "Member 'UFortDuelBrief::Text_Objective' has a wrong offset!");
static_assert(offsetof(UFortDuelBrief, TileView) == 0x000318, "Member 'UFortDuelBrief::TileView' has a wrong offset!");

// Class FortniteConversationUI.FortHireBrief
// 0x0020 (0x0318 - 0x02F8)
class UFortHireBrief final : public UFortItemTransactionBrief
{
public:
	class FText                                   TextTemplate;                                      // 0x02F8(0x0018)(Edit, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   Text_Objective;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortHireBrief">();
	}
	static class UFortHireBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortHireBrief>();
	}
};
static_assert(alignof(UFortHireBrief) == 0x000008, "Wrong alignment on UFortHireBrief");
static_assert(sizeof(UFortHireBrief) == 0x000318, "Wrong size on UFortHireBrief");
static_assert(offsetof(UFortHireBrief, TextTemplate) == 0x0002F8, "Member 'UFortHireBrief::TextTemplate' has a wrong offset!");
static_assert(offsetof(UFortHireBrief, Text_Objective) == 0x000310, "Member 'UFortHireBrief::Text_Objective' has a wrong offset!");

// Class FortniteConversationUI.FortIntelBrief
// 0x0020 (0x0318 - 0x02F8)
class UFortIntelBrief final : public UFortItemTransactionBrief
{
public:
	class FText                                   TextTemplate;                                      // 0x02F8(0x0018)(Edit, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   Text_Objective;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortIntelBrief">();
	}
	static class UFortIntelBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortIntelBrief>();
	}
};
static_assert(alignof(UFortIntelBrief) == 0x000008, "Wrong alignment on UFortIntelBrief");
static_assert(sizeof(UFortIntelBrief) == 0x000318, "Wrong size on UFortIntelBrief");
static_assert(offsetof(UFortIntelBrief, TextTemplate) == 0x0002F8, "Member 'UFortIntelBrief::TextTemplate' has a wrong offset!");
static_assert(offsetof(UFortIntelBrief, Text_Objective) == 0x000310, "Member 'UFortIntelBrief::Text_Objective' has a wrong offset!");

// Class FortniteConversationUI.FortItemFundBrief
// 0x00B8 (0x0398 - 0x02E0)
class UFortItemFundBrief final : public UCommonUserWidget
{
public:
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventMessageTag                       CurrentFundsChangedTag;                            // 0x02E8(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2EC[0x2C];                                     // 0x02EC(0x002C)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       Text_TitleBar;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_ProgressPercent;                              // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_ProgressCount;                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortSimpleMaterialProgressBar*         Progress_Funding;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortLazyImage*                         LazyImage_Icon;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortTransactionStrip*                  TransactionStrip_Main;                             // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FDataDrivenServiceBriefConfig> ServiceConfigs;                                    // 0x0348(0x0050)(Edit, NativeAccessSpecifierPrivate)

public:
	void InitializeFromContext(const struct FConversationContext& ConversationContext);
	void OnProgressUpdated(const float CurrentFundingFraction);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortItemFundBrief">();
	}
	static class UFortItemFundBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortItemFundBrief>();
	}
};
static_assert(alignof(UFortItemFundBrief) == 0x000008, "Wrong alignment on UFortItemFundBrief");
static_assert(sizeof(UFortItemFundBrief) == 0x000398, "Wrong size on UFortItemFundBrief");
static_assert(offsetof(UFortItemFundBrief, CurrentFundsChangedTag) == 0x0002E8, "Member 'UFortItemFundBrief::CurrentFundsChangedTag' has a wrong offset!");
static_assert(offsetof(UFortItemFundBrief, Text_TitleBar) == 0x000318, "Member 'UFortItemFundBrief::Text_TitleBar' has a wrong offset!");
static_assert(offsetof(UFortItemFundBrief, Text_ProgressPercent) == 0x000320, "Member 'UFortItemFundBrief::Text_ProgressPercent' has a wrong offset!");
static_assert(offsetof(UFortItemFundBrief, Text_ProgressCount) == 0x000328, "Member 'UFortItemFundBrief::Text_ProgressCount' has a wrong offset!");
static_assert(offsetof(UFortItemFundBrief, Progress_Funding) == 0x000330, "Member 'UFortItemFundBrief::Progress_Funding' has a wrong offset!");
static_assert(offsetof(UFortItemFundBrief, LazyImage_Icon) == 0x000338, "Member 'UFortItemFundBrief::LazyImage_Icon' has a wrong offset!");
static_assert(offsetof(UFortItemFundBrief, TransactionStrip_Main) == 0x000340, "Member 'UFortItemFundBrief::TransactionStrip_Main' has a wrong offset!");
static_assert(offsetof(UFortItemFundBrief, ServiceConfigs) == 0x000348, "Member 'UFortItemFundBrief::ServiceConfigs' has a wrong offset!");

// Class FortniteConversationUI.FortSingleItemFundBrief
// 0x0068 (0x0348 - 0x02E0)
class UFortSingleItemFundBrief : public UFortConversationOptionBrief
{
public:
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemFundBrief*                     Item_Entry;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortNPCTextDisplay*                    NPCTextDisplay;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, struct FDataDrivenServiceBriefConfig> ServiceConfigs;                                    // 0x02F8(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortSingleItemFundBrief">();
	}
	static class UFortSingleItemFundBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortSingleItemFundBrief>();
	}
};
static_assert(alignof(UFortSingleItemFundBrief) == 0x000008, "Wrong alignment on UFortSingleItemFundBrief");
static_assert(sizeof(UFortSingleItemFundBrief) == 0x000348, "Wrong size on UFortSingleItemFundBrief");
static_assert(offsetof(UFortSingleItemFundBrief, Item_Entry) == 0x0002E8, "Member 'UFortSingleItemFundBrief::Item_Entry' has a wrong offset!");
static_assert(offsetof(UFortSingleItemFundBrief, NPCTextDisplay) == 0x0002F0, "Member 'UFortSingleItemFundBrief::NPCTextDisplay' has a wrong offset!");
static_assert(offsetof(UFortSingleItemFundBrief, ServiceConfigs) == 0x0002F8, "Member 'UFortSingleItemFundBrief::ServiceConfigs' has a wrong offset!");

// Class FortniteConversationUI.FortMultiItemFundBrief
// 0x0008 (0x0350 - 0x0348)
class UFortMultiItemFundBrief final : public UFortSingleItemFundBrief
{
public:
	class UFortItemFundBrief*                     Item_EntrySecondary;                               // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void UpdateSelectedVisuals(int32 SelectedIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMultiItemFundBrief">();
	}
	static class UFortMultiItemFundBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMultiItemFundBrief>();
	}
};
static_assert(alignof(UFortMultiItemFundBrief) == 0x000008, "Wrong alignment on UFortMultiItemFundBrief");
static_assert(sizeof(UFortMultiItemFundBrief) == 0x000350, "Wrong size on UFortMultiItemFundBrief");
static_assert(offsetof(UFortMultiItemFundBrief, Item_EntrySecondary) == 0x000348, "Member 'UFortMultiItemFundBrief::Item_EntrySecondary' has a wrong offset!");

// Class FortniteConversationUI.FortNPCTextDisplay
// 0x0010 (0x02C8 - 0x02B8)
class UFortNPCTextDisplay final : public UUserWidget
{
public:
	class UCommonRichTextBlock*                   Text_Message;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortLazyImage*                         LazyImage_NPCImage;                                // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnItemNameUpdated(const class FString& ItemName);
	void OnTextUpdated();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortNPCTextDisplay">();
	}
	static class UFortNPCTextDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortNPCTextDisplay>();
	}
};
static_assert(alignof(UFortNPCTextDisplay) == 0x000008, "Wrong alignment on UFortNPCTextDisplay");
static_assert(sizeof(UFortNPCTextDisplay) == 0x0002C8, "Wrong size on UFortNPCTextDisplay");
static_assert(offsetof(UFortNPCTextDisplay, Text_Message) == 0x0002B8, "Member 'UFortNPCTextDisplay::Text_Message' has a wrong offset!");
static_assert(offsetof(UFortNPCTextDisplay, LazyImage_NPCImage) == 0x0002C0, "Member 'UFortNPCTextDisplay::LazyImage_NPCImage' has a wrong offset!");

// Class FortniteConversationUI.FortQuestBrief
// 0x0050 (0x0330 - 0x02E0)
class UFortQuestBrief final : public UFortConversationOptionBrief
{
public:
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ThisMatchOnlyQuestText;                            // 0x02E8(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                   Text_Objective;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_MoneyReward;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_XpReward;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_ExpirationTime;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonLazyImage*                       LazyImage_QuestProviderImage;                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_QuestProvider;                             // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnQuestExpirationTimeSet(const bool bDisplayExpirationTime);
	void OnQuestInformationRecieved(const class FText& Objective, const struct FFortRarityItemData& RarityData, const struct FGameplayTag& CategoryTag, int32 XPReward, int32 MoneyReward);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortQuestBrief">();
	}
	static class UFortQuestBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortQuestBrief>();
	}
};
static_assert(alignof(UFortQuestBrief) == 0x000008, "Wrong alignment on UFortQuestBrief");
static_assert(sizeof(UFortQuestBrief) == 0x000330, "Wrong size on UFortQuestBrief");
static_assert(offsetof(UFortQuestBrief, ThisMatchOnlyQuestText) == 0x0002E8, "Member 'UFortQuestBrief::ThisMatchOnlyQuestText' has a wrong offset!");
static_assert(offsetof(UFortQuestBrief, Text_Objective) == 0x000300, "Member 'UFortQuestBrief::Text_Objective' has a wrong offset!");
static_assert(offsetof(UFortQuestBrief, Text_MoneyReward) == 0x000308, "Member 'UFortQuestBrief::Text_MoneyReward' has a wrong offset!");
static_assert(offsetof(UFortQuestBrief, Text_XpReward) == 0x000310, "Member 'UFortQuestBrief::Text_XpReward' has a wrong offset!");
static_assert(offsetof(UFortQuestBrief, Text_ExpirationTime) == 0x000318, "Member 'UFortQuestBrief::Text_ExpirationTime' has a wrong offset!");
static_assert(offsetof(UFortQuestBrief, LazyImage_QuestProviderImage) == 0x000320, "Member 'UFortQuestBrief::LazyImage_QuestProviderImage' has a wrong offset!");
static_assert(offsetof(UFortQuestBrief, Overlay_QuestProvider) == 0x000328, "Member 'UFortQuestBrief::Overlay_QuestProvider' has a wrong offset!");

// Class FortniteConversationUI.FortShowFutureStormCircleBrief
// 0x0020 (0x0318 - 0x02F8)
class UFortShowFutureStormCircleBrief final : public UFortItemTransactionBrief
{
public:
	class FText                                   PurchaseServiceText;                               // 0x02F8(0x0018)(Edit, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   Text_Display;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnAbleToPurchase();
	void OnUnableToPurchase(EPreventUseStormCircleServiceReason Reason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortShowFutureStormCircleBrief">();
	}
	static class UFortShowFutureStormCircleBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortShowFutureStormCircleBrief>();
	}
};
static_assert(alignof(UFortShowFutureStormCircleBrief) == 0x000008, "Wrong alignment on UFortShowFutureStormCircleBrief");
static_assert(sizeof(UFortShowFutureStormCircleBrief) == 0x000318, "Wrong size on UFortShowFutureStormCircleBrief");
static_assert(offsetof(UFortShowFutureStormCircleBrief, PurchaseServiceText) == 0x0002F8, "Member 'UFortShowFutureStormCircleBrief::PurchaseServiceText' has a wrong offset!");
static_assert(offsetof(UFortShowFutureStormCircleBrief, Text_Display) == 0x000310, "Member 'UFortShowFutureStormCircleBrief::Text_Display' has a wrong offset!");

// Class FortniteConversationUI.FortSingleOrMultiItemFundBrief
// 0x0060 (0x0340 - 0x02E0)
class UFortSingleOrMultiItemFundBrief final : public UFortConversationOptionBrief
{
public:
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SingleItemBrief;                                   // 0x02E8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   MultiItemsBrief;                                   // 0x0310(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               Overlay_Brief;                                     // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortSingleOrMultiItemFundBrief">();
	}
	static class UFortSingleOrMultiItemFundBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortSingleOrMultiItemFundBrief>();
	}
};
static_assert(alignof(UFortSingleOrMultiItemFundBrief) == 0x000008, "Wrong alignment on UFortSingleOrMultiItemFundBrief");
static_assert(sizeof(UFortSingleOrMultiItemFundBrief) == 0x000340, "Wrong size on UFortSingleOrMultiItemFundBrief");
static_assert(offsetof(UFortSingleOrMultiItemFundBrief, SingleItemBrief) == 0x0002E8, "Member 'UFortSingleOrMultiItemFundBrief::SingleItemBrief' has a wrong offset!");
static_assert(offsetof(UFortSingleOrMultiItemFundBrief, MultiItemsBrief) == 0x000310, "Member 'UFortSingleOrMultiItemFundBrief::MultiItemsBrief' has a wrong offset!");
static_assert(offsetof(UFortSingleOrMultiItemFundBrief, Overlay_Brief) == 0x000338, "Member 'UFortSingleOrMultiItemFundBrief::Overlay_Brief' has a wrong offset!");

// Class FortniteConversationUI.FortTransactionStrip
// 0x0020 (0x02D8 - 0x02B8)
class UFortTransactionStrip final : public UUserWidget
{
public:
	class UCommonTextBlock*                       Text_CostDescription;                              // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortWorldItemDefinition*               ResourceCurrency;                                  // 0x02C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x10];                                     // 0x02C8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleOnItemCountChanged(TScriptInterface<class IFortInventoryOwnerInterface> InventoryOwner, class UFortItemDefinition* Definition, int32 Delta);
	void OnSetTransactionCostVisibility(const bool bVisible);
	void OnTransactionInfoReceived(const struct FFortServiceTransactionInfo& TransactionInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortTransactionStrip">();
	}
	static class UFortTransactionStrip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortTransactionStrip>();
	}
};
static_assert(alignof(UFortTransactionStrip) == 0x000008, "Wrong alignment on UFortTransactionStrip");
static_assert(sizeof(UFortTransactionStrip) == 0x0002D8, "Wrong size on UFortTransactionStrip");
static_assert(offsetof(UFortTransactionStrip, Text_CostDescription) == 0x0002B8, "Member 'UFortTransactionStrip::Text_CostDescription' has a wrong offset!");
static_assert(offsetof(UFortTransactionStrip, ResourceCurrency) == 0x0002C0, "Member 'UFortTransactionStrip::ResourceCurrency' has a wrong offset!");

// Class FortniteConversationUI.FortUpgradeBrief
// 0x0000 (0x02F8 - 0x02F8)
class UFortUpgradeBrief final : public UFortItemTransactionBrief
{
public:
	void OnUnableToUpgrade(EFortWeaponUpgradeInteractionResult CannotUpgradeCause);
	void OnUpgradeInfoReceived(class UFortItem* CurrentWeapon);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortUpgradeBrief">();
	}
	static class UFortUpgradeBrief* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortUpgradeBrief>();
	}
};
static_assert(alignof(UFortUpgradeBrief) == 0x000008, "Wrong alignment on UFortUpgradeBrief");
static_assert(sizeof(UFortUpgradeBrief) == 0x0002F8, "Wrong size on UFortUpgradeBrief");

// Class FortniteConversationUI.MobileConversationScreen
// 0x0028 (0x05F0 - 0x05C8)
class UMobileConversationScreen final : public UFortConversationScreen
{
public:
	class UButton*                                MobileButtonConfirm;                               // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                MobileButtonTouchInformation;                      // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5D8[0x8];                                      // 0x05D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      MobileCloseButton;                                 // 0x05E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonVisibilitySwitcher*              Switcher_CenteredDetails;                          // 0x05E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnHandleConfirmClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MobileConversationScreen">();
	}
	static class UMobileConversationScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMobileConversationScreen>();
	}
};
static_assert(alignof(UMobileConversationScreen) == 0x000008, "Wrong alignment on UMobileConversationScreen");
static_assert(sizeof(UMobileConversationScreen) == 0x0005F0, "Wrong size on UMobileConversationScreen");
static_assert(offsetof(UMobileConversationScreen, MobileButtonConfirm) == 0x0005C8, "Member 'UMobileConversationScreen::MobileButtonConfirm' has a wrong offset!");
static_assert(offsetof(UMobileConversationScreen, MobileButtonTouchInformation) == 0x0005D0, "Member 'UMobileConversationScreen::MobileButtonTouchInformation' has a wrong offset!");
static_assert(offsetof(UMobileConversationScreen, MobileCloseButton) == 0x0005E0, "Member 'UMobileConversationScreen::MobileCloseButton' has a wrong offset!");
static_assert(offsetof(UMobileConversationScreen, Switcher_CenteredDetails) == 0x0005E8, "Member 'UMobileConversationScreen::Switcher_CenteredDetails' has a wrong offset!");

}

