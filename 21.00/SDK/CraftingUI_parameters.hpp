#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CraftingUI

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function CraftingUI.FortCraftingItemInfoWidget.OnItemRaritySet
// 0x0088 (0x0088 - 0x0000)
struct FortCraftingItemInfoWidget_OnItemRaritySet final
{
public:
	EFortRarity                                   Rarity;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    RarityItemData;                                    // 0x0008(0x0080)(ConstParm, Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCraftingItemInfoWidget_OnItemRaritySet) == 0x000008, "Wrong alignment on FortCraftingItemInfoWidget_OnItemRaritySet");
static_assert(sizeof(FortCraftingItemInfoWidget_OnItemRaritySet) == 0x000088, "Wrong size on FortCraftingItemInfoWidget_OnItemRaritySet");
static_assert(offsetof(FortCraftingItemInfoWidget_OnItemRaritySet, Rarity) == 0x000000, "Member 'FortCraftingItemInfoWidget_OnItemRaritySet::Rarity' has a wrong offset!");
static_assert(offsetof(FortCraftingItemInfoWidget_OnItemRaritySet, RarityItemData) == 0x000008, "Member 'FortCraftingItemInfoWidget_OnItemRaritySet::RarityItemData' has a wrong offset!");

// Function CraftingUI.AthenaCraftingQuickBarButton.OnCanCraftNowChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaCraftingQuickBarButton_OnCanCraftNowChanged final
{
public:
	bool                                          bCanCraftNow;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaCraftingQuickBarButton_OnCanCraftNowChanged) == 0x000001, "Wrong alignment on AthenaCraftingQuickBarButton_OnCanCraftNowChanged");
static_assert(sizeof(AthenaCraftingQuickBarButton_OnCanCraftNowChanged) == 0x000001, "Wrong size on AthenaCraftingQuickBarButton_OnCanCraftNowChanged");
static_assert(offsetof(AthenaCraftingQuickBarButton_OnCanCraftNowChanged, bCanCraftNow) == 0x000000, "Member 'AthenaCraftingQuickBarButton_OnCanCraftNowChanged::bCanCraftNow' has a wrong offset!");

// Function CraftingUI.AthenaCraftingQuickBarButton.OnIsCraftableItemChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaCraftingQuickBarButton_OnIsCraftableItemChanged final
{
public:
	bool                                          bIsCraftableItem;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaCraftingQuickBarButton_OnIsCraftableItemChanged) == 0x000001, "Wrong alignment on AthenaCraftingQuickBarButton_OnIsCraftableItemChanged");
static_assert(sizeof(AthenaCraftingQuickBarButton_OnIsCraftableItemChanged) == 0x000001, "Wrong size on AthenaCraftingQuickBarButton_OnIsCraftableItemChanged");
static_assert(offsetof(AthenaCraftingQuickBarButton_OnIsCraftableItemChanged, bIsCraftableItem) == 0x000000, "Member 'AthenaCraftingQuickBarButton_OnIsCraftableItemChanged::bIsCraftableItem' has a wrong offset!");

// Function CraftingUI.AthenaEquippedItemCraftingIndicator.HandleWeaponEquipped
// 0x0010 (0x0010 - 0x0000)
struct AthenaEquippedItemCraftingIndicator_HandleWeaponEquipped final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaEquippedItemCraftingIndicator_HandleWeaponEquipped) == 0x000008, "Wrong alignment on AthenaEquippedItemCraftingIndicator_HandleWeaponEquipped");
static_assert(sizeof(AthenaEquippedItemCraftingIndicator_HandleWeaponEquipped) == 0x000010, "Wrong size on AthenaEquippedItemCraftingIndicator_HandleWeaponEquipped");
static_assert(offsetof(AthenaEquippedItemCraftingIndicator_HandleWeaponEquipped, NewWeapon) == 0x000000, "Member 'AthenaEquippedItemCraftingIndicator_HandleWeaponEquipped::NewWeapon' has a wrong offset!");
static_assert(offsetof(AthenaEquippedItemCraftingIndicator_HandleWeaponEquipped, PrevWeapon) == 0x000008, "Member 'AthenaEquippedItemCraftingIndicator_HandleWeaponEquipped::PrevWeapon' has a wrong offset!");

// Function CraftingUI.AthenaEquippedItemCraftingIndicator.OnCanCraftNowChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaEquippedItemCraftingIndicator_OnCanCraftNowChanged final
{
public:
	bool                                          bCanCraftNow;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaEquippedItemCraftingIndicator_OnCanCraftNowChanged) == 0x000001, "Wrong alignment on AthenaEquippedItemCraftingIndicator_OnCanCraftNowChanged");
static_assert(sizeof(AthenaEquippedItemCraftingIndicator_OnCanCraftNowChanged) == 0x000001, "Wrong size on AthenaEquippedItemCraftingIndicator_OnCanCraftNowChanged");
static_assert(offsetof(AthenaEquippedItemCraftingIndicator_OnCanCraftNowChanged, bCanCraftNow) == 0x000000, "Member 'AthenaEquippedItemCraftingIndicator_OnCanCraftNowChanged::bCanCraftNow' has a wrong offset!");

// Function CraftingUI.AthenaEquippedItemCraftingIndicator.OnIsCraftableItemChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaEquippedItemCraftingIndicator_OnIsCraftableItemChanged final
{
public:
	bool                                          bIsCraftableItem;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaEquippedItemCraftingIndicator_OnIsCraftableItemChanged) == 0x000001, "Wrong alignment on AthenaEquippedItemCraftingIndicator_OnIsCraftableItemChanged");
static_assert(sizeof(AthenaEquippedItemCraftingIndicator_OnIsCraftableItemChanged) == 0x000001, "Wrong size on AthenaEquippedItemCraftingIndicator_OnIsCraftableItemChanged");
static_assert(offsetof(AthenaEquippedItemCraftingIndicator_OnIsCraftableItemChanged, bIsCraftableItem) == 0x000000, "Member 'AthenaEquippedItemCraftingIndicator_OnIsCraftableItemChanged::bIsCraftableItem' has a wrong offset!");

// Function CraftingUI.AthenaInventoryItemInfoCraftingIndicator.HandleInventoryItemSelected
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryItemInfoCraftingIndicator_HandleInventoryItemSelected final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryItemInfoCraftingIndicator_HandleInventoryItemSelected) == 0x000008, "Wrong alignment on AthenaInventoryItemInfoCraftingIndicator_HandleInventoryItemSelected");
static_assert(sizeof(AthenaInventoryItemInfoCraftingIndicator_HandleInventoryItemSelected) == 0x000008, "Wrong size on AthenaInventoryItemInfoCraftingIndicator_HandleInventoryItemSelected");
static_assert(offsetof(AthenaInventoryItemInfoCraftingIndicator_HandleInventoryItemSelected, SelectedItem) == 0x000000, "Member 'AthenaInventoryItemInfoCraftingIndicator_HandleInventoryItemSelected::SelectedItem' has a wrong offset!");

// Function CraftingUI.AthenaInventoryItemInfoCraftingIndicator.OnCanCraftNowChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaInventoryItemInfoCraftingIndicator_OnCanCraftNowChanged final
{
public:
	bool                                          bCanCraftNow;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryItemInfoCraftingIndicator_OnCanCraftNowChanged) == 0x000001, "Wrong alignment on AthenaInventoryItemInfoCraftingIndicator_OnCanCraftNowChanged");
static_assert(sizeof(AthenaInventoryItemInfoCraftingIndicator_OnCanCraftNowChanged) == 0x000001, "Wrong size on AthenaInventoryItemInfoCraftingIndicator_OnCanCraftNowChanged");
static_assert(offsetof(AthenaInventoryItemInfoCraftingIndicator_OnCanCraftNowChanged, bCanCraftNow) == 0x000000, "Member 'AthenaInventoryItemInfoCraftingIndicator_OnCanCraftNowChanged::bCanCraftNow' has a wrong offset!");

// Function CraftingUI.AthenaInventoryItemInfoCraftingIndicator.OnIsCraftableItemChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaInventoryItemInfoCraftingIndicator_OnIsCraftableItemChanged final
{
public:
	bool                                          bIsCraftableItem;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryItemInfoCraftingIndicator_OnIsCraftableItemChanged) == 0x000001, "Wrong alignment on AthenaInventoryItemInfoCraftingIndicator_OnIsCraftableItemChanged");
static_assert(sizeof(AthenaInventoryItemInfoCraftingIndicator_OnIsCraftableItemChanged) == 0x000001, "Wrong size on AthenaInventoryItemInfoCraftingIndicator_OnIsCraftableItemChanged");
static_assert(offsetof(AthenaInventoryItemInfoCraftingIndicator_OnIsCraftableItemChanged, bIsCraftableItem) == 0x000000, "Member 'AthenaInventoryItemInfoCraftingIndicator_OnIsCraftableItemChanged::bIsCraftableItem' has a wrong offset!");

// Function CraftingUI.AthenaQuickBarSlotCraftingIndicator.HandleWeaponEquipped
// 0x0010 (0x0010 - 0x0000)
struct AthenaQuickBarSlotCraftingIndicator_HandleWeaponEquipped final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaQuickBarSlotCraftingIndicator_HandleWeaponEquipped) == 0x000008, "Wrong alignment on AthenaQuickBarSlotCraftingIndicator_HandleWeaponEquipped");
static_assert(sizeof(AthenaQuickBarSlotCraftingIndicator_HandleWeaponEquipped) == 0x000010, "Wrong size on AthenaQuickBarSlotCraftingIndicator_HandleWeaponEquipped");
static_assert(offsetof(AthenaQuickBarSlotCraftingIndicator_HandleWeaponEquipped, NewWeapon) == 0x000000, "Member 'AthenaQuickBarSlotCraftingIndicator_HandleWeaponEquipped::NewWeapon' has a wrong offset!");
static_assert(offsetof(AthenaQuickBarSlotCraftingIndicator_HandleWeaponEquipped, PrevWeapon) == 0x000008, "Member 'AthenaQuickBarSlotCraftingIndicator_HandleWeaponEquipped::PrevWeapon' has a wrong offset!");

// Function CraftingUI.AthenaQuickBarSlotCraftingIndicator.OnCanCraftNowChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaQuickBarSlotCraftingIndicator_OnCanCraftNowChanged final
{
public:
	bool                                          bCanCraftNow;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaQuickBarSlotCraftingIndicator_OnCanCraftNowChanged) == 0x000001, "Wrong alignment on AthenaQuickBarSlotCraftingIndicator_OnCanCraftNowChanged");
static_assert(sizeof(AthenaQuickBarSlotCraftingIndicator_OnCanCraftNowChanged) == 0x000001, "Wrong size on AthenaQuickBarSlotCraftingIndicator_OnCanCraftNowChanged");
static_assert(offsetof(AthenaQuickBarSlotCraftingIndicator_OnCanCraftNowChanged, bCanCraftNow) == 0x000000, "Member 'AthenaQuickBarSlotCraftingIndicator_OnCanCraftNowChanged::bCanCraftNow' has a wrong offset!");

// Function CraftingUI.AthenaQuickBarSlotCraftingIndicator.OnIngredientChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaQuickBarSlotCraftingIndicator_OnIngredientChanged final
{
public:
	bool                                          bCanCraftNow;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaQuickBarSlotCraftingIndicator_OnIngredientChanged) == 0x000001, "Wrong alignment on AthenaQuickBarSlotCraftingIndicator_OnIngredientChanged");
static_assert(sizeof(AthenaQuickBarSlotCraftingIndicator_OnIngredientChanged) == 0x000001, "Wrong size on AthenaQuickBarSlotCraftingIndicator_OnIngredientChanged");
static_assert(offsetof(AthenaQuickBarSlotCraftingIndicator_OnIngredientChanged, bCanCraftNow) == 0x000000, "Member 'AthenaQuickBarSlotCraftingIndicator_OnIngredientChanged::bCanCraftNow' has a wrong offset!");

// Function CraftingUI.AthenaQuickBarSlotCraftingIndicator.OnIsCraftableItemChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaQuickBarSlotCraftingIndicator_OnIsCraftableItemChanged final
{
public:
	bool                                          bIsCraftableItem;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaQuickBarSlotCraftingIndicator_OnIsCraftableItemChanged) == 0x000001, "Wrong alignment on AthenaQuickBarSlotCraftingIndicator_OnIsCraftableItemChanged");
static_assert(sizeof(AthenaQuickBarSlotCraftingIndicator_OnIsCraftableItemChanged) == 0x000001, "Wrong size on AthenaQuickBarSlotCraftingIndicator_OnIsCraftableItemChanged");
static_assert(offsetof(AthenaQuickBarSlotCraftingIndicator_OnIsCraftableItemChanged, bIsCraftableItem) == 0x000000, "Member 'AthenaQuickBarSlotCraftingIndicator_OnIsCraftableItemChanged::bIsCraftableItem' has a wrong offset!");

// Function CraftingUI.FortCraftingIngredientWidget.OnIngredientWidgetUpdated
// 0x000C (0x000C - 0x0000)
struct FortCraftingIngredientWidget_OnIngredientWidgetUpdated final
{
public:
	int32                                         NumAvailable;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumRequired;                                       // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPrimaryIngredient;                              // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLastIngredient;                                 // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCraftingIngredientWidget_OnIngredientWidgetUpdated) == 0x000004, "Wrong alignment on FortCraftingIngredientWidget_OnIngredientWidgetUpdated");
static_assert(sizeof(FortCraftingIngredientWidget_OnIngredientWidgetUpdated) == 0x00000C, "Wrong size on FortCraftingIngredientWidget_OnIngredientWidgetUpdated");
static_assert(offsetof(FortCraftingIngredientWidget_OnIngredientWidgetUpdated, NumAvailable) == 0x000000, "Member 'FortCraftingIngredientWidget_OnIngredientWidgetUpdated::NumAvailable' has a wrong offset!");
static_assert(offsetof(FortCraftingIngredientWidget_OnIngredientWidgetUpdated, NumRequired) == 0x000004, "Member 'FortCraftingIngredientWidget_OnIngredientWidgetUpdated::NumRequired' has a wrong offset!");
static_assert(offsetof(FortCraftingIngredientWidget_OnIngredientWidgetUpdated, bIsPrimaryIngredient) == 0x000008, "Member 'FortCraftingIngredientWidget_OnIngredientWidgetUpdated::bIsPrimaryIngredient' has a wrong offset!");
static_assert(offsetof(FortCraftingIngredientWidget_OnIngredientWidgetUpdated, bIsLastIngredient) == 0x000009, "Member 'FortCraftingIngredientWidget_OnIngredientWidgetUpdated::bIsLastIngredient' has a wrong offset!");

// Function CraftingUI.FortCraftingTab.HandleInventoryItemSelected
// 0x0008 (0x0008 - 0x0000)
struct FortCraftingTab_HandleInventoryItemSelected final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCraftingTab_HandleInventoryItemSelected) == 0x000008, "Wrong alignment on FortCraftingTab_HandleInventoryItemSelected");
static_assert(sizeof(FortCraftingTab_HandleInventoryItemSelected) == 0x000008, "Wrong size on FortCraftingTab_HandleInventoryItemSelected");
static_assert(offsetof(FortCraftingTab_HandleInventoryItemSelected, Item) == 0x000000, "Member 'FortCraftingTab_HandleInventoryItemSelected::Item' has a wrong offset!");

// Function CraftingUI.FortCraftingTab.OnFormulaListUpdated
// 0x0004 (0x0004 - 0x0000)
struct FortCraftingTab_OnFormulaListUpdated final
{
public:
	int32                                         NumFormulas;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCraftingTab_OnFormulaListUpdated) == 0x000004, "Wrong alignment on FortCraftingTab_OnFormulaListUpdated");
static_assert(sizeof(FortCraftingTab_OnFormulaListUpdated) == 0x000004, "Wrong size on FortCraftingTab_OnFormulaListUpdated");
static_assert(offsetof(FortCraftingTab_OnFormulaListUpdated, NumFormulas) == 0x000000, "Member 'FortCraftingTab_OnFormulaListUpdated::NumFormulas' has a wrong offset!");

// Function CraftingUI.FortPotContentsPopup.SetOwningCraftingObject
// 0x0008 (0x0008 - 0x0000)
struct FortPotContentsPopup_SetOwningCraftingObject final
{
public:
	class ACraftingObjectBGA*                     InCraftingObject;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPotContentsPopup_SetOwningCraftingObject) == 0x000008, "Wrong alignment on FortPotContentsPopup_SetOwningCraftingObject");
static_assert(sizeof(FortPotContentsPopup_SetOwningCraftingObject) == 0x000008, "Wrong size on FortPotContentsPopup_SetOwningCraftingObject");
static_assert(offsetof(FortPotContentsPopup_SetOwningCraftingObject, InCraftingObject) == 0x000000, "Member 'FortPotContentsPopup_SetOwningCraftingObject::InCraftingObject' has a wrong offset!");

}

