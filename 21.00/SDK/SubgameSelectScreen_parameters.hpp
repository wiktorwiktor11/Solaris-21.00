#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubgameSelectScreen

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SubgameSelectScreen.SubgameSelectScreen_C.OnEventUpdated_57187EC14A536D0960088EB25BDF39E5
// 0x0028 (0x0028 - 0x0000)
struct SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5");
static_assert(sizeof(SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5) == 0x000028, "Wrong size on SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5");
static_assert(offsetof(SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5, EventName) == 0x000000, "Member 'SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5::EventName' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5, TimeUntilEnd) == 0x000010, "Member 'SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5, TimeSinceBegin) == 0x000018, "Member 'SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5, TimespanRatio) == 0x000020, "Member 'SubgameSelectScreen_C_OnEventUpdated_57187EC14A536D0960088EB25BDF39E5::TimespanRatio' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.OnEventEnded_57187EC14A536D0960088EB25BDF39E5
// 0x0028 (0x0028 - 0x0000)
struct SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5");
static_assert(sizeof(SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5) == 0x000028, "Wrong size on SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5");
static_assert(offsetof(SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5, EventName) == 0x000000, "Member 'SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5::EventName' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5, TimeUntilEnd) == 0x000010, "Member 'SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5, TimeSinceBegin) == 0x000018, "Member 'SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5, TimespanRatio) == 0x000020, "Member 'SubgameSelectScreen_C_OnEventEnded_57187EC14A536D0960088EB25BDF39E5::TimespanRatio' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.OnEventActive_57187EC14A536D0960088EB25BDF39E5
// 0x0028 (0x0028 - 0x0000)
struct SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5");
static_assert(sizeof(SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5) == 0x000028, "Wrong size on SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5");
static_assert(offsetof(SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5, EventName) == 0x000000, "Member 'SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5::EventName' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5, TimeUntilEnd) == 0x000010, "Member 'SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5::TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5, TimeSinceBegin) == 0x000018, "Member 'SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5, TimespanRatio) == 0x000020, "Member 'SubgameSelectScreen_C_OnEventActive_57187EC14A536D0960088EB25BDF39E5::TimespanRatio' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.IsMinorShutdownWarningEnabled
// 0x0018 (0x0018 - 0x0000)
struct SubgameSelectScreen_C_IsMinorShutdownWarningEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureState                           CallFunc_GetFeatureState_OutFeatureState;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureStateReason                     CallFunc_GetFeatureState_OutReason;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_IsMinorShutdownWarningEnabled");
static_assert(sizeof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled) == 0x000018, "Wrong size on SubgameSelectScreen_C_IsMinorShutdownWarningEnabled");
static_assert(offsetof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled, Enabled) == 0x000000, "Member 'SubgameSelectScreen_C_IsMinorShutdownWarningEnabled::Enabled' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'SubgameSelectScreen_C_IsMinorShutdownWarningEnabled::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled, CallFunc_GetFeatureState_OutFeatureState) == 0x000010, "Member 'SubgameSelectScreen_C_IsMinorShutdownWarningEnabled::CallFunc_GetFeatureState_OutFeatureState' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled, CallFunc_GetFeatureState_OutReason) == 0x000011, "Member 'SubgameSelectScreen_C_IsMinorShutdownWarningEnabled::CallFunc_GetFeatureState_OutReason' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsMinorShutdownWarningEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'SubgameSelectScreen_C_IsMinorShutdownWarningEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.IsBusyMatchmaking
// 0x0018 (0x0018 - 0x0000)
struct SubgameSelectScreen_C_IsBusyMatchmaking final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMatchmakingContext*                CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchmakingLocal_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_IsBusyMatchmaking) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_IsBusyMatchmaking");
static_assert(sizeof(SubgameSelectScreen_C_IsBusyMatchmaking) == 0x000018, "Wrong size on SubgameSelectScreen_C_IsBusyMatchmaking");
static_assert(offsetof(SubgameSelectScreen_C_IsBusyMatchmaking, ReturnValue) == 0x000000, "Member 'SubgameSelectScreen_C_IsBusyMatchmaking::ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsBusyMatchmaking, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'SubgameSelectScreen_C_IsBusyMatchmaking::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_IsBusyMatchmaking, CallFunc_IsMatchmakingLocal_ReturnValue) == 0x000010, "Member 'SubgameSelectScreen_C_IsBusyMatchmaking::CallFunc_IsMatchmakingLocal_ReturnValue' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.InitializeTextureCycle
// 0x0018 (0x0018 - 0x0000)
struct SubgameSelectScreen_C_InitializeTextureCycle final
{
public:
	class UTexture*                               CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_InitializeTextureCycle) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_InitializeTextureCycle");
static_assert(sizeof(SubgameSelectScreen_C_InitializeTextureCycle) == 0x000018, "Wrong size on SubgameSelectScreen_C_InitializeTextureCycle");
static_assert(offsetof(SubgameSelectScreen_C_InitializeTextureCycle, CallFunc_Array_Get_Item) == 0x000000, "Member 'SubgameSelectScreen_C_InitializeTextureCycle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_InitializeTextureCycle, CallFunc_Array_LastIndex_ReturnValue) == 0x000008, "Member 'SubgameSelectScreen_C_InitializeTextureCycle::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_InitializeTextureCycle, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'SubgameSelectScreen_C_InitializeTextureCycle::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.ExecuteUbergraph_SubgameSelectScreen
// 0x00D0 (0x00D0 - 0x0000)
struct SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName_2;                    // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd_2;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin_2;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio_2;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_EventName_1;                    // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd_1;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin_1;               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio_1;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_EventName;                      // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin;                 // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x008C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              Temp_struct_Variable;                              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable_1;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFortAsyncAction_CalendarEventWatcher*  CallFunc_WatchCalendarEvent_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen");
static_assert(sizeof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen) == 0x0000D0, "Wrong size on SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, EntryPoint) == 0x000000, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_EventName_2) == 0x000008, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_EventName_2' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_TimeUntilEnd_2) == 0x000018, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_TimeUntilEnd_2' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_TimeSinceBegin_2) == 0x000020, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_TimeSinceBegin_2' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_TimeSpanRatio_2) == 0x000028, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_TimeSpanRatio_2' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_EventName_1) == 0x000038, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_EventName_1' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_TimeUntilEnd_1) == 0x000048, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_TimeUntilEnd_1' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_TimeSinceBegin_1) == 0x000050, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_TimeSinceBegin_1' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_TimeSpanRatio_1) == 0x000058, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_TimeSpanRatio_1' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_EventName) == 0x000068, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_TimeUntilEnd) == 0x000078, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_TimeSinceBegin) == 0x000080, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CustomEvent_TimeSpanRatio) == 0x000088, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CustomEvent_TimeSpanRatio' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, K2Node_CreateDelegate_OutputDelegate_2) == 0x00008C, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, Temp_float_Variable) == 0x000098, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, Temp_struct_Variable) == 0x0000A0, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, Temp_struct_Variable_1) == 0x0000A8, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, Temp_string_Variable) == 0x0000B0, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, CallFunc_WatchCalendarEvent_ReturnValue) == 0x0000C0, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::CallFunc_WatchCalendarEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'SubgameSelectScreen_C_ExecuteUbergraph_SubgameSelectScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SubgameSelectScreen.SubgameSelectScreen_C.AdvanceTextureCycle
// 0x0028 (0x0028 - 0x0000)
struct SubgameSelectScreen_C_AdvanceTextureCycle final
{
public:
	int32                                         NextTextureIndex;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTextureIndex;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubgameSelectScreen_C_AdvanceTextureCycle) == 0x000008, "Wrong alignment on SubgameSelectScreen_C_AdvanceTextureCycle");
static_assert(sizeof(SubgameSelectScreen_C_AdvanceTextureCycle) == 0x000028, "Wrong size on SubgameSelectScreen_C_AdvanceTextureCycle");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, NextTextureIndex) == 0x000000, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::NextTextureIndex' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CurrentTextureIndex) == 0x000004, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CurrentTextureIndex' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CallFunc_Array_Get_Item) == 0x000010, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubgameSelectScreen_C_AdvanceTextureCycle, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'SubgameSelectScreen_C_AdvanceTextureCycle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

