#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Curie

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Curie_structs.hpp"


namespace SDK::Params
{

// Function Curie.CurieInterface.OnCurieContainerAcquired_BP
// 0x0004 (0x0004 - 0x0000)
struct CurieInterface_OnCurieContainerAcquired_BP final
{
public:
	struct FCurieContainerHandle                  CurieContainerHandle;                              // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieInterface_OnCurieContainerAcquired_BP) == 0x000004, "Wrong alignment on CurieInterface_OnCurieContainerAcquired_BP");
static_assert(sizeof(CurieInterface_OnCurieContainerAcquired_BP) == 0x000004, "Wrong size on CurieInterface_OnCurieContainerAcquired_BP");
static_assert(offsetof(CurieInterface_OnCurieContainerAcquired_BP, CurieContainerHandle) == 0x000000, "Member 'CurieInterface_OnCurieContainerAcquired_BP::CurieContainerHandle' has a wrong offset!");

// Function Curie.CurieInterface.OnCurieContainerReleased_BP
// 0x0004 (0x0004 - 0x0000)
struct CurieInterface_OnCurieContainerReleased_BP final
{
public:
	struct FCurieContainerHandle                  CurieContainerHandle;                              // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieInterface_OnCurieContainerReleased_BP) == 0x000004, "Wrong alignment on CurieInterface_OnCurieContainerReleased_BP");
static_assert(sizeof(CurieInterface_OnCurieContainerReleased_BP) == 0x000004, "Wrong size on CurieInterface_OnCurieContainerReleased_BP");
static_assert(offsetof(CurieInterface_OnCurieContainerReleased_BP, CurieContainerHandle) == 0x000000, "Member 'CurieInterface_OnCurieContainerReleased_BP::CurieContainerHandle' has a wrong offset!");

// Function Curie.CurieInterface.OnCurieContainerReparented_BP
// 0x0004 (0x0004 - 0x0000)
struct CurieInterface_OnCurieContainerReparented_BP final
{
public:
	struct FCurieContainerHandle                  CurieContainerHandle;                              // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieInterface_OnCurieContainerReparented_BP) == 0x000004, "Wrong alignment on CurieInterface_OnCurieContainerReparented_BP");
static_assert(sizeof(CurieInterface_OnCurieContainerReparented_BP) == 0x000004, "Wrong size on CurieInterface_OnCurieContainerReparented_BP");
static_assert(offsetof(CurieInterface_OnCurieContainerReparented_BP, CurieContainerHandle) == 0x000000, "Member 'CurieInterface_OnCurieContainerReparented_BP::CurieContainerHandle' has a wrong offset!");

// Function Curie.CurieInterface.OnCurieElementAttached_BP
// 0x0008 (0x0008 - 0x0000)
struct CurieInterface_OnCurieElementAttached_BP final
{
public:
	struct FCurieContainerHandle                  CurieContainerHandle;                              // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ElementTag;                                        // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieInterface_OnCurieElementAttached_BP) == 0x000004, "Wrong alignment on CurieInterface_OnCurieElementAttached_BP");
static_assert(sizeof(CurieInterface_OnCurieElementAttached_BP) == 0x000008, "Wrong size on CurieInterface_OnCurieElementAttached_BP");
static_assert(offsetof(CurieInterface_OnCurieElementAttached_BP, CurieContainerHandle) == 0x000000, "Member 'CurieInterface_OnCurieElementAttached_BP::CurieContainerHandle' has a wrong offset!");
static_assert(offsetof(CurieInterface_OnCurieElementAttached_BP, ElementTag) == 0x000004, "Member 'CurieInterface_OnCurieElementAttached_BP::ElementTag' has a wrong offset!");

// Function Curie.CurieInterface.OnCurieElementDetached_BP
// 0x0008 (0x0008 - 0x0000)
struct CurieInterface_OnCurieElementDetached_BP final
{
public:
	struct FCurieContainerHandle                  CurieContainerHandle;                              // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ElementTag;                                        // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieInterface_OnCurieElementDetached_BP) == 0x000004, "Wrong alignment on CurieInterface_OnCurieElementDetached_BP");
static_assert(sizeof(CurieInterface_OnCurieElementDetached_BP) == 0x000008, "Wrong size on CurieInterface_OnCurieElementDetached_BP");
static_assert(offsetof(CurieInterface_OnCurieElementDetached_BP, CurieContainerHandle) == 0x000000, "Member 'CurieInterface_OnCurieElementDetached_BP::CurieContainerHandle' has a wrong offset!");
static_assert(offsetof(CurieInterface_OnCurieElementDetached_BP, ElementTag) == 0x000004, "Member 'CurieInterface_OnCurieElementDetached_BP::ElementTag' has a wrong offset!");

// Function Curie.CurieInterface.OnCurieElementInteract_BP
// 0x0018 (0x0018 - 0x0000)
struct CurieInterface_OnCurieElementInteract_BP final
{
public:
	struct FCurieContainerHandle                  CurieContainerHandle;                              // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ElementTag;                                        // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurieInteractParamsHandle             InteractParamsHandle;                              // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieInterface_OnCurieElementInteract_BP) == 0x000008, "Wrong alignment on CurieInterface_OnCurieElementInteract_BP");
static_assert(sizeof(CurieInterface_OnCurieElementInteract_BP) == 0x000018, "Wrong size on CurieInterface_OnCurieElementInteract_BP");
static_assert(offsetof(CurieInterface_OnCurieElementInteract_BP, CurieContainerHandle) == 0x000000, "Member 'CurieInterface_OnCurieElementInteract_BP::CurieContainerHandle' has a wrong offset!");
static_assert(offsetof(CurieInterface_OnCurieElementInteract_BP, ElementTag) == 0x000004, "Member 'CurieInterface_OnCurieElementInteract_BP::ElementTag' has a wrong offset!");
static_assert(offsetof(CurieInterface_OnCurieElementInteract_BP, InteractParamsHandle) == 0x000008, "Member 'CurieInterface_OnCurieElementInteract_BP::InteractParamsHandle' has a wrong offset!");

// Function Curie.CurieInterface.OnCurieElementInteractBegun_BP
// 0x0018 (0x0018 - 0x0000)
struct CurieInterface_OnCurieElementInteractBegun_BP final
{
public:
	struct FCurieContainerHandle                  CurieContainerHandle;                              // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ElementTag;                                        // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurieInteractParamsHandle             InteractParamsHandle;                              // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieInterface_OnCurieElementInteractBegun_BP) == 0x000008, "Wrong alignment on CurieInterface_OnCurieElementInteractBegun_BP");
static_assert(sizeof(CurieInterface_OnCurieElementInteractBegun_BP) == 0x000018, "Wrong size on CurieInterface_OnCurieElementInteractBegun_BP");
static_assert(offsetof(CurieInterface_OnCurieElementInteractBegun_BP, CurieContainerHandle) == 0x000000, "Member 'CurieInterface_OnCurieElementInteractBegun_BP::CurieContainerHandle' has a wrong offset!");
static_assert(offsetof(CurieInterface_OnCurieElementInteractBegun_BP, ElementTag) == 0x000004, "Member 'CurieInterface_OnCurieElementInteractBegun_BP::ElementTag' has a wrong offset!");
static_assert(offsetof(CurieInterface_OnCurieElementInteractBegun_BP, InteractParamsHandle) == 0x000008, "Member 'CurieInterface_OnCurieElementInteractBegun_BP::InteractParamsHandle' has a wrong offset!");

// Function Curie.CurieInterface.OnCurieElementInteractEnded_BP
// 0x0018 (0x0018 - 0x0000)
struct CurieInterface_OnCurieElementInteractEnded_BP final
{
public:
	struct FCurieContainerHandle                  CurieContainerHandle;                              // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ElementTag;                                        // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurieInteractParamsHandle             InteractParamsHandle;                              // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieInterface_OnCurieElementInteractEnded_BP) == 0x000008, "Wrong alignment on CurieInterface_OnCurieElementInteractEnded_BP");
static_assert(sizeof(CurieInterface_OnCurieElementInteractEnded_BP) == 0x000018, "Wrong size on CurieInterface_OnCurieElementInteractEnded_BP");
static_assert(offsetof(CurieInterface_OnCurieElementInteractEnded_BP, CurieContainerHandle) == 0x000000, "Member 'CurieInterface_OnCurieElementInteractEnded_BP::CurieContainerHandle' has a wrong offset!");
static_assert(offsetof(CurieInterface_OnCurieElementInteractEnded_BP, ElementTag) == 0x000004, "Member 'CurieInterface_OnCurieElementInteractEnded_BP::ElementTag' has a wrong offset!");
static_assert(offsetof(CurieInterface_OnCurieElementInteractEnded_BP, InteractParamsHandle) == 0x000008, "Member 'CurieInterface_OnCurieElementInteractEnded_BP::InteractParamsHandle' has a wrong offset!");

// Function Curie.CurieInterface.OnCurieStateAttached_BP
// 0x0008 (0x0008 - 0x0000)
struct CurieInterface_OnCurieStateAttached_BP final
{
public:
	struct FCurieContainerHandle                  CurieContainerHandle;                              // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           StateTag;                                          // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieInterface_OnCurieStateAttached_BP) == 0x000004, "Wrong alignment on CurieInterface_OnCurieStateAttached_BP");
static_assert(sizeof(CurieInterface_OnCurieStateAttached_BP) == 0x000008, "Wrong size on CurieInterface_OnCurieStateAttached_BP");
static_assert(offsetof(CurieInterface_OnCurieStateAttached_BP, CurieContainerHandle) == 0x000000, "Member 'CurieInterface_OnCurieStateAttached_BP::CurieContainerHandle' has a wrong offset!");
static_assert(offsetof(CurieInterface_OnCurieStateAttached_BP, StateTag) == 0x000004, "Member 'CurieInterface_OnCurieStateAttached_BP::StateTag' has a wrong offset!");

// Function Curie.CurieInterface.OnCurieStateDetached_BP
// 0x0008 (0x0008 - 0x0000)
struct CurieInterface_OnCurieStateDetached_BP final
{
public:
	struct FCurieContainerHandle                  CurieContainerHandle;                              // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           StateTag;                                          // 0x0004(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieInterface_OnCurieStateDetached_BP) == 0x000004, "Wrong alignment on CurieInterface_OnCurieStateDetached_BP");
static_assert(sizeof(CurieInterface_OnCurieStateDetached_BP) == 0x000008, "Wrong size on CurieInterface_OnCurieStateDetached_BP");
static_assert(offsetof(CurieInterface_OnCurieStateDetached_BP, CurieContainerHandle) == 0x000000, "Member 'CurieInterface_OnCurieStateDetached_BP::CurieContainerHandle' has a wrong offset!");
static_assert(offsetof(CurieInterface_OnCurieStateDetached_BP, StateTag) == 0x000004, "Member 'CurieInterface_OnCurieStateDetached_BP::StateTag' has a wrong offset!");

// Function Curie.CurieManager.BindDelegateForCurieElementAttached
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_BindDelegateForCurieElementAttached final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_BindDelegateForCurieElementAttached) == 0x000008, "Wrong alignment on CurieManager_BindDelegateForCurieElementAttached");
static_assert(sizeof(CurieManager_BindDelegateForCurieElementAttached) == 0x000018, "Wrong size on CurieManager_BindDelegateForCurieElementAttached");
static_assert(offsetof(CurieManager_BindDelegateForCurieElementAttached, CurieOwner) == 0x000000, "Member 'CurieManager_BindDelegateForCurieElementAttached::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_BindDelegateForCurieElementAttached, Delegate) == 0x000008, "Member 'CurieManager_BindDelegateForCurieElementAttached::Delegate' has a wrong offset!");

// Function Curie.CurieManager.BindDelegateForCurieElementBeginInteract
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_BindDelegateForCurieElementBeginInteract final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_BindDelegateForCurieElementBeginInteract) == 0x000008, "Wrong alignment on CurieManager_BindDelegateForCurieElementBeginInteract");
static_assert(sizeof(CurieManager_BindDelegateForCurieElementBeginInteract) == 0x000018, "Wrong size on CurieManager_BindDelegateForCurieElementBeginInteract");
static_assert(offsetof(CurieManager_BindDelegateForCurieElementBeginInteract, CurieOwner) == 0x000000, "Member 'CurieManager_BindDelegateForCurieElementBeginInteract::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_BindDelegateForCurieElementBeginInteract, Delegate) == 0x000008, "Member 'CurieManager_BindDelegateForCurieElementBeginInteract::Delegate' has a wrong offset!");

// Function Curie.CurieManager.BindDelegateForCurieElementDetached
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_BindDelegateForCurieElementDetached final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_BindDelegateForCurieElementDetached) == 0x000008, "Wrong alignment on CurieManager_BindDelegateForCurieElementDetached");
static_assert(sizeof(CurieManager_BindDelegateForCurieElementDetached) == 0x000018, "Wrong size on CurieManager_BindDelegateForCurieElementDetached");
static_assert(offsetof(CurieManager_BindDelegateForCurieElementDetached, CurieOwner) == 0x000000, "Member 'CurieManager_BindDelegateForCurieElementDetached::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_BindDelegateForCurieElementDetached, Delegate) == 0x000008, "Member 'CurieManager_BindDelegateForCurieElementDetached::Delegate' has a wrong offset!");

// Function Curie.CurieManager.BindDelegateForCurieElementEndInteract
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_BindDelegateForCurieElementEndInteract final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_BindDelegateForCurieElementEndInteract) == 0x000008, "Wrong alignment on CurieManager_BindDelegateForCurieElementEndInteract");
static_assert(sizeof(CurieManager_BindDelegateForCurieElementEndInteract) == 0x000018, "Wrong size on CurieManager_BindDelegateForCurieElementEndInteract");
static_assert(offsetof(CurieManager_BindDelegateForCurieElementEndInteract, CurieOwner) == 0x000000, "Member 'CurieManager_BindDelegateForCurieElementEndInteract::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_BindDelegateForCurieElementEndInteract, Delegate) == 0x000008, "Member 'CurieManager_BindDelegateForCurieElementEndInteract::Delegate' has a wrong offset!");

// Function Curie.CurieManager.BindDelegateForCurieElementInteract
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_BindDelegateForCurieElementInteract final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_BindDelegateForCurieElementInteract) == 0x000008, "Wrong alignment on CurieManager_BindDelegateForCurieElementInteract");
static_assert(sizeof(CurieManager_BindDelegateForCurieElementInteract) == 0x000018, "Wrong size on CurieManager_BindDelegateForCurieElementInteract");
static_assert(offsetof(CurieManager_BindDelegateForCurieElementInteract, CurieOwner) == 0x000000, "Member 'CurieManager_BindDelegateForCurieElementInteract::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_BindDelegateForCurieElementInteract, Delegate) == 0x000008, "Member 'CurieManager_BindDelegateForCurieElementInteract::Delegate' has a wrong offset!");

// Function Curie.CurieManager.BindDelegateForCurieStateAttached
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_BindDelegateForCurieStateAttached final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& StateIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_BindDelegateForCurieStateAttached) == 0x000008, "Wrong alignment on CurieManager_BindDelegateForCurieStateAttached");
static_assert(sizeof(CurieManager_BindDelegateForCurieStateAttached) == 0x000018, "Wrong size on CurieManager_BindDelegateForCurieStateAttached");
static_assert(offsetof(CurieManager_BindDelegateForCurieStateAttached, CurieOwner) == 0x000000, "Member 'CurieManager_BindDelegateForCurieStateAttached::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_BindDelegateForCurieStateAttached, Delegate) == 0x000008, "Member 'CurieManager_BindDelegateForCurieStateAttached::Delegate' has a wrong offset!");

// Function Curie.CurieManager.BindDelegateForCurieStateDetached
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_BindDelegateForCurieStateDetached final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& StateIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_BindDelegateForCurieStateDetached) == 0x000008, "Wrong alignment on CurieManager_BindDelegateForCurieStateDetached");
static_assert(sizeof(CurieManager_BindDelegateForCurieStateDetached) == 0x000018, "Wrong size on CurieManager_BindDelegateForCurieStateDetached");
static_assert(offsetof(CurieManager_BindDelegateForCurieStateDetached, CurieOwner) == 0x000000, "Member 'CurieManager_BindDelegateForCurieStateDetached::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_BindDelegateForCurieStateDetached, Delegate) == 0x000008, "Member 'CurieManager_BindDelegateForCurieStateDetached::Delegate' has a wrong offset!");

// Function Curie.CurieManager.HandleContainerOwnerDestroyed
// 0x0008 (0x0008 - 0x0000)
struct CurieManager_HandleContainerOwnerDestroyed final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CurieManager_HandleContainerOwnerDestroyed) == 0x000008, "Wrong alignment on CurieManager_HandleContainerOwnerDestroyed");
static_assert(sizeof(CurieManager_HandleContainerOwnerDestroyed) == 0x000008, "Wrong size on CurieManager_HandleContainerOwnerDestroyed");
static_assert(offsetof(CurieManager_HandleContainerOwnerDestroyed, OwnerActor) == 0x000000, "Member 'CurieManager_HandleContainerOwnerDestroyed::OwnerActor' has a wrong offset!");

// Function Curie.CurieManager.UnbindDelegateForCurieElementAttached
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_UnbindDelegateForCurieElementAttached final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_UnbindDelegateForCurieElementAttached) == 0x000008, "Wrong alignment on CurieManager_UnbindDelegateForCurieElementAttached");
static_assert(sizeof(CurieManager_UnbindDelegateForCurieElementAttached) == 0x000018, "Wrong size on CurieManager_UnbindDelegateForCurieElementAttached");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieElementAttached, CurieOwner) == 0x000000, "Member 'CurieManager_UnbindDelegateForCurieElementAttached::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieElementAttached, Delegate) == 0x000008, "Member 'CurieManager_UnbindDelegateForCurieElementAttached::Delegate' has a wrong offset!");

// Function Curie.CurieManager.UnbindDelegateForCurieElementBeginInteract
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_UnbindDelegateForCurieElementBeginInteract final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_UnbindDelegateForCurieElementBeginInteract) == 0x000008, "Wrong alignment on CurieManager_UnbindDelegateForCurieElementBeginInteract");
static_assert(sizeof(CurieManager_UnbindDelegateForCurieElementBeginInteract) == 0x000018, "Wrong size on CurieManager_UnbindDelegateForCurieElementBeginInteract");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieElementBeginInteract, CurieOwner) == 0x000000, "Member 'CurieManager_UnbindDelegateForCurieElementBeginInteract::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieElementBeginInteract, Delegate) == 0x000008, "Member 'CurieManager_UnbindDelegateForCurieElementBeginInteract::Delegate' has a wrong offset!");

// Function Curie.CurieManager.UnbindDelegateForCurieElementDetached
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_UnbindDelegateForCurieElementDetached final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_UnbindDelegateForCurieElementDetached) == 0x000008, "Wrong alignment on CurieManager_UnbindDelegateForCurieElementDetached");
static_assert(sizeof(CurieManager_UnbindDelegateForCurieElementDetached) == 0x000018, "Wrong size on CurieManager_UnbindDelegateForCurieElementDetached");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieElementDetached, CurieOwner) == 0x000000, "Member 'CurieManager_UnbindDelegateForCurieElementDetached::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieElementDetached, Delegate) == 0x000008, "Member 'CurieManager_UnbindDelegateForCurieElementDetached::Delegate' has a wrong offset!");

// Function Curie.CurieManager.UnbindDelegateForCurieElementEndInteract
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_UnbindDelegateForCurieElementEndInteract final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_UnbindDelegateForCurieElementEndInteract) == 0x000008, "Wrong alignment on CurieManager_UnbindDelegateForCurieElementEndInteract");
static_assert(sizeof(CurieManager_UnbindDelegateForCurieElementEndInteract) == 0x000018, "Wrong size on CurieManager_UnbindDelegateForCurieElementEndInteract");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieElementEndInteract, CurieOwner) == 0x000000, "Member 'CurieManager_UnbindDelegateForCurieElementEndInteract::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieElementEndInteract, Delegate) == 0x000008, "Member 'CurieManager_UnbindDelegateForCurieElementEndInteract::Delegate' has a wrong offset!");

// Function Curie.CurieManager.UnbindDelegateForCurieElementInteract
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_UnbindDelegateForCurieElementInteract final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_UnbindDelegateForCurieElementInteract) == 0x000008, "Wrong alignment on CurieManager_UnbindDelegateForCurieElementInteract");
static_assert(sizeof(CurieManager_UnbindDelegateForCurieElementInteract) == 0x000018, "Wrong size on CurieManager_UnbindDelegateForCurieElementInteract");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieElementInteract, CurieOwner) == 0x000000, "Member 'CurieManager_UnbindDelegateForCurieElementInteract::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieElementInteract, Delegate) == 0x000008, "Member 'CurieManager_UnbindDelegateForCurieElementInteract::Delegate' has a wrong offset!");

// Function Curie.CurieManager.UnbindDelegateForCurieStateAttached
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_UnbindDelegateForCurieStateAttached final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& StateIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_UnbindDelegateForCurieStateAttached) == 0x000008, "Wrong alignment on CurieManager_UnbindDelegateForCurieStateAttached");
static_assert(sizeof(CurieManager_UnbindDelegateForCurieStateAttached) == 0x000018, "Wrong size on CurieManager_UnbindDelegateForCurieStateAttached");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieStateAttached, CurieOwner) == 0x000000, "Member 'CurieManager_UnbindDelegateForCurieStateAttached::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieStateAttached, Delegate) == 0x000008, "Member 'CurieManager_UnbindDelegateForCurieStateAttached::Delegate' has a wrong offset!");

// Function Curie.CurieManager.UnbindDelegateForCurieStateDetached
// 0x0018 (0x0018 - 0x0000)
struct CurieManager_UnbindDelegateForCurieStateDetached final
{
public:
	class UObject*                                CurieOwner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& StateIdentifier)> Delegate;                                          // 0x0008(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CurieManager_UnbindDelegateForCurieStateDetached) == 0x000008, "Wrong alignment on CurieManager_UnbindDelegateForCurieStateDetached");
static_assert(sizeof(CurieManager_UnbindDelegateForCurieStateDetached) == 0x000018, "Wrong size on CurieManager_UnbindDelegateForCurieStateDetached");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieStateDetached, CurieOwner) == 0x000000, "Member 'CurieManager_UnbindDelegateForCurieStateDetached::CurieOwner' has a wrong offset!");
static_assert(offsetof(CurieManager_UnbindDelegateForCurieStateDetached, Delegate) == 0x000008, "Member 'CurieManager_UnbindDelegateForCurieStateDetached::Delegate' has a wrong offset!");

}

