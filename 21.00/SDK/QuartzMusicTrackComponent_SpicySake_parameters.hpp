#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuartzMusicTrackComponent_SpicySake

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"


namespace SDK::Params
{

// Function QuartzMusicTrackComponent_SpicySake.QuartzMusicTrackComponent_SpicySake_C.HandleMixState
// 0x0010 (0x0010 - 0x0000)
struct QuartzMusicTrackComponent_SpicySake_C_HandleMixState final
{
public:
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_SpicySake_C_HandleMixState) == 0x000004, "Wrong alignment on QuartzMusicTrackComponent_SpicySake_C_HandleMixState");
static_assert(sizeof(QuartzMusicTrackComponent_SpicySake_C_HandleMixState) == 0x000010, "Wrong size on QuartzMusicTrackComponent_SpicySake_C_HandleMixState");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_HandleMixState, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'QuartzMusicTrackComponent_SpicySake_C_HandleMixState::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_HandleMixState, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000004, "Member 'QuartzMusicTrackComponent_SpicySake_C_HandleMixState::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_HandleMixState, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000008, "Member 'QuartzMusicTrackComponent_SpicySake_C_HandleMixState::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_HandleMixState, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'QuartzMusicTrackComponent_SpicySake_C_HandleMixState::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function QuartzMusicTrackComponent_SpicySake.QuartzMusicTrackComponent_SpicySake_C.OnDataTrackerUpdate
// 0x0028 (0x0028 - 0x0000)
struct QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate final
{
public:
	class UFortGameplayDataTrackerComponent*      CallFunc_GetDataTrackerComponent_DataTracker;      // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventValue_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventValue_ReturnValue_1;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate");
static_assert(sizeof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate) == 0x000028, "Wrong size on QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate, CallFunc_GetDataTrackerComponent_DataTracker) == 0x000000, "Member 'QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate::CallFunc_GetDataTrackerComponent_DataTracker' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate, CallFunc_GetEventValue_ReturnValue) == 0x00000C, "Member 'QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate::CallFunc_GetEventValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate, CallFunc_GetEventValue_ReturnValue_1) == 0x000010, "Member 'QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate::CallFunc_GetEventValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000015, "Member 'QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate, CallFunc_SelectFloat_ReturnValue_1) == 0x00001C, "Member 'QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate, CallFunc_FInterpTo_ReturnValue) == 0x000020, "Member 'QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate, CallFunc_FInterpTo_ReturnValue_1) == 0x000024, "Member 'QuartzMusicTrackComponent_SpicySake_C_OnDataTrackerUpdate::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");

// Function QuartzMusicTrackComponent_SpicySake.QuartzMusicTrackComponent_SpicySake_C.UpdateInterpValue
// 0x0038 (0x0038 - 0x0000)
struct QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue final
{
public:
	float                                         InterpValue;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag;                                          // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	float                                         Attack_Speed;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Release_Speed;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameplayDataTrackerComponent*      CallFunc_GetDataTrackerComponent_DataTracker;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventValue_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue");
static_assert(sizeof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue) == 0x000038, "Wrong size on QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, InterpValue) == 0x000000, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::InterpValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, EventTag) == 0x000004, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::EventTag' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, Attack_Speed) == 0x000008, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::Attack_Speed' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, Release_Speed) == 0x00000C, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::Release_Speed' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, ReturnValue) == 0x000010, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, CallFunc_GetDataTrackerComponent_DataTracker) == 0x000018, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::CallFunc_GetDataTrackerComponent_DataTracker' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, CallFunc_GetEventValue_ReturnValue) == 0x000024, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::CallFunc_GetEventValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue, CallFunc_FInterpTo_ReturnValue) == 0x000030, "Member 'QuartzMusicTrackComponent_SpicySake_C_UpdateInterpValue::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

}

