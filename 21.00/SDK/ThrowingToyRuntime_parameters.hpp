#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ThrowingToyRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ThrowingToyRuntime_structs.hpp"


namespace SDK::Params
{

// Function ThrowingToyRuntime.ThrowingToyTrackerComponent.AddThrowingToy
// 0x0018 (0x0018 - 0x0000)
struct ThrowingToyTrackerComponent_AddThrowingToy final
{
public:
	class AActor*                                 ThrowingToyActor;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  WorldItemGuid;                                     // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ThrowingToyTrackerComponent_AddThrowingToy) == 0x000008, "Wrong alignment on ThrowingToyTrackerComponent_AddThrowingToy");
static_assert(sizeof(ThrowingToyTrackerComponent_AddThrowingToy) == 0x000018, "Wrong size on ThrowingToyTrackerComponent_AddThrowingToy");
static_assert(offsetof(ThrowingToyTrackerComponent_AddThrowingToy, ThrowingToyActor) == 0x000000, "Member 'ThrowingToyTrackerComponent_AddThrowingToy::ThrowingToyActor' has a wrong offset!");
static_assert(offsetof(ThrowingToyTrackerComponent_AddThrowingToy, WorldItemGuid) == 0x000008, "Member 'ThrowingToyTrackerComponent_AddThrowingToy::WorldItemGuid' has a wrong offset!");

// Function ThrowingToyRuntime.ThrowingToyTrackerComponent.GetAndReleaseThrowingToy
// 0x0018 (0x0018 - 0x0000)
struct ThrowingToyTrackerComponent_GetAndReleaseThrowingToy final
{
public:
	struct FGuid                                  WorldItemGuid;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ThrowingToyTrackerComponent_GetAndReleaseThrowingToy) == 0x000008, "Wrong alignment on ThrowingToyTrackerComponent_GetAndReleaseThrowingToy");
static_assert(sizeof(ThrowingToyTrackerComponent_GetAndReleaseThrowingToy) == 0x000018, "Wrong size on ThrowingToyTrackerComponent_GetAndReleaseThrowingToy");
static_assert(offsetof(ThrowingToyTrackerComponent_GetAndReleaseThrowingToy, WorldItemGuid) == 0x000000, "Member 'ThrowingToyTrackerComponent_GetAndReleaseThrowingToy::WorldItemGuid' has a wrong offset!");
static_assert(offsetof(ThrowingToyTrackerComponent_GetAndReleaseThrowingToy, ReturnValue) == 0x000010, "Member 'ThrowingToyTrackerComponent_GetAndReleaseThrowingToy::ReturnValue' has a wrong offset!");

// Function ThrowingToyRuntime.ThrowingToyTrackerComponent.GetRecentThrowingToyItemRemovedReason
// 0x0001 (0x0001 - 0x0000)
struct ThrowingToyTrackerComponent_GetRecentThrowingToyItemRemovedReason final
{
public:
	EThrowingToyItemRemovedReason                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ThrowingToyTrackerComponent_GetRecentThrowingToyItemRemovedReason) == 0x000001, "Wrong alignment on ThrowingToyTrackerComponent_GetRecentThrowingToyItemRemovedReason");
static_assert(sizeof(ThrowingToyTrackerComponent_GetRecentThrowingToyItemRemovedReason) == 0x000001, "Wrong size on ThrowingToyTrackerComponent_GetRecentThrowingToyItemRemovedReason");
static_assert(offsetof(ThrowingToyTrackerComponent_GetRecentThrowingToyItemRemovedReason, ReturnValue) == 0x000000, "Member 'ThrowingToyTrackerComponent_GetRecentThrowingToyItemRemovedReason::ReturnValue' has a wrong offset!");

// Function ThrowingToyRuntime.ThrowingToyTrackerComponent.GetThrowingToy
// 0x0018 (0x0018 - 0x0000)
struct ThrowingToyTrackerComponent_GetThrowingToy final
{
public:
	struct FGuid                                  WorldItemGuid;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ThrowingToyTrackerComponent_GetThrowingToy) == 0x000008, "Wrong alignment on ThrowingToyTrackerComponent_GetThrowingToy");
static_assert(sizeof(ThrowingToyTrackerComponent_GetThrowingToy) == 0x000018, "Wrong size on ThrowingToyTrackerComponent_GetThrowingToy");
static_assert(offsetof(ThrowingToyTrackerComponent_GetThrowingToy, WorldItemGuid) == 0x000000, "Member 'ThrowingToyTrackerComponent_GetThrowingToy::WorldItemGuid' has a wrong offset!");
static_assert(offsetof(ThrowingToyTrackerComponent_GetThrowingToy, ReturnValue) == 0x000010, "Member 'ThrowingToyTrackerComponent_GetThrowingToy::ReturnValue' has a wrong offset!");

// Function ThrowingToyRuntime.ThrowingToyTrackerComponent.SetRecentThrowingToyItemRemovedReason
// 0x0001 (0x0001 - 0x0000)
struct ThrowingToyTrackerComponent_SetRecentThrowingToyItemRemovedReason final
{
public:
	EThrowingToyItemRemovedReason                 RemovedReason;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ThrowingToyTrackerComponent_SetRecentThrowingToyItemRemovedReason) == 0x000001, "Wrong alignment on ThrowingToyTrackerComponent_SetRecentThrowingToyItemRemovedReason");
static_assert(sizeof(ThrowingToyTrackerComponent_SetRecentThrowingToyItemRemovedReason) == 0x000001, "Wrong size on ThrowingToyTrackerComponent_SetRecentThrowingToyItemRemovedReason");
static_assert(offsetof(ThrowingToyTrackerComponent_SetRecentThrowingToyItemRemovedReason, RemovedReason) == 0x000000, "Member 'ThrowingToyTrackerComponent_SetRecentThrowingToyItemRemovedReason::RemovedReason' has a wrong offset!");

}

