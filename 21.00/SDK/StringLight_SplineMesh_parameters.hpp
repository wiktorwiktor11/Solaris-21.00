#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StringLight_SplineMesh

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function StringLight_SplineMesh.StringLight_SplineMesh_C.ExecuteUbergraph_StringLight_SplineMesh
// 0x00A8 (0x00A8 - 0x0000)
struct StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh) == 0x000008, "Wrong alignment on StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh");
static_assert(sizeof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh) == 0x0000A8, "Wrong size on StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, EntryPoint) == 0x000000, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::EntryPoint' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, Temp_int_Array_Index_Variable) == 0x000004, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, CallFunc_Array_Get_Item) == 0x000010, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, K2Node_CustomEvent_DamagedActor) == 0x000038, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, K2Node_CustomEvent_Damage) == 0x000040, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, K2Node_CustomEvent_InstigatedBy) == 0x000048, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, K2Node_CustomEvent_DamageCauser) == 0x000050, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, K2Node_CustomEvent_HitLocation) == 0x000058, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, K2Node_CustomEvent_FHitComponent) == 0x000070, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, K2Node_CustomEvent_BoneName) == 0x000078, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, K2Node_CustomEvent_Momentum) == 0x000080, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::K2Node_CustomEvent_Momentum' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'StringLight_SplineMesh_C_ExecuteUbergraph_StringLight_SplineMesh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function StringLight_SplineMesh.StringLight_SplineMesh_C.IReallyDied
// 0x0060 (0x0060 - 0x0000)
struct StringLight_SplineMesh_C_IReallyDied final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Momentum;                                          // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StringLight_SplineMesh_C_IReallyDied) == 0x000008, "Wrong alignment on StringLight_SplineMesh_C_IReallyDied");
static_assert(sizeof(StringLight_SplineMesh_C_IReallyDied) == 0x000060, "Wrong size on StringLight_SplineMesh_C_IReallyDied");
static_assert(offsetof(StringLight_SplineMesh_C_IReallyDied, DamagedActor) == 0x000000, "Member 'StringLight_SplineMesh_C_IReallyDied::DamagedActor' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_IReallyDied, Damage) == 0x000008, "Member 'StringLight_SplineMesh_C_IReallyDied::Damage' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_IReallyDied, InstigatedBy) == 0x000010, "Member 'StringLight_SplineMesh_C_IReallyDied::InstigatedBy' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_IReallyDied, DamageCauser) == 0x000018, "Member 'StringLight_SplineMesh_C_IReallyDied::DamageCauser' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_IReallyDied, HitLocation) == 0x000020, "Member 'StringLight_SplineMesh_C_IReallyDied::HitLocation' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_IReallyDied, FHitComponent) == 0x000038, "Member 'StringLight_SplineMesh_C_IReallyDied::FHitComponent' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_IReallyDied, BoneName) == 0x000040, "Member 'StringLight_SplineMesh_C_IReallyDied::BoneName' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_IReallyDied, Momentum) == 0x000048, "Member 'StringLight_SplineMesh_C_IReallyDied::Momentum' has a wrong offset!");

// Function StringLight_SplineMesh.StringLight_SplineMesh_C.ValidateSplineMesh
// 0x0380 (0x0380 - 0x0000)
struct StringLight_SplineMesh_C_ValidateSplineMesh final
{
public:
	int32                                         l_nextIndex;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         l_currentIndex;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   l_splineMeshComp;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0070(0x0060)(ConstParm, IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_1;      // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_2;      // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location; // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent; // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_3;      // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_1; // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1; // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               CallFunc_GetForwardAxis_ReturnValue;               // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29B[0x1];                                      // 0x029B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_2; // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_2; // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_3; // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_3; // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StringLight_SplineMesh_C_ValidateSplineMesh) == 0x000010, "Wrong alignment on StringLight_SplineMesh_C_ValidateSplineMesh");
static_assert(sizeof(StringLight_SplineMesh_C_ValidateSplineMesh) == 0x000380, "Wrong size on StringLight_SplineMesh_C_ValidateSplineMesh");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, l_nextIndex) == 0x000000, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::l_nextIndex' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, l_currentIndex) == 0x000004, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::l_currentIndex' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, l_splineMeshComp) == 0x000008, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::l_splineMeshComp' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, Temp_struct_Variable) == 0x000010, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, Temp_struct_Variable_1) == 0x000070, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_AddComponent_ReturnValue) == 0x0000D0, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_AddComponent_ReturnValue_1) == 0x0000D8, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, Temp_int_Variable) == 0x0000E0, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetScaleAtSplinePoint_ReturnValue) == 0x0000F0, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetScaleAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_X) == 0x000108, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_Y) == 0x00010C, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_Z) == 0x000110, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetScaleAtSplinePoint_ReturnValue_1) == 0x000118, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetScaleAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_MakeVector2D_ReturnValue) == 0x000130, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_X_1) == 0x000140, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_Y_1) == 0x000144, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_Z_1) == 0x000148, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_MakeVector2D_ReturnValue_1) == 0x000150, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetScaleAtSplinePoint_ReturnValue_2) == 0x000160, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetScaleAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Location) == 0x000178, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Location' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent) == 0x000190, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_X_2) == 0x0001A8, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_Y_2) == 0x0001AC, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_Z_2) == 0x0001B0, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Normal_ReturnValue) == 0x0001B8, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_MakeVector2D_ReturnValue_2) == 0x0001D0, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetScaleAtSplinePoint_ReturnValue_3) == 0x0001E0, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetScaleAtSplinePoint_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Location_1) == 0x0001F8, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Location_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1) == 0x000210, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_X_3) == 0x000228, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_Y_3) == 0x00022C, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_BreakVector_Z_3) == 0x000230, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Normal_ReturnValue_1) == 0x000238, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_MakeVector2D_ReturnValue_3) == 0x000250, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000260, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000278, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_VSize_ReturnValue) == 0x000290, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_VSize_ReturnValue_1) == 0x000294, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetForwardAxis_ReturnValue) == 0x000298, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetForwardAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_IsValid_ReturnValue) == 0x000299, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_IsValid_ReturnValue_1) == 0x00029A, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00029C, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002A0, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002B8, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002C0, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_SelectVector_ReturnValue) == 0x0002D8, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_SelectVector_ReturnValue_1) == 0x0002F0, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000308, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Location_2) == 0x000310, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Location_2' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_2) == 0x000328, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_2' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000340, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Location_3) == 0x000348, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Location_3' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_3) == 0x000360, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_3' has a wrong offset!");
static_assert(offsetof(StringLight_SplineMesh_C_ValidateSplineMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000378, "Member 'StringLight_SplineMesh_C_ValidateSplineMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

}

