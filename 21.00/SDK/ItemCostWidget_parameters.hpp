#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemCostWidget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ItemCostWidget.ItemCostWidget_C.AreCostsValid
// 0x0080 (0x0080 - 0x0000)
struct ItemCostWidget_C_AreCostsValid final
{
public:
	TMap<EFortResourceType, int32>                Costs;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CostsAreValid;                                     // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCostsAreValid;                                    // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValidatedCost_CostIsValid;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValidatedCost_Cost;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemCostWidget_C_AreCostsValid) == 0x000008, "Wrong alignment on ItemCostWidget_C_AreCostsValid");
static_assert(sizeof(ItemCostWidget_C_AreCostsValid) == 0x000080, "Wrong size on ItemCostWidget_C_AreCostsValid");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, Costs) == 0x000000, "Member 'ItemCostWidget_C_AreCostsValid::Costs' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CostsAreValid) == 0x000050, "Member 'ItemCostWidget_C_AreCostsValid::CostsAreValid' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, bCostsAreValid) == 0x000051, "Member 'ItemCostWidget_C_AreCostsValid::bCostsAreValid' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_Map_Length_ReturnValue) == 0x000054, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, Temp_int_Variable) == 0x000058, "Member 'ItemCostWidget_C_AreCostsValid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_Conv_IntToByte_ReturnValue) == 0x00005D, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_GetValidValue_ReturnValue) == 0x00005E, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, Temp_int_Variable_1) == 0x000060, "Member 'ItemCostWidget_C_AreCostsValid::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000064, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00006C, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00006D, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000070, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_MakeLiteralInt_ReturnValue) == 0x000074, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_GetValidatedCost_CostIsValid) == 0x000079, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_GetValidatedCost_CostIsValid' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_AreCostsValid, CallFunc_GetValidatedCost_Cost) == 0x00007C, "Member 'ItemCostWidget_C_AreCostsValid::CallFunc_GetValidatedCost_Cost' has a wrong offset!");

// Function ItemCostWidget.ItemCostWidget_C.ExecuteUbergraph_ItemCostWidget
// 0x0018 (0x0018 - 0x0000)
struct ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget) == 0x000008, "Wrong alignment on ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget");
static_assert(sizeof(ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget) == 0x000018, "Wrong size on ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget");
static_assert(offsetof(ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget, EntryPoint) == 0x000000, "Member 'ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget, K2Node_Event_IsDesignTime) == 0x000010, "Member 'ItemCostWidget_C_ExecuteUbergraph_ItemCostWidget::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ItemCostWidget.ItemCostWidget_C.FindWidget
// 0x0030 (0x0030 - 0x0000)
struct ItemCostWidget_C_FindWidget final
{
public:
	EFortResourceType                             Resource;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UResourceCountWidget_C*                 Widget;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UResourceCountWidget_C*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemCostWidget_C_FindWidget) == 0x000008, "Wrong alignment on ItemCostWidget_C_FindWidget");
static_assert(sizeof(ItemCostWidget_C_FindWidget) == 0x000030, "Wrong size on ItemCostWidget_C_FindWidget");
static_assert(offsetof(ItemCostWidget_C_FindWidget, Resource) == 0x000000, "Member 'ItemCostWidget_C_FindWidget::Resource' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_FindWidget, Widget) == 0x000008, "Member 'ItemCostWidget_C_FindWidget::Widget' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_FindWidget, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ItemCostWidget_C_FindWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_FindWidget, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'ItemCostWidget_C_FindWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_FindWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ItemCostWidget_C_FindWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_FindWidget, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'ItemCostWidget_C_FindWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_FindWidget, CallFunc_Array_Get_Item) == 0x000020, "Member 'ItemCostWidget_C_FindWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_FindWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'ItemCostWidget_C_FindWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_FindWidget, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'ItemCostWidget_C_FindWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_FindWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'ItemCostWidget_C_FindWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ItemCostWidget.ItemCostWidget_C.GetValidatedCost
// 0x0060 (0x0060 - 0x0000)
struct ItemCostWidget_C_GetValidatedCost final
{
public:
	TMap<EFortResourceType, int32>                Costs;                                             // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EFortResourceType                             Resource;                                          // 0x0050(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CostIsValid;                                       // 0x0051(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Cost;                                              // 0x0054(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemCostWidget_C_GetValidatedCost) == 0x000008, "Wrong alignment on ItemCostWidget_C_GetValidatedCost");
static_assert(sizeof(ItemCostWidget_C_GetValidatedCost) == 0x000060, "Wrong size on ItemCostWidget_C_GetValidatedCost");
static_assert(offsetof(ItemCostWidget_C_GetValidatedCost, Costs) == 0x000000, "Member 'ItemCostWidget_C_GetValidatedCost::Costs' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_GetValidatedCost, Resource) == 0x000050, "Member 'ItemCostWidget_C_GetValidatedCost::Resource' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_GetValidatedCost, CostIsValid) == 0x000051, "Member 'ItemCostWidget_C_GetValidatedCost::CostIsValid' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_GetValidatedCost, Cost) == 0x000054, "Member 'ItemCostWidget_C_GetValidatedCost::Cost' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_GetValidatedCost, CallFunc_Map_Find_Value) == 0x000058, "Member 'ItemCostWidget_C_GetValidatedCost::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_GetValidatedCost, CallFunc_Map_Find_ReturnValue) == 0x00005C, "Member 'ItemCostWidget_C_GetValidatedCost::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_GetValidatedCost, CallFunc_Greater_IntInt_ReturnValue) == 0x00005D, "Member 'ItemCostWidget_C_GetValidatedCost::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_GetValidatedCost, CallFunc_BooleanAND_ReturnValue) == 0x00005E, "Member 'ItemCostWidget_C_GetValidatedCost::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemCostWidget.ItemCostWidget_C.PopulateWidgets
// 0x0098 (0x0098 - 0x0000)
struct ItemCostWidget_C_PopulateWidgets final
{
public:
	int32                                         EnumCount;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UResourceCountWidget_C*                 CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UResourceCountWidget_C*                 CallFunc_FindWidget_Widget;                        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UResourceCountWidget_C*                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemCostWidget_C_PopulateWidgets) == 0x000008, "Wrong alignment on ItemCostWidget_C_PopulateWidgets");
static_assert(sizeof(ItemCostWidget_C_PopulateWidgets) == 0x000098, "Wrong size on ItemCostWidget_C_PopulateWidgets");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, EnumCount) == 0x000000, "Member 'ItemCostWidget_C_PopulateWidgets::EnumCount' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ItemCostWidget_C_PopulateWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ItemCostWidget_C_PopulateWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, Temp_int_Variable) == 0x000018, "Member 'ItemCostWidget_C_PopulateWidgets::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Create_ReturnValue) == 0x000020, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Conv_IntToByte_ReturnValue) == 0x00002D, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00002E, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, Temp_int_Variable_1) == 0x000034, "Member 'ItemCostWidget_C_PopulateWidgets::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, K2Node_MakeStruct_Margin) == 0x000038, "Member 'ItemCostWidget_C_PopulateWidgets::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000048, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_GetValidValue_ReturnValue) == 0x000049, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, Temp_int_Variable_2) == 0x00004C, "Member 'ItemCostWidget_C_PopulateWidgets::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000050, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_FindWidget_Widget) == 0x000058, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_FindWidget_Widget' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Array_Get_Item) == 0x000060, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_IsValid_ReturnValue_1) == 0x00006D, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_IsValid_ReturnValue_2) == 0x00006E, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Add_IntInt_ReturnValue_2) == 0x000070, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Greater_IntInt_ReturnValue) == 0x000074, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_AddChild_ReturnValue) == 0x000078, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_MakeLiteralInt_ReturnValue) == 0x000080, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x000088, "Member 'ItemCostWidget_C_PopulateWidgets::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'ItemCostWidget_C_PopulateWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Less_IntInt_ReturnValue_1) == 0x000091, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_PopulateWidgets, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'ItemCostWidget_C_PopulateWidgets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function ItemCostWidget.ItemCostWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ItemCostWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemCostWidget_C_PreConstruct) == 0x000001, "Wrong alignment on ItemCostWidget_C_PreConstruct");
static_assert(sizeof(ItemCostWidget_C_PreConstruct) == 0x000001, "Wrong size on ItemCostWidget_C_PreConstruct");
static_assert(offsetof(ItemCostWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ItemCostWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ItemCostWidget.ItemCostWidget_C.SetItemCost
// 0x0148 (0x0148 - 0x0000)
struct ItemCostWidget_C_SetItemCost final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpecifiedItemCostComponent;                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_0;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EFortResourceType, int32>                Cost;                                              // 0x0018(0x0050)(Edit, BlueprintVisible)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EFortResourceType, int32>                K2Node_MakeVariable_MakeVariableOutput;            // 0x0070(0x0050)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreCostsValid_CostsAreValid;              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UResourceCountWidget_C*                 CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemCostComponent_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EFortResourceType, int32>                CallFunc_GetCost_Cost;                             // 0x00F0(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemCostWidget_C_SetItemCost) == 0x000008, "Wrong alignment on ItemCostWidget_C_SetItemCost");
static_assert(sizeof(ItemCostWidget_C_SetItemCost) == 0x000148, "Wrong size on ItemCostWidget_C_SetItemCost");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, Actor) == 0x000000, "Member 'ItemCostWidget_C_SetItemCost::Actor' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, SpecifiedItemCostComponent) == 0x000008, "Member 'ItemCostWidget_C_SetItemCost::SpecifiedItemCostComponent' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, NewLocalVar_0) == 0x000010, "Member 'ItemCostWidget_C_SetItemCost::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, Cost) == 0x000018, "Member 'ItemCostWidget_C_SetItemCost::Cost' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, Temp_byte_Variable) == 0x000068, "Member 'ItemCostWidget_C_SetItemCost::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, K2Node_MakeVariable_MakeVariableOutput) == 0x000070, "Member 'ItemCostWidget_C_SetItemCost::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'ItemCostWidget_C_SetItemCost::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, Temp_byte_Variable_1) == 0x0000C4, "Member 'ItemCostWidget_C_SetItemCost::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'ItemCostWidget_C_SetItemCost::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, CallFunc_AreCostsValid_CostsAreValid) == 0x0000CC, "Member 'ItemCostWidget_C_SetItemCost::CallFunc_AreCostsValid_CostsAreValid' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'ItemCostWidget_C_SetItemCost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, Temp_bool_Variable) == 0x0000D4, "Member 'ItemCostWidget_C_SetItemCost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'ItemCostWidget_C_SetItemCost::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'ItemCostWidget_C_SetItemCost::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, K2Node_Select_Default) == 0x0000E4, "Member 'ItemCostWidget_C_SetItemCost::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, CallFunc_Less_IntInt_ReturnValue) == 0x0000E5, "Member 'ItemCostWidget_C_SetItemCost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, CallFunc_IsValid_ReturnValue) == 0x0000E6, "Member 'ItemCostWidget_C_SetItemCost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E8, "Member 'ItemCostWidget_C_SetItemCost::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, CallFunc_GetCost_Cost) == 0x0000F0, "Member 'ItemCostWidget_C_SetItemCost::CallFunc_GetCost_Cost' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetItemCost, CallFunc_IsValid_ReturnValue_1) == 0x000140, "Member 'ItemCostWidget_C_SetItemCost::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ItemCostWidget.ItemCostWidget_C.SetRarityData
// 0x02E0 (0x02E0 - 0x0000)
struct ItemCostWidget_C_SetRarityData final
{
public:
	struct FFortRarityItemData                    RarityData;                                        // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0090(0x00C0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0150(0x00C0)()
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x0210(0x00C0)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemCostWidget_C_SetRarityData) == 0x000010, "Wrong alignment on ItemCostWidget_C_SetRarityData");
static_assert(sizeof(ItemCostWidget_C_SetRarityData) == 0x0002E0, "Wrong size on ItemCostWidget_C_SetRarityData");
static_assert(offsetof(ItemCostWidget_C_SetRarityData, RarityData) == 0x000000, "Member 'ItemCostWidget_C_SetRarityData::RarityData' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetRarityData, Temp_bool_Variable) == 0x000080, "Member 'ItemCostWidget_C_SetRarityData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetRarityData, K2Node_MakeStruct_SlateBrush) == 0x000090, "Member 'ItemCostWidget_C_SetRarityData::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetRarityData, K2Node_MakeStruct_SlateBrush_1) == 0x000150, "Member 'ItemCostWidget_C_SetRarityData::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetRarityData, K2Node_Select_Default) == 0x000210, "Member 'ItemCostWidget_C_SetRarityData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_SetRarityData, CallFunc_IsValid_ReturnValue) == 0x0002D0, "Member 'ItemCostWidget_C_SetRarityData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemCostWidget.ItemCostWidget_C.UpdateResource
// 0x0068 (0x0068 - 0x0000)
struct ItemCostWidget_C_UpdateResource final
{
public:
	TMap<EFortResourceType, int32>                Costs;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UResourceCountWidget_C*                 ResourceWidget;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValidatedCost_CostIsValid;             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValidatedCost_Cost;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemCostWidget_C_UpdateResource) == 0x000008, "Wrong alignment on ItemCostWidget_C_UpdateResource");
static_assert(sizeof(ItemCostWidget_C_UpdateResource) == 0x000068, "Wrong size on ItemCostWidget_C_UpdateResource");
static_assert(offsetof(ItemCostWidget_C_UpdateResource, Costs) == 0x000000, "Member 'ItemCostWidget_C_UpdateResource::Costs' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_UpdateResource, ResourceWidget) == 0x000050, "Member 'ItemCostWidget_C_UpdateResource::ResourceWidget' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_UpdateResource, Temp_byte_Variable) == 0x000058, "Member 'ItemCostWidget_C_UpdateResource::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_UpdateResource, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'ItemCostWidget_C_UpdateResource::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_UpdateResource, Temp_byte_Variable_1) == 0x00005A, "Member 'ItemCostWidget_C_UpdateResource::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_UpdateResource, CallFunc_GetValidatedCost_CostIsValid) == 0x00005B, "Member 'ItemCostWidget_C_UpdateResource::CallFunc_GetValidatedCost_CostIsValid' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_UpdateResource, CallFunc_GetValidatedCost_Cost) == 0x00005C, "Member 'ItemCostWidget_C_UpdateResource::CallFunc_GetValidatedCost_Cost' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_UpdateResource, Temp_bool_Variable) == 0x000060, "Member 'ItemCostWidget_C_UpdateResource::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemCostWidget_C_UpdateResource, K2Node_Select_Default) == 0x000061, "Member 'ItemCostWidget_C_UpdateResource::K2Node_Select_Default' has a wrong offset!");

}

