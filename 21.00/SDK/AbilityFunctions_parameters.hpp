#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AbilityFunctions

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function AbilityFunctions.AbilityFunctions_C.ApplySlowFall
// 0x0080 (0x0080 - 0x0000)
struct AbilityFunctions_C_ApplySlowFall final
{
public:
	float                                         SlowFallDuration;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameplayAbility*                   SelfGameplayAbilityReference;                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GameplayEffect;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            EffectSpecHandle;                                  // 0x0020(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x0040(0x0010)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0058(0x0010)()
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue; // 0x0074(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_ApplySlowFall) == 0x000008, "Wrong alignment on AbilityFunctions_C_ApplySlowFall");
static_assert(sizeof(AbilityFunctions_C_ApplySlowFall) == 0x000080, "Wrong size on AbilityFunctions_C_ApplySlowFall");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, SlowFallDuration) == 0x000000, "Member 'AbilityFunctions_C_ApplySlowFall::SlowFallDuration' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, SelfGameplayAbilityReference) == 0x000008, "Member 'AbilityFunctions_C_ApplySlowFall::SelfGameplayAbilityReference' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, GameplayEffect) == 0x000010, "Member 'AbilityFunctions_C_ApplySlowFall::GameplayEffect' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, __WorldContext) == 0x000018, "Member 'AbilityFunctions_C_ApplySlowFall::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, EffectSpecHandle) == 0x000020, "Member 'AbilityFunctions_C_ApplySlowFall::EffectSpecHandle' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'AbilityFunctions_C_ApplySlowFall::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x000040, "Member 'AbilityFunctions_C_ApplySlowFall::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000050, "Member 'AbilityFunctions_C_ApplySlowFall::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000058, "Member 'AbilityFunctions_C_ApplySlowFall::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, K2Node_DynamicCast_AsFort_Pawn) == 0x000068, "Member 'AbilityFunctions_C_ApplySlowFall::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'AbilityFunctions_C_ApplySlowFall::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ApplySlowFall, CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue) == 0x000074, "Member 'AbilityFunctions_C_ApplySlowFall::CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.ConvertRangeToTiles
// 0x0018 (0x0018 - 0x0000)
struct AbilityFunctions_C_ConvertRangeToTiles final
{
public:
	float                                         InRange;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutTile;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_ConvertRangeToTiles) == 0x000008, "Wrong alignment on AbilityFunctions_C_ConvertRangeToTiles");
static_assert(sizeof(AbilityFunctions_C_ConvertRangeToTiles) == 0x000018, "Wrong size on AbilityFunctions_C_ConvertRangeToTiles");
static_assert(offsetof(AbilityFunctions_C_ConvertRangeToTiles, InRange) == 0x000000, "Member 'AbilityFunctions_C_ConvertRangeToTiles::InRange' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ConvertRangeToTiles, __WorldContext) == 0x000008, "Member 'AbilityFunctions_C_ConvertRangeToTiles::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ConvertRangeToTiles, OutTile) == 0x000010, "Member 'AbilityFunctions_C_ConvertRangeToTiles::OutTile' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ConvertRangeToTiles, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'AbilityFunctions_C_ConvertRangeToTiles::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.DoNOTUse-BuildArrayOfHitActors
// 0x0090 (0x0090 - 0x0000)
struct AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         HitActors;                                         // 0x0030(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         LocalHitActors;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_GetDataCountFromTargetData_ReturnValue;   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorsFromTargetData_ReturnValue;      // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors) == 0x000008, "Wrong alignment on AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors");
static_assert(sizeof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors) == 0x000090, "Wrong size on AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, TargetData) == 0x000000, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::TargetData' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, __WorldContext) == 0x000028, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, HitActors) == 0x000030, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::HitActors' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, LocalHitActors) == 0x000040, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::LocalHitActors' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_GetDataCountFromTargetData_ReturnValue) == 0x000050, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_GetDataCountFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, Temp_int_Variable) == 0x000054, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_GetActorsFromTargetData_ReturnValue) == 0x000060, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_GetActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_Array_Get_Item) == 0x000078, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'AbilityFunctions_C_DoNOTUse_BuildArrayOfHitActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.EvaluatePerkTierBalanceValue
// 0x0118 (0x0118 - 0x0000)
struct AbilityFunctions_C_EvaluatePerkTierBalanceValue final
{
public:
	struct FScalableFloat                         T01_Balance_Value;                                 // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FScalableFloat                         T02_Balance_Value;                                 // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Owns_T02;                                          // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Override_T01;                               // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Balance_Value;                                     // 0x0060(0x0028)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         K2Node_MakeStruct_ScalableFloat;                   // 0x00A0(0x0028)()
	struct FScalableFloat                         K2Node_Select_Default_1;                           // 0x00C8(0x0028)()
	struct FScalableFloat                         K2Node_Select_Default_2;                           // 0x00F0(0x0028)()
};
static_assert(alignof(AbilityFunctions_C_EvaluatePerkTierBalanceValue) == 0x000008, "Wrong alignment on AbilityFunctions_C_EvaluatePerkTierBalanceValue");
static_assert(sizeof(AbilityFunctions_C_EvaluatePerkTierBalanceValue) == 0x000118, "Wrong size on AbilityFunctions_C_EvaluatePerkTierBalanceValue");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, T01_Balance_Value) == 0x000000, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::T01_Balance_Value' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, T02_Balance_Value) == 0x000028, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::T02_Balance_Value' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, Owns_T02) == 0x000050, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::Owns_T02' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, Should_Override_T01) == 0x000051, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::Should_Override_T01' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, __WorldContext) == 0x000058, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, Balance_Value) == 0x000060, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::Balance_Value' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, Temp_bool_Variable) == 0x000088, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, Temp_bool_Variable_1) == 0x000089, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, Temp_bool_Variable_2) == 0x00008A, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, CallFunc_GetValueAtLevel_ReturnValue) == 0x00008C, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000090, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, K2Node_Select_Default) == 0x000098, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, K2Node_MakeStruct_ScalableFloat) == 0x0000A0, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::K2Node_MakeStruct_ScalableFloat' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, K2Node_Select_Default_1) == 0x0000C8, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_EvaluatePerkTierBalanceValue, K2Node_Select_Default_2) == 0x0000F0, "Member 'AbilityFunctions_C_EvaluatePerkTierBalanceValue::K2Node_Select_Default_2' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.GetAngleBetweenTwoVectors
// 0x0078 (0x0078 - 0x0000)
struct AbilityFunctions_C_GetAngleBetweenTwoVectors final
{
public:
	struct FVector                                VectorA;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorB;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle__Degrees_;                                   // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_GetAngleBetweenTwoVectors) == 0x000008, "Wrong alignment on AbilityFunctions_C_GetAngleBetweenTwoVectors");
static_assert(sizeof(AbilityFunctions_C_GetAngleBetweenTwoVectors) == 0x000078, "Wrong size on AbilityFunctions_C_GetAngleBetweenTwoVectors");
static_assert(offsetof(AbilityFunctions_C_GetAngleBetweenTwoVectors, VectorA) == 0x000000, "Member 'AbilityFunctions_C_GetAngleBetweenTwoVectors::VectorA' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetAngleBetweenTwoVectors, VectorB) == 0x000018, "Member 'AbilityFunctions_C_GetAngleBetweenTwoVectors::VectorB' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetAngleBetweenTwoVectors, __WorldContext) == 0x000030, "Member 'AbilityFunctions_C_GetAngleBetweenTwoVectors::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetAngleBetweenTwoVectors, Angle__Degrees_) == 0x000038, "Member 'AbilityFunctions_C_GetAngleBetweenTwoVectors::Angle__Degrees_' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetAngleBetweenTwoVectors, CallFunc_Normal_ReturnValue) == 0x000040, "Member 'AbilityFunctions_C_GetAngleBetweenTwoVectors::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetAngleBetweenTwoVectors, CallFunc_Normal_ReturnValue_1) == 0x000058, "Member 'AbilityFunctions_C_GetAngleBetweenTwoVectors::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetAngleBetweenTwoVectors, CallFunc_Dot_VectorVector_ReturnValue) == 0x000070, "Member 'AbilityFunctions_C_GetAngleBetweenTwoVectors::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetAngleBetweenTwoVectors, CallFunc_DegAcos_ReturnValue) == 0x000074, "Member 'AbilityFunctions_C_GetAngleBetweenTwoVectors::CallFunc_DegAcos_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.GetDistanceBetweenActors
// 0x0070 (0x0070 - 0x0000)
struct AbilityFunctions_C_GetDistanceBetweenActors final
{
public:
	class AActor*                                 Actor1;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor2;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_GetDistanceBetweenActors) == 0x000008, "Wrong alignment on AbilityFunctions_C_GetDistanceBetweenActors");
static_assert(sizeof(AbilityFunctions_C_GetDistanceBetweenActors) == 0x000070, "Wrong size on AbilityFunctions_C_GetDistanceBetweenActors");
static_assert(offsetof(AbilityFunctions_C_GetDistanceBetweenActors, Actor1) == 0x000000, "Member 'AbilityFunctions_C_GetDistanceBetweenActors::Actor1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceBetweenActors, Actor2) == 0x000008, "Member 'AbilityFunctions_C_GetDistanceBetweenActors::Actor2' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceBetweenActors, __WorldContext) == 0x000010, "Member 'AbilityFunctions_C_GetDistanceBetweenActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceBetweenActors, Distance) == 0x000018, "Member 'AbilityFunctions_C_GetDistanceBetweenActors::Distance' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceBetweenActors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'AbilityFunctions_C_GetDistanceBetweenActors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceBetweenActors, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'AbilityFunctions_C_GetDistanceBetweenActors::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceBetweenActors, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'AbilityFunctions_C_GetDistanceBetweenActors::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceBetweenActors, CallFunc_VSize_ReturnValue) == 0x000068, "Member 'AbilityFunctions_C_GetDistanceBetweenActors::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.GetDistanceSquaredBetweenActors
// 0x0070 (0x0070 - 0x0000)
struct AbilityFunctions_C_GetDistanceSquaredBetweenActors final
{
public:
	class AActor*                                 Actor_1;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor_2;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance_Squared;                                  // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_GetDistanceSquaredBetweenActors) == 0x000008, "Wrong alignment on AbilityFunctions_C_GetDistanceSquaredBetweenActors");
static_assert(sizeof(AbilityFunctions_C_GetDistanceSquaredBetweenActors) == 0x000070, "Wrong size on AbilityFunctions_C_GetDistanceSquaredBetweenActors");
static_assert(offsetof(AbilityFunctions_C_GetDistanceSquaredBetweenActors, Actor_1) == 0x000000, "Member 'AbilityFunctions_C_GetDistanceSquaredBetweenActors::Actor_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceSquaredBetweenActors, Actor_2) == 0x000008, "Member 'AbilityFunctions_C_GetDistanceSquaredBetweenActors::Actor_2' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceSquaredBetweenActors, __WorldContext) == 0x000010, "Member 'AbilityFunctions_C_GetDistanceSquaredBetweenActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceSquaredBetweenActors, Distance_Squared) == 0x000018, "Member 'AbilityFunctions_C_GetDistanceSquaredBetweenActors::Distance_Squared' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceSquaredBetweenActors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'AbilityFunctions_C_GetDistanceSquaredBetweenActors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceSquaredBetweenActors, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'AbilityFunctions_C_GetDistanceSquaredBetweenActors::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceSquaredBetweenActors, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'AbilityFunctions_C_GetDistanceSquaredBetweenActors::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetDistanceSquaredBetweenActors, CallFunc_VSizeSquared_ReturnValue) == 0x000068, "Member 'AbilityFunctions_C_GetDistanceSquaredBetweenActors::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.GetPawnFromPlayerStateZone
// 0x0040 (0x0040 - 0x0000)
struct AbilityFunctions_C_GetPawnFromPlayerStateZone final
{
public:
	class AActor*                                 InActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        OutPawn;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PawnReturned;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerStateZone*                   K2Node_DynamicCast_AsFort_Player_State_Zone;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetCurrentPawn_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_GetPawnFromPlayerStateZone) == 0x000008, "Wrong alignment on AbilityFunctions_C_GetPawnFromPlayerStateZone");
static_assert(sizeof(AbilityFunctions_C_GetPawnFromPlayerStateZone) == 0x000040, "Wrong size on AbilityFunctions_C_GetPawnFromPlayerStateZone");
static_assert(offsetof(AbilityFunctions_C_GetPawnFromPlayerStateZone, InActor) == 0x000000, "Member 'AbilityFunctions_C_GetPawnFromPlayerStateZone::InActor' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetPawnFromPlayerStateZone, __WorldContext) == 0x000008, "Member 'AbilityFunctions_C_GetPawnFromPlayerStateZone::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetPawnFromPlayerStateZone, OutPawn) == 0x000010, "Member 'AbilityFunctions_C_GetPawnFromPlayerStateZone::OutPawn' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetPawnFromPlayerStateZone, PawnReturned) == 0x000018, "Member 'AbilityFunctions_C_GetPawnFromPlayerStateZone::PawnReturned' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetPawnFromPlayerStateZone, K2Node_DynamicCast_AsFort_Player_State_Zone) == 0x000020, "Member 'AbilityFunctions_C_GetPawnFromPlayerStateZone::K2Node_DynamicCast_AsFort_Player_State_Zone' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetPawnFromPlayerStateZone, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AbilityFunctions_C_GetPawnFromPlayerStateZone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetPawnFromPlayerStateZone, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'AbilityFunctions_C_GetPawnFromPlayerStateZone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetPawnFromPlayerStateZone, CallFunc_GetCurrentPawn_ReturnValue) == 0x000030, "Member 'AbilityFunctions_C_GetPawnFromPlayerStateZone::CallFunc_GetCurrentPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetPawnFromPlayerStateZone, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'AbilityFunctions_C_GetPawnFromPlayerStateZone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.GetProjectedTeleportLocation
// 0x0120 (0x0120 - 0x0000)
struct AbilityFunctions_C_GetProjectedTeleportLocation final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementDistance;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_GetProjectedTeleportLocation) == 0x000008, "Wrong alignment on AbilityFunctions_C_GetProjectedTeleportLocation");
static_assert(sizeof(AbilityFunctions_C_GetProjectedTeleportLocation) == 0x000120, "Wrong size on AbilityFunctions_C_GetProjectedTeleportLocation");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, Actor) == 0x000000, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::Actor' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, MovementDistance) == 0x000008, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::MovementDistance' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, __WorldContext) == 0x000010, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, TargetLocation) == 0x000018, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_GetVelocity_ReturnValue) == 0x000030, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_X) == 0x000060, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_Y) == 0x000064, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_Z) == 0x000068, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_VSize_ReturnValue) == 0x00006C, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000070, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000071, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x000072, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000078, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BooleanOR_ReturnValue) == 0x000091, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_SelectVector_ReturnValue) == 0x000098, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_X_1) == 0x0000B0, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_Y_1) == 0x0000B4, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_BreakVector_Z_1) == 0x0000B8, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_Normal_ReturnValue) == 0x0000D8, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F0, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetProjectedTeleportLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'AbilityFunctions_C_GetProjectedTeleportLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.GetRangeFromGameplayEffectContainer
// 0x0200 (0x0200 - 0x0000)
struct AbilityFunctions_C_GetRangeFromGameplayEffectContainer final
{
public:
	struct FFortGameplayEffectContainer           GE_Container;                                      // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Target_Selection_List_Index;                       // 0x00B8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         At_Level;                                          // 0x00BC(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Range;                                             // 0x00C8(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortAbilityTargetSelection            CallFunc_Array_Get_Item;                           // 0x00D0(0x0128)()
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_GetRangeFromGameplayEffectContainer) == 0x000008, "Wrong alignment on AbilityFunctions_C_GetRangeFromGameplayEffectContainer");
static_assert(sizeof(AbilityFunctions_C_GetRangeFromGameplayEffectContainer) == 0x000200, "Wrong size on AbilityFunctions_C_GetRangeFromGameplayEffectContainer");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainer, GE_Container) == 0x000000, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainer::GE_Container' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainer, Target_Selection_List_Index) == 0x0000B8, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainer::Target_Selection_List_Index' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainer, At_Level) == 0x0000BC, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainer::At_Level' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainer, __WorldContext) == 0x0000C0, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainer::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainer, Range) == 0x0000C8, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainer::Range' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainer, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainer, CallFunc_GetValueAtLevel_ReturnValue) == 0x0001F8, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainer::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.GetRangeFromGameplayEffectContainerSpec
// 0x0200 (0x0200 - 0x0000)
struct AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec final
{
public:
	struct FFortGameplayEffectContainerSpec       GE_Container_Spec;                                 // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Target_Selection_List_Index;                       // 0x00B8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         At_Level;                                          // 0x00BC(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Range;                                             // 0x00C8(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortAbilityTargetSelection            CallFunc_Array_Get_Item;                           // 0x00D0(0x0128)()
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec) == 0x000008, "Wrong alignment on AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec");
static_assert(sizeof(AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec) == 0x000200, "Wrong size on AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec, GE_Container_Spec) == 0x000000, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec::GE_Container_Spec' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec, Target_Selection_List_Index) == 0x0000B8, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec::Target_Selection_List_Index' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec, At_Level) == 0x0000BC, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec::At_Level' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec, __WorldContext) == 0x0000C0, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec, Range) == 0x0000C8, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec::Range' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec, CallFunc_GetValueAtLevel_ReturnValue) == 0x0001F8, "Member 'AbilityFunctions_C_GetRangeFromGameplayEffectContainerSpec::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.GetTotalGameplayEffectCount
// 0x0050 (0x0050 - 0x0000)
struct AbilityFunctions_C_GetTotalGameplayEffectCount final
{
public:
	TArray<class UClass*>                         EffectsToCount;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UAbilitySystemComponent*                AbilitySystemComponent;                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FinalEffectCount;                                  // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempTotalEffectCount;                              // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameplayEffectCount_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_GetTotalGameplayEffectCount) == 0x000008, "Wrong alignment on AbilityFunctions_C_GetTotalGameplayEffectCount");
static_assert(sizeof(AbilityFunctions_C_GetTotalGameplayEffectCount) == 0x000050, "Wrong size on AbilityFunctions_C_GetTotalGameplayEffectCount");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, EffectsToCount) == 0x000000, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::EffectsToCount' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, AbilitySystemComponent) == 0x000010, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, __WorldContext) == 0x000018, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, FinalEffectCount) == 0x000020, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::FinalEffectCount' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, TempTotalEffectCount) == 0x000024, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::TempTotalEffectCount' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, CallFunc_Array_Get_Item) == 0x000038, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, CallFunc_GetGameplayEffectCount_ReturnValue) == 0x000040, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::CallFunc_GetGameplayEffectCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_GetTotalGameplayEffectCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'AbilityFunctions_C_GetTotalGameplayEffectCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.SetArrayOfHitActors
// 0x0080 (0x0080 - 0x0000)
struct AbilityFunctions_C_SetArrayOfHitActors final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class AActor*>                         ArrayToSet;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataCountFromTargetData_ReturnValue;   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorsFromTargetData_ReturnValue;      // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_SetArrayOfHitActors) == 0x000008, "Wrong alignment on AbilityFunctions_C_SetArrayOfHitActors");
static_assert(sizeof(AbilityFunctions_C_SetArrayOfHitActors) == 0x000080, "Wrong size on AbilityFunctions_C_SetArrayOfHitActors");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, TargetData) == 0x000000, "Member 'AbilityFunctions_C_SetArrayOfHitActors::TargetData' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, ArrayToSet) == 0x000028, "Member 'AbilityFunctions_C_SetArrayOfHitActors::ArrayToSet' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, __WorldContext) == 0x000038, "Member 'AbilityFunctions_C_SetArrayOfHitActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_GetDataCountFromTargetData_ReturnValue) == 0x000040, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_GetDataCountFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, Temp_int_Variable) == 0x000044, "Member 'AbilityFunctions_C_SetArrayOfHitActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_GetActorsFromTargetData_ReturnValue) == 0x000050, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_GetActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_Array_Get_Item) == 0x000068, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_SetArrayOfHitActors, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'AbilityFunctions_C_SetArrayOfHitActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.ShouldHammerHitsHealRespondToEvent
// 0x00D0 (0x00D0 - 0x0000)
struct AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewLocalVar_0;                                     // 0x00B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllTags_ReturnValue;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllTags_ReturnValue_1;                 // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent) == 0x000008, "Wrong alignment on AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent");
static_assert(sizeof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent) == 0x0000D0, "Wrong size on AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, Payload) == 0x000000, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::Payload' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, __WorldContext) == 0x0000B0, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, ReturnValue) == 0x0000B8, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, NewLocalVar_0) == 0x0000B9, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, CallFunc_HasAllTags_ReturnValue) == 0x0000BA, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::CallFunc_HasAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, CallFunc_HasAllTags_ReturnValue_1) == 0x0000BB, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::CallFunc_HasAllTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, K2Node_DynamicCast_AsFort_Pawn) == 0x0000C0, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, CallFunc_BooleanAND_ReturnValue) == 0x0000C9, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent, CallFunc_BooleanAND_ReturnValue_1) == 0x0000CA, "Member 'AbilityFunctions_C_ShouldHammerHitsHealRespondToEvent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function AbilityFunctions.AbilityFunctions_C.ShouldSwordHitsHealRespondToEvent
// 0x00D0 (0x00D0 - 0x0000)
struct AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllTags_ReturnValue;                   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllTags_ReturnValue_1;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent) == 0x000008, "Wrong alignment on AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent");
static_assert(sizeof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent) == 0x0000D0, "Wrong size on AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, Payload) == 0x000000, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::Payload' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, __WorldContext) == 0x0000B0, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, ReturnValue) == 0x0000B8, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_HasAllTags_ReturnValue) == 0x0000B9, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_HasAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_HasAllTags_ReturnValue_1) == 0x0000BA, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_HasAllTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, K2Node_DynamicCast_AsFort_Pawn) == 0x0000C0, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_BooleanAND_ReturnValue) == 0x0000C9, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent, CallFunc_BooleanAND_ReturnValue_1) == 0x0000CA, "Member 'AbilityFunctions_C_ShouldSwordHitsHealRespondToEvent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

