#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_HealSpray_RemoveWhenOutOfAmmo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function GA_Athena_HealSpray_RemoveWhenOutOfAmmo.GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C.ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo
// 0x01B0 (0x01B0 - 0x0000)
struct GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_5;                    // 0x0004(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_4;                    // 0x0014(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_3;                    // 0x0024(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_2;                    // 0x0034(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag_1;                    // 0x0044(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0048(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_NotifyTag;                      // 0x0054(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0058(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0064(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0068(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0088(0x00B0)(ConstParm)
	class AFortWeapon*                            CallFunc_GetCurrentSourceWeapon_ReturnValue;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetInventoryGUID_ReturnValue;             // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_K2_RemoveItemFromPlayerByGuid_ReturnValue; // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortGetPlayerPawnExecutions                  CallFunc_GetAvatarAsValidFortPlayerPawn_OutExec;   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetAvatarAsValidFortPlayerPawn_OutFortPlayerPawn; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilityTask_PlayMontageWaitNotify* CallFunc_PlayMontageAndWaitNotify_ReturnValue;     // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Athena_HealSpray_C*                  K2Node_DynamicCast_AsB_Athena_Heal_Spray;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRemainingAmmo_ReturnValue;             // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo) == 0x000008, "Wrong alignment on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo");
static_assert(sizeof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo) == 0x0001B0, "Wrong size on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, EntryPoint) == 0x000000, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CustomEvent_NotifyTag_5) == 0x000004, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CustomEvent_NotifyTag_5' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CustomEvent_NotifyTag_4) == 0x000014, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CustomEvent_NotifyTag_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CustomEvent_NotifyTag_3) == 0x000024, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CustomEvent_NotifyTag_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CustomEvent_NotifyTag_2) == 0x000034, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CustomEvent_NotifyTag_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CustomEvent_NotifyTag_1) == 0x000044, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CustomEvent_NotifyTag_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CreateDelegate_OutputDelegate_4) == 0x000048, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CustomEvent_NotifyTag) == 0x000054, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CustomEvent_NotifyTag' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CreateDelegate_OutputDelegate_5) == 0x000058, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, Temp_struct_Variable) == 0x000064, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_CreateDelegate_OutputDelegate_6) == 0x000068, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000078, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000080, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_Event_EventData) == 0x000088, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_GetCurrentSourceWeapon_ReturnValue) == 0x000138, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_GetCurrentSourceWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_GetInventoryGUID_ReturnValue) == 0x000140, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_GetInventoryGUID_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000158, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_K2_RemoveItemFromPlayerByGuid_ReturnValue) == 0x000160, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_K2_RemoveItemFromPlayerByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000168, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_GetAvatarAsValidFortPlayerPawn_OutExec) == 0x000180, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_GetAvatarAsValidFortPlayerPawn_OutExec' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_GetAvatarAsValidFortPlayerPawn_OutFortPlayerPawn) == 0x000188, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_GetAvatarAsValidFortPlayerPawn_OutFortPlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_PlayMontageAndWaitNotify_ReturnValue) == 0x000190, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_PlayMontageAndWaitNotify_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_DynamicCast_AsB_Athena_Heal_Spray) == 0x000198, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_DynamicCast_AsB_Athena_Heal_Spray' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_IsValid_ReturnValue_1) == 0x0001A1, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, K2Node_SwitchEnum_CmpSuccess) == 0x0001A2, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_IsValid_ReturnValue_2) == 0x0001A3, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_GetRemainingAmmo_ReturnValue) == 0x0001A4, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_GetRemainingAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001A8, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_ExecuteUbergraph_GA_Athena_HealSpray_RemoveWhenOutOfAmmo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function GA_Athena_HealSpray_RemoveWhenOutOfAmmo.GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Athena_HealSpray_RemoveWhenOutOfAmmo.GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C.OnBlendOut_011B54574EA14B05D96078B705B18584
// 0x0004 (0x0004 - 0x0000)
struct GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnBlendOut_011B54574EA14B05D96078B705B18584 final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnBlendOut_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong alignment on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnBlendOut_011B54574EA14B05D96078B705B18584");
static_assert(sizeof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnBlendOut_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong size on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnBlendOut_011B54574EA14B05D96078B705B18584");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnBlendOut_011B54574EA14B05D96078B705B18584, NotifyTag) == 0x000000, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnBlendOut_011B54574EA14B05D96078B705B18584::NotifyTag' has a wrong offset!");

// Function GA_Athena_HealSpray_RemoveWhenOutOfAmmo.GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C.OnCancelled_011B54574EA14B05D96078B705B18584
// 0x0004 (0x0004 - 0x0000)
struct GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCancelled_011B54574EA14B05D96078B705B18584 final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCancelled_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong alignment on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCancelled_011B54574EA14B05D96078B705B18584");
static_assert(sizeof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCancelled_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong size on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCancelled_011B54574EA14B05D96078B705B18584");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCancelled_011B54574EA14B05D96078B705B18584, NotifyTag) == 0x000000, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCancelled_011B54574EA14B05D96078B705B18584::NotifyTag' has a wrong offset!");

// Function GA_Athena_HealSpray_RemoveWhenOutOfAmmo.GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C.OnCompleted_011B54574EA14B05D96078B705B18584
// 0x0004 (0x0004 - 0x0000)
struct GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCompleted_011B54574EA14B05D96078B705B18584 final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCompleted_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong alignment on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCompleted_011B54574EA14B05D96078B705B18584");
static_assert(sizeof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCompleted_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong size on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCompleted_011B54574EA14B05D96078B705B18584");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCompleted_011B54574EA14B05D96078B705B18584, NotifyTag) == 0x000000, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnCompleted_011B54574EA14B05D96078B705B18584::NotifyTag' has a wrong offset!");

// Function GA_Athena_HealSpray_RemoveWhenOutOfAmmo.GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C.OnInterrupted_011B54574EA14B05D96078B705B18584
// 0x0004 (0x0004 - 0x0000)
struct GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnInterrupted_011B54574EA14B05D96078B705B18584 final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnInterrupted_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong alignment on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnInterrupted_011B54574EA14B05D96078B705B18584");
static_assert(sizeof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnInterrupted_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong size on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnInterrupted_011B54574EA14B05D96078B705B18584");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnInterrupted_011B54574EA14B05D96078B705B18584, NotifyTag) == 0x000000, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnInterrupted_011B54574EA14B05D96078B705B18584::NotifyTag' has a wrong offset!");

// Function GA_Athena_HealSpray_RemoveWhenOutOfAmmo.GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C.OnNotifyBegin_011B54574EA14B05D96078B705B18584
// 0x0004 (0x0004 - 0x0000)
struct GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyBegin_011B54574EA14B05D96078B705B18584 final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyBegin_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong alignment on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyBegin_011B54574EA14B05D96078B705B18584");
static_assert(sizeof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyBegin_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong size on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyBegin_011B54574EA14B05D96078B705B18584");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyBegin_011B54574EA14B05D96078B705B18584, NotifyTag) == 0x000000, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyBegin_011B54574EA14B05D96078B705B18584::NotifyTag' has a wrong offset!");

// Function GA_Athena_HealSpray_RemoveWhenOutOfAmmo.GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C.OnNotifyEnd_011B54574EA14B05D96078B705B18584
// 0x0004 (0x0004 - 0x0000)
struct GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyEnd_011B54574EA14B05D96078B705B18584 final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyEnd_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong alignment on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyEnd_011B54574EA14B05D96078B705B18584");
static_assert(sizeof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyEnd_011B54574EA14B05D96078B705B18584) == 0x000004, "Wrong size on GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyEnd_011B54574EA14B05D96078B705B18584");
static_assert(offsetof(GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyEnd_011B54574EA14B05D96078B705B18584, NotifyTag) == 0x000000, "Member 'GA_Athena_HealSpray_RemoveWhenOutOfAmmo_C_OnNotifyEnd_011B54574EA14B05D96078B705B18584::NotifyTag' has a wrong offset!");

}

