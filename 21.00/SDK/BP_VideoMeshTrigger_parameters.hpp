#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VideoMeshTrigger

#include "Basic.hpp"

#include "MeshNetwork_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootStopVideo
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoMeshTrigger_C_RootStopVideo final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          LeaveScreen_0;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegionData;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootStopVideo) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootStopVideo");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootStopVideo) == 0x000028, "Wrong size on BP_VideoMeshTrigger_C_RootStopVideo");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStopVideo, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootStopVideo::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStopVideo, LeaveScreen_0) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootStopVideo::LeaveScreen_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStopVideo, RegionData) == 0x000018, "Member 'BP_VideoMeshTrigger_C_RootStopVideo::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootStartWarming
// 0x0038 (0x0038 - 0x0000)
struct BP_VideoMeshTrigger_C_RootStartWarming final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Simple;                                            // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CDNWeights_0;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 RegionData;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootStartWarming) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootStartWarming");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootStartWarming) == 0x000038, "Wrong size on BP_VideoMeshTrigger_C_RootStartWarming");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStartWarming, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootStartWarming::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStartWarming, Enable) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootStartWarming::Enable' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStartWarming, Simple) == 0x000011, "Member 'BP_VideoMeshTrigger_C_RootStartWarming::Simple' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStartWarming, CDNWeights_0) == 0x000018, "Member 'BP_VideoMeshTrigger_C_RootStartWarming::CDNWeights_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStartWarming, RegionData) == 0x000028, "Member 'BP_VideoMeshTrigger_C_RootStartWarming::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootStartPiP
// 0x0038 (0x0038 - 0x0000)
struct BP_VideoMeshTrigger_C_RootStartPiP final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 VideoUID_0;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LIVE;                                              // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegionData;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootStartPiP) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootStartPiP");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootStartPiP) == 0x000038, "Wrong size on BP_VideoMeshTrigger_C_RootStartPiP");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStartPiP, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootStartPiP::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStartPiP, VideoUID_0) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootStartPiP::VideoUID_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStartPiP, Enable) == 0x000020, "Member 'BP_VideoMeshTrigger_C_RootStartPiP::Enable' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStartPiP, LIVE) == 0x000021, "Member 'BP_VideoMeshTrigger_C_RootStartPiP::LIVE' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootStartPiP, RegionData) == 0x000028, "Member 'BP_VideoMeshTrigger_C_RootStartPiP::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootSetScreenPrio
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoMeshTrigger_C_RootSetScreenPrio final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Distance;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegionData;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootSetScreenPrio) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootSetScreenPrio");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootSetScreenPrio) == 0x000028, "Wrong size on BP_VideoMeshTrigger_C_RootSetScreenPrio");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetScreenPrio, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootSetScreenPrio::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetScreenPrio, Distance) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootSetScreenPrio::Distance' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetScreenPrio, RegionData) == 0x000018, "Member 'BP_VideoMeshTrigger_C_RootSetScreenPrio::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootSetScreenMirror
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoMeshTrigger_C_RootSetScreenMirror final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegionData;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootSetScreenMirror) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootSetScreenMirror");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootSetScreenMirror) == 0x000028, "Wrong size on BP_VideoMeshTrigger_C_RootSetScreenMirror");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetScreenMirror, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootSetScreenMirror::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetScreenMirror, Enable) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootSetScreenMirror::Enable' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetScreenMirror, RegionData) == 0x000018, "Member 'BP_VideoMeshTrigger_C_RootSetScreenMirror::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootSetMaxBW
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoMeshTrigger_C_RootSetMaxBW final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         MaxBW;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegionData;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootSetMaxBW) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootSetMaxBW");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootSetMaxBW) == 0x000028, "Wrong size on BP_VideoMeshTrigger_C_RootSetMaxBW");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetMaxBW, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootSetMaxBW::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetMaxBW, MaxBW) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootSetMaxBW::MaxBW' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetMaxBW, RegionData) == 0x000018, "Member 'BP_VideoMeshTrigger_C_RootSetMaxBW::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootSetCDNWeights
// 0x0038 (0x0038 - 0x0000)
struct BP_VideoMeshTrigger_C_RootSetCDNWeights final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Weights;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          PIPToo;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Clear;                                             // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegionData;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootSetCDNWeights) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootSetCDNWeights");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootSetCDNWeights) == 0x000038, "Wrong size on BP_VideoMeshTrigger_C_RootSetCDNWeights");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetCDNWeights, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootSetCDNWeights::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetCDNWeights, Weights) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootSetCDNWeights::Weights' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetCDNWeights, PIPToo) == 0x000020, "Member 'BP_VideoMeshTrigger_C_RootSetCDNWeights::PIPToo' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetCDNWeights, Clear) == 0x000021, "Member 'BP_VideoMeshTrigger_C_RootSetCDNWeights::Clear' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSetCDNWeights, RegionData) == 0x000028, "Member 'BP_VideoMeshTrigger_C_RootSetCDNWeights::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootSeekVideo
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoMeshTrigger_C_RootSeekVideo final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exact;                                             // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegionData;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootSeekVideo) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootSeekVideo");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootSeekVideo) == 0x000028, "Wrong size on BP_VideoMeshTrigger_C_RootSeekVideo");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSeekVideo, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootSeekVideo::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSeekVideo, Time) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootSeekVideo::Time' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSeekVideo, Exact) == 0x000014, "Member 'BP_VideoMeshTrigger_C_RootSeekVideo::Exact' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootSeekVideo, RegionData) == 0x000018, "Member 'BP_VideoMeshTrigger_C_RootSeekVideo::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootPlayVideo
// 0x0040 (0x0040 - 0x0000)
struct BP_VideoMeshTrigger_C_RootPlayVideo final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 VideoUID_0;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PIP;                                               // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LIVE;                                              // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Distance;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegionData;                                        // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootPlayVideo) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootPlayVideo");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootPlayVideo) == 0x000040, "Wrong size on BP_VideoMeshTrigger_C_RootPlayVideo");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootPlayVideo, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootPlayVideo::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootPlayVideo, VideoUID_0) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootPlayVideo::VideoUID_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootPlayVideo, PIP) == 0x000020, "Member 'BP_VideoMeshTrigger_C_RootPlayVideo::PIP' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootPlayVideo, LIVE) == 0x000024, "Member 'BP_VideoMeshTrigger_C_RootPlayVideo::LIVE' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootPlayVideo, Distance) == 0x000028, "Member 'BP_VideoMeshTrigger_C_RootPlayVideo::Distance' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootPlayVideo, RegionData) == 0x000030, "Member 'BP_VideoMeshTrigger_C_RootPlayVideo::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootForcePiP
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoMeshTrigger_C_RootForcePiP final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int64                                         Counter;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 RegionData;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootForcePiP) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootForcePiP");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootForcePiP) == 0x000028, "Wrong size on BP_VideoMeshTrigger_C_RootForcePiP");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootForcePiP, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootForcePiP::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootForcePiP, Counter) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootForcePiP::Counter' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootForcePiP, RegionData) == 0x000018, "Member 'BP_VideoMeshTrigger_C_RootForcePiP::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootEnableLoopVideo
// 0x0020 (0x0020 - 0x0000)
struct BP_VideoMeshTrigger_C_RootEnableLoopVideo final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 RegionData;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootEnableLoopVideo) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootEnableLoopVideo");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootEnableLoopVideo) == 0x000020, "Wrong size on BP_VideoMeshTrigger_C_RootEnableLoopVideo");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootEnableLoopVideo, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootEnableLoopVideo::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootEnableLoopVideo, RegionData) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootEnableLoopVideo::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootDisableLoopVideo
// 0x0020 (0x0020 - 0x0000)
struct BP_VideoMeshTrigger_C_RootDisableLoopVideo final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 RegionData;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootDisableLoopVideo) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootDisableLoopVideo");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootDisableLoopVideo) == 0x000020, "Wrong size on BP_VideoMeshTrigger_C_RootDisableLoopVideo");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootDisableLoopVideo, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootDisableLoopVideo::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootDisableLoopVideo, RegionData) == 0x000010, "Member 'BP_VideoMeshTrigger_C_RootDisableLoopVideo::RegionData' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.RootClearAllData
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoMeshTrigger_C_RootClearAllData final
{
public:
	class FString                                 ScreeName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_RootClearAllData) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_RootClearAllData");
static_assert(sizeof(BP_VideoMeshTrigger_C_RootClearAllData) == 0x000010, "Wrong size on BP_VideoMeshTrigger_C_RootClearAllData");
static_assert(offsetof(BP_VideoMeshTrigger_C_RootClearAllData, ScreeName) == 0x000000, "Member 'BP_VideoMeshTrigger_C_RootClearAllData::ScreeName' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.PrintIncomingData
// 0x0070 (0x0070 - 0x0000)
struct BP_VideoMeshTrigger_C_PrintIncomingData final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 VideoUID_0;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Command;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_PrintIncomingData) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_PrintIncomingData");
static_assert(sizeof(BP_VideoMeshTrigger_C_PrintIncomingData) == 0x000070, "Wrong size on BP_VideoMeshTrigger_C_PrintIncomingData");
static_assert(offsetof(BP_VideoMeshTrigger_C_PrintIncomingData, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_PrintIncomingData::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PrintIncomingData, VideoUID_0) == 0x000010, "Member 'BP_VideoMeshTrigger_C_PrintIncomingData::VideoUID_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PrintIncomingData, Command) == 0x000020, "Member 'BP_VideoMeshTrigger_C_PrintIncomingData::Command' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PrintIncomingData, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_VideoMeshTrigger_C_PrintIncomingData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PrintIncomingData, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_VideoMeshTrigger_C_PrintIncomingData::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PrintIncomingData, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'BP_VideoMeshTrigger_C_PrintIncomingData::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PrintIncomingData, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000060, "Member 'BP_VideoMeshTrigger_C_PrintIncomingData::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.PIPAlso Version
// 0x0060 (0x0060 - 0x0000)
struct BP_VideoMeshTrigger_C_PIPAlso_Version final
{
public:
	int32                                         Version;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LIVE;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 VUID;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RegionData;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_Int                CallFunc_MeshGetRegionValue_Int_OutItem;           // 0x0038(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_Int_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_PIPAlso_Version) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_PIPAlso_Version");
static_assert(sizeof(BP_VideoMeshTrigger_C_PIPAlso_Version) == 0x000060, "Wrong size on BP_VideoMeshTrigger_C_PIPAlso_Version");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, Version) == 0x000000, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::Version' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, LIVE) == 0x000004, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::LIVE' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, VUID) == 0x000008, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::VUID' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, Enable) == 0x000018, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::Enable' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, RegionData) == 0x000020, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::RegionData' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000032, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, CallFunc_BooleanOR_ReturnValue) == 0x000033, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, CallFunc_MeshGetRegionValue_Int_OutItem) == 0x000038, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::CallFunc_MeshGetRegionValue_Int_OutItem' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, CallFunc_MeshGetRegionValue_Int_ReturnValue) == 0x000058, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::CallFunc_MeshGetRegionValue_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00005A, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_PIPAlso_Version, CallFunc_BooleanOR_ReturnValue_1) == 0x00005B, "Member 'BP_VideoMeshTrigger_C_PIPAlso_Version::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_StartWarmingUTCTime
// 0x0028 (0x0028 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime final
{
public:
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DateTimeDateTime_ReturnValue;  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime) == 0x000028, "Wrong size on BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime, CallFunc_EqualEqual_DateTimeDateTime_ReturnValue) == 0x000004, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime::CallFunc_EqualEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000010, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000018, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime, CallFunc_GetTotalSeconds_ReturnValue) == 0x000020, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingUTCTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_StartWarmingServerTimeSeconds
// 0x0080 (0x0080 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds final
{
public:
	float                                         CachedServerWorldTimeSeconds;                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds) == 0x000080, "Wrong size on BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CachedServerWorldTimeSeconds) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CachedServerWorldTimeSeconds' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000020, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000058, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000070, "Member 'BP_VideoMeshTrigger_C_OnRep_StartWarmingServerTimeSeconds::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_Region_StartWarmingUTCTime
// 0x0080 (0x0080 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime final
{
public:
	struct FMeshRegionLockData_Float              K2Node_MakeStruct_MeshRegionLockData_Float;        // 0x0000(0x0020)()
	struct FMeshRegionLockData_DateTime           CallFunc_MeshGetRegionValue_DateTime_OutItem;      // 0x0020(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_DateTime_ReturnValue;  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DateTimeDateTime_ReturnValue;  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMeshRegionLockData_Float              K2Node_MakeStruct_MeshRegionLockData_Float_1;      // 0x0060(0x0020)()
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime) == 0x000080, "Wrong size on BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime, K2Node_MakeStruct_MeshRegionLockData_Float) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime::K2Node_MakeStruct_MeshRegionLockData_Float' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime, CallFunc_MeshGetRegionValue_DateTime_OutItem) == 0x000020, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime::CallFunc_MeshGetRegionValue_DateTime_OutItem' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime, CallFunc_MeshGetRegionValue_DateTime_ReturnValue) == 0x000040, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime::CallFunc_MeshGetRegionValue_DateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000048, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime, CallFunc_EqualEqual_DateTimeDateTime_ReturnValue) == 0x000050, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime::CallFunc_EqualEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime, CallFunc_GetTotalSeconds_ReturnValue) == 0x000054, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000058, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime, K2Node_MakeStruct_MeshRegionLockData_Float_1) == 0x000060, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingUTCTime::K2Node_MakeStruct_MeshRegionLockData_Float_1' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_Region_StartWarmingServerTimeSeconds
// 0x0070 (0x0070 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds final
{
public:
	float                                         CachedServerWorldTimeSeconds;                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_Bool               CallFunc_MeshGetRegionValue_Bool_OutItem;          // 0x0008(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_Bool_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMeshRegionLockData_Bool               CallFunc_MeshGetRegionValue_Bool_OutItem_1;        // 0x0038(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_Bool_ReturnValue_1;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue_1;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds) == 0x000070, "Wrong size on BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, CachedServerWorldTimeSeconds) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::CachedServerWorldTimeSeconds' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_OutItem) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_OutItem' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_ReturnValue) == 0x000028, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_OutItem_1) == 0x000038, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_OutItem_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_ReturnValue_1) == 0x000058, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000059, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, K2Node_SwitchEnum_CmpSuccess) == 0x00005A, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000060, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, CallFunc_GetMeshNetworkNodeType_ReturnValue_1) == 0x000068, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::CallFunc_GetMeshNetworkNodeType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds, K2Node_SwitchEnum_CmpSuccess_1) == 0x000069, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_StartWarmingServerTimeSeconds::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_Region_PlayUTCTime
// 0x0078 (0x0078 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime final
{
public:
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_Float              K2Node_MakeStruct_MeshRegionLockData_Float;        // 0x0010(0x0020)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DateTimeDateTime_ReturnValue;  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMeshRegionLockData_Float              K2Node_MakeStruct_MeshRegionLockData_Float_1;      // 0x0058(0x0020)()
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime) == 0x000078, "Wrong size on BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, K2Node_MakeStruct_MeshRegionLockData_Float) == 0x000010, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::K2Node_MakeStruct_MeshRegionLockData_Float' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000034, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, CallFunc_EqualEqual_DateTimeDateTime_ReturnValue) == 0x000038, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::CallFunc_EqualEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, CallFunc_UtcNow_ReturnValue) == 0x000040, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000048, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, CallFunc_GetTotalSeconds_ReturnValue) == 0x000050, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime, K2Node_MakeStruct_MeshRegionLockData_Float_1) == 0x000058, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayUTCTime::K2Node_MakeStruct_MeshRegionLockData_Float_1' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_Region_PlayServerTimeSeconds
// 0x00A8 (0x00A8 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds final
{
public:
	float                                         CachedServerWorldTimeSeconds;                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_Bool               CallFunc_MeshGetRegionValue_Bool_OutItem;          // 0x0018(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_Bool_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_String             CallFunc_MeshGetRegionValue_String_OutItem;        // 0x0040(0x0028)()
	bool                                          CallFunc_MeshGetRegionValue_String_ReturnValue;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_Bool               CallFunc_MeshGetRegionValue_Bool_OutItem_1;        // 0x0070(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_Bool_ReturnValue_1;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue_1;     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds) == 0x0000A8, "Wrong size on BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CachedServerWorldTimeSeconds) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CachedServerWorldTimeSeconds' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000010, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_OutItem) == 0x000018, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_OutItem' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_ReturnValue) == 0x000038, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_MeshGetRegionValue_String_OutItem) == 0x000040, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_MeshGetRegionValue_String_OutItem' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_MeshGetRegionValue_String_ReturnValue) == 0x000068, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_MeshGetRegionValue_String_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_OutItem_1) == 0x000070, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_OutItem_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_ReturnValue_1) == 0x000090, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000091, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000098, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, CallFunc_GetMeshNetworkNodeType_ReturnValue_1) == 0x0000A0, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::CallFunc_GetMeshNetworkNodeType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000A1, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PlayServerTimeSeconds::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_Region_PiPPlayUTCTime
// 0x0048 (0x0048 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime final
{
public:
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMeshRegionLockData_Float              K2Node_MakeStruct_MeshRegionLockData_Float;        // 0x0028(0x0020)()
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime) == 0x000048, "Wrong size on BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x00000C, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime, CallFunc_UtcNow_ReturnValue) == 0x000010, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000018, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime, CallFunc_GetTotalSeconds_ReturnValue) == 0x000020, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime, K2Node_MakeStruct_MeshRegionLockData_Float) == 0x000028, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayUTCTime::K2Node_MakeStruct_MeshRegionLockData_Float' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_Region_PiPPlayerServerTimeSeconds
// 0x0090 (0x0090 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds final
{
public:
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_String             CallFunc_MeshGetRegionValue_String_OutItem;        // 0x0010(0x0028)()
	bool                                          CallFunc_MeshGetRegionValue_String_ReturnValue;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_Bool               CallFunc_MeshGetRegionValue_Bool_OutItem;          // 0x0040(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_Bool_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_Bool               CallFunc_MeshGetRegionValue_Bool_OutItem_1;        // 0x0068(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_Bool_ReturnValue_1;    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds) == 0x000090, "Wrong size on BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds, CallFunc_MeshGetRegionValue_String_OutItem) == 0x000010, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds::CallFunc_MeshGetRegionValue_String_OutItem' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds, CallFunc_MeshGetRegionValue_String_ReturnValue) == 0x000038, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds::CallFunc_MeshGetRegionValue_String_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_OutItem) == 0x000040, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_OutItem' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_ReturnValue) == 0x000060, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_OutItem_1) == 0x000068, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_OutItem_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds, CallFunc_MeshGetRegionValue_Bool_ReturnValue_1) == 0x000088, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_PiPPlayerServerTimeSeconds::CallFunc_MeshGetRegionValue_Bool_ReturnValue_1' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_Region_MaxBandwidth
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth final
{
public:
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth) == 0x000010, "Wrong size on BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_MaxBandwidth::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_Region_LoopVideo
// 0x0010 (0x0010 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo final
{
public:
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo) == 0x000010, "Wrong size on BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_VideoMeshTrigger_C_OnRep_Region_LoopVideo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_PlayUTCTime
// 0x0030 (0x0030 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_PlayUTCTime final
{
public:
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DateTimeDateTime_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_PlayUTCTime");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime) == 0x000030, "Wrong size on BP_VideoMeshTrigger_C_OnRep_PlayUTCTime");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayUTCTime::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayUTCTime::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayUTCTime::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x00000C, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayUTCTime::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime, CallFunc_EqualEqual_DateTimeDateTime_ReturnValue) == 0x000010, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayUTCTime::CallFunc_EqualEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime, CallFunc_UtcNow_ReturnValue) == 0x000018, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayUTCTime::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000020, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayUTCTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime, CallFunc_GetTotalSeconds_ReturnValue) == 0x000028, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayUTCTime::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayUTCTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayUTCTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_PlayServerTimeSeconds
// 0x0080 (0x0080 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds final
{
public:
	float                                         CachedServerWorldTimeSeconds;                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds) == 0x000080, "Wrong size on BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CachedServerWorldTimeSeconds) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CachedServerWorldTimeSeconds' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000020, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000028, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000070, "Member 'BP_VideoMeshTrigger_C_OnRep_PlayServerTimeSeconds::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_PiPPlayUTCTIme
// 0x0030 (0x0030 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme final
{
public:
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme) == 0x000030, "Wrong size on BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme, CallFunc_UtcNow_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000018, "Member 'BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000020, "Member 'BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme, CallFunc_GetTotalSeconds_ReturnValue) == 0x000024, "Member 'BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_VideoMeshTrigger_C_OnRep_PiPPlayUTCTIme::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_PiPPlayerServerTimeSeconds
// 0x0001 (0x0001 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_PiPPlayerServerTimeSeconds final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_PiPPlayerServerTimeSeconds) == 0x000001, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_PiPPlayerServerTimeSeconds");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_PiPPlayerServerTimeSeconds) == 0x000001, "Wrong size on BP_VideoMeshTrigger_C_OnRep_PiPPlayerServerTimeSeconds");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_PiPPlayerServerTimeSeconds, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_PiPPlayerServerTimeSeconds::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_MaxBandwidth
// 0x0001 (0x0001 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_MaxBandwidth final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_MaxBandwidth) == 0x000001, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_MaxBandwidth");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_MaxBandwidth) == 0x000001, "Wrong size on BP_VideoMeshTrigger_C_OnRep_MaxBandwidth");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_MaxBandwidth, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_MaxBandwidth::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.OnRep_LoopVideo
// 0x0020 (0x0020 - 0x0000)
struct BP_VideoMeshTrigger_C_OnRep_LoopVideo final
{
public:
	struct FMeshRegionLockData_Bool               NewLocalVar_0;                                     // 0x0000(0x0020)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_VideoMeshTrigger_C_OnRep_LoopVideo) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_OnRep_LoopVideo");
static_assert(sizeof(BP_VideoMeshTrigger_C_OnRep_LoopVideo) == 0x000020, "Wrong size on BP_VideoMeshTrigger_C_OnRep_LoopVideo");
static_assert(offsetof(BP_VideoMeshTrigger_C_OnRep_LoopVideo, NewLocalVar_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_OnRep_LoopVideo::NewLocalVar_0' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.ExecuteUbergraph_BP_VideoMeshTrigger
// 0x04D0 (0x04D0 - 0x0000)
struct BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ScreenName;                     // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Distance;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RegionData;                     // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScreen_ThisScreen;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ScreenName_1;                   // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Weights;                        // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_PIPToo;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Clear;                          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RegionData_1;                   // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScreen_ThisScreen_1;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue_1;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ScreenName_2;                   // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_Counter;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_RegionData_2;                   // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScreen_ThisScreen_2;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ScreenName_3;                   // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_VideoUID;                       // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Live;                           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RegionData_3;                   // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMeshRegionLockData_DateTime           K2Node_MakeStruct_MeshRegionLockData_DateTime;     // 0x00F0(0x0020)()
	bool                                          CallFunc_CheckScreen_ThisScreen_3;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ScreenName_4;                   // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable_1;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RegionData_4;                   // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ScreenName_5;                   // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time;                           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Exact;                          // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RegionData_5;                   // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScreen_ThisScreen_4;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScreen_ThisScreen_5;                 // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue;       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ScreenName_6;                   // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxBW;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RegionData_6;                   // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMeshRegionLockData_Int                K2Node_MakeStruct_MeshRegionLockData_Int;          // 0x01A8(0x0020)()
	bool                                          CallFunc_CheckScreen_ThisScreen_6;                 // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ScreenName_7;                   // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_RegionData_7;                   // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ScreenName_8;                   // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_RegionData_8;                   // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMeshRegionLockData_Bool               K2Node_MakeStruct_MeshRegionLockData_Bool;         // 0x0210(0x0020)()
	struct FMeshRegionLockData_Bool               K2Node_MakeStruct_MeshRegionLockData_Bool_1;       // 0x0230(0x0020)()
	bool                                          CallFunc_CheckScreen_ThisScreen_7;                 // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScreen_ThisScreen_8;                 // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue_2;                     // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ScreenName_9;                   // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable_2;                       // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Simple;                         // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_CDNWeights;                     // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_RegionData_9;                   // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ScreenName_10;                  // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_LeaveScreen;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RegionData_10;                  // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMeshRegionLockData_DateTime           K2Node_MakeStruct_MeshRegionLockData_DateTime_1;   // 0x02C0(0x0020)()
	struct FMeshRegionLockData_DateTime           K2Node_MakeStruct_MeshRegionLockData_DateTime_2;   // 0x02E0(0x0020)()
	struct FMeshRegionLockData_DateTime           K2Node_MakeStruct_MeshRegionLockData_DateTime_3;   // 0x0300(0x0020)()
	struct FMeshRegionLockData_Int                CallFunc_MeshGetRegionValue_Int_OutItem;           // 0x0320(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_Int_ReturnValue;       // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_Bool               CallFunc_MeshGetRegionValue_Bool_OutItem;          // 0x0348(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_Bool_ReturnValue;      // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_Bool               K2Node_MakeStruct_MeshRegionLockData_Bool_2;       // 0x0370(0x0020)()
	bool                                          CallFunc_CheckScreen_ThisScreen_9;                 // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_DateTime           K2Node_MakeStruct_MeshRegionLockData_DateTime_4;   // 0x0398(0x0020)()
	bool                                          CallFunc_CheckScreen_ThisScreen_10;                // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ScreenName_11;                  // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_VideoUID_1;                     // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PiP;                            // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Live_1;                         // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Distance_1;                     // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RegionData_11;                  // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMeshRegionLockData_DateTime           K2Node_MakeStruct_MeshRegionLockData_DateTime_5;   // 0x0400(0x0020)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScreen_ThisScreen_11;                // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshRegionLockData_Int                CallFunc_MeshGetRegionValue_Int_OutItem_1;         // 0x0428(0x0020)()
	bool                                          CallFunc_MeshGetRegionValue_Int_ReturnValue_1;     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue_1;     // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45B[0x5];                                      // 0x045B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue_2;     // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x046B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_4;   // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue_3;     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue_4;     // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0483(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ScreeName;                      // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScreen_ThisScreen_12;                // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_5;   // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue_5;     // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AA[0x6];                                      // 0x04AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_6;   // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue_6;     // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA[0x6];                                      // 0x04BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshNetworkSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue_7;   // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshNetworkNodeType                          CallFunc_GetMeshNetworkNodeType_ReturnValue_7;     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_7;                    // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger");
static_assert(sizeof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger) == 0x0004D0, "Wrong size on BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, EntryPoint) == 0x000000, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_UtcNow_ReturnValue) == 0x000008, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName) == 0x000010, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Distance) == 0x000020, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Distance' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData) == 0x000028, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen) == 0x000038, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_1) == 0x000040, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Weights) == 0x000050, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Weights' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_PIPToo) == 0x000060, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_PIPToo' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Clear) == 0x000061, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Clear' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_1) == 0x000068, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_1) == 0x000078, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_UtcNow_ReturnValue_1) == 0x000080, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_UtcNow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_2) == 0x000088, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Counter) == 0x000098, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Counter' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_2) == 0x0000A0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_NotEqual_Int64Int64_ReturnValue) == 0x0000B0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_NotEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_2) == 0x0000B1, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_3) == 0x0000B8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_3' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_VideoUID) == 0x0000C8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_VideoUID' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Enable) == 0x0000D8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Live) == 0x0000D9, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Live' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_3) == 0x0000E0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_3' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_MakeStruct_MeshRegionLockData_DateTime) == 0x0000F0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_MakeStruct_MeshRegionLockData_DateTime' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_3) == 0x000110, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_3' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_4) == 0x000118, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_4' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Enable_1) == 0x000128, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Enable_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_4) == 0x000130, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_4' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_5) == 0x000140, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_5' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Time) == 0x000150, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Exact) == 0x000154, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Exact' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_5) == 0x000158, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_5' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_4) == 0x000168, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_4' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_5) == 0x000169, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_5' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000170, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetMeshNetworkNodeType_ReturnValue) == 0x000178, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetMeshNetworkNodeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_SwitchEnum_CmpSuccess) == 0x000179, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_6) == 0x000180, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_6' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_MaxBW) == 0x000190, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_MaxBW' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_6) == 0x000198, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_6' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_MakeStruct_MeshRegionLockData_Int) == 0x0001A8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_MakeStruct_MeshRegionLockData_Int' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_6) == 0x0001C8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_6' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_7) == 0x0001D0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_7' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_7) == 0x0001E0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_7' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_8) == 0x0001F0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_8' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_8) == 0x000200, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_8' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_MakeStruct_MeshRegionLockData_Bool) == 0x000210, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_MakeStruct_MeshRegionLockData_Bool' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_MakeStruct_MeshRegionLockData_Bool_1) == 0x000230, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_MakeStruct_MeshRegionLockData_Bool_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_7) == 0x000250, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_7' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_8) == 0x000251, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_8' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_UtcNow_ReturnValue_2) == 0x000258, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_UtcNow_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_9) == 0x000260, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_9' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Enable_2) == 0x000270, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Enable_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Simple) == 0x000271, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Simple' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_CDNWeights) == 0x000278, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_CDNWeights' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_9) == 0x000288, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_9' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_10) == 0x000298, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_10' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_LeaveScreen) == 0x0002A8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_LeaveScreen' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_10) == 0x0002B0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_10' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_MakeStruct_MeshRegionLockData_DateTime_1) == 0x0002C0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_MakeStruct_MeshRegionLockData_DateTime_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_MakeStruct_MeshRegionLockData_DateTime_2) == 0x0002E0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_MakeStruct_MeshRegionLockData_DateTime_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_MakeStruct_MeshRegionLockData_DateTime_3) == 0x000300, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_MakeStruct_MeshRegionLockData_DateTime_3' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_MeshGetRegionValue_Int_OutItem) == 0x000320, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_MeshGetRegionValue_Int_OutItem' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_MeshGetRegionValue_Int_ReturnValue) == 0x000340, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_MeshGetRegionValue_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_MeshGetRegionValue_Bool_OutItem) == 0x000348, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_MeshGetRegionValue_Bool_OutItem' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_MeshGetRegionValue_Bool_ReturnValue) == 0x000368, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_MeshGetRegionValue_Bool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_MakeStruct_MeshRegionLockData_Bool_2) == 0x000370, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_MakeStruct_MeshRegionLockData_Bool_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_9) == 0x000390, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_9' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_MakeStruct_MeshRegionLockData_DateTime_4) == 0x000398, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_MakeStruct_MeshRegionLockData_DateTime_4' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_10) == 0x0003B8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_10' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreenName_11) == 0x0003C0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreenName_11' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_VideoUID_1) == 0x0003D0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_VideoUID_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_PiP) == 0x0003E0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_PiP' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Live_1) == 0x0003E4, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Live_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_Distance_1) == 0x0003E8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_RegionData_11) == 0x0003F0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_RegionData_11' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_MakeStruct_MeshRegionLockData_DateTime_5) == 0x000400, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_MakeStruct_MeshRegionLockData_DateTime_5' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000420, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_11) == 0x000421, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_11' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_MeshGetRegionValue_Int_OutItem_1) == 0x000428, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_MeshGetRegionValue_Int_OutItem_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_MeshGetRegionValue_Int_ReturnValue_1) == 0x000448, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_MeshGetRegionValue_Int_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000450, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_Not_PreBool_ReturnValue) == 0x000458, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetMeshNetworkNodeType_ReturnValue_1) == 0x000459, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetMeshNetworkNodeType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_SwitchEnum_CmpSuccess_1) == 0x00045A, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000460, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000468, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetMeshNetworkNodeType_ReturnValue_2) == 0x000469, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetMeshNetworkNodeType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_BooleanOR_ReturnValue) == 0x00046A, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_SwitchEnum_CmpSuccess_2) == 0x00046B, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000470, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetGameInstanceSubsystem_ReturnValue_4) == 0x000478, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetGameInstanceSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetMeshNetworkNodeType_ReturnValue_3) == 0x000480, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetMeshNetworkNodeType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetMeshNetworkNodeType_ReturnValue_4) == 0x000481, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetMeshNetworkNodeType_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_SwitchEnum_CmpSuccess_3) == 0x000482, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_SwitchEnum_CmpSuccess_4) == 0x000483, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_CustomEvent_ScreeName) == 0x000488, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_CustomEvent_ScreeName' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_CheckScreen_ThisScreen_12) == 0x000498, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_CheckScreen_ThisScreen_12' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetGameInstanceSubsystem_ReturnValue_5) == 0x0004A0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetGameInstanceSubsystem_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetMeshNetworkNodeType_ReturnValue_5) == 0x0004A8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetMeshNetworkNodeType_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_SwitchEnum_CmpSuccess_5) == 0x0004A9, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetGameInstanceSubsystem_ReturnValue_6) == 0x0004B0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetGameInstanceSubsystem_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetMeshNetworkNodeType_ReturnValue_6) == 0x0004B8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetMeshNetworkNodeType_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_SwitchEnum_CmpSuccess_6) == 0x0004B9, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetGameInstanceSubsystem_ReturnValue_7) == 0x0004C0, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetGameInstanceSubsystem_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, CallFunc_GetMeshNetworkNodeType_ReturnValue_7) == 0x0004C8, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::CallFunc_GetMeshNetworkNodeType_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger, K2Node_SwitchEnum_CmpSuccess_7) == 0x0004C9, "Member 'BP_VideoMeshTrigger_C_ExecuteUbergraph_BP_VideoMeshTrigger::K2Node_SwitchEnum_CmpSuccess_7' has a wrong offset!");

// Function BP_VideoMeshTrigger.BP_VideoMeshTrigger_C.CheckScreen
// 0x0018 (0x0018 - 0x0000)
struct BP_VideoMeshTrigger_C_CheckScreen final
{
public:
	class FString                                 ScreenName_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ThisScreen;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VideoMeshTrigger_C_CheckScreen) == 0x000008, "Wrong alignment on BP_VideoMeshTrigger_C_CheckScreen");
static_assert(sizeof(BP_VideoMeshTrigger_C_CheckScreen) == 0x000018, "Wrong size on BP_VideoMeshTrigger_C_CheckScreen");
static_assert(offsetof(BP_VideoMeshTrigger_C_CheckScreen, ScreenName_0) == 0x000000, "Member 'BP_VideoMeshTrigger_C_CheckScreen::ScreenName_0' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_CheckScreen, ThisScreen) == 0x000010, "Member 'BP_VideoMeshTrigger_C_CheckScreen::ThisScreen' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_CheckScreen, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000011, "Member 'BP_VideoMeshTrigger_C_CheckScreen::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_CheckScreen, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000012, "Member 'BP_VideoMeshTrigger_C_CheckScreen::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VideoMeshTrigger_C_CheckScreen, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'BP_VideoMeshTrigger_C_CheckScreen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

