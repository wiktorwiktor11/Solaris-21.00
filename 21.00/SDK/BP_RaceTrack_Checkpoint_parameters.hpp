#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RaceTrack_Checkpoint

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_RaceTrack_Checkpoint.BP_RaceTrack_Checkpoint_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000100, "Wrong size on BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_RaceTrack_Checkpoint.BP_RaceTrack_Checkpoint_C.ExecuteUbergraph_BP_RaceTrack_Checkpoint
// 0x0208 (0x0208 - 0x0000)
struct BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FX_Visibility;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_CustomEvent_FPP_01;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RaceTrack_Checkpoint_C*             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0060(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface;       // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetVehicleTags_ReturnValue;               // 0x0168(0x0020)(ConstParm)
	TArray<class AFortPlayerPawn*>                CallFunc_BP_GetAllPassengers_ReturnValue;          // 0x0188(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_EnableCollision;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item_2;                         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_4;             // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_5;             // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortPlayerPawn*                  Temp_object_Variable;                              // 0x01F8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTagContainer_ReturnValue; // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint) == 0x000008, "Wrong alignment on BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint");
static_assert(sizeof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint) == 0x000208, "Wrong size on BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, EntryPoint) == 0x000000, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_CustomEvent_FX_Visibility) == 0x000004, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_CustomEvent_FX_Visibility' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_CustomEvent_FPP_01) == 0x000008, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_CustomEvent_FPP_01' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_IsLocallyControlled_ReturnValue) == 0x000010, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000034, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_AddUnique_ReturnValue) == 0x000038, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Contains_ReturnValue_1) == 0x00003C, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000040, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_ComponentBoundEvent_OtherActor) == 0x000048, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_ComponentBoundEvent_OtherComp) == 0x000050, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000058, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_ComponentBoundEvent_bFromSweep) == 0x00005C, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_ComponentBoundEvent_SweepResult) == 0x000060, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_DynamicCast_AsFort_Vehicle_Interface) == 0x000140, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_DynamicCast_AsFort_Vehicle_Interface' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000158, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_DynamicCast_bSuccess_1) == 0x000160, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_GetVehicleTags_ReturnValue) == 0x000168, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_GetVehicleTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_BP_GetAllPassengers_ReturnValue) == 0x000188, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_BP_GetAllPassengers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Length_ReturnValue_1) == 0x000198, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_BooleanOR_ReturnValue) == 0x00019C, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Find_ReturnValue_1) == 0x0001A0, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Get_Item_1) == 0x0001A4, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x0001A8, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001AC, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, K2Node_CustomEvent_EnableCollision) == 0x0001B0, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::K2Node_CustomEvent_EnableCollision' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Contains_ReturnValue_2) == 0x0001B1, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0001B4, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, Temp_int_Array_Index_Variable) == 0x0001B8, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Get_Item_2) == 0x0001C0, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0001C8, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Contains_ReturnValue_3) == 0x0001D0, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Contains_ReturnValue_4) == 0x0001D1, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0001D4, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x0001D8, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_Contains_ReturnValue_5) == 0x0001DC, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001E0, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, Temp_int_Loop_Counter_Variable) == 0x0001E4, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001EC, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001F0, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, Temp_object_Variable) == 0x0001F8, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_Array_AddUnique_ReturnValue_3) == 0x000200, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint, CallFunc_EqualEqual_GameplayTagContainer_ReturnValue) == 0x000204, "Member 'BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint::CallFunc_EqualEqual_GameplayTagContainer_ReturnValue' has a wrong offset!");

// Function BP_RaceTrack_Checkpoint.BP_RaceTrack_Checkpoint_C.ResetCheckpoint
// 0x0001 (0x0001 - 0x0000)
struct BP_RaceTrack_Checkpoint_C_ResetCheckpoint final
{
public:
	bool                                          EnableCollision;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceTrack_Checkpoint_C_ResetCheckpoint) == 0x000001, "Wrong alignment on BP_RaceTrack_Checkpoint_C_ResetCheckpoint");
static_assert(sizeof(BP_RaceTrack_Checkpoint_C_ResetCheckpoint) == 0x000001, "Wrong size on BP_RaceTrack_Checkpoint_C_ResetCheckpoint");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_ResetCheckpoint, EnableCollision) == 0x000000, "Member 'BP_RaceTrack_Checkpoint_C_ResetCheckpoint::EnableCollision' has a wrong offset!");

// Function BP_RaceTrack_Checkpoint.BP_RaceTrack_Checkpoint_C.UpdateCheckpointFX
// 0x0010 (0x0010 - 0x0000)
struct BP_RaceTrack_Checkpoint_C_UpdateCheckpointFX final
{
public:
	bool                                          FX_Visibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        FPP_01;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RaceTrack_Checkpoint_C_UpdateCheckpointFX) == 0x000008, "Wrong alignment on BP_RaceTrack_Checkpoint_C_UpdateCheckpointFX");
static_assert(sizeof(BP_RaceTrack_Checkpoint_C_UpdateCheckpointFX) == 0x000010, "Wrong size on BP_RaceTrack_Checkpoint_C_UpdateCheckpointFX");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_UpdateCheckpointFX, FX_Visibility) == 0x000000, "Member 'BP_RaceTrack_Checkpoint_C_UpdateCheckpointFX::FX_Visibility' has a wrong offset!");
static_assert(offsetof(BP_RaceTrack_Checkpoint_C_UpdateCheckpointFX, FPP_01) == 0x000008, "Member 'BP_RaceTrack_Checkpoint_C_UpdateCheckpointFX::FPP_01' has a wrong offset!");

}

