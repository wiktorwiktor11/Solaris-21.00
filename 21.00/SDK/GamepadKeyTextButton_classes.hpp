#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadKeyTextButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GamepadKeyTextButton.GamepadKeyTextButton_C
// 0x00C0 (0x10F0 - 0x1030)
class UGamepadKeyTextButton_C final : public UFortGamepadCustomListItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UKeybindWidget_C*                       BoundKey;                                          // 0x1038(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ContentBorder;                                     // 0x1040(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortRichTextBlockLegacy*               FortRichTextBlock_Desc;                            // 0x1048(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortRichTextBlockLegacy*               FortRichTextBlock_NoKey;                           // 0x1050(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Nokey;                                     // 0x1058(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ButtonText;                                        // 0x1060(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UClass*                                 ControllerInputStyle;                              // 0x1078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EHorizontalAlignment                          ContentAlignment;                                  // 0x1080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1081[0x7];                                     // 0x1081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class FName ActionName, const struct FKey& Key)> ChangeTheBinding_Button;                           // 0x1088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   ActionNameData;                                    // 0x1098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109C[0x4];                                     // 0x109C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   KeyData;                                           // 0x10A0(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   TextData;                                          // 0x10B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKey                                   KeyNone;                                           // 0x10D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GamepadKeyTextButton(int32 EntryPoint);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void PreConstruct(bool IsDesignTime);
	void SetContentAlignment(EHorizontalAlignment ContentAlignment_0);
	void SetData(const struct FKey& Key, const class FText& DescText, class FName ActionName);
	void SetDataAndUpdateButton(const struct FKey& Key, const class FText& DescText, class FName ActionName);
	void SetNonInteractableStyle();
	void SetTabLabelInfo(const struct FFortTabButtonLabelInfo& TabLabelInfo);
	void UpdateButton(class UGamepadKeyTextButton_C* Button);
	void UpdateContentAlignment();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GamepadKeyTextButton_C">();
	}
	static class UGamepadKeyTextButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadKeyTextButton_C>();
	}
};
static_assert(alignof(UGamepadKeyTextButton_C) == 0x000010, "Wrong alignment on UGamepadKeyTextButton_C");
static_assert(sizeof(UGamepadKeyTextButton_C) == 0x0010F0, "Wrong size on UGamepadKeyTextButton_C");
static_assert(offsetof(UGamepadKeyTextButton_C, UberGraphFrame) == 0x001030, "Member 'UGamepadKeyTextButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, BoundKey) == 0x001038, "Member 'UGamepadKeyTextButton_C::BoundKey' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ContentBorder) == 0x001040, "Member 'UGamepadKeyTextButton_C::ContentBorder' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, FortRichTextBlock_Desc) == 0x001048, "Member 'UGamepadKeyTextButton_C::FortRichTextBlock_Desc' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, FortRichTextBlock_NoKey) == 0x001050, "Member 'UGamepadKeyTextButton_C::FortRichTextBlock_NoKey' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, SizeBox_Nokey) == 0x001058, "Member 'UGamepadKeyTextButton_C::SizeBox_Nokey' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ButtonText) == 0x001060, "Member 'UGamepadKeyTextButton_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ControllerInputStyle) == 0x001078, "Member 'UGamepadKeyTextButton_C::ControllerInputStyle' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ContentAlignment) == 0x001080, "Member 'UGamepadKeyTextButton_C::ContentAlignment' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ChangeTheBinding_Button) == 0x001088, "Member 'UGamepadKeyTextButton_C::ChangeTheBinding_Button' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ActionNameData) == 0x001098, "Member 'UGamepadKeyTextButton_C::ActionNameData' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, KeyData) == 0x0010A0, "Member 'UGamepadKeyTextButton_C::KeyData' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, TextData) == 0x0010B8, "Member 'UGamepadKeyTextButton_C::TextData' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, KeyNone) == 0x0010D0, "Member 'UGamepadKeyTextButton_C::KeyNone' has a wrong offset!");

}

