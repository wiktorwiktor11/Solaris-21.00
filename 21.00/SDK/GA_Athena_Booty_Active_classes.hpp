#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Booty_Active

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Booty_Active.GA_Athena_Booty_Active_C
// 0x01D0 (0x0CE0 - 0x0B10)
class UGA_Athena_Booty_Active_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnvQuery*                              EQS_Location;                                      // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnvQuery*                              EQS_Location_Alternate;                            // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnvQueryInstanceBlueprintWrapper*      TempEQS;                                           // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ChestProp;                                         // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MakeNewChest;                                      // 0x0B40(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B41[0x7];                                      // 0x0B41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_Athena_Booty_C*                   SpawnedChestProp;                                  // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               MapItem;                                           // 0x0B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PickupSpawner;                                     // 0x0B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FailsafeChestSpawn;                                // 0x0B60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B64[0x4];                                      // 0x0B64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ChestSpawnTimer;                                   // 0x0B68(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          NearChest;                                         // 0x0B70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B71[0x7];                                      // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PropSpawnLocation;                                 // 0x0B78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_AthenaMapMarker_Booty_C*             ClientMarker;                                      // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B98[0x8];                                      // 0x0B98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             MarkerSpawnTransform;                              // 0x0BA0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         OffMapZ;                                           // 0x0C00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C04[0x4];                                      // 0x0C04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurrentSafeZoneCenter;                             // 0x0C08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentSafeZoneRadiusSquared;                      // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocationFound;                                     // 0x0C24(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C25[0x3];                                      // 0x0C25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        PlacementLocs;                                     // 0x0C28(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystem*                        DirectionParticle;                                 // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DirectionalSound;                                  // 0x0C40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlreadyDropped;                                    // 0x0C48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C49[0x3];                                      // 0x0C49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SeatChangeDelay;                                   // 0x0C4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Hoverboard;                                        // 0x0C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MadeChest;                                         // 0x0C58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DirectionalParticleReady;                          // 0x0C59(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5A[0x2];                                      // 0x0C5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DirectionalParticleDelay;                          // 0x0C5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_ActiveTag;                                       // 0x0C60(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C64[0x4];                                      // 0x0C64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProp_Athena_Booty_C*                   PendingProp;                                       // 0x0C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shread_Height_Offset;                              // 0x0C70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C74[0x4];                                      // 0x0C74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  FailedReason;                                      // 0x0C78(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         StarterIslandX;                                    // 0x0C98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCreative;                                        // 0x0C9C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9D[0x3];                                      // 0x0C9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DirectionalMarkerOffset;                           // 0x0CA0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AutoDirectionalMarkerPulseTime;                    // 0x0CB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CBC[0x4];                                      // 0x0CBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_AutoDirectionalMarker;                       // 0x0CC0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DelaybeforeAutoDirectionalMarker;                  // 0x0CC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightLimit;                                       // 0x0CCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DestroyItemCue;                                    // 0x0CD0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AutoTriggerDirectionalMarker();
	void CheckCreative();
	void CheckForValidLoc(const struct FVector& Location, int32 Index_0, bool* HitValidActor);
	void CheckIfMapEquipped(bool* MapEquipped);
	void CleanAndEndAbility();
	void ClientKillMarker();
	void ClientSpawnDirectionalParticle();
	void EndDirectionalMarkerTimer();
	void EQS_Finished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void EventReceived_56A5C3424CC753390287B7992353AB78(const struct FGameplayEventData& Payload);
	void EventReceived_6C658CA0494656CA7C653C87337DFE16(const struct FGameplayEventData& Payload);
	void EventReceived_8DF61E954DBAB2322994A89D4A286438(const struct FGameplayEventData& Payload);
	void EventReceived_93DFCF6540A9FA0E487FC6BB235561E8(const struct FGameplayEventData& Payload);
	void EventReceived_975793F6410FC23AA54412BF0652F860(const struct FGameplayEventData& Payload);
	void EventReceived_AA34C2DC4DCAE64BE17A3A84AE9870E7(const struct FGameplayEventData& Payload);
	void EventReceived_B299FF8241F2919701242A8492FAFE36(const struct FGameplayEventData& Payload);
	void EventReceived_D3DEC61B4DF9F77608633EB12160B6EE(const struct FGameplayEventData& Payload);
	void EventReceived_F684FC3943A4405DB3C2E8A8B930975D(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_Athena_Booty_Active(int32 EntryPoint);
	void FailedToActivatePassiveAbility();
	void HandleSwap();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void LootTaken();
	void NewChestIncoming(class AProp_Athena_Booty_C* NewPropIn);
	void OnPickupCreated(const class AFortPlayerController* PlayerController, class AFortPickup* PickUp);
	void SaveOutPlayer();
	void SeatChanged(int32 SeatIndex);
	void SpawnChest();
	void SpawnChestAfterTime();
	void SpawnMarkerOnClient(const struct FTransform& Transform);
	void SpawnNewMap(class AFortPickup* DroppedItem);
	void StartDirectionalMarkerTimer();
	void ToggleHideClientSkyMarker(bool Hide);
	void WaitForDropEvents();
	void WaitForOverlapEvents();
	void WaitForVehicle();
	void WaitForVisualFXEvents();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Booty_Active_C">();
	}
	static class UGA_Athena_Booty_Active_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Booty_Active_C>();
	}
};
static_assert(alignof(UGA_Athena_Booty_Active_C) == 0x000010, "Wrong alignment on UGA_Athena_Booty_Active_C");
static_assert(sizeof(UGA_Athena_Booty_Active_C) == 0x000CE0, "Wrong size on UGA_Athena_Booty_Active_C");
static_assert(offsetof(UGA_Athena_Booty_Active_C, UberGraphFrame) == 0x000B10, "Member 'UGA_Athena_Booty_Active_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, PlayerPawn) == 0x000B18, "Member 'UGA_Athena_Booty_Active_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, EQS_Location) == 0x000B20, "Member 'UGA_Athena_Booty_Active_C::EQS_Location' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, EQS_Location_Alternate) == 0x000B28, "Member 'UGA_Athena_Booty_Active_C::EQS_Location_Alternate' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, TempEQS) == 0x000B30, "Member 'UGA_Athena_Booty_Active_C::TempEQS' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, ChestProp) == 0x000B38, "Member 'UGA_Athena_Booty_Active_C::ChestProp' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, MakeNewChest) == 0x000B40, "Member 'UGA_Athena_Booty_Active_C::MakeNewChest' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, SpawnedChestProp) == 0x000B48, "Member 'UGA_Athena_Booty_Active_C::SpawnedChestProp' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, MapItem) == 0x000B50, "Member 'UGA_Athena_Booty_Active_C::MapItem' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, PickupSpawner) == 0x000B58, "Member 'UGA_Athena_Booty_Active_C::PickupSpawner' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, FailsafeChestSpawn) == 0x000B60, "Member 'UGA_Athena_Booty_Active_C::FailsafeChestSpawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, ChestSpawnTimer) == 0x000B68, "Member 'UGA_Athena_Booty_Active_C::ChestSpawnTimer' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, NearChest) == 0x000B70, "Member 'UGA_Athena_Booty_Active_C::NearChest' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, PropSpawnLocation) == 0x000B78, "Member 'UGA_Athena_Booty_Active_C::PropSpawnLocation' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, ClientMarker) == 0x000B90, "Member 'UGA_Athena_Booty_Active_C::ClientMarker' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, MarkerSpawnTransform) == 0x000BA0, "Member 'UGA_Athena_Booty_Active_C::MarkerSpawnTransform' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, OffMapZ) == 0x000C00, "Member 'UGA_Athena_Booty_Active_C::OffMapZ' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, CurrentSafeZoneCenter) == 0x000C08, "Member 'UGA_Athena_Booty_Active_C::CurrentSafeZoneCenter' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, CurrentSafeZoneRadiusSquared) == 0x000C20, "Member 'UGA_Athena_Booty_Active_C::CurrentSafeZoneRadiusSquared' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, LocationFound) == 0x000C24, "Member 'UGA_Athena_Booty_Active_C::LocationFound' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, PlacementLocs) == 0x000C28, "Member 'UGA_Athena_Booty_Active_C::PlacementLocs' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, DirectionParticle) == 0x000C38, "Member 'UGA_Athena_Booty_Active_C::DirectionParticle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, DirectionalSound) == 0x000C40, "Member 'UGA_Athena_Booty_Active_C::DirectionalSound' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, AlreadyDropped) == 0x000C48, "Member 'UGA_Athena_Booty_Active_C::AlreadyDropped' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, SeatChangeDelay) == 0x000C4C, "Member 'UGA_Athena_Booty_Active_C::SeatChangeDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, Hoverboard) == 0x000C50, "Member 'UGA_Athena_Booty_Active_C::Hoverboard' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, MadeChest) == 0x000C58, "Member 'UGA_Athena_Booty_Active_C::MadeChest' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, DirectionalParticleReady) == 0x000C59, "Member 'UGA_Athena_Booty_Active_C::DirectionalParticleReady' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, DirectionalParticleDelay) == 0x000C5C, "Member 'UGA_Athena_Booty_Active_C::DirectionalParticleDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, T_ActiveTag) == 0x000C60, "Member 'UGA_Athena_Booty_Active_C::T_ActiveTag' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, PendingProp) == 0x000C68, "Member 'UGA_Athena_Booty_Active_C::PendingProp' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, Shread_Height_Offset) == 0x000C70, "Member 'UGA_Athena_Booty_Active_C::Shread_Height_Offset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, FailedReason) == 0x000C78, "Member 'UGA_Athena_Booty_Active_C::FailedReason' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, StarterIslandX) == 0x000C98, "Member 'UGA_Athena_Booty_Active_C::StarterIslandX' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, IsCreative) == 0x000C9C, "Member 'UGA_Athena_Booty_Active_C::IsCreative' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, DirectionalMarkerOffset) == 0x000CA0, "Member 'UGA_Athena_Booty_Active_C::DirectionalMarkerOffset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, AutoDirectionalMarkerPulseTime) == 0x000CB8, "Member 'UGA_Athena_Booty_Active_C::AutoDirectionalMarkerPulseTime' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, Timer_AutoDirectionalMarker) == 0x000CC0, "Member 'UGA_Athena_Booty_Active_C::Timer_AutoDirectionalMarker' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, DelaybeforeAutoDirectionalMarker) == 0x000CC8, "Member 'UGA_Athena_Booty_Active_C::DelaybeforeAutoDirectionalMarker' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, HeightLimit) == 0x000CCC, "Member 'UGA_Athena_Booty_Active_C::HeightLimit' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Booty_Active_C, DestroyItemCue) == 0x000CD0, "Member 'UGA_Athena_Booty_Active_C::DestroyItemCue' has a wrong offset!");

}

