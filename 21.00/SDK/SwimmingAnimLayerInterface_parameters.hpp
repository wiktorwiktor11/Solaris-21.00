#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SwimmingAnimLayerInterface

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingAdditiveLayer
// 0x0078 (0x0078 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer final
{
public:
	struct FPoseLink                              IdleAdditive_Cache;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              MovementAdditiveLayerPose_Cache;                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              FullBody;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         PlayMeleeAttackAOLayer;                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DisableArmsHeadAdditiveCurveAlphaLayer;            // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DisableIKRootAdditiveCurveAlphaLayer;              // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocomotionAdditiveAlphaLayer;                      // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MainInstanceAdditiveLayerAlpha;                    // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              UpperAndLowerBody_Cache;                           // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              SprintingPose_PostMask_Cache;                      // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              SwimmingAdditiveLayer_0;                           // 0x0068(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer) == 0x000078, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, IdleAdditive_Cache) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::IdleAdditive_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, MovementAdditiveLayerPose_Cache) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::MovementAdditiveLayerPose_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, FullBody) == 0x000020, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::FullBody' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, PlayMeleeAttackAOLayer) == 0x000030, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::PlayMeleeAttackAOLayer' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, DisableArmsHeadAdditiveCurveAlphaLayer) == 0x000034, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::DisableArmsHeadAdditiveCurveAlphaLayer' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, DisableIKRootAdditiveCurveAlphaLayer) == 0x000038, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::DisableIKRootAdditiveCurveAlphaLayer' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, LocomotionAdditiveAlphaLayer) == 0x00003C, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::LocomotionAdditiveAlphaLayer' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, MainInstanceAdditiveLayerAlpha) == 0x000040, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::MainInstanceAdditiveLayerAlpha' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, UpperAndLowerBody_Cache) == 0x000048, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::UpperAndLowerBody_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, SprintingPose_PostMask_Cache) == 0x000058, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::SprintingPose_PostMask_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer, SwimmingAdditiveLayer_0) == 0x000068, "Member 'SwimmingAnimLayerInterface_C_SwimmingAdditiveLayer::SwimmingAdditiveLayer_0' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingDiveJumpingLayer
// 0x0028 (0x0028 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer final
{
public:
	struct FPoseLink                              PassThroughSwimmingDiveJumping;                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          IsHidingInPropLayer2;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortPlayerAnimBodyType                       AnimBodyTypePassThrough;                           // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              SwimmingDiveJumpingLayer_0;                        // 0x0018(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer) == 0x000028, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer, PassThroughSwimmingDiveJumping) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer::PassThroughSwimmingDiveJumping' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer, IsHidingInPropLayer2) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer::IsHidingInPropLayer2' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer, AnimBodyTypePassThrough) == 0x000011, "Member 'SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer::AnimBodyTypePassThrough' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer, SwimmingDiveJumpingLayer_0) == 0x000018, "Member 'SwimmingAnimLayerInterface_C_SwimmingDiveJumpingLayer::SwimmingDiveJumpingLayer_0' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingLowerBodyLayer
// 0x0040 (0x0040 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer final
{
public:
	struct FPoseLink                              UpperBody_Cache;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              PreUpperBodySlot_Cache;                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              PassThroughSwimmingLowerBody;                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              SwimmingLowerBodyLayer_0;                          // 0x0030(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer) == 0x000040, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer, UpperBody_Cache) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer::UpperBody_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer, PreUpperBodySlot_Cache) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer::PreUpperBodySlot_Cache' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer, PassThroughSwimmingLowerBody) == 0x000020, "Member 'SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer::PassThroughSwimmingLowerBody' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer, SwimmingLowerBodyLayer_0) == 0x000030, "Member 'SwimmingAnimLayerInterface_C_SwimmingLowerBodyLayer::SwimmingLowerBodyLayer_0' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingMovementAdditiveLayerPose
// 0x0020 (0x0020 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose final
{
public:
	struct FPoseLink                              PassThroughSwimmingMovementAdditive;               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              SwimmingMovementAdditiveLayerPose_0;               // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose) == 0x000020, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose, PassThroughSwimmingMovementAdditive) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose::PassThroughSwimmingMovementAdditive' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose, SwimmingMovementAdditiveLayerPose_0) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingMovementAdditiveLayerPose::SwimmingMovementAdditiveLayerPose_0' has a wrong offset!");

// Function SwimmingAnimLayerInterface.SwimmingAnimLayerInterface_C.SwimmingUpperBodyPose
// 0x0020 (0x0020 - 0x0000)
struct SwimmingAnimLayerInterface_C_SwimmingUpperBodyPose final
{
public:
	struct FPoseLink                              PassThroughSwimmingUpperBodyPose;                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              SwimmingUpperBodyPose_0;                           // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPose) == 0x000008, "Wrong alignment on SwimmingAnimLayerInterface_C_SwimmingUpperBodyPose");
static_assert(sizeof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPose) == 0x000020, "Wrong size on SwimmingAnimLayerInterface_C_SwimmingUpperBodyPose");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPose, PassThroughSwimmingUpperBodyPose) == 0x000000, "Member 'SwimmingAnimLayerInterface_C_SwimmingUpperBodyPose::PassThroughSwimmingUpperBodyPose' has a wrong offset!");
static_assert(offsetof(SwimmingAnimLayerInterface_C_SwimmingUpperBodyPose, SwimmingUpperBodyPose_0) == 0x000010, "Member 'SwimmingAnimLayerInterface_C_SwimmingUpperBodyPose::SwimmingUpperBodyPose_0' has a wrong offset!");

}

