#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaStormSurgePhase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaStormSurgePhase.AthenaStormSurgePhase_C
// 0x0060 (0x03C8 - 0x0368)
class UAthenaStormSurgePhase_C final : public UAthenaStormSurgeWarningBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       StormDMGAlert;                                     // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       AlertText;                                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Glow;                                              // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       HelpText;                                          // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LightningBack;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StormIcon;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsDisplaying;                                     // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              StartStormSurgeDisplay;                            // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              StopStormSurgeDisplay;                             // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Anim_Load();
	void ExecuteUbergraph_AthenaStormSurgePhase(int32 EntryPoint);
	void OnStartDisplaying(const class FText& TitleText, const class FText& SubTitleText, bool bDisplaySubtitle, bool bPlayDamageActiveSound);
	void OnStopDisplaying();
	void StopDisplayAfterTime();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaStormSurgePhase_C">();
	}
	static class UAthenaStormSurgePhase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaStormSurgePhase_C>();
	}
};
static_assert(alignof(UAthenaStormSurgePhase_C) == 0x000008, "Wrong alignment on UAthenaStormSurgePhase_C");
static_assert(sizeof(UAthenaStormSurgePhase_C) == 0x0003C8, "Wrong size on UAthenaStormSurgePhase_C");
static_assert(offsetof(UAthenaStormSurgePhase_C, UberGraphFrame) == 0x000368, "Member 'UAthenaStormSurgePhase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgePhase_C, StormDMGAlert) == 0x000370, "Member 'UAthenaStormSurgePhase_C::StormDMGAlert' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgePhase_C, AlertText) == 0x000378, "Member 'UAthenaStormSurgePhase_C::AlertText' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgePhase_C, Glow) == 0x000380, "Member 'UAthenaStormSurgePhase_C::Glow' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgePhase_C, HelpText) == 0x000388, "Member 'UAthenaStormSurgePhase_C::HelpText' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgePhase_C, LightningBack) == 0x000390, "Member 'UAthenaStormSurgePhase_C::LightningBack' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgePhase_C, StormIcon) == 0x000398, "Member 'UAthenaStormSurgePhase_C::StormIcon' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgePhase_C, bIsDisplaying) == 0x0003A0, "Member 'UAthenaStormSurgePhase_C::bIsDisplaying' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgePhase_C, StartStormSurgeDisplay) == 0x0003A8, "Member 'UAthenaStormSurgePhase_C::StartStormSurgeDisplay' has a wrong offset!");
static_assert(offsetof(UAthenaStormSurgePhase_C, StopStormSurgeDisplay) == 0x0003B8, "Member 'UAthenaStormSurgePhase_C::StopStormSurgeDisplay' has a wrong offset!");

}

