#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StashItem_Rental_TaskNode

#include "Basic.hpp"

#include "StashItem_Rental_TaskNode_classes.hpp"
#include "StashItem_Rental_TaskNode_parameters.hpp"


namespace SDK
{

// Function StashItem_Rental_TaskNode.StashItem_Rental_TaskNode_C.WasPreviouslyStashedItemInvalid_1
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInvalidItem                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UStashItem_Rental_TaskNode_C::WasPreviouslyStashedItemInvalid_1(class AActor* Actor, bool* bInvalidItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StashItem_Rental_TaskNode_C", "WasPreviouslyStashedItemInvalid_1");

	Params::StashItem_Rental_TaskNode_C_WasPreviouslyStashedItemInvalid_1 Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (bInvalidItem != nullptr)
		*bInvalidItem = Parms.bInvalidItem;
}


// Function StashItem_Rental_TaskNode.StashItem_Rental_TaskNode_C.WasPreviouslyStashedItemInvalid_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInvalidItem                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UStashItem_Rental_TaskNode_C::WasPreviouslyStashedItemInvalid_0(class AActor* Actor, bool* bInvalidItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StashItem_Rental_TaskNode_C", "WasPreviouslyStashedItemInvalid_0");

	Params::StashItem_Rental_TaskNode_C_WasPreviouslyStashedItemInvalid_0 Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (bInvalidItem != nullptr)
		*bInvalidItem = Parms.bInvalidItem;
}


// Function StashItem_Rental_TaskNode.StashItem_Rental_TaskNode_C.WasPreviouslyStashedItemInvalid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInvalidItem                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UStashItem_Rental_TaskNode_C::WasPreviouslyStashedItemInvalid(class AActor* Actor, bool* bInvalidItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StashItem_Rental_TaskNode_C", "WasPreviouslyStashedItemInvalid");

	Params::StashItem_Rental_TaskNode_C_WasPreviouslyStashedItemInvalid Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (bInvalidItem != nullptr)
		*bInvalidItem = Parms.bInvalidItem;
}


// Function StashItem_Rental_TaskNode.StashItem_Rental_TaskNode_C.GatherStaticExtraData
// (BlueprintAuthorityOnly, Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FConversationContext             Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FConversationNodeParameterPair>InOutExtraData                                         (Parm, OutParm)

void UStashItem_Rental_TaskNode_C::GatherStaticExtraData(const struct FConversationContext& Context, TArray<struct FConversationNodeParameterPair>* InOutExtraData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StashItem_Rental_TaskNode_C", "GatherStaticExtraData");

	Params::StashItem_Rental_TaskNode_C_GatherStaticExtraData Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);

	if (InOutExtraData != nullptr)
		*InOutExtraData = std::move(Parms.InOutExtraData);
}


// Function StashItem_Rental_TaskNode.StashItem_Rental_TaskNode_C.ExecuteTaskNode
// (BlueprintAuthorityOnly, Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FConversationContext             Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FConversationTaskResult          ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FConversationTaskResult UStashItem_Rental_TaskNode_C::ExecuteTaskNode(const struct FConversationContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StashItem_Rental_TaskNode_C", "ExecuteTaskNode");

	Params::StashItem_Rental_TaskNode_C_ExecuteTaskNode Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function StashItem_Rental_TaskNode.StashItem_Rental_TaskNode_C.DoesItemUseRangedWeaponAmmo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ItemObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UStashItem_Rental_TaskNode_C::DoesItemUseRangedWeaponAmmo(class UFortItem* ItemObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StashItem_Rental_TaskNode_C", "DoesItemUseRangedWeaponAmmo");

	Params::StashItem_Rental_TaskNode_C_DoesItemUseRangedWeaponAmmo Parms{};

	Parms.ItemObject = ItemObject;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

