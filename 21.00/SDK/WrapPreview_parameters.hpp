#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WrapPreview

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WrapPreview.WrapPreview_C.UpdateLightingScale
// 0x0014 (0x0014 - 0x0000)
struct WrapPreview_C_UpdateLightingScale final
{
public:
	float                                         UpscaleForVehicle;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShowingVehicle_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_UpdateLightingScale) == 0x000004, "Wrong alignment on WrapPreview_C_UpdateLightingScale");
static_assert(sizeof(WrapPreview_C_UpdateLightingScale) == 0x000014, "Wrong size on WrapPreview_C_UpdateLightingScale");
static_assert(offsetof(WrapPreview_C_UpdateLightingScale, UpscaleForVehicle) == 0x000000, "Member 'WrapPreview_C_UpdateLightingScale::UpscaleForVehicle' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_UpdateLightingScale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'WrapPreview_C_UpdateLightingScale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_UpdateLightingScale, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WrapPreview_C_UpdateLightingScale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_UpdateLightingScale, CallFunc_SelectFloat_ReturnValue_1) == 0x00000C, "Member 'WrapPreview_C_UpdateLightingScale::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_UpdateLightingScale, CallFunc_IsShowingVehicle_ReturnValue) == 0x000010, "Member 'WrapPreview_C_UpdateLightingScale::CallFunc_IsShowingVehicle_ReturnValue' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.UpdateFloorVisibility
// 0x0003 (0x0003 - 0x0000)
struct WrapPreview_C_UpdateFloorVisibility final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShowingVehicle_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_UpdateFloorVisibility) == 0x000001, "Wrong alignment on WrapPreview_C_UpdateFloorVisibility");
static_assert(sizeof(WrapPreview_C_UpdateFloorVisibility) == 0x000003, "Wrong size on WrapPreview_C_UpdateFloorVisibility");
static_assert(offsetof(WrapPreview_C_UpdateFloorVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WrapPreview_C_UpdateFloorVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_UpdateFloorVisibility, CallFunc_IsShowingVehicle_ReturnValue) == 0x000001, "Member 'WrapPreview_C_UpdateFloorVisibility::CallFunc_IsShowingVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_UpdateFloorVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'WrapPreview_C_UpdateFloorVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.SwitchPCLighting
// 0x0001 (0x0001 - 0x0000)
struct WrapPreview_C_SwitchPCLighting final
{
public:
	bool                                          Visibility;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_SwitchPCLighting) == 0x000001, "Wrong alignment on WrapPreview_C_SwitchPCLighting");
static_assert(sizeof(WrapPreview_C_SwitchPCLighting) == 0x000001, "Wrong size on WrapPreview_C_SwitchPCLighting");
static_assert(offsetof(WrapPreview_C_SwitchPCLighting, Visibility) == 0x000000, "Member 'WrapPreview_C_SwitchPCLighting::Visibility' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.SwitchMobileLighting
// 0x0001 (0x0001 - 0x0000)
struct WrapPreview_C_SwitchMobileLighting final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_SwitchMobileLighting) == 0x000001, "Wrong alignment on WrapPreview_C_SwitchMobileLighting");
static_assert(sizeof(WrapPreview_C_SwitchMobileLighting) == 0x000001, "Wrong size on WrapPreview_C_SwitchMobileLighting");
static_assert(offsetof(WrapPreview_C_SwitchMobileLighting, NewParam) == 0x000000, "Member 'WrapPreview_C_SwitchMobileLighting::NewParam' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.SwitchErebusLighting
// 0x0001 (0x0001 - 0x0000)
struct WrapPreview_C_SwitchErebusLighting final
{
public:
	bool                                          Visibility;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_SwitchErebusLighting) == 0x000001, "Wrong alignment on WrapPreview_C_SwitchErebusLighting");
static_assert(sizeof(WrapPreview_C_SwitchErebusLighting) == 0x000001, "Wrong size on WrapPreview_C_SwitchErebusLighting");
static_assert(offsetof(WrapPreview_C_SwitchErebusLighting, Visibility) == 0x000000, "Member 'WrapPreview_C_SwitchErebusLighting::Visibility' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.SetFloorEnabled
// 0x0001 (0x0001 - 0x0000)
struct WrapPreview_C_SetFloorEnabled final
{
public:
	bool                                          Floor_Enabled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_SetFloorEnabled) == 0x000001, "Wrong alignment on WrapPreview_C_SetFloorEnabled");
static_assert(sizeof(WrapPreview_C_SetFloorEnabled) == 0x000001, "Wrong size on WrapPreview_C_SetFloorEnabled");
static_assert(offsetof(WrapPreview_C_SetFloorEnabled, Floor_Enabled) == 0x000000, "Member 'WrapPreview_C_SetFloorEnabled::Floor_Enabled' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.OnUpdateFloorMaterial
// 0x0001 (0x0001 - 0x0000)
struct WrapPreview_C_OnUpdateFloorMaterial final
{
public:
	bool                                          bEnableAutotestBackground;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_OnUpdateFloorMaterial) == 0x000001, "Wrong alignment on WrapPreview_C_OnUpdateFloorMaterial");
static_assert(sizeof(WrapPreview_C_OnUpdateFloorMaterial) == 0x000001, "Wrong size on WrapPreview_C_OnUpdateFloorMaterial");
static_assert(offsetof(WrapPreview_C_OnUpdateFloorMaterial, bEnableAutotestBackground) == 0x000000, "Member 'WrapPreview_C_OnUpdateFloorMaterial::bEnableAutotestBackground' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.OnSetFloorMaterial
// 0x0008 (0x0008 - 0x0000)
struct WrapPreview_C_OnSetFloorMaterial final
{
public:
	class UMaterialInterface*                     InMaterialInstance;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_OnSetFloorMaterial) == 0x000008, "Wrong alignment on WrapPreview_C_OnSetFloorMaterial");
static_assert(sizeof(WrapPreview_C_OnSetFloorMaterial) == 0x000008, "Wrong size on WrapPreview_C_OnSetFloorMaterial");
static_assert(offsetof(WrapPreview_C_OnSetFloorMaterial, InMaterialInstance) == 0x000000, "Member 'WrapPreview_C_OnSetFloorMaterial::InMaterialInstance' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.OnPreviewVisualsSpawned
// 0x0002 (0x0002 - 0x0000)
struct WrapPreview_C_OnPreviewVisualsSpawned final
{
public:
	bool                                          bUseSecondaryTransitionEffects;                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowFloor;                                        // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_OnPreviewVisualsSpawned) == 0x000001, "Wrong alignment on WrapPreview_C_OnPreviewVisualsSpawned");
static_assert(sizeof(WrapPreview_C_OnPreviewVisualsSpawned) == 0x000002, "Wrong size on WrapPreview_C_OnPreviewVisualsSpawned");
static_assert(offsetof(WrapPreview_C_OnPreviewVisualsSpawned, bUseSecondaryTransitionEffects) == 0x000000, "Member 'WrapPreview_C_OnPreviewVisualsSpawned::bUseSecondaryTransitionEffects' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_OnPreviewVisualsSpawned, bShowFloor) == 0x000001, "Member 'WrapPreview_C_OnPreviewVisualsSpawned::bShowFloor' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.LightControl
// 0x0028 (0x0028 - 0x0000)
struct WrapPreview_C_LightControl final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsErebus_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameUserSettings*                  CallFunc_GetFortGameUserSettings_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPerformanceMode_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsErebus_ReturnValue_1;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShadowQuality_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_LightControl) == 0x000008, "Wrong alignment on WrapPreview_C_LightControl");
static_assert(sizeof(WrapPreview_C_LightControl) == 0x000028, "Wrong size on WrapPreview_C_LightControl");
static_assert(offsetof(WrapPreview_C_LightControl, Active) == 0x000000, "Member 'WrapPreview_C_LightControl::Active' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_IsErebus_ReturnValue) == 0x000001, "Member 'WrapPreview_C_LightControl::CallFunc_IsErebus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_GetFortGameUserSettings_ReturnValue) == 0x000008, "Member 'WrapPreview_C_LightControl::CallFunc_GetFortGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_IsMobileGame_ReturnValue) == 0x000010, "Member 'WrapPreview_C_LightControl::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_IsInPerformanceMode_ReturnValue) == 0x000011, "Member 'WrapPreview_C_LightControl::CallFunc_IsInPerformanceMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'WrapPreview_C_LightControl::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_BooleanOR_ReturnValue_1) == 0x000013, "Member 'WrapPreview_C_LightControl::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_IsErebus_ReturnValue_1) == 0x000014, "Member 'WrapPreview_C_LightControl::CallFunc_IsErebus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_GetGameUserSettings_ReturnValue) == 0x000018, "Member 'WrapPreview_C_LightControl::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_GetShadowQuality_ReturnValue) == 0x000020, "Member 'WrapPreview_C_LightControl::CallFunc_GetShadowQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'WrapPreview_C_LightControl::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_BooleanOR_ReturnValue_2) == 0x000025, "Member 'WrapPreview_C_LightControl::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_LightControl, CallFunc_BooleanOR_ReturnValue_3) == 0x000026, "Member 'WrapPreview_C_LightControl::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.HandleLightingScale
// 0x0058 (0x0058 - 0x0000)
struct WrapPreview_C_HandleLightingScale final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_HandleLightingScale) == 0x000008, "Wrong alignment on WrapPreview_C_HandleLightingScale");
static_assert(sizeof(WrapPreview_C_HandleLightingScale) == 0x000058, "Wrong size on WrapPreview_C_HandleLightingScale");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000004, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000008, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00000C, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000010, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000014, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000018, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x00001C, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000020, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000024, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000028, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_HandleLightingScale, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'WrapPreview_C_HandleLightingScale::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function WrapPreview.WrapPreview_C.ExecuteUbergraph_WrapPreview
// 0x0098 (0x0098 - 0x0000)
struct WrapPreview_C_ExecuteUbergraph_WrapPreview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShadowQuality_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Event_InMaterialInstance;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bUseSecondaryTransitionEffects;       // 0x0060(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowFloor;                           // 0x0061(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameUserSettings*                  CallFunc_GetFortGameUserSettings_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPerformanceMode_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0074(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnableAutotestBackground;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsErebus_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WrapPreview_C_ExecuteUbergraph_WrapPreview) == 0x000008, "Wrong alignment on WrapPreview_C_ExecuteUbergraph_WrapPreview");
static_assert(sizeof(WrapPreview_C_ExecuteUbergraph_WrapPreview) == 0x000098, "Wrong size on WrapPreview_C_ExecuteUbergraph_WrapPreview");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, EntryPoint) == 0x000000, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::EntryPoint' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_GetGameUserSettings_ReturnValue) == 0x000020, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_GetShadowQuality_ReturnValue) == 0x000028, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_GetShadowQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000030, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000048, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, K2Node_Event_InMaterialInstance) == 0x000050, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::K2Node_Event_InMaterialInstance' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000058, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, K2Node_Event_bUseSecondaryTransitionEffects) == 0x000060, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::K2Node_Event_bUseSecondaryTransitionEffects' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, K2Node_Event_bShowFloor) == 0x000061, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::K2Node_Event_bShowFloor' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_IsMobileGame_ReturnValue) == 0x000062, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_GetFortGameUserSettings_ReturnValue) == 0x000068, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_GetFortGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_IsInPerformanceMode_ReturnValue) == 0x000070, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_IsInPerformanceMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, K2Node_CreateDelegate_OutputDelegate) == 0x000074, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, K2Node_Event_bEnableAutotestBackground) == 0x000081, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::K2Node_Event_bEnableAutotestBackground' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000088, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_IsErebus_ReturnValue) == 0x000090, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_IsErebus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_BooleanOR_ReturnValue_1) == 0x000091, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WrapPreview_C_ExecuteUbergraph_WrapPreview, CallFunc_BooleanOR_ReturnValue_2) == 0x000092, "Member 'WrapPreview_C_ExecuteUbergraph_WrapPreview::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

}

