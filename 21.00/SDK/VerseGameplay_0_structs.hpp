#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseGameplay_0

#include "Basic.hpp"


namespace SDK
{

// SolarisGeneratedStruct VerseGameplay.tuple_L_R
// 0x0001 (0x0001 - 0x0000)
struct VerseGameplay_0::Ftuple_L_R final
{
public:
	uint8                                         _StructPaddingDummy;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseGameplay_0::Ftuple_L_R) == 0x000001, "Wrong alignment on VerseGameplay_0::Ftuple_L_R");
static_assert(sizeof(VerseGameplay_0::Ftuple_L_R) == 0x000001, "Wrong size on VerseGameplay_0::Ftuple_L_R");
static_assert(offsetof(VerseGameplay_0::Ftuple_L_R, _StructPaddingDummy) == 0x000000, "Member 'VerseGameplay_0::Ftuple_L_R::_StructPaddingDummy' has a wrong offset!");

// SolarisGeneratedStruct VerseGameplay.tuple_Lgameplay__tag__container_Mgameplay__tag__container_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lgameplay__tag__container_Mgameplay__tag__container_R final
{
public:
	class Ugameplay_tag_container*                __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ugameplay_tag_container*                __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lgameplay__tag__container_Mgameplay__tag__container_R) == 0x000008, "Wrong alignment on Ftuple_Lgameplay__tag__container_Mgameplay__tag__container_R");
static_assert(sizeof(Ftuple_Lgameplay__tag__container_Mgameplay__tag__container_R) == 0x000010, "Wrong size on Ftuple_Lgameplay__tag__container_Mgameplay__tag__container_R");
static_assert(offsetof(Ftuple_Lgameplay__tag__container_Mgameplay__tag__container_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lgameplay__tag__container_Mgameplay__tag__container_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lgameplay__tag__container_Mgameplay__tag__container_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lgameplay__tag__container_Mgameplay__tag__container_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseGameplay.tuple_Lgameplay__tag_Mgameplay__tag_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lgameplay__tag_Mgameplay__tag_R final
{
public:
	class Ugameplay_tag*                          __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ugameplay_tag*                          __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lgameplay__tag_Mgameplay__tag_R) == 0x000008, "Wrong alignment on Ftuple_Lgameplay__tag_Mgameplay__tag_R");
static_assert(sizeof(Ftuple_Lgameplay__tag_Mgameplay__tag_R) == 0x000010, "Wrong size on Ftuple_Lgameplay__tag_Mgameplay__tag_R");
static_assert(offsetof(Ftuple_Lgameplay__tag_Mgameplay__tag_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lgameplay__tag_Mgameplay__tag_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lgameplay__tag_Mgameplay__tag_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lgameplay__tag_Mgameplay__tag_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseGameplay.tuple_Lint_Mtype_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lint_Mtype_R final
{
public:
	int64                                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lint_Mtype_R) == 0x000008, "Wrong alignment on Ftuple_Lint_Mtype_R");
static_assert(sizeof(Ftuple_Lint_Mtype_R) == 0x000010, "Wrong size on Ftuple_Lint_Mtype_R");
static_assert(offsetof(Ftuple_Lint_Mtype_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lint_Mtype_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lint_Mtype_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lint_Mtype_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseGameplay.tuple_Lplayer__component_Mtype_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lplayer__component_Mtype_R final
{
public:
	class Uplayer_component*                      __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer__component_Mtype_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer__component_Mtype_R");
static_assert(sizeof(Ftuple_Lplayer__component_Mtype_R) == 0x000010, "Wrong size on Ftuple_Lplayer__component_Mtype_R");
static_assert(offsetof(Ftuple_Lplayer__component_Mtype_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer__component_Mtype_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer__component_Mtype_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer__component_Mtype_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

}

