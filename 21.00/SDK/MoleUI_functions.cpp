#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MoleUI

#include "Basic.hpp"

#include "MoleUI_classes.hpp"
#include "MoleUI_parameters.hpp"


namespace SDK
{

// Function MoleUI.MoleEnemyAbilityItem.GetIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMoleEnemyAbilityItem::GetIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleEnemyAbilityItem", "GetIndex");

	Params::MoleEnemyAbilityItem_GetIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MoleUI.MoleAssignedTaskContainerWidget.OnActiveTasksChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bFrameDefer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleAssignedTaskContainerWidget::OnActiveTasksChanged(bool bFrameDefer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleAssignedTaskContainerWidget", "OnActiveTasksChanged");

	Params::MoleAssignedTaskContainerWidget_OnActiveTasksChanged Parms{};

	Parms.bFrameDefer = bFrameDefer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleControllerBinding.OnBindingInfoSet
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             BindingLabel                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsSaboteurBinding                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleControllerBinding::OnBindingInfoSet(const class FText& BindingLabel, bool bIsSaboteurBinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleControllerBinding", "OnBindingInfoSet");

	Params::MoleControllerBinding_OnBindingInfoSet Parms{};

	Parms.BindingLabel = std::move(BindingLabel);
	Parms.bIsSaboteurBinding = bIsSaboteurBinding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleEnemyAbilityContainer.OnVisibilityChangeRequested
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleEnemyAbilityContainer::OnVisibilityChangeRequested(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleEnemyAbilityContainer", "OnVisibilityChangeRequested");

	Params::MoleEnemyAbilityContainer_OnVisibilityChangeRequested Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleEnemyAbilityEntry.OnAbilityDataReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UMoleEnemyAbilityItem*            Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleEnemyAbilityEntry::OnAbilityDataReceived(class UMoleEnemyAbilityItem* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleEnemyAbilityEntry", "OnAbilityDataReceived");

	Params::MoleEnemyAbilityEntry_OnAbilityDataReceived Parms{};

	Parms.Data = Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleEnemyAbilityOverlay.OnAbilityDataReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FMoleAbilityUIData               InAbilityUIData                                        (Parm, NativeAccessSpecifierPublic)

void UMoleEnemyAbilityOverlay::OnAbilityDataReceived(const struct FMoleAbilityUIData& InAbilityUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleEnemyAbilityOverlay", "OnAbilityDataReceived");

	Params::MoleEnemyAbilityOverlay_OnAbilityDataReceived Parms{};

	Parms.InAbilityUIData = std::move(InAbilityUIData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleEnemyAbilityOverlay.OnCooldownFinished
// (Event, Protected, BlueprintEvent)

void UMoleEnemyAbilityOverlay::OnCooldownFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleEnemyAbilityOverlay", "OnCooldownFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleEnemyAbilityOverlay.OnCooldownStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TimeLeft                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleEnemyAbilityOverlay::OnCooldownStarted(int32 TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleEnemyAbilityOverlay", "OnCooldownStarted");

	Params::MoleEnemyAbilityOverlay_OnCooldownStarted Parms{};

	Parms.TimeLeft = TimeLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleEnemyAbilityOverlay.OnCooldownUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TimeLeft                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleEnemyAbilityOverlay::OnCooldownUpdated(int32 TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleEnemyAbilityOverlay", "OnCooldownUpdated");

	Params::MoleEnemyAbilityOverlay_OnCooldownUpdated Parms{};

	Parms.TimeLeft = TimeLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleEnemyAbilityWidgetComponent.AreSabotageShortcutsEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMoleEnemyAbilityWidgetComponent::AreSabotageShortcutsEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MoleEnemyAbilityWidgetComponent", "AreSabotageShortcutsEnabled");

	Params::MoleEnemyAbilityWidgetComponent_AreSabotageShortcutsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MoleUI.MoleLocationWidget.OnVisited
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             LocalizedLocationName                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsNamedLocation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleLocationWidget::OnVisited(const class FText& LocalizedLocationName, bool bIsNamedLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleLocationWidget", "OnVisited");

	Params::MoleLocationWidget_OnVisited Parms{};

	Parms.LocalizedLocationName = std::move(LocalizedLocationName);
	Parms.bIsNamedLocation = bIsNamedLocation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleNameplate.SetupNameplateFor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class APlayerState*                     OwningPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleNameplate::SetupNameplateFor(class APlayerState* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleNameplate", "SetupNameplateFor");

	Params::MoleNameplate_SetupNameplateFor Parms{};

	Parms.OwningPlayer = OwningPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MolePostGameScreen.OnXPCalculated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   XPValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMolePostGameScreen::OnXPCalculated(int32 XPValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MolePostGameScreen", "OnXPCalculated");

	Params::MolePostGameScreen_OnXPCalculated Parms{};

	Parms.XPValue = XPValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MolePostGameScreen.StartMobileAutoGoBackToMenu
// (Final, Native, Public, BlueprintCallable)

void UMolePostGameScreen::StartMobileAutoGoBackToMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MolePostGameScreen", "StartMobileAutoGoBackToMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleQuickChatLogWidget.OnFirstMessageReceived
// (Event, Protected, BlueprintEvent)

void UMoleQuickChatLogWidget::OnFirstMessageReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatLogWidget", "OnFirstMessageReceived");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleQuickChatMapEntry.OnMapDataRetrieved
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FMoleLocationData                LocationData                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMoleQuickChatMapEntry::OnMapDataRetrieved(const struct FMoleLocationData& LocationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatMapEntry", "OnMapDataRetrieved");

	Params::MoleQuickChatMapEntry_OnMapDataRetrieved Parms{};

	Parms.LocationData = std::move(LocationData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleQuickChatMapEntry.ResetCosmetics
// (Event, Public, BlueprintEvent)

void UMoleQuickChatMapEntry::ResetCosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatMapEntry", "ResetCosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleQuickChatPlayerEntry.OnDataChanged
// (Event, Protected, BlueprintEvent)

void UMoleQuickChatPlayerEntry::OnDataChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatPlayerEntry", "OnDataChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleQuickChatPlayersWidget.OnFilterChanged
// (Event, Protected, BlueprintEvent)

void UMoleQuickChatPlayersWidget::OnFilterChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatPlayersWidget", "OnFilterChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleQuickChatMessageEntry.OnDataChanged
// (Event, Protected, BlueprintEvent)

void UMoleQuickChatMessageEntry::OnDataChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatMessageEntry", "OnDataChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleQuickChatRadialSlot.OnUpdated
// (Event, Public, BlueprintEvent)

void UMoleQuickChatRadialSlot::OnUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatRadialSlot", "OnUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleQuickChatActionSlot.OnIsAvailableChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsAvailable                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleQuickChatActionSlot::OnIsAvailableChanged(const bool bIsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatActionSlot", "OnIsAvailableChanged");

	Params::MoleQuickChatActionSlot_OnIsAvailableChanged Parms{};

	Parms.bIsAvailable = bIsAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleQuickChatWidget.OnAvailable
// (Event, Public, BlueprintEvent)

void UMoleQuickChatWidget::OnAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatWidget", "OnAvailable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleQuickChatWidget.OnItemClicked
// (Event, Public, BlueprintEvent)

void UMoleQuickChatWidget::OnItemClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatWidget", "OnItemClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleQuickChatWidget.OnMessageFailedToSend
// (Event, Public, BlueprintEvent)

void UMoleQuickChatWidget::OnMessageFailedToSend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatWidget", "OnMessageFailedToSend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleQuickChatWidget.OnPreviewChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMoleQuickChatWidget::OnPreviewChanged(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatWidget", "OnPreviewChanged");

	Params::MoleQuickChatWidget_OnPreviewChanged Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleQuickChatWidget.AreAcceptAndBackInverted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMoleQuickChatWidget::AreAcceptAndBackInverted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatWidget", "AreAcceptAndBackInverted");

	Params::MoleQuickChatWidget_AreAcceptAndBackInverted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MoleUI.MoleQuickChatWidgetProxy.OnEnter
// (Final, Native, Private)

void UMoleQuickChatWidgetProxy::OnEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatWidgetProxy", "OnEnter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleQuickChatWidgetProxy.OnQuickChatClosed
// (Event, Public, BlueprintEvent)

void UMoleQuickChatWidgetProxy::OnQuickChatClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatWidgetProxy", "OnQuickChatClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleQuickChatWidgetProxy.OnQuickChatOpened
// (Event, Public, BlueprintEvent)

void UMoleQuickChatWidgetProxy::OnQuickChatOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleQuickChatWidgetProxy", "OnQuickChatOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleRoleColor.Hide
// (Final, Native, Public, BlueprintCallable)

void AMoleRoleColor::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleRoleColor", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleRoleColor.OnSetColor
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMoleRoleColor::OnSetColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleRoleColor", "OnSetColor");

	Params::MoleRoleColor_OnSetColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleRoleColor.SetColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMoleRoleColor::SetColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleRoleColor", "SetColor");

	Params::MoleRoleColor_SetColor Parms{};

	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleSlottedRadialMenu.OnCategorySelected
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class UFortRadialSlot*                  SelectedSlot                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMoleQuickChatActionData> Actions                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FLinearColor                     CategoryColor                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        CategoryImage                                          (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleSlottedRadialMenu::OnCategorySelected(const class UFortRadialSlot* SelectedSlot, const TArray<struct FMoleQuickChatActionData>& Actions, const struct FLinearColor& CategoryColor, const TSoftObjectPtr<class UTexture2D>& CategoryImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleSlottedRadialMenu", "OnCategorySelected");

	Params::MoleSlottedRadialMenu_OnCategorySelected Parms{};

	Parms.SelectedSlot = SelectedSlot;
	Parms.Actions = std::move(Actions);
	Parms.CategoryColor = std::move(CategoryColor);
	Parms.CategoryImage = CategoryImage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleSlottedRadialMenu.OnRadialEntriesChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsActions                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumEntries                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Degrees                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleSlottedRadialMenu::OnRadialEntriesChanged(const bool bIsActions, const int32 NumEntries, const float Degrees)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleSlottedRadialMenu", "OnRadialEntriesChanged");

	Params::MoleSlottedRadialMenu_OnRadialEntriesChanged Parms{};

	Parms.bIsActions = bIsActions;
	Parms.NumEntries = NumEntries;
	Parms.Degrees = Degrees;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleSlottedRadialMenu.OnRadialEntrySelected
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      SelectedEntry                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleSlottedRadialMenu::OnRadialEntrySelected(int32 Index_0, class UUserWidget* SelectedEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleSlottedRadialMenu", "OnRadialEntrySelected");

	Params::MoleSlottedRadialMenu_OnRadialEntrySelected Parms{};

	Parms.Index_0 = Index_0;
	Parms.SelectedEntry = SelectedEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleSlottedRadialMenu.OnResetNavigation
// (Event, Public, BlueprintEvent)

void UMoleSlottedRadialMenu::OnResetNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleSlottedRadialMenu", "OnResetNavigation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleSubobjectiveIndicatorWidget.OnScreenClampChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bScreenClamped                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleSubobjectiveIndicatorWidget::OnScreenClampChanged(bool bScreenClamped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleSubobjectiveIndicatorWidget", "OnScreenClampChanged");

	Params::MoleSubobjectiveIndicatorWidget_OnScreenClampChanged Parms{};

	Parms.bScreenClamped = bScreenClamped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleSubobjectiveIndicatorWidget.OnSetUsageMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bUseGoalIndicatorMode                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleSubobjectiveIndicatorWidget::OnSetUsageMode(bool bUseGoalIndicatorMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleSubobjectiveIndicatorWidget", "OnSetUsageMode");

	Params::MoleSubobjectiveIndicatorWidget_OnSetUsageMode Parms{};

	Parms.bUseGoalIndicatorMode = bUseGoalIndicatorMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleTaskHUDWidget.OnRepresentedLogicPhaseChange
// (Final, Native, Protected)

void UMoleTaskHUDWidget::OnRepresentedLogicPhaseChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskHUDWidget", "OnRepresentedLogicPhaseChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleTaskHUDWidget.OnRepresentedTaskChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UMoleTaskDataAsset*               PreviousTaskAsset                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMoleActiveTaskStateHandle       PreviousHandle                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleTaskHUDWidget::OnRepresentedTaskChanged(const class UMoleTaskDataAsset* PreviousTaskAsset, const struct FMoleActiveTaskStateHandle& PreviousHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskHUDWidget", "OnRepresentedTaskChanged");

	Params::MoleTaskHUDWidget_OnRepresentedTaskChanged Parms{};

	Parms.PreviousTaskAsset = PreviousTaskAsset;
	Parms.PreviousHandle = std::move(PreviousHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleTaskHUDWidget.RequestCompactMode
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMoleTaskHUDWidget::RequestCompactMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskHUDWidget", "RequestCompactMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleTaskHUDWidget.SetAttemptShowActiveObjectives
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAttemptShow                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleTaskHUDWidget::SetAttemptShowActiveObjectives(bool bAttemptShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskHUDWidget", "SetAttemptShowActiveObjectives");

	Params::MoleTaskHUDWidget_SetAttemptShowActiveObjectives Parms{};

	Parms.bAttemptShow = bAttemptShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleTaskHUDWidget.SetTaskAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMoleTaskDataAsset*               TaskAsset                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleTaskHUDWidget::SetTaskAsset(class UMoleTaskDataAsset* TaskAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskHUDWidget", "SetTaskAsset");

	Params::MoleTaskHUDWidget_SetTaskAsset Parms{};

	Parms.TaskAsset = TaskAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleTaskHUDWidget.SetTaskHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMoleActiveTaskStateHandle       TaskHandle                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleTaskHUDWidget::SetTaskHandle(const struct FMoleActiveTaskStateHandle& TaskHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskHUDWidget", "SetTaskHandle");

	Params::MoleTaskHUDWidget_SetTaskHandle Parms{};

	Parms.TaskHandle = std::move(TaskHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleTaskHUDWidget.GetTaskAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UMoleTaskDataAsset*         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UMoleTaskDataAsset* UMoleTaskHUDWidget::GetTaskAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskHUDWidget", "GetTaskAsset");

	Params::MoleTaskHUDWidget_GetTaskAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MoleUI.MoleTaskHUDWidget.GetTaskTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMoleTaskHUDWidget::GetTaskTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskHUDWidget", "GetTaskTitle");

	Params::MoleTaskHUDWidget_GetTaskTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MoleUI.MoleTaskObjectiveHUDWidget.OnRepresentedObjectiveChanged
// (Native, Event, Protected, BlueprintEvent)

void UMoleTaskObjectiveHUDWidget::OnRepresentedObjectiveChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskObjectiveHUDWidget", "OnRepresentedObjectiveChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleTaskObjectiveHUDWidget.OnRepresentedObjectiveCurrentValueChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewCurrentValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleTaskObjectiveHUDWidget::OnRepresentedObjectiveCurrentValueChanged(float NewCurrentValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskObjectiveHUDWidget", "OnRepresentedObjectiveCurrentValueChanged");

	Params::MoleTaskObjectiveHUDWidget_OnRepresentedObjectiveCurrentValueChanged Parms{};

	Parms.NewCurrentValue = NewCurrentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleTaskObjectiveHUDWidget.OnRepresentedObjectiveTargetValueChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewTargetValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleTaskObjectiveHUDWidget::OnRepresentedObjectiveTargetValueChanged(float NewTargetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskObjectiveHUDWidget", "OnRepresentedObjectiveTargetValueChanged");

	Params::MoleTaskObjectiveHUDWidget_OnRepresentedObjectiveTargetValueChanged Parms{};

	Parms.NewTargetValue = NewTargetValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleTaskObjectiveHUDWidget.GetTaskObjectiveInfo
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// struct FMoleTaskObjectiveUIInfo         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMoleTaskObjectiveUIInfo UMoleTaskObjectiveHUDWidget::GetTaskObjectiveInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTaskObjectiveHUDWidget", "GetTaskObjectiveInfo");

	Params::MoleTaskObjectiveHUDWidget_GetTaskObjectiveInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MoleUI.MoleTimer.ClearTimer
// (Final, Native, Public, BlueprintCallable)

void UMoleTimer::ClearTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTimer", "ClearTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleTimer.OnTimerCleared
// (Event, Protected, BlueprintEvent)

void UMoleTimer::OnTimerCleared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTimer", "OnTimerCleared");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleTimer.OnTimerFinished
// (Event, Protected, BlueprintEvent)

void UMoleTimer::OnTimerFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTimer", "OnTimerFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MoleUI.MoleTimer.OnTimerStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TimeLeft                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleTimer::OnTimerStarted(int32 TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTimer", "OnTimerStarted");

	Params::MoleTimer_OnTimerStarted Parms{};

	Parms.TimeLeft = TimeLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleTimer.OnTimerUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TimeLeft                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleTimer::OnTimerUpdated(int32 TimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTimer", "OnTimerUpdated");

	Params::MoleTimer_OnTimerUpdated Parms{};

	Parms.TimeLeft = TimeLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleTimer.StartTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InServerFinishTime                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleTimer::StartTimer(float InServerFinishTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleTimer", "StartTimer");

	Params::MoleTimer_StartTimer Parms{};

	Parms.InServerFinishTime = InServerFinishTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MoleUI.MoleUIDirector.GetMoleEnemyAbilityUIData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     SabotageTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMoleAbilityUIData               OutEnemyAbilityUIData                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMoleUIDirector::GetMoleEnemyAbilityUIData(const class UObject* WorldContextObject, const struct FGameplayTag& SabotageTag, struct FMoleAbilityUIData* OutEnemyAbilityUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MoleUIDirector", "GetMoleEnemyAbilityUIData");

	Params::MoleUIDirector_GetMoleEnemyAbilityUIData Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SabotageTag = std::move(SabotageTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEnemyAbilityUIData != nullptr)
		*OutEnemyAbilityUIData = std::move(Parms.OutEnemyAbilityUIData);

	return Parms.ReturnValue;
}


// Function MoleUI.MoleUIDirector.GetMoleLocationData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     LocationTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMoleLocationData                OutLocationData                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMoleUIDirector::GetMoleLocationData(const class UObject* WorldContextObject, const struct FGameplayTag& LocationTag, struct FMoleLocationData* OutLocationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MoleUIDirector", "GetMoleLocationData");

	Params::MoleUIDirector_GetMoleLocationData Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LocationTag = std::move(LocationTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocationData != nullptr)
		*OutLocationData = std::move(Parms.OutLocationData);

	return Parms.ReturnValue;
}


// Function MoleUI.MoleUIDirector.GetMolePlayerUIData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APlayerState*                     PlayerState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutPlayerNUmber                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMolePlayerUIData                OutPlayerUIData                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMoleUIDirector::GetMolePlayerUIData(class APlayerState* PlayerState, int32* OutPlayerNUmber, struct FMolePlayerUIData* OutPlayerUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MoleUIDirector", "GetMolePlayerUIData");

	Params::MoleUIDirector_GetMolePlayerUIData Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlayerNUmber != nullptr)
		*OutPlayerNUmber = Parms.OutPlayerNUmber;

	if (OutPlayerUIData != nullptr)
		*OutPlayerUIData = std::move(Parms.OutPlayerUIData);

	return Parms.ReturnValue;
}


// Function MoleUI.MoleVoteCastingInfoPanel.OnPanelVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShouldShowPanel                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleVoteCastingInfoPanel::OnPanelVisibilityChanged(bool bShouldShowPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleVoteCastingInfoPanel", "OnPanelVisibilityChanged");

	Params::MoleVoteCastingInfoPanel_OnPanelVisibilityChanged Parms{};

	Parms.bShouldShowPanel = bShouldShowPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleVoteTally.OnVoteTallyStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSkipTally                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMoleVoteTally::OnVoteTallyStarted(bool bIsSkipTally)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleVoteTally", "OnVoteTallyStarted");

	Params::MoleVoteTally_OnVoteTallyStarted Parms{};

	Parms.bIsSkipTally = bIsSkipTally;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MoleUI.MoleVotingIndicator.OnIndicatorRevealed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerState*                     AccuserPlayerState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMoleVotingIndicator::OnIndicatorRevealed(class APlayerState* AccuserPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MoleVotingIndicator", "OnIndicatorRevealed");

	Params::MoleVotingIndicator_OnIndicatorRevealed Parms{};

	Parms.AccuserPlayerState = AccuserPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}

}

