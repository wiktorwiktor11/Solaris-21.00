#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveStageWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ProgressiveStageWidget.ProgressiveStageWidget_C.AddStageItemWidget
// 0x0010 (0x0010 - 0x0000)
struct ProgressiveStageWidget_C_AddStageItemWidget final
{
public:
	class UFortProgressiveItemWidget*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveStageWidget_C_AddStageItemWidget) == 0x000008, "Wrong alignment on ProgressiveStageWidget_C_AddStageItemWidget");
static_assert(sizeof(ProgressiveStageWidget_C_AddStageItemWidget) == 0x000010, "Wrong size on ProgressiveStageWidget_C_AddStageItemWidget");
static_assert(offsetof(ProgressiveStageWidget_C_AddStageItemWidget, ReturnValue) == 0x000000, "Member 'ProgressiveStageWidget_C_AddStageItemWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_AddStageItemWidget, CallFunc_GetVisibility_ReturnValue) == 0x000008, "Member 'ProgressiveStageWidget_C_AddStageItemWidget::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_AddStageItemWidget, CallFunc_GetVisibility_ReturnValue_1) == 0x000009, "Member 'ProgressiveStageWidget_C_AddStageItemWidget::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_AddStageItemWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'ProgressiveStageWidget_C_AddStageItemWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_AddStageItemWidget, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000B, "Member 'ProgressiveStageWidget_C_AddStageItemWidget::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function ProgressiveStageWidget.ProgressiveStageWidget_C.ExecuteUbergraph_ProgressiveStageWidget
// 0x0048 (0x0048 - 0x0000)
struct ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInPeekState;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InTooltipText;                        // 0x0020(0x0018)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible;                             // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget) == 0x000008, "Wrong alignment on ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget");
static_assert(sizeof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget) == 0x000048, "Wrong size on ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, EntryPoint) == 0x000000, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, Temp_bool_Variable) == 0x000004, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, Temp_byte_Variable) == 0x000005, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, Temp_byte_Variable_1) == 0x000006, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, Temp_bool_Variable_1) == 0x000007, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, Temp_byte_Variable_2) == 0x000008, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, Temp_byte_Variable_3) == 0x000009, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, K2Node_Event_bIsInPeekState) == 0x00000A, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::K2Node_Event_bIsInPeekState' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, K2Node_Select_Default) == 0x000018, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, K2Node_Event_InTooltipText) == 0x000020, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::K2Node_Event_InTooltipText' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, K2Node_Event_bVisible) == 0x000040, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget, K2Node_Select_Default_1) == 0x000041, "Member 'ProgressiveStageWidget_C_ExecuteUbergraph_ProgressiveStageWidget::K2Node_Select_Default_1' has a wrong offset!");

// Function ProgressiveStageWidget.ProgressiveStageWidget_C.OnPeekStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ProgressiveStageWidget_C_OnPeekStateChanged final
{
public:
	bool                                          bIsInPeekState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveStageWidget_C_OnPeekStateChanged) == 0x000001, "Wrong alignment on ProgressiveStageWidget_C_OnPeekStateChanged");
static_assert(sizeof(ProgressiveStageWidget_C_OnPeekStateChanged) == 0x000001, "Wrong size on ProgressiveStageWidget_C_OnPeekStateChanged");
static_assert(offsetof(ProgressiveStageWidget_C_OnPeekStateChanged, bIsInPeekState) == 0x000000, "Member 'ProgressiveStageWidget_C_OnPeekStateChanged::bIsInPeekState' has a wrong offset!");

// Function ProgressiveStageWidget.ProgressiveStageWidget_C.OnSetTooltipText
// 0x0018 (0x0018 - 0x0000)
struct ProgressiveStageWidget_C_OnSetTooltipText final
{
public:
	class FText                                   InToolTipText;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ProgressiveStageWidget_C_OnSetTooltipText) == 0x000008, "Wrong alignment on ProgressiveStageWidget_C_OnSetTooltipText");
static_assert(sizeof(ProgressiveStageWidget_C_OnSetTooltipText) == 0x000018, "Wrong size on ProgressiveStageWidget_C_OnSetTooltipText");
static_assert(offsetof(ProgressiveStageWidget_C_OnSetTooltipText, InToolTipText) == 0x000000, "Member 'ProgressiveStageWidget_C_OnSetTooltipText::InToolTipText' has a wrong offset!");

// Function ProgressiveStageWidget.ProgressiveStageWidget_C.OnSetTooltipVisible
// 0x0001 (0x0001 - 0x0000)
struct ProgressiveStageWidget_C_OnSetTooltipVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveStageWidget_C_OnSetTooltipVisible) == 0x000001, "Wrong alignment on ProgressiveStageWidget_C_OnSetTooltipVisible");
static_assert(sizeof(ProgressiveStageWidget_C_OnSetTooltipVisible) == 0x000001, "Wrong size on ProgressiveStageWidget_C_OnSetTooltipVisible");
static_assert(offsetof(ProgressiveStageWidget_C_OnSetTooltipVisible, bVisible) == 0x000000, "Member 'ProgressiveStageWidget_C_OnSetTooltipVisible::bVisible' has a wrong offset!");

// Function ProgressiveStageWidget.ProgressiveStageWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ProgressiveStageWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveStageWidget_C_PreConstruct) == 0x000001, "Wrong alignment on ProgressiveStageWidget_C_PreConstruct");
static_assert(sizeof(ProgressiveStageWidget_C_PreConstruct) == 0x000001, "Wrong size on ProgressiveStageWidget_C_PreConstruct");
static_assert(offsetof(ProgressiveStageWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ProgressiveStageWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

