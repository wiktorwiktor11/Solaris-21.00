#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Artemis_StealthGrass

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "B_Artemis_StealthGrass_ScaledAxes_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Artemis_StealthGrass.B_Artemis_StealthGrass_C
// 0x01B8 (0x1028 - 0x0E70)
class AB_Artemis_StealthGrass_C : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHierarchicalInstancedStaticMeshComponent* GrassHISM;                                         // 0x0E78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextLabel;                                         // 0x0E80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CylinderOverlapVolume;                             // 0x0E88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   NoisePreviewPlane;                                 // 0x0E90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TraceVolume;                                       // 0x0E98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    EditorOnlyIcon;                                    // 0x0EA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionResponseSwapperComponent* FortCollisionResponseSwapper;                      // 0x0EA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_StealthGrass;                                   // 0x0EB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_StealthGrassCrouch;                             // 0x0EB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector2D                              ScaleRange;                                        // 0x0EC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrassDensityDivisor;                               // 0x0ED0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED4[0x4];                                      // 0x0ED4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PlacementJitter;                                   // 0x0ED8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceDirectionalVector;                            // 0x0EE8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RenderTargetResolution;                            // 0x0F00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasRenderTarget2D*                  ColorLookupRT;                                     // 0x0F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     ProjectionNoiseMaterial;                           // 0x0F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RTProjectionNoiseMID;                              // 0x0F20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TextureNoiseScale;                                 // 0x0F28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2C[0x4];                                      // 0x0F2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PreviewPlaneProjectionNoiseMID;                    // 0x0F30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TraceActorsToIgnore;                               // 0x0F38(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                GrassScale;                                        // 0x0F48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FB_Artemis_StealthGrass_ScaledAxes     ScaledAxesByLuminance;                             // 0x0F60(0x0003)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawTraceOriginDebugSpheres;                       // 0x0F63(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SphericalMaskRadius;                               // 0x0F64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SphericalMaskHardness;                             // 0x0F68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseContrast;                                     // 0x0F6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseBias;                                         // 0x0F70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugSpheresRadius;                                // 0x0F74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomSeed;                                        // 0x0F78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugTraceDrawTime;                                // 0x0F7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinalScale;                                        // 0x0F80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F84[0x4];                                      // 0x0F84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                VolumeBoxExtent;                                   // 0x0F88(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrassScaleRandomness_;                             // 0x0FA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitializedInEditor;                               // 0x0FA4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA5[0x3];                                      // 0x0FA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OverlapVolumeBoxExtentScale;                       // 0x0FA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     GrassMaterialMobile;                               // 0x0FC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     GrassMaterial;                                     // 0x0FC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RejectionSamplingThreshold;                        // 0x0FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxAngleToSpawn;                                   // 0x0FD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         GrassEnabledRow;                                   // 0x0FD8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          DebugSkipLandscapeCasts;                           // 0x1000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SphericalMaskRadiusModulatesOverlapVolumeScale;    // 0x1001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1002[0x6];                                     // 0x1002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  AllowedDamageTags;                                 // 0x1008(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	float BlueprintModifyIncomingDamage(float Damage, const struct FGameplayTagContainer& InTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser);
	void BndEvt__B_Artemis_StealthGrass_CylinderOverlapVolume_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__B_Artemis_StealthGrass_CylinderOverlapVolume_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	struct FVector CalculateTraceOriginWorldSpace(int32 LoopIndex, float TraceVolumeBoxExtentScaledX, const struct FVector& TraceVolumeBoxExtent);
	void CallPlaceGrass();
	void ClearDebugLines();
	void ClearISMs();
	void ExecuteUbergraph_B_Artemis_StealthGrass(int32 EntryPoint);
	void InitializePreviewPlane();
	void InitializeRenderTarget();
	void InitializeVolumes();
	void LookupRenderTargetColor(const struct FVector& WorldPosition, struct FLinearColor* LinearColor);
	void PerformTracesAndPlaceISMs();
	void PlaceGrass();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void SetGrassMaterial();
	void TogglePreviewPlaneVisibility();
	void UpdateAllGrassActorsInLevel();

	class UPrimitiveComponent* GetCurieCollisionComponentOverride() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Artemis_StealthGrass_C">();
	}
	static class AB_Artemis_StealthGrass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Artemis_StealthGrass_C>();
	}
};
static_assert(alignof(AB_Artemis_StealthGrass_C) == 0x000008, "Wrong alignment on AB_Artemis_StealthGrass_C");
static_assert(sizeof(AB_Artemis_StealthGrass_C) == 0x001028, "Wrong size on AB_Artemis_StealthGrass_C");
static_assert(offsetof(AB_Artemis_StealthGrass_C, UberGraphFrame) == 0x000E70, "Member 'AB_Artemis_StealthGrass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, GrassHISM) == 0x000E78, "Member 'AB_Artemis_StealthGrass_C::GrassHISM' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, TextLabel) == 0x000E80, "Member 'AB_Artemis_StealthGrass_C::TextLabel' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, CylinderOverlapVolume) == 0x000E88, "Member 'AB_Artemis_StealthGrass_C::CylinderOverlapVolume' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, NoisePreviewPlane) == 0x000E90, "Member 'AB_Artemis_StealthGrass_C::NoisePreviewPlane' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, TraceVolume) == 0x000E98, "Member 'AB_Artemis_StealthGrass_C::TraceVolume' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, EditorOnlyIcon) == 0x000EA0, "Member 'AB_Artemis_StealthGrass_C::EditorOnlyIcon' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, FortCollisionResponseSwapper) == 0x000EA8, "Member 'AB_Artemis_StealthGrass_C::FortCollisionResponseSwapper' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, GE_StealthGrass) == 0x000EB0, "Member 'AB_Artemis_StealthGrass_C::GE_StealthGrass' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, GE_StealthGrassCrouch) == 0x000EB8, "Member 'AB_Artemis_StealthGrass_C::GE_StealthGrassCrouch' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, ScaleRange) == 0x000EC0, "Member 'AB_Artemis_StealthGrass_C::ScaleRange' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, GrassDensityDivisor) == 0x000ED0, "Member 'AB_Artemis_StealthGrass_C::GrassDensityDivisor' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, PlacementJitter) == 0x000ED8, "Member 'AB_Artemis_StealthGrass_C::PlacementJitter' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, TraceDirectionalVector) == 0x000EE8, "Member 'AB_Artemis_StealthGrass_C::TraceDirectionalVector' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, RenderTargetResolution) == 0x000F00, "Member 'AB_Artemis_StealthGrass_C::RenderTargetResolution' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, ColorLookupRT) == 0x000F10, "Member 'AB_Artemis_StealthGrass_C::ColorLookupRT' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, ProjectionNoiseMaterial) == 0x000F18, "Member 'AB_Artemis_StealthGrass_C::ProjectionNoiseMaterial' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, RTProjectionNoiseMID) == 0x000F20, "Member 'AB_Artemis_StealthGrass_C::RTProjectionNoiseMID' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, TextureNoiseScale) == 0x000F28, "Member 'AB_Artemis_StealthGrass_C::TextureNoiseScale' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, PreviewPlaneProjectionNoiseMID) == 0x000F30, "Member 'AB_Artemis_StealthGrass_C::PreviewPlaneProjectionNoiseMID' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, TraceActorsToIgnore) == 0x000F38, "Member 'AB_Artemis_StealthGrass_C::TraceActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, GrassScale) == 0x000F48, "Member 'AB_Artemis_StealthGrass_C::GrassScale' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, ScaledAxesByLuminance) == 0x000F60, "Member 'AB_Artemis_StealthGrass_C::ScaledAxesByLuminance' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, DrawTraceOriginDebugSpheres) == 0x000F63, "Member 'AB_Artemis_StealthGrass_C::DrawTraceOriginDebugSpheres' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, SphericalMaskRadius) == 0x000F64, "Member 'AB_Artemis_StealthGrass_C::SphericalMaskRadius' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, SphericalMaskHardness) == 0x000F68, "Member 'AB_Artemis_StealthGrass_C::SphericalMaskHardness' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, NoiseContrast) == 0x000F6C, "Member 'AB_Artemis_StealthGrass_C::NoiseContrast' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, NoiseBias) == 0x000F70, "Member 'AB_Artemis_StealthGrass_C::NoiseBias' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, DebugSpheresRadius) == 0x000F74, "Member 'AB_Artemis_StealthGrass_C::DebugSpheresRadius' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, RandomSeed) == 0x000F78, "Member 'AB_Artemis_StealthGrass_C::RandomSeed' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, DebugTraceDrawTime) == 0x000F7C, "Member 'AB_Artemis_StealthGrass_C::DebugTraceDrawTime' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, FinalScale) == 0x000F80, "Member 'AB_Artemis_StealthGrass_C::FinalScale' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, VolumeBoxExtent) == 0x000F88, "Member 'AB_Artemis_StealthGrass_C::VolumeBoxExtent' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, GrassScaleRandomness_) == 0x000FA0, "Member 'AB_Artemis_StealthGrass_C::GrassScaleRandomness_' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, InitializedInEditor) == 0x000FA4, "Member 'AB_Artemis_StealthGrass_C::InitializedInEditor' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, OverlapVolumeBoxExtentScale) == 0x000FA8, "Member 'AB_Artemis_StealthGrass_C::OverlapVolumeBoxExtentScale' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, GrassMaterialMobile) == 0x000FC0, "Member 'AB_Artemis_StealthGrass_C::GrassMaterialMobile' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, GrassMaterial) == 0x000FC8, "Member 'AB_Artemis_StealthGrass_C::GrassMaterial' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, RejectionSamplingThreshold) == 0x000FD0, "Member 'AB_Artemis_StealthGrass_C::RejectionSamplingThreshold' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, MaxAngleToSpawn) == 0x000FD4, "Member 'AB_Artemis_StealthGrass_C::MaxAngleToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, GrassEnabledRow) == 0x000FD8, "Member 'AB_Artemis_StealthGrass_C::GrassEnabledRow' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, DebugSkipLandscapeCasts) == 0x001000, "Member 'AB_Artemis_StealthGrass_C::DebugSkipLandscapeCasts' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, SphericalMaskRadiusModulatesOverlapVolumeScale) == 0x001001, "Member 'AB_Artemis_StealthGrass_C::SphericalMaskRadiusModulatesOverlapVolumeScale' has a wrong offset!");
static_assert(offsetof(AB_Artemis_StealthGrass_C, AllowedDamageTags) == 0x001008, "Member 'AB_Artemis_StealthGrass_C::AllowedDamageTags' has a wrong offset!");

}

