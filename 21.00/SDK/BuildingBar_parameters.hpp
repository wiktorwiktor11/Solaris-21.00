#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BuildingBar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BuildingBar.BuildingBar_C.Set Display Mode
// 0x00E4 (0x00E4 - 0x0000)
struct BuildingBar_C_Set_Display_Mode final
{
public:
	EFortBuildingInteraction                      InDisplayMode;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingInteraction                      Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingInteraction                      Temp_byte_Variable_9;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingInteraction                      Temp_byte_Variable_10;                             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingInteraction                      Temp_byte_Variable_11;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingInteraction                      Temp_byte_Variable_12;                             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingBar_C_Set_Display_Mode) == 0x000004, "Wrong alignment on BuildingBar_C_Set_Display_Mode");
static_assert(sizeof(BuildingBar_C_Set_Display_Mode) == 0x0000E4, "Wrong size on BuildingBar_C_Set_Display_Mode");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, InDisplayMode) == 0x000000, "Member 'BuildingBar_C_Set_Display_Mode::InDisplayMode' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_int_Variable) == 0x000004, "Member 'BuildingBar_C_Set_Display_Mode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_int_Variable_1) == 0x000008, "Member 'BuildingBar_C_Set_Display_Mode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_int_Variable_2) == 0x00000C, "Member 'BuildingBar_C_Set_Display_Mode::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_int_Variable_3) == 0x000010, "Member 'BuildingBar_C_Set_Display_Mode::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_int_Variable_4) == 0x000014, "Member 'BuildingBar_C_Set_Display_Mode::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_int_Variable_5) == 0x000018, "Member 'BuildingBar_C_Set_Display_Mode::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_int_Variable_6) == 0x00001C, "Member 'BuildingBar_C_Set_Display_Mode::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable) == 0x000020, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_1) == 0x000021, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_2) == 0x000022, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_3) == 0x000023, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_4) == 0x000024, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_5) == 0x000025, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_6) == 0x000026, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_7) == 0x000027, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_8) == 0x000028, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_9) == 0x000029, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_struct_Variable) == 0x00002C, "Member 'BuildingBar_C_Set_Display_Mode::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_struct_Variable_1) == 0x00003C, "Member 'BuildingBar_C_Set_Display_Mode::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_struct_Variable_2) == 0x00004C, "Member 'BuildingBar_C_Set_Display_Mode::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_10) == 0x00005C, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_struct_Variable_3) == 0x000060, "Member 'BuildingBar_C_Set_Display_Mode::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, K2Node_Select_Default) == 0x000070, "Member 'BuildingBar_C_Set_Display_Mode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_int_Variable_7) == 0x000074, "Member 'BuildingBar_C_Set_Display_Mode::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_11) == 0x000078, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_struct_Variable_4) == 0x00007C, "Member 'BuildingBar_C_Set_Display_Mode::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, K2Node_Select_Default_1) == 0x00008C, "Member 'BuildingBar_C_Set_Display_Mode::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_struct_Variable_5) == 0x000090, "Member 'BuildingBar_C_Set_Display_Mode::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_struct_Variable_6) == 0x0000A0, "Member 'BuildingBar_C_Set_Display_Mode::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B0, "Member 'BuildingBar_C_Set_Display_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, Temp_byte_Variable_12) == 0x0000B1, "Member 'BuildingBar_C_Set_Display_Mode::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, K2Node_Select_Default_2) == 0x0000B4, "Member 'BuildingBar_C_Set_Display_Mode::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, K2Node_Select_Default_3) == 0x0000C4, "Member 'BuildingBar_C_Set_Display_Mode::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Set_Display_Mode, K2Node_Select_Default_4) == 0x0000D4, "Member 'BuildingBar_C_Set_Display_Mode::K2Node_Select_Default_4' has a wrong offset!");

// Function BuildingBar.BuildingBar_C.SetBigHealthMode
// 0x0001 (0x0001 - 0x0000)
struct BuildingBar_C_SetBigHealthMode final
{
public:
	bool                                          BigHealth;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingBar_C_SetBigHealthMode) == 0x000001, "Wrong alignment on BuildingBar_C_SetBigHealthMode");
static_assert(sizeof(BuildingBar_C_SetBigHealthMode) == 0x000001, "Wrong size on BuildingBar_C_SetBigHealthMode");
static_assert(offsetof(BuildingBar_C_SetBigHealthMode, BigHealth) == 0x000000, "Member 'BuildingBar_C_SetBigHealthMode::BigHealth' has a wrong offset!");

// Function BuildingBar.BuildingBar_C.SetBigHealthPercentFill
// 0x0004 (0x0004 - 0x0000)
struct BuildingBar_C_SetBigHealthPercentFill final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingBar_C_SetBigHealthPercentFill) == 0x000004, "Wrong alignment on BuildingBar_C_SetBigHealthPercentFill");
static_assert(sizeof(BuildingBar_C_SetBigHealthPercentFill) == 0x000004, "Wrong size on BuildingBar_C_SetBigHealthPercentFill");
static_assert(offsetof(BuildingBar_C_SetBigHealthPercentFill, Percent) == 0x000000, "Member 'BuildingBar_C_SetBigHealthPercentFill::Percent' has a wrong offset!");

// Function BuildingBar.BuildingBar_C.SetBigHealthValue
// 0x0018 (0x0018 - 0x0000)
struct BuildingBar_C_SetBigHealthValue final
{
public:
	class FText                                   HP_Text;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BuildingBar_C_SetBigHealthValue) == 0x000008, "Wrong alignment on BuildingBar_C_SetBigHealthValue");
static_assert(sizeof(BuildingBar_C_SetBigHealthValue) == 0x000018, "Wrong size on BuildingBar_C_SetBigHealthValue");
static_assert(offsetof(BuildingBar_C_SetBigHealthValue, HP_Text) == 0x000000, "Member 'BuildingBar_C_SetBigHealthValue::HP_Text' has a wrong offset!");

// Function BuildingBar.BuildingBar_C.Update Current Durability Value
// 0x000C (0x000C - 0x0000)
struct BuildingBar_C_Update_Current_Durability_Value final
{
public:
	float                                         CurrentDurability;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingBar_C_Update_Current_Durability_Value) == 0x000004, "Wrong alignment on BuildingBar_C_Update_Current_Durability_Value");
static_assert(sizeof(BuildingBar_C_Update_Current_Durability_Value) == 0x00000C, "Wrong size on BuildingBar_C_Update_Current_Durability_Value");
static_assert(offsetof(BuildingBar_C_Update_Current_Durability_Value, CurrentDurability) == 0x000000, "Member 'BuildingBar_C_Update_Current_Durability_Value::CurrentDurability' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Current_Durability_Value, CallFunc_FCeil_ReturnValue) == 0x000004, "Member 'BuildingBar_C_Update_Current_Durability_Value::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Current_Durability_Value, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BuildingBar_C_Update_Current_Durability_Value::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BuildingBar.BuildingBar_C.Update Current HP Value
// 0x0004 (0x0004 - 0x0000)
struct BuildingBar_C_Update_Current_HP_Value final
{
public:
	float                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingBar_C_Update_Current_HP_Value) == 0x000004, "Wrong alignment on BuildingBar_C_Update_Current_HP_Value");
static_assert(sizeof(BuildingBar_C_Update_Current_HP_Value) == 0x000004, "Wrong size on BuildingBar_C_Update_Current_HP_Value");
static_assert(offsetof(BuildingBar_C_Update_Current_HP_Value, Current) == 0x000000, "Member 'BuildingBar_C_Update_Current_HP_Value::Current' has a wrong offset!");

// Function BuildingBar.BuildingBar_C.Update Durability Text
// 0x0118 (0x0118 - 0x0000)
struct BuildingBar_C_Update_Durability_Text final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0100(0x0018)()
};
static_assert(alignof(BuildingBar_C_Update_Durability_Text) == 0x000008, "Wrong alignment on BuildingBar_C_Update_Durability_Text");
static_assert(sizeof(BuildingBar_C_Update_Durability_Text) == 0x000118, "Wrong size on BuildingBar_C_Update_Durability_Text");
static_assert(offsetof(BuildingBar_C_Update_Durability_Text, Temp_bool_Variable) == 0x000000, "Member 'BuildingBar_C_Update_Durability_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Durability_Text, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'BuildingBar_C_Update_Durability_Text::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Durability_Text, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'BuildingBar_C_Update_Durability_Text::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Durability_Text, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000028, "Member 'BuildingBar_C_Update_Durability_Text::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Durability_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BuildingBar_C_Update_Durability_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Durability_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BuildingBar_C_Update_Durability_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Durability_Text, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BuildingBar_C_Update_Durability_Text::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Durability_Text, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BuildingBar_C_Update_Durability_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Durability_Text, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'BuildingBar_C_Update_Durability_Text::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Durability_Text, K2Node_Select_Default) == 0x000100, "Member 'BuildingBar_C_Update_Durability_Text::K2Node_Select_Default' has a wrong offset!");

// Function BuildingBar.BuildingBar_C.Update Max Durability Value
// 0x000C (0x000C - 0x0000)
struct BuildingBar_C_Update_Max_Durability_Value final
{
public:
	float                                         Max;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingBar_C_Update_Max_Durability_Value) == 0x000004, "Wrong alignment on BuildingBar_C_Update_Max_Durability_Value");
static_assert(sizeof(BuildingBar_C_Update_Max_Durability_Value) == 0x00000C, "Wrong size on BuildingBar_C_Update_Max_Durability_Value");
static_assert(offsetof(BuildingBar_C_Update_Max_Durability_Value, Max) == 0x000000, "Member 'BuildingBar_C_Update_Max_Durability_Value::Max' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Max_Durability_Value, CallFunc_FCeil_ReturnValue) == 0x000004, "Member 'BuildingBar_C_Update_Max_Durability_Value::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Max_Durability_Value, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BuildingBar_C_Update_Max_Durability_Value::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_Update_Max_Durability_Value, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000009, "Member 'BuildingBar_C_Update_Max_Durability_Value::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BuildingBar.BuildingBar_C.Update Max HP Value
// 0x0004 (0x0004 - 0x0000)
struct BuildingBar_C_Update_Max_HP_Value final
{
public:
	float                                         Max;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingBar_C_Update_Max_HP_Value) == 0x000004, "Wrong alignment on BuildingBar_C_Update_Max_HP_Value");
static_assert(sizeof(BuildingBar_C_Update_Max_HP_Value) == 0x000004, "Wrong size on BuildingBar_C_Update_Max_HP_Value");
static_assert(offsetof(BuildingBar_C_Update_Max_HP_Value, Max) == 0x000000, "Member 'BuildingBar_C_Update_Max_HP_Value::Max' has a wrong offset!");

// Function BuildingBar.BuildingBar_C.UpdateBuildingTrap
// 0x0088 (0x0088 - 0x0000)
struct BuildingBar_C_UpdateBuildingTrap final
{
public:
	class ABuildingTrap*                          BuildingTrap;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowTrapInfo;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTrapLevel_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_CreateTemporaryItemInstanceBP_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetShortDisplayName_ReturnValue;          // 0x0020(0x0018)()
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x004C(0x0014)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowInfoIndicator_ReturnValue;      // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingBar_C_UpdateBuildingTrap) == 0x000008, "Wrong alignment on BuildingBar_C_UpdateBuildingTrap");
static_assert(sizeof(BuildingBar_C_UpdateBuildingTrap) == 0x000088, "Wrong size on BuildingBar_C_UpdateBuildingTrap");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, BuildingTrap) == 0x000000, "Member 'BuildingBar_C_UpdateBuildingTrap::BuildingTrap' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, bShowTrapInfo) == 0x000008, "Member 'BuildingBar_C_UpdateBuildingTrap::bShowTrapInfo' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_GetTrapLevel_ReturnValue) == 0x00000C, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_GetTrapLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_CreateTemporaryItemInstanceBP_ReturnValue) == 0x000018, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_CreateTemporaryItemInstanceBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_GetShortDisplayName_ReturnValue) == 0x000020, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_GetShortDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_GetRarityColor_ReturnValue) == 0x000038, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, K2Node_MakeStruct_SlateColor) == 0x00004C, "Member 'BuildingBar_C_UpdateBuildingTrap::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_GetOwningPlayer_ReturnValue) == 0x000068, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000070, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000078, "Member 'BuildingBar_C_UpdateBuildingTrap::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BuildingBar_C_UpdateBuildingTrap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000081, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingBar_C_UpdateBuildingTrap, CallFunc_ShouldShowInfoIndicator_ReturnValue) == 0x000082, "Member 'BuildingBar_C_UpdateBuildingTrap::CallFunc_ShouldShowInfoIndicator_ReturnValue' has a wrong offset!");

}

