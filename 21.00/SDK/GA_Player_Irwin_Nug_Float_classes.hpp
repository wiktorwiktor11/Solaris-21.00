#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Player_Irwin_Nug_Float

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Player_Irwin_Nug_Float.GA_Player_Irwin_Nug_Float_C
// 0x00A0 (0x0BB0 - 0x0B10)
class UGA_Player_Irwin_Nug_Float_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   FloatTask;                                         // 0x0B18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           FloatStart;                                        // 0x0B1C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           FloatEnd;                                          // 0x0B20(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B24[0x4];                                      // 0x0B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NugRef;                                            // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        Owning_Player_Pawn;                                // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GE_Handle_Quest;                                   // 0x0B38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_Land_Tag_GCN;                                   // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_PlayerGlide;                                    // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GE_Handle_Glide;                                   // 0x0B50(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CanGlide;                                          // 0x0B58(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B59[0x7];                                      // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Float_LaunchXY;                                    // 0x0B60(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Float_LaunchZ;                                     // 0x0B88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Player_Irwin_Nug_Float(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void On_Land();
	void OnChange_6109C9314D7ACBDCDB7F008F1748AF26(EMovementMode NewMovementMode);
	void OnSync_AA9C58E84960A4F80E0BF99666A4FA98();
	void Set_Refs();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Player_Irwin_Nug_Float_C">();
	}
	static class UGA_Player_Irwin_Nug_Float_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Player_Irwin_Nug_Float_C>();
	}
};
static_assert(alignof(UGA_Player_Irwin_Nug_Float_C) == 0x000008, "Wrong alignment on UGA_Player_Irwin_Nug_Float_C");
static_assert(sizeof(UGA_Player_Irwin_Nug_Float_C) == 0x000BB0, "Wrong size on UGA_Player_Irwin_Nug_Float_C");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, UberGraphFrame) == 0x000B10, "Member 'UGA_Player_Irwin_Nug_Float_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, FloatTask) == 0x000B18, "Member 'UGA_Player_Irwin_Nug_Float_C::FloatTask' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, FloatStart) == 0x000B1C, "Member 'UGA_Player_Irwin_Nug_Float_C::FloatStart' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, FloatEnd) == 0x000B20, "Member 'UGA_Player_Irwin_Nug_Float_C::FloatEnd' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, NugRef) == 0x000B28, "Member 'UGA_Player_Irwin_Nug_Float_C::NugRef' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, Owning_Player_Pawn) == 0x000B30, "Member 'UGA_Player_Irwin_Nug_Float_C::Owning_Player_Pawn' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, GE_Handle_Quest) == 0x000B38, "Member 'UGA_Player_Irwin_Nug_Float_C::GE_Handle_Quest' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, GE_Land_Tag_GCN) == 0x000B40, "Member 'UGA_Player_Irwin_Nug_Float_C::GE_Land_Tag_GCN' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, GE_PlayerGlide) == 0x000B48, "Member 'UGA_Player_Irwin_Nug_Float_C::GE_PlayerGlide' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, GE_Handle_Glide) == 0x000B50, "Member 'UGA_Player_Irwin_Nug_Float_C::GE_Handle_Glide' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, CanGlide) == 0x000B58, "Member 'UGA_Player_Irwin_Nug_Float_C::CanGlide' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, Float_LaunchXY) == 0x000B60, "Member 'UGA_Player_Irwin_Nug_Float_C::Float_LaunchXY' has a wrong offset!");
static_assert(offsetof(UGA_Player_Irwin_Nug_Float_C, Float_LaunchZ) == 0x000B88, "Member 'UGA_Player_Irwin_Nug_Float_C::Float_LaunchZ' has a wrong offset!");

}

