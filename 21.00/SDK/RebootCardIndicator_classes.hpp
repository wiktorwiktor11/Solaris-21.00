#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RebootCardIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RebootCardIndicator.RebootCardIndicator_C
// 0x0050 (0x0668 - 0x0618)
class URebootCardIndicator_C final : public UAthenaRebootCardIndicator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0618(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UpdateTime;                                        // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Nameplate;                                  // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 burst;                                             // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RebootIcon;                                  // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                IndicatorSpacer;                                   // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         RebootCountdownContainer;                          // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TimeText;                                          // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CurTime;                                           // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTime;                                           // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle;                                       // 0x0660(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void bp_UpdateCountdownText();
	void ExecuteUbergraph_RebootCardIndicator(int32 EntryPoint);
	void HandleDisplayForSelf(bool bSelf);
	void SetupCountdown(float StartTimeLocalWorld, float EndTimeLocalWorld);
	void UpdateCountdownText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RebootCardIndicator_C">();
	}
	static class URebootCardIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URebootCardIndicator_C>();
	}
};
static_assert(alignof(URebootCardIndicator_C) == 0x000008, "Wrong alignment on URebootCardIndicator_C");
static_assert(sizeof(URebootCardIndicator_C) == 0x000668, "Wrong size on URebootCardIndicator_C");
static_assert(offsetof(URebootCardIndicator_C, UberGraphFrame) == 0x000618, "Member 'URebootCardIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URebootCardIndicator_C, UpdateTime) == 0x000620, "Member 'URebootCardIndicator_C::UpdateTime' has a wrong offset!");
static_assert(offsetof(URebootCardIndicator_C, Border_Nameplate) == 0x000628, "Member 'URebootCardIndicator_C::Border_Nameplate' has a wrong offset!");
static_assert(offsetof(URebootCardIndicator_C, burst) == 0x000630, "Member 'URebootCardIndicator_C::burst' has a wrong offset!");
static_assert(offsetof(URebootCardIndicator_C, Image_RebootIcon) == 0x000638, "Member 'URebootCardIndicator_C::Image_RebootIcon' has a wrong offset!");
static_assert(offsetof(URebootCardIndicator_C, IndicatorSpacer) == 0x000640, "Member 'URebootCardIndicator_C::IndicatorSpacer' has a wrong offset!");
static_assert(offsetof(URebootCardIndicator_C, RebootCountdownContainer) == 0x000648, "Member 'URebootCardIndicator_C::RebootCountdownContainer' has a wrong offset!");
static_assert(offsetof(URebootCardIndicator_C, TimeText) == 0x000650, "Member 'URebootCardIndicator_C::TimeText' has a wrong offset!");
static_assert(offsetof(URebootCardIndicator_C, CurTime) == 0x000658, "Member 'URebootCardIndicator_C::CurTime' has a wrong offset!");
static_assert(offsetof(URebootCardIndicator_C, EndTime) == 0x00065C, "Member 'URebootCardIndicator_C::EndTime' has a wrong offset!");
static_assert(offsetof(URebootCardIndicator_C, TimerHandle) == 0x000660, "Member 'URebootCardIndicator_C::TimerHandle' has a wrong offset!");

}

