#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EntityFortnite

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "EntityActor_classes.hpp"
#include "EntityCore_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class EntityFortnite.EntityFortniteInterface
// 0x0000 (0x0028 - 0x0028)
class IEntityFortniteInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EntityFortniteInterface">();
	}
	static class IEntityFortniteInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IEntityFortniteInterface>();
	}
};
static_assert(alignof(IEntityFortniteInterface) == 0x000008, "Wrong alignment on IEntityFortniteInterface");
static_assert(sizeof(IEntityFortniteInterface) == 0x000028, "Wrong size on IEntityFortniteInterface");

// Class EntityFortnite.EntityFortnitePlayerComponent
// 0x0000 (0x00E0 - 0x00E0)
class UEntityFortnitePlayerComponent final : public UEntityActorPlayerComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EntityFortnitePlayerComponent">();
	}
	static class UEntityFortnitePlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEntityFortnitePlayerComponent>();
	}
};
static_assert(alignof(UEntityFortnitePlayerComponent) == 0x000008, "Wrong alignment on UEntityFortnitePlayerComponent");
static_assert(sizeof(UEntityFortnitePlayerComponent) == 0x0000E0, "Wrong size on UEntityFortnitePlayerComponent");

// Class EntityFortnite.EntityFortniteStormControllerComponent
// 0x0010 (0x0070 - 0x0060)
class UEntityFortniteStormControllerComponent : public UEntityComponent
{
public:
	TSubclassOf<class AEntityFortniteStormSpawner> StormSpawnerClass;                                 // 0x0060(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AEntityFortniteStormSpawner*            StormSpawner;                                      // 0x0068(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EntityFortniteStormControllerComponent">();
	}
	static class UEntityFortniteStormControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEntityFortniteStormControllerComponent>();
	}
};
static_assert(alignof(UEntityFortniteStormControllerComponent) == 0x000008, "Wrong alignment on UEntityFortniteStormControllerComponent");
static_assert(sizeof(UEntityFortniteStormControllerComponent) == 0x000070, "Wrong size on UEntityFortniteStormControllerComponent");
static_assert(offsetof(UEntityFortniteStormControllerComponent, StormSpawnerClass) == 0x000060, "Member 'UEntityFortniteStormControllerComponent::StormSpawnerClass' has a wrong offset!");
static_assert(offsetof(UEntityFortniteStormControllerComponent, StormSpawner) == 0x000068, "Member 'UEntityFortniteStormControllerComponent::StormSpawner' has a wrong offset!");

// Class EntityFortnite.EntityFortniteStormSpawner
// 0x0008 (0x0278 - 0x0270)
class AEntityFortniteStormSpawner final : public AActor
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0270(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void Pause();
	void Start(const float StartRadius, const float BoundsRadius, const TArray<struct FEntityFortniteStormPhase>& Phases);
	void Stop();

	bool Exists() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EntityFortniteStormSpawner">();
	}
	static class AEntityFortniteStormSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEntityFortniteStormSpawner>();
	}
};
static_assert(alignof(AEntityFortniteStormSpawner) == 0x000008, "Wrong alignment on AEntityFortniteStormSpawner");
static_assert(sizeof(AEntityFortniteStormSpawner) == 0x000278, "Wrong size on AEntityFortniteStormSpawner");
static_assert(offsetof(AEntityFortniteStormSpawner, SceneComponent) == 0x000270, "Member 'AEntityFortniteStormSpawner::SceneComponent' has a wrong offset!");

}

