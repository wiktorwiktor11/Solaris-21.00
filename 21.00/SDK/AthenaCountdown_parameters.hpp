#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaCountdown

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function AthenaCountdown.AthenaCountdown_C.CheckTagsForWidgetOffset
// 0x0050 (0x0050 - 0x0000)
struct AthenaCountdown_C_CheckTagsForWidgetOffset final
{
public:
	TArray<struct FGameplayTag>                   GameplayTags;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0024(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaCountdown_C_CheckTagsForWidgetOffset) == 0x000008, "Wrong alignment on AthenaCountdown_C_CheckTagsForWidgetOffset");
static_assert(sizeof(AthenaCountdown_C_CheckTagsForWidgetOffset) == 0x000050, "Wrong size on AthenaCountdown_C_CheckTagsForWidgetOffset");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, GameplayTags) == 0x000000, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::GameplayTags' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, CallFunc_Array_Get_Item) == 0x000024, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, CallFunc_Map_Find_Value) == 0x000038, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_CheckTagsForWidgetOffset, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'AthenaCountdown_C_CheckTagsForWidgetOffset::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function AthenaCountdown.AthenaCountdown_C.ExecuteUbergraph_AthenaCountdown
// 0x0230 (0x0230 - 0x0000)
struct AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   K2Node_CustomEvent_GameState;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    K2Node_CustomEvent_Playlist;                       // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_PlaylistContextTags;            // 0x0018(0x0020)(ConstParm)
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0038(0x0020)()
	class UFortPlaylist*                          Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0060(0x0010)(ReferenceParm)
	class AFortGameStateAthena*                   Temp_object_Variable_1;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_CurrentPlaylistReady*  CallFunc_PlaylistDataReadyAsync_ReturnValue;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0090(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TimeRemaining;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_CountdownUpdateText;                  // 0x00A8(0x0018)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00C8(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TimeRemaining;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_DisplayText;                    // 0x0148(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_FirstLineText;                        // 0x0170(0x0018)(ConstParm)
	class FText                                   K2Node_Event_SecondLineText;                       // 0x0188(0x0018)(ConstParm)
	bool                                          Temp_bool_Variable;                                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01A8(0x0018)()
	class USoundBase*                             K2Node_Select_Default;                             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   CallFunc_GetGameStateAthena_ReturnValue;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShouldDisplayCountdownTimerText_ReturnValue; // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_1;               // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_222[0x2];                                      // 0x0222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown) == 0x000008, "Wrong alignment on AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown");
static_assert(sizeof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown) == 0x000230, "Wrong size on AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, EntryPoint) == 0x000000, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_CustomEvent_GameState) == 0x000008, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_CustomEvent_GameState' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_CustomEvent_Playlist) == 0x000010, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_CustomEvent_Playlist' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_CustomEvent_PlaylistContextTags) == 0x000018, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_CustomEvent_PlaylistContextTags' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, Temp_struct_Variable) == 0x000038, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, Temp_object_Variable) == 0x000058, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000060, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, Temp_object_Variable_1) == 0x000070, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_PlaylistDataReadyAsync_ReturnValue) == 0x000080, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_PlaylistDataReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, Temp_bool_True_if_break_was_hit_Variable) == 0x000088, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Not_PreBool_ReturnValue) == 0x000089, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_IsValid_ReturnValue) == 0x00008A, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Array_Get_Item) == 0x000090, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_Event_TimeRemaining) == 0x0000A4, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_Event_TimeRemaining' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_Event_CountdownUpdateText) == 0x0000A8, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_Event_CountdownUpdateText' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_PlayAnimation_ReturnValue) == 0x0000C0, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_Event_MyGeometry) == 0x0000C8, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_Event_InDeltaTime) == 0x000108, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_CustomEvent_Enabled) == 0x00010C, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_SpawnSound2D_ReturnValue) == 0x000110, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_MapRangeClamped_ReturnValue) == 0x000118, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_GetFloatValue_ReturnValue) == 0x00011C, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_GetFloatValue_ReturnValue_1) == 0x000120, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000124, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_IsValid_ReturnValue_2) == 0x000128, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_BooleanAND_ReturnValue) == 0x000129, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Min_ReturnValue) == 0x00012C, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Subtract_IntInt_ReturnValue) == 0x000130, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000134, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000138, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_FInterpTo_ReturnValue) == 0x00013C, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_CustomEvent_TimeRemaining) == 0x000140, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_CustomEvent_TimeRemaining' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_CustomEvent_DisplayText) == 0x000148, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_CustomEvent_DisplayText' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_PlayAnimation_ReturnValue_1) == 0x000160, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_PlayAnimation_ReturnValue_2) == 0x000168, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_Event_FirstLineText) == 0x000170, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_Event_FirstLineText' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_Event_SecondLineText) == 0x000188, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_Event_SecondLineText' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, Temp_bool_Variable) == 0x0001A0, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Greater_IntInt_ReturnValue) == 0x0001A1, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Conv_IntToText_ReturnValue) == 0x0001A8, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_Select_Default) == 0x0001C0, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_IsValid_ReturnValue_3) == 0x0001C8, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_GetGameStateAthena_ReturnValue) == 0x0001D0, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_GetGameStateAthena_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_GetShouldDisplayCountdownTimerText_ReturnValue) == 0x0001D8, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_GetShouldDisplayCountdownTimerText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_SpawnSound2D_ReturnValue_1) == 0x0001E0, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, Temp_bool_Variable_1) == 0x0001E8, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, Temp_int_Loop_Counter_Variable) == 0x0001EC, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, K2Node_Select_Default_1) == 0x0001F0, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_PlayAnimation_ReturnValue_3) == 0x0001F8, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Less_IntInt_ReturnValue) == 0x000200, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Add_IntInt_ReturnValue) == 0x000204, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_BooleanAND_ReturnValue_1) == 0x000208, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Map_Find_Value) == 0x000210, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Map_Find_ReturnValue) == 0x000220, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000221, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_Percent_IntInt_ReturnValue) == 0x000224, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000228, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_BooleanOR_ReturnValue) == 0x000229, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown, CallFunc_BooleanAND_ReturnValue_2) == 0x00022A, "Member 'AthenaCountdown_C_ExecuteUbergraph_AthenaCountdown::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function AthenaCountdown.AthenaCountdown_C.InitializeCountdown
// 0x0020 (0x0020 - 0x0000)
struct AthenaCountdown_C_InitializeCountdown final
{
public:
	int32                                         TimeRemaining;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayText;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AthenaCountdown_C_InitializeCountdown) == 0x000008, "Wrong alignment on AthenaCountdown_C_InitializeCountdown");
static_assert(sizeof(AthenaCountdown_C_InitializeCountdown) == 0x000020, "Wrong size on AthenaCountdown_C_InitializeCountdown");
static_assert(offsetof(AthenaCountdown_C_InitializeCountdown, TimeRemaining) == 0x000000, "Member 'AthenaCountdown_C_InitializeCountdown::TimeRemaining' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_InitializeCountdown, DisplayText) == 0x000008, "Member 'AthenaCountdown_C_InitializeCountdown::DisplayText' has a wrong offset!");

// Function AthenaCountdown.AthenaCountdown_C.OnCountdownUpdate
// 0x0020 (0x0020 - 0x0000)
struct AthenaCountdown_C_OnCountdownUpdate final
{
public:
	int32                                         TimeRemaining;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CountdownUpdateText;                               // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaCountdown_C_OnCountdownUpdate) == 0x000008, "Wrong alignment on AthenaCountdown_C_OnCountdownUpdate");
static_assert(sizeof(AthenaCountdown_C_OnCountdownUpdate) == 0x000020, "Wrong size on AthenaCountdown_C_OnCountdownUpdate");
static_assert(offsetof(AthenaCountdown_C_OnCountdownUpdate, TimeRemaining) == 0x000000, "Member 'AthenaCountdown_C_OnCountdownUpdate::TimeRemaining' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_OnCountdownUpdate, CountdownUpdateText) == 0x000008, "Member 'AthenaCountdown_C_OnCountdownUpdate::CountdownUpdateText' has a wrong offset!");

// Function AthenaCountdown.AthenaCountdown_C.OnDisplayWarningMessage
// 0x0030 (0x0030 - 0x0000)
struct AthenaCountdown_C_OnDisplayWarningMessage final
{
public:
	class FText                                   FirstLineText;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   SecondLineText;                                    // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaCountdown_C_OnDisplayWarningMessage) == 0x000008, "Wrong alignment on AthenaCountdown_C_OnDisplayWarningMessage");
static_assert(sizeof(AthenaCountdown_C_OnDisplayWarningMessage) == 0x000030, "Wrong size on AthenaCountdown_C_OnDisplayWarningMessage");
static_assert(offsetof(AthenaCountdown_C_OnDisplayWarningMessage, FirstLineText) == 0x000000, "Member 'AthenaCountdown_C_OnDisplayWarningMessage::FirstLineText' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_OnDisplayWarningMessage, SecondLineText) == 0x000018, "Member 'AthenaCountdown_C_OnDisplayWarningMessage::SecondLineText' has a wrong offset!");

// Function AthenaCountdown.AthenaCountdown_C.OnReady_ADBD201243C0508166DBDDB7356F9143
// 0x0030 (0x0030 - 0x0000)
struct AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143 final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143) == 0x000008, "Wrong alignment on AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143");
static_assert(sizeof(AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143) == 0x000030, "Wrong size on AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143");
static_assert(offsetof(AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143, GameState) == 0x000000, "Member 'AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143::GameState' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143, Playlist) == 0x000008, "Member 'AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143::Playlist' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143, PlaylistContextTags) == 0x000010, "Member 'AthenaCountdown_C_OnReady_ADBD201243C0508166DBDDB7356F9143::PlaylistContextTags' has a wrong offset!");

// Function AthenaCountdown.AthenaCountdown_C.Set Countdown Loop Audio Enabled
// 0x0001 (0x0001 - 0x0000)
struct AthenaCountdown_C_Set_Countdown_Loop_Audio_Enabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaCountdown_C_Set_Countdown_Loop_Audio_Enabled) == 0x000001, "Wrong alignment on AthenaCountdown_C_Set_Countdown_Loop_Audio_Enabled");
static_assert(sizeof(AthenaCountdown_C_Set_Countdown_Loop_Audio_Enabled) == 0x000001, "Wrong size on AthenaCountdown_C_Set_Countdown_Loop_Audio_Enabled");
static_assert(offsetof(AthenaCountdown_C_Set_Countdown_Loop_Audio_Enabled, Enabled) == 0x000000, "Member 'AthenaCountdown_C_Set_Countdown_Loop_Audio_Enabled::Enabled' has a wrong offset!");

// Function AthenaCountdown.AthenaCountdown_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct AthenaCountdown_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaCountdown_C_Tick) == 0x000008, "Wrong alignment on AthenaCountdown_C_Tick");
static_assert(sizeof(AthenaCountdown_C_Tick) == 0x000048, "Wrong size on AthenaCountdown_C_Tick");
static_assert(offsetof(AthenaCountdown_C_Tick, MyGeometry) == 0x000000, "Member 'AthenaCountdown_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaCountdown_C_Tick, InDeltaTime) == 0x000040, "Member 'AthenaCountdown_C_Tick::InDeltaTime' has a wrong offset!");

}

