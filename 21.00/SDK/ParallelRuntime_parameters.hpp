#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ParallelRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ParallelRuntime.FortCameraModifier_WestSausage.CalculateDynamicMultipliers
// 0x0008 (0x0008 - 0x0000)
struct FortCameraModifier_WestSausage_CalculateDynamicMultipliers final
{
public:
	float                                         OutFOVBoundsMultiplier;                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutBoostOffsetMultiplier;                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCameraModifier_WestSausage_CalculateDynamicMultipliers) == 0x000004, "Wrong alignment on FortCameraModifier_WestSausage_CalculateDynamicMultipliers");
static_assert(sizeof(FortCameraModifier_WestSausage_CalculateDynamicMultipliers) == 0x000008, "Wrong size on FortCameraModifier_WestSausage_CalculateDynamicMultipliers");
static_assert(offsetof(FortCameraModifier_WestSausage_CalculateDynamicMultipliers, OutFOVBoundsMultiplier) == 0x000000, "Member 'FortCameraModifier_WestSausage_CalculateDynamicMultipliers::OutFOVBoundsMultiplier' has a wrong offset!");
static_assert(offsetof(FortCameraModifier_WestSausage_CalculateDynamicMultipliers, OutBoostOffsetMultiplier) == 0x000004, "Member 'FortCameraModifier_WestSausage_CalculateDynamicMultipliers::OutBoostOffsetMultiplier' has a wrong offset!");

// Function ParallelRuntime.FortSwingingLayerAnimInstance.GetAttachVectorInPlayerSpace
// 0x0030 (0x0030 - 0x0000)
struct FortSwingingLayerAnimInstance_GetAttachVectorInPlayerSpace final
{
public:
	struct FVector                                InPlayerToAttachPoint;                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSwingingLayerAnimInstance_GetAttachVectorInPlayerSpace) == 0x000008, "Wrong alignment on FortSwingingLayerAnimInstance_GetAttachVectorInPlayerSpace");
static_assert(sizeof(FortSwingingLayerAnimInstance_GetAttachVectorInPlayerSpace) == 0x000030, "Wrong size on FortSwingingLayerAnimInstance_GetAttachVectorInPlayerSpace");
static_assert(offsetof(FortSwingingLayerAnimInstance_GetAttachVectorInPlayerSpace, InPlayerToAttachPoint) == 0x000000, "Member 'FortSwingingLayerAnimInstance_GetAttachVectorInPlayerSpace::InPlayerToAttachPoint' has a wrong offset!");
static_assert(offsetof(FortSwingingLayerAnimInstance_GetAttachVectorInPlayerSpace, ReturnValue) == 0x000018, "Member 'FortSwingingLayerAnimInstance_GetAttachVectorInPlayerSpace::ReturnValue' has a wrong offset!");

// Function ParallelRuntime.FortSwingingLayerAnimInstance.GetPlayerAnglesFromAttachPoint
// 0x000C (0x000C - 0x0000)
struct FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint final
{
public:
	float                                         Pitch;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Roll;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Yaw;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint) == 0x000004, "Wrong alignment on FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint");
static_assert(sizeof(FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint) == 0x00000C, "Wrong size on FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint");
static_assert(offsetof(FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint, Pitch) == 0x000000, "Member 'FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint::Pitch' has a wrong offset!");
static_assert(offsetof(FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint, Roll) == 0x000004, "Member 'FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint::Roll' has a wrong offset!");
static_assert(offsetof(FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint, Yaw) == 0x000008, "Member 'FortSwingingLayerAnimInstance_GetPlayerAnglesFromAttachPoint::Yaw' has a wrong offset!");

}

