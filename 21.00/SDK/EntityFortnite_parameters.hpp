#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EntityFortnite

#include "Basic.hpp"

#include "EntityFortnite_structs.hpp"


namespace SDK::Params
{

// Function EntityFortnite.EntityFortniteStormSpawner.Start
// 0x0018 (0x0018 - 0x0000)
struct EntityFortniteStormSpawner_Start final
{
public:
	float                                         StartRadius;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BoundsRadius;                                      // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEntityFortniteStormPhase>      Phases;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EntityFortniteStormSpawner_Start) == 0x000008, "Wrong alignment on EntityFortniteStormSpawner_Start");
static_assert(sizeof(EntityFortniteStormSpawner_Start) == 0x000018, "Wrong size on EntityFortniteStormSpawner_Start");
static_assert(offsetof(EntityFortniteStormSpawner_Start, StartRadius) == 0x000000, "Member 'EntityFortniteStormSpawner_Start::StartRadius' has a wrong offset!");
static_assert(offsetof(EntityFortniteStormSpawner_Start, BoundsRadius) == 0x000004, "Member 'EntityFortniteStormSpawner_Start::BoundsRadius' has a wrong offset!");
static_assert(offsetof(EntityFortniteStormSpawner_Start, Phases) == 0x000008, "Member 'EntityFortniteStormSpawner_Start::Phases' has a wrong offset!");

// Function EntityFortnite.EntityFortniteStormSpawner.Exists
// 0x0001 (0x0001 - 0x0000)
struct EntityFortniteStormSpawner_Exists final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EntityFortniteStormSpawner_Exists) == 0x000001, "Wrong alignment on EntityFortniteStormSpawner_Exists");
static_assert(sizeof(EntityFortniteStormSpawner_Exists) == 0x000001, "Wrong size on EntityFortniteStormSpawner_Exists");
static_assert(offsetof(EntityFortniteStormSpawner_Exists, ReturnValue) == 0x000000, "Member 'EntityFortniteStormSpawner_Exists::ReturnValue' has a wrong offset!");

}

