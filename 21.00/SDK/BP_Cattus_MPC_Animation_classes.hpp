#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Cattus_MPC_Animation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Cattus_MPC_Animation.BP_Cattus_MPC_Animation_C
// 0x0048 (0x02B8 - 0x0270)
class ABP_Cattus_MPC_Animation_C final : public AFortAlwaysRelevantReplicatedActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NormalizedGrowth_C394B14947EA559166D3388CEC26CA3F; // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_C394B14947EA559166D3388CEC26CA3F; // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugValue;                                        // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CattusBlend_Distance;                              // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CattusBlend_Offset;                                // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwordBlend_Offset;                                 // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwordBlend_Distance;                               // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SecondsSinceBeginning;                             // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalizedValue;                                   // 0x02AC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         TimerTime;                                         // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClientUpdate();
	void DebugOvergrowth(float NewParam);
	void ExecuteUbergraph_BP_Cattus_MPC_Animation(int32 EntryPoint);
	void OnEventActive_66CB2D794265FF6324883898423DFB73(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventEnded_66CB2D794265FF6324883898423DFB73(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnEventUpdated_66CB2D794265FF6324883898423DFB73(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio);
	void OnRep_NormalizedValue();
	void ReceiveBeginPlay();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void UpdateOvergrowth();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Cattus_MPC_Animation_C">();
	}
	static class ABP_Cattus_MPC_Animation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Cattus_MPC_Animation_C>();
	}
};
static_assert(alignof(ABP_Cattus_MPC_Animation_C) == 0x000008, "Wrong alignment on ABP_Cattus_MPC_Animation_C");
static_assert(sizeof(ABP_Cattus_MPC_Animation_C) == 0x0002B8, "Wrong size on ABP_Cattus_MPC_Animation_C");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, UberGraphFrame) == 0x000270, "Member 'ABP_Cattus_MPC_Animation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, DefaultSceneRoot) == 0x000278, "Member 'ABP_Cattus_MPC_Animation_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, Timeline_0_NormalizedGrowth_C394B14947EA559166D3388CEC26CA3F) == 0x000280, "Member 'ABP_Cattus_MPC_Animation_C::Timeline_0_NormalizedGrowth_C394B14947EA559166D3388CEC26CA3F' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, Timeline_0__Direction_C394B14947EA559166D3388CEC26CA3F) == 0x000284, "Member 'ABP_Cattus_MPC_Animation_C::Timeline_0__Direction_C394B14947EA559166D3388CEC26CA3F' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, Timeline_0) == 0x000288, "Member 'ABP_Cattus_MPC_Animation_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, DebugValue) == 0x000290, "Member 'ABP_Cattus_MPC_Animation_C::DebugValue' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, CattusBlend_Distance) == 0x000294, "Member 'ABP_Cattus_MPC_Animation_C::CattusBlend_Distance' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, CattusBlend_Offset) == 0x000298, "Member 'ABP_Cattus_MPC_Animation_C::CattusBlend_Offset' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, SwordBlend_Offset) == 0x00029C, "Member 'ABP_Cattus_MPC_Animation_C::SwordBlend_Offset' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, SwordBlend_Distance) == 0x0002A0, "Member 'ABP_Cattus_MPC_Animation_C::SwordBlend_Distance' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, Debug) == 0x0002A4, "Member 'ABP_Cattus_MPC_Animation_C::Debug' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, SecondsSinceBeginning) == 0x0002A8, "Member 'ABP_Cattus_MPC_Animation_C::SecondsSinceBeginning' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, NormalizedValue) == 0x0002AC, "Member 'ABP_Cattus_MPC_Animation_C::NormalizedValue' has a wrong offset!");
static_assert(offsetof(ABP_Cattus_MPC_Animation_C, TimerTime) == 0x0002B0, "Member 'ABP_Cattus_MPC_Animation_C::TimerTime' has a wrong offset!");

}

