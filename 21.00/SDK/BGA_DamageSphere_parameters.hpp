#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_DamageSphere

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BGA_DamageSphere.BGA_DamageSphere_C.ExecuteUbergraph_BGA_DamageSphere
// 0x0170 (0x0170 - 0x0000)
struct BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0008(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0040(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0130(0x0018)()
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Ranged_WestSausage_Parallel_Athena_C* K2Node_DynamicCast_AsB_Ranged_West_Sausage_Parallel_Athena; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere) == 0x000008, "Wrong alignment on BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere");
static_assert(sizeof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere) == 0x000170, "Wrong size on BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, EntryPoint) == 0x000000, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::EntryPoint' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_Event_Damage) == 0x000004, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_Event_DamageTags) == 0x000008, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_Event_Momentum) == 0x000028, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_Event_HitInfo) == 0x000040, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_Event_InstigatedBy) == 0x000120, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_Event_DamageCauser) == 0x000128, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_Event_EffectContext) == 0x000130, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x000148, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000158, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_DynamicCast_AsB_Ranged_West_Sausage_Parallel_Athena) == 0x000160, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_DynamicCast_AsB_Ranged_West_Sausage_Parallel_Athena' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'BGA_DamageSphere_C_ExecuteUbergraph_BGA_DamageSphere::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BGA_DamageSphere.BGA_DamageSphere_C.OnDamageServer
// 0x0148 (0x0148 - 0x0000)
struct BGA_DamageSphere_C_OnDamageServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BGA_DamageSphere_C_OnDamageServer) == 0x000008, "Wrong alignment on BGA_DamageSphere_C_OnDamageServer");
static_assert(sizeof(BGA_DamageSphere_C_OnDamageServer) == 0x000148, "Wrong size on BGA_DamageSphere_C_OnDamageServer");
static_assert(offsetof(BGA_DamageSphere_C_OnDamageServer, Damage) == 0x000000, "Member 'BGA_DamageSphere_C_OnDamageServer::Damage' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_OnDamageServer, DamageTags) == 0x000008, "Member 'BGA_DamageSphere_C_OnDamageServer::DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_OnDamageServer, Momentum) == 0x000028, "Member 'BGA_DamageSphere_C_OnDamageServer::Momentum' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_OnDamageServer, HitInfo) == 0x000040, "Member 'BGA_DamageSphere_C_OnDamageServer::HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_OnDamageServer, InstigatedBy) == 0x000120, "Member 'BGA_DamageSphere_C_OnDamageServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_OnDamageServer, DamageCauser) == 0x000128, "Member 'BGA_DamageSphere_C_OnDamageServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_DamageSphere_C_OnDamageServer, EffectContext) == 0x000130, "Member 'BGA_DamageSphere_C_OnDamageServer::EffectContext' has a wrong offset!");

}

