#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ResourceCountWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ResourceCountWidget.ResourceCountWidget_C
// 0x0068 (0x0380 - 0x0318)
class UResourceCountWidget_C final : public UFortResourceWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Background;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            CanAffordTextColor;                                // 0x0328(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            CanNotAffordTextColor;                             // 0x033C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            CanNotAffordBackgroundColor;                       // 0x0350(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            CanAffordBackgroundColor;                          // 0x0364(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bUseBackgroundForAffordabilityFeedback;            // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_ResourceCountWidget(int32 EntryPoint);
	void OnResourceCostSet(const int32 ResourceCount, const int32 ResourceCost, const bool bHasInfiniteResources);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ResourceCountWidget_C">();
	}
	static class UResourceCountWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResourceCountWidget_C>();
	}
};
static_assert(alignof(UResourceCountWidget_C) == 0x000008, "Wrong alignment on UResourceCountWidget_C");
static_assert(sizeof(UResourceCountWidget_C) == 0x000380, "Wrong size on UResourceCountWidget_C");
static_assert(offsetof(UResourceCountWidget_C, UberGraphFrame) == 0x000318, "Member 'UResourceCountWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UResourceCountWidget_C, Background) == 0x000320, "Member 'UResourceCountWidget_C::Background' has a wrong offset!");
static_assert(offsetof(UResourceCountWidget_C, CanAffordTextColor) == 0x000328, "Member 'UResourceCountWidget_C::CanAffordTextColor' has a wrong offset!");
static_assert(offsetof(UResourceCountWidget_C, CanNotAffordTextColor) == 0x00033C, "Member 'UResourceCountWidget_C::CanNotAffordTextColor' has a wrong offset!");
static_assert(offsetof(UResourceCountWidget_C, CanNotAffordBackgroundColor) == 0x000350, "Member 'UResourceCountWidget_C::CanNotAffordBackgroundColor' has a wrong offset!");
static_assert(offsetof(UResourceCountWidget_C, CanAffordBackgroundColor) == 0x000364, "Member 'UResourceCountWidget_C::CanAffordBackgroundColor' has a wrong offset!");
static_assert(offsetof(UResourceCountWidget_C, bUseBackgroundForAffordabilityFeedback) == 0x000378, "Member 'UResourceCountWidget_C::bUseBackgroundForAffordabilityFeedback' has a wrong offset!");

}

