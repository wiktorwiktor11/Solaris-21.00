#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_Jetpack_Container_Base

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_Jetpack_Container_Base.BGA_Athena_Jetpack_Container_Base_C
// 0x00B8 (0x0A28 - 0x0970)
class ABGA_Athena_Jetpack_Container_Base_C : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0970(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   JetpackHook;                                       // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLinkToActorComponent*              FortLinkToActor;                                   // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   JetpackMesh;                                       // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTierGroupName;                                 // 0x09A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A4[0x4];                                      // 0x09A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              LastInteractingPawn;                               // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   InteractMessage;                                   // 0x09B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HasLoot_;                                          // 0x09C8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C9[0x3];                                      // 0x09C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GC_JetpackContainer_Destroyed;                     // 0x09CC(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_JetpackContainer_Searched;                      // 0x09D0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D4[0x4];                                      // 0x09D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_SpawnChance;                                   // 0x09D8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_InteractionTime;                               // 0x0A00(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted);
	void BndEvt__BGA_Athena_Jetpack_Container_Base_FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature(class AActor* DamageCauser);
	void ExecuteUbergraph_BGA_Athena_Jetpack_Container_Base(int32 EntryPoint);
	void GetItemToGrant(const class FName TierGroupName, class AFortPlayerController* PlayerControllerRef);
	void GiveItemDirectly();
	bool HasOpenInventorySlot(class APawn* Target);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnRep_HasLoot_();
	void ReceiveBeginPlay();
	void SpawnLoot();

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_Jetpack_Container_Base_C">();
	}
	static class ABGA_Athena_Jetpack_Container_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_Jetpack_Container_Base_C>();
	}
};
static_assert(alignof(ABGA_Athena_Jetpack_Container_Base_C) == 0x000008, "Wrong alignment on ABGA_Athena_Jetpack_Container_Base_C");
static_assert(sizeof(ABGA_Athena_Jetpack_Container_Base_C) == 0x000A28, "Wrong size on ABGA_Athena_Jetpack_Container_Base_C");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, UberGraphFrame) == 0x000970, "Member 'ABGA_Athena_Jetpack_Container_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, PointLight) == 0x000978, "Member 'ABGA_Athena_Jetpack_Container_Base_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, JetpackHook) == 0x000980, "Member 'ABGA_Athena_Jetpack_Container_Base_C::JetpackHook' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, FortLinkToActor) == 0x000988, "Member 'ABGA_Athena_Jetpack_Container_Base_C::FortLinkToActor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, JetpackMesh) == 0x000990, "Member 'ABGA_Athena_Jetpack_Container_Base_C::JetpackMesh' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, DefaultSceneRoot) == 0x000998, "Member 'ABGA_Athena_Jetpack_Container_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, LootTierGroupName) == 0x0009A0, "Member 'ABGA_Athena_Jetpack_Container_Base_C::LootTierGroupName' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, LastInteractingPawn) == 0x0009A8, "Member 'ABGA_Athena_Jetpack_Container_Base_C::LastInteractingPawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, InteractMessage) == 0x0009B0, "Member 'ABGA_Athena_Jetpack_Container_Base_C::InteractMessage' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, HasLoot_) == 0x0009C8, "Member 'ABGA_Athena_Jetpack_Container_Base_C::HasLoot_' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, GC_JetpackContainer_Destroyed) == 0x0009CC, "Member 'ABGA_Athena_Jetpack_Container_Base_C::GC_JetpackContainer_Destroyed' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, GC_JetpackContainer_Searched) == 0x0009D0, "Member 'ABGA_Athena_Jetpack_Container_Base_C::GC_JetpackContainer_Searched' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, Row_SpawnChance) == 0x0009D8, "Member 'ABGA_Athena_Jetpack_Container_Base_C::Row_SpawnChance' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Jetpack_Container_Base_C, Row_InteractionTime) == 0x000A00, "Member 'ABGA_Athena_Jetpack_Container_Base_C::Row_InteractionTime' has a wrong offset!");

}

