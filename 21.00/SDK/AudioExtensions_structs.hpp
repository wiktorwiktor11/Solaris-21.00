#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioExtensions

#include "Basic.hpp"


namespace SDK
{

// Enum AudioExtensions.EAudioParameterType
// NumValues: 0x000E
enum class EAudioParameterType : uint8
{
	None                                     = 0,
	Boolean                                  = 1,
	Integer                                  = 2,
	Float                                    = 3,
	String                                   = 4,
	Object                                   = 5,
	NoneArray                                = 6,
	BooleanArray                             = 7,
	IntegerArray                             = 8,
	FloatArray                               = 9,
	StringArray                              = 10,
	ObjectArray                              = 11,
	COUNT                                    = 12,
	EAudioParameterType_MAX                  = 13,
};

// Enum AudioExtensions.EPcmBitDepthConversion
// NumValues: 0x0004
enum class EPcmBitDepthConversion : uint8
{
	SameAsSource                             = 0,
	Int16                                    = 1,
	Float32                                  = 2,
	EPcmBitDepthConversion_MAX               = 3,
};

// ScriptStruct AudioExtensions.AudioParameter
// 0x0090 (0x0090 - 0x0000)
struct FAudioParameter
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatParam;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BoolParam;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IntParam;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ObjectParam;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StringParam;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ArrayFloatParam;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                  ArrayBoolParam;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 ArrayIntParam;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UObject*>                        ArrayObjectParam;                                  // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FString>                         ArrayStringParam;                                  // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	EAudioParameterType                           ParamType;                                         // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x17];                                      // 0x0079(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAudioParameter) == 0x000008, "Wrong alignment on FAudioParameter");
static_assert(sizeof(FAudioParameter) == 0x000090, "Wrong size on FAudioParameter");
static_assert(offsetof(FAudioParameter, ParamName) == 0x000000, "Member 'FAudioParameter::ParamName' has a wrong offset!");
static_assert(offsetof(FAudioParameter, FloatParam) == 0x000004, "Member 'FAudioParameter::FloatParam' has a wrong offset!");
static_assert(offsetof(FAudioParameter, BoolParam) == 0x000008, "Member 'FAudioParameter::BoolParam' has a wrong offset!");
static_assert(offsetof(FAudioParameter, IntParam) == 0x00000C, "Member 'FAudioParameter::IntParam' has a wrong offset!");
static_assert(offsetof(FAudioParameter, ObjectParam) == 0x000010, "Member 'FAudioParameter::ObjectParam' has a wrong offset!");
static_assert(offsetof(FAudioParameter, StringParam) == 0x000018, "Member 'FAudioParameter::StringParam' has a wrong offset!");
static_assert(offsetof(FAudioParameter, ArrayFloatParam) == 0x000028, "Member 'FAudioParameter::ArrayFloatParam' has a wrong offset!");
static_assert(offsetof(FAudioParameter, ArrayBoolParam) == 0x000038, "Member 'FAudioParameter::ArrayBoolParam' has a wrong offset!");
static_assert(offsetof(FAudioParameter, ArrayIntParam) == 0x000048, "Member 'FAudioParameter::ArrayIntParam' has a wrong offset!");
static_assert(offsetof(FAudioParameter, ArrayObjectParam) == 0x000058, "Member 'FAudioParameter::ArrayObjectParam' has a wrong offset!");
static_assert(offsetof(FAudioParameter, ArrayStringParam) == 0x000068, "Member 'FAudioParameter::ArrayStringParam' has a wrong offset!");
static_assert(offsetof(FAudioParameter, ParamType) == 0x000078, "Member 'FAudioParameter::ParamType' has a wrong offset!");

}

