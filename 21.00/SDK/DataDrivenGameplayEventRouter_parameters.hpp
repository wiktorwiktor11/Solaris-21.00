#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DataDrivenGameplayEventRouter

#include "Basic.hpp"

#include "DataDrivenGameplayEventRouter_structs.hpp"


namespace SDK::Params
{

// Function DataDrivenGameplayEventRouter.GameplayEventDescriptorLibrary.BroadcastEvent
// 0x0028 (0x0028 - 0x0000)
struct GameplayEventDescriptorLibrary_BroadcastEvent final
{
public:
	struct FGameplayEventDescriptor               EventDescriptor;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UObject*                                EventContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         event;                                             // 0x0010(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 EventRouterScope;                                  // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 RouterContextActor;                                // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameplayEventDescriptorLibrary_BroadcastEvent) == 0x000008, "Wrong alignment on GameplayEventDescriptorLibrary_BroadcastEvent");
static_assert(sizeof(GameplayEventDescriptorLibrary_BroadcastEvent) == 0x000028, "Wrong size on GameplayEventDescriptorLibrary_BroadcastEvent");
static_assert(offsetof(GameplayEventDescriptorLibrary_BroadcastEvent, EventDescriptor) == 0x000000, "Member 'GameplayEventDescriptorLibrary_BroadcastEvent::EventDescriptor' has a wrong offset!");
static_assert(offsetof(GameplayEventDescriptorLibrary_BroadcastEvent, EventContext) == 0x000008, "Member 'GameplayEventDescriptorLibrary_BroadcastEvent::EventContext' has a wrong offset!");
static_assert(offsetof(GameplayEventDescriptorLibrary_BroadcastEvent, event) == 0x000010, "Member 'GameplayEventDescriptorLibrary_BroadcastEvent::event' has a wrong offset!");
static_assert(offsetof(GameplayEventDescriptorLibrary_BroadcastEvent, EventRouterScope) == 0x000018, "Member 'GameplayEventDescriptorLibrary_BroadcastEvent::EventRouterScope' has a wrong offset!");
static_assert(offsetof(GameplayEventDescriptorLibrary_BroadcastEvent, RouterContextActor) == 0x000020, "Member 'GameplayEventDescriptorLibrary_BroadcastEvent::RouterContextActor' has a wrong offset!");

}

