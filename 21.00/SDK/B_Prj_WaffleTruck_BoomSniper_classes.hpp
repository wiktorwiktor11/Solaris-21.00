#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_WaffleTruck_BoomSniper

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_WaffleTruck_BoomSniper.B_Prj_WaffleTruck_BoomSniper_C
// 0x0270 (0x0D88 - 0x0B18)
class AB_Prj_WaffleTruck_BoomSniper_C final : public AFortAttachableProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B18(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Tracer;                                            // 0x0B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SurfaceTypeSoundComponent_C*        BP_SurfaceTypeSoundComponent;                      // 0x0B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               AttachedFuseBlink;                                 // 0x0B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow_Plunger;                                     // 0x0B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Trail;                                             // 0x0B48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Beep;                                              // 0x0B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0B58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fuse_Particle;                                     // 0x0B60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        GrenadeFuse_AudioComponent;                        // 0x0B68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         WobbleOnStick_WobbleCurve_3AC7CBFE4905C9469F8850ADBACDB9A3; // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            WobbleOnStick__Direction_3AC7CBFE4905C9469F8850ADBACDB9A3; // 0x0B74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B75[0x3];                                      // 0x0B75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     WobbleOnStick;                                     // 0x0B78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Explosion;                                       // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_DistantSound;                                  // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_CloseSound;                                    // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Explosion_Water;                                 // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         ExplosionRadius;                                   // 0x0BA0(0x0028)(Edit, BlueprintVisible, Net)
	class UForceFeedbackEffect*                   ExplosionForceFeedbackNear;                        // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   ExplosionForceFeedbackFar;                         // 0x0BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_Stick;                                         // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Beacon_Streak_Color__Friendly_;                    // 0x0BE0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Beacon_Streak_Color__Enemy_;                       // 0x0BF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead_;                                           // 0x0C00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C01[0x3];                                      // 0x0C01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Beacon_Core_Color__Friendly_;                      // 0x0C04(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Beacon_Core_Color__Enemy_;                         // 0x0C14(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C24[0x4];                                      // 0x0C24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         TimeBeforeExplode;                                 // 0x0C28(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         OffsetDistanceFromBone;                            // 0x0C50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C54[0x4];                                      // 0x0C54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitNormal;                                         // 0x0C58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Audio_StuckToEnvironment;                          // 0x0C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Audio_StuckToPlayer;                               // 0x0C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelfStickDelayOver_;                             // 0x0C80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C81[0x3];                                      // 0x0C81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SelfStickDelay;                                    // 0x0C84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetDistanceFromPhysicsMesh;                     // 0x0C88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8C[0x4];                                      // 0x0C8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0C90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasStopped;                                       // 0x0CA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA9[0x7];                                      // 0x0CA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      EnemyMeshMaterial;                                 // 0x0CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      FriendlyMeshMaterial;                              // 0x0CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_ActorTagsThatShouldExplodeOnOverlap;            // 0x0CC0(0x0020)(Edit, BlueprintVisible)
	bool                                          bSimulationRunning;                                // 0x0CE0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          StickToAllies;                                     // 0x0CE1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE2[0x6];                                      // 0x0CE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class AActor*>                           Ignore;                                            // 0x0CE8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	EPhysicalSurface                              Surface_Type;                                      // 0x0D38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnteredWater;                                      // 0x0D39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3A[0x6];                                      // 0x0D3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ProjectileGravityScale;                            // 0x0D40(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          StickToPlayers;                                    // 0x0D68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D69[0x7];                                      // 0x0D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               SoundIndicatorIcon;                                // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FuseIndicatorTimer;                                // 0x0D78(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  StuckPawn;                                         // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AIDiedEvent(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation_0, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void BindToPlayerOrAIDeath();
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_2_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody);
	void CallExplodeTrigger();
	void Destroy();
	void Event_Building_Actor_Destroyed();
	void Event_BuildingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation_0, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void Event_OnVehicleDestroyed(class AActor* DestroyedActor);
	void Event_TriggerExplosion();
	void ExecuteUbergraph_B_Prj_WaffleTruck_BoomSniper(int32 EntryPoint);
	void ForceBeep();
	void HandleHitBuildingWall(class UObject* Object, class UPrimitiveComponent* Component);
	void HandleHits(class UObject* Actor, class UPrimitiveComponent* Component);
	void HandleHitSupplyDrop(class UObject* Object, class UPrimitiveComponent* Component);
	void HandleHitVehicle(class UObject* Object, class UPrimitiveComponent* Component);
	void OnAttachedToDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation_0, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void OnRep_bResumeSimulation();
	void OnStop(const struct FHitResult& Hit);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap);
	void PlayerDiedEvent(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation_0, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void PlayStickSound(const struct FVector& Location, class AActor* HitActor, bool Success);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReopenPawnCollision();
	void RestartSimulating();
	void SetBounceVelocity(const struct FVector& Velocity);
	void ShowFuseIndicator();
	void Stop_Rotation();
	void UserConstructionScript();
	void WobbleOnStick__FinishedFunc();
	void WobbleOnStick__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_WaffleTruck_BoomSniper_C">();
	}
	static class AB_Prj_WaffleTruck_BoomSniper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_WaffleTruck_BoomSniper_C>();
	}
};
static_assert(alignof(AB_Prj_WaffleTruck_BoomSniper_C) == 0x000008, "Wrong alignment on AB_Prj_WaffleTruck_BoomSniper_C");
static_assert(sizeof(AB_Prj_WaffleTruck_BoomSniper_C) == 0x000D88, "Wrong size on AB_Prj_WaffleTruck_BoomSniper_C");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, UberGraphFrame) == 0x000B18, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Tracer) == 0x000B20, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Tracer' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, BP_SurfaceTypeSoundComponent) == 0x000B28, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::BP_SurfaceTypeSoundComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, AttachedFuseBlink) == 0x000B30, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::AttachedFuseBlink' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Mesh) == 0x000B38, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Arrow_Plunger) == 0x000B40, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Arrow_Plunger' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Trail) == 0x000B48, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Trail' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Beep) == 0x000B50, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Beep' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, RotatingMovement) == 0x000B58, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Fuse_Particle) == 0x000B60, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Fuse_Particle' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, GrenadeFuse_AudioComponent) == 0x000B68, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::GrenadeFuse_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, WobbleOnStick_WobbleCurve_3AC7CBFE4905C9469F8850ADBACDB9A3) == 0x000B70, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::WobbleOnStick_WobbleCurve_3AC7CBFE4905C9469F8850ADBACDB9A3' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, WobbleOnStick__Direction_3AC7CBFE4905C9469F8850ADBACDB9A3) == 0x000B74, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::WobbleOnStick__Direction_3AC7CBFE4905C9469F8850ADBACDB9A3' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, WobbleOnStick) == 0x000B78, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::WobbleOnStick' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, P_Explosion) == 0x000B80, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::P_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Cue_DistantSound) == 0x000B88, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Cue_DistantSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Cue_CloseSound) == 0x000B90, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Cue_CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, P_Explosion_Water) == 0x000B98, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::P_Explosion_Water' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, ExplosionRadius) == 0x000BA0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, ExplosionForceFeedbackNear) == 0x000BC8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::ExplosionForceFeedbackNear' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, ExplosionForceFeedbackFar) == 0x000BD0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::ExplosionForceFeedbackFar' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Cue_Stick) == 0x000BD8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Cue_Stick' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Beacon_Streak_Color__Friendly_) == 0x000BE0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Beacon_Streak_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Beacon_Streak_Color__Enemy_) == 0x000BF0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Beacon_Streak_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, IsDead_) == 0x000C00, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::IsDead_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Beacon_Core_Color__Friendly_) == 0x000C04, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Beacon_Core_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Beacon_Core_Color__Enemy_) == 0x000C14, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Beacon_Core_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, TimeBeforeExplode) == 0x000C28, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::TimeBeforeExplode' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, OffsetDistanceFromBone) == 0x000C50, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::OffsetDistanceFromBone' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, HitNormal) == 0x000C58, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::HitNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Audio_StuckToEnvironment) == 0x000C70, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Audio_StuckToEnvironment' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Audio_StuckToPlayer) == 0x000C78, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Audio_StuckToPlayer' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, IsSelfStickDelayOver_) == 0x000C80, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::IsSelfStickDelayOver_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, SelfStickDelay) == 0x000C84, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::SelfStickDelay' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, OffsetDistanceFromPhysicsMesh) == 0x000C88, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::OffsetDistanceFromPhysicsMesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, HitLocation) == 0x000C90, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::HitLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, bHasStopped) == 0x000CA8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::bHasStopped' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, EnemyMeshMaterial) == 0x000CB0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::EnemyMeshMaterial' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, FriendlyMeshMaterial) == 0x000CB8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::FriendlyMeshMaterial' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, TC_ActorTagsThatShouldExplodeOnOverlap) == 0x000CC0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::TC_ActorTagsThatShouldExplodeOnOverlap' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, bSimulationRunning) == 0x000CE0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::bSimulationRunning' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, StickToAllies) == 0x000CE1, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::StickToAllies' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Ignore) == 0x000CE8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Ignore' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Surface_Type) == 0x000D38, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Surface_Type' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, EnteredWater) == 0x000D39, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::EnteredWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, ProjectileGravityScale) == 0x000D40, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, StickToPlayers) == 0x000D68, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::StickToPlayers' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, SoundIndicatorIcon) == 0x000D70, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::SoundIndicatorIcon' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, FuseIndicatorTimer) == 0x000D78, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::FuseIndicatorTimer' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, StuckPawn) == 0x000D80, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::StuckPawn' has a wrong offset!");

}

