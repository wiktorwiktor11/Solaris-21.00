#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CP_PrincessCastle_LightParent

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CP_PrincessCastle_LightParent.CP_PrincessCastle_LightParent_C
// 0x0018 (0x0E88 - 0x0E70)
class ACP_PrincessCastle_LightParent_C : public ABuildingProp
{
public:
	class UStaticMeshComponent*                   GlowFlicker;                                       // 0x0E70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Light;                                             // 0x0E78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          UseGlowFlickerCard;                                // 0x0E80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetTimeOfDayBlueprintDefaultVariables(struct FTimeOfDayBlueprintDefaultVariables* OutVariables);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CP_PrincessCastle_LightParent_C">();
	}
	static class ACP_PrincessCastle_LightParent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACP_PrincessCastle_LightParent_C>();
	}
};
static_assert(alignof(ACP_PrincessCastle_LightParent_C) == 0x000008, "Wrong alignment on ACP_PrincessCastle_LightParent_C");
static_assert(sizeof(ACP_PrincessCastle_LightParent_C) == 0x000E88, "Wrong size on ACP_PrincessCastle_LightParent_C");
static_assert(offsetof(ACP_PrincessCastle_LightParent_C, GlowFlicker) == 0x000E70, "Member 'ACP_PrincessCastle_LightParent_C::GlowFlicker' has a wrong offset!");
static_assert(offsetof(ACP_PrincessCastle_LightParent_C, Light) == 0x000E78, "Member 'ACP_PrincessCastle_LightParent_C::Light' has a wrong offset!");
static_assert(offsetof(ACP_PrincessCastle_LightParent_C, UseGlowFlickerCard) == 0x000E80, "Member 'ACP_PrincessCastle_LightParent_C::UseGlowFlickerCard' has a wrong offset!");

}

