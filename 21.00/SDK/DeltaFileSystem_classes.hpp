#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeltaFileSystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "DeltaFileSystem_structs.hpp"


namespace SDK
{

// Class DeltaFileSystem.DeltaFile
// 0x0000 (0x0028 - 0x0028)
class IDeltaFile final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaFile">();
	}
	static class IDeltaFile* GetDefaultObj()
	{
		return GetDefaultObjImpl<IDeltaFile>();
	}
};
static_assert(alignof(IDeltaFile) == 0x000008, "Wrong alignment on IDeltaFile");
static_assert(sizeof(IDeltaFile) == 0x000028, "Wrong size on IDeltaFile");

// Class DeltaFileSystem.DeltaFileApplier
// 0x0000 (0x0028 - 0x0028)
class IDeltaFileApplier final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaFileApplier">();
	}
	static class IDeltaFileApplier* GetDefaultObj()
	{
		return GetDefaultObjImpl<IDeltaFileApplier>();
	}
};
static_assert(alignof(IDeltaFileApplier) == 0x000008, "Wrong alignment on IDeltaFileApplier");
static_assert(sizeof(IDeltaFileApplier) == 0x000028, "Wrong size on IDeltaFileApplier");

// Class DeltaFileSystem.DeltaComponent
// 0x0010 (0x00B0 - 0x00A0)
class UDeltaComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaComponent">();
	}
	static class UDeltaComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeltaComponent>();
	}
};
static_assert(alignof(UDeltaComponent) == 0x000008, "Wrong alignment on UDeltaComponent");
static_assert(sizeof(UDeltaComponent) == 0x0000B0, "Wrong size on UDeltaComponent");

// Class DeltaFileSystem.DeltaFileSaveHandler
// 0x00B8 (0x00E0 - 0x0028)
class UDeltaFileSaveHandler final : public UObject
{
public:
	uint8                                         Pad_28[0xB8];                                      // 0x0028(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaFileSaveHandler">();
	}
	static class UDeltaFileSaveHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeltaFileSaveHandler>();
	}
};
static_assert(alignof(UDeltaFileSaveHandler) == 0x000008, "Wrong alignment on UDeltaFileSaveHandler");
static_assert(sizeof(UDeltaFileSaveHandler) == 0x0000E0, "Wrong size on UDeltaFileSaveHandler");

// Class DeltaFileSystem.DeltaFileSaveHandlerTestContext
// 0x0008 (0x0030 - 0x0028)
class UDeltaFileSaveHandlerTestContext final : public UObject
{
public:
	class UDeltaFileSaveHandler*                  SaveHandler;                                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaFileSaveHandlerTestContext">();
	}
	static class UDeltaFileSaveHandlerTestContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeltaFileSaveHandlerTestContext>();
	}
};
static_assert(alignof(UDeltaFileSaveHandlerTestContext) == 0x000008, "Wrong alignment on UDeltaFileSaveHandlerTestContext");
static_assert(sizeof(UDeltaFileSaveHandlerTestContext) == 0x000030, "Wrong size on UDeltaFileSaveHandlerTestContext");
static_assert(offsetof(UDeltaFileSaveHandlerTestContext, SaveHandler) == 0x000028, "Member 'UDeltaFileSaveHandlerTestContext::SaveHandler' has a wrong offset!");

// Class DeltaFileSystem.DeltaFileSubsystem
// 0x00B8 (0x00E8 - 0x0030)
class UDeltaFileSubsystem final : public UEngineSubsystem
{
public:
	TMap<class UWorld*, struct FDeltaTrackingHandles> WorldToTrackingHandles;                            // 0x0030(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, class UObject*>             DeltaFiles;                                        // 0x0080(0x0050)(Transient, NativeAccessSpecifierPrivate)
	struct FSoftClassPath                         DefaultDeltaFileClass;                             // 0x00D0(0x0018)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaFileSubsystem">();
	}
	static class UDeltaFileSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeltaFileSubsystem>();
	}
};
static_assert(alignof(UDeltaFileSubsystem) == 0x000008, "Wrong alignment on UDeltaFileSubsystem");
static_assert(sizeof(UDeltaFileSubsystem) == 0x0000E8, "Wrong size on UDeltaFileSubsystem");
static_assert(offsetof(UDeltaFileSubsystem, WorldToTrackingHandles) == 0x000030, "Member 'UDeltaFileSubsystem::WorldToTrackingHandles' has a wrong offset!");
static_assert(offsetof(UDeltaFileSubsystem, DeltaFiles) == 0x000080, "Member 'UDeltaFileSubsystem::DeltaFiles' has a wrong offset!");
static_assert(offsetof(UDeltaFileSubsystem, DefaultDeltaFileClass) == 0x0000D0, "Member 'UDeltaFileSubsystem::DefaultDeltaFileClass' has a wrong offset!");

// Class DeltaFileSystem.MapDelta
// 0x00C8 (0x00F0 - 0x0028)
class UMapDelta final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PackageToApplyTo;                                  // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGuid, struct FAddAction>         AddActions;                                        // 0x0040(0x0050)(NativeAccessSpecifierPublic)
	TArray<struct FUpdateAction>                  UpdateActions;                                     // 0x0090(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FGuid, struct FDeleteAction>      DeleteActions;                                     // 0x00A0(0x0050)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MapDelta">();
	}
	static class UMapDelta* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMapDelta>();
	}
};
static_assert(alignof(UMapDelta) == 0x000008, "Wrong alignment on UMapDelta");
static_assert(sizeof(UMapDelta) == 0x0000F0, "Wrong size on UMapDelta");
static_assert(offsetof(UMapDelta, PackageToApplyTo) == 0x000030, "Member 'UMapDelta::PackageToApplyTo' has a wrong offset!");
static_assert(offsetof(UMapDelta, AddActions) == 0x000040, "Member 'UMapDelta::AddActions' has a wrong offset!");
static_assert(offsetof(UMapDelta, UpdateActions) == 0x000090, "Member 'UMapDelta::UpdateActions' has a wrong offset!");
static_assert(offsetof(UMapDelta, DeleteActions) == 0x0000A0, "Member 'UMapDelta::DeleteActions' has a wrong offset!");

// Class DeltaFileSystem.MapDeltaApplier
// 0x00C8 (0x00F0 - 0x0028)
class UMapDeltaApplier final : public UObject
{
public:
	uint8                                         Pad_28[0xC8];                                      // 0x0028(0x00C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MapDeltaApplier">();
	}
	static class UMapDeltaApplier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMapDeltaApplier>();
	}
};
static_assert(alignof(UMapDeltaApplier) == 0x000008, "Wrong alignment on UMapDeltaApplier");
static_assert(sizeof(UMapDeltaApplier) == 0x0000F0, "Wrong size on UMapDeltaApplier");

}

