#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnnualRefundTokenUI

#include "Basic.hpp"

#include "AnnualRefundTokenUI_classes.hpp"
#include "AnnualRefundTokenUI_parameters.hpp"


namespace SDK
{

// Function AnnualRefundTokenUI.FortAnnualRefundTicket.OnPlayLockingAnimation
// (Event, Public, BlueprintEvent)

void UFortAnnualRefundTicket::OnPlayLockingAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnnualRefundTicket", "OnPlayLockingAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AnnualRefundTokenUI.FortAnnualRefundTicket.OnUpdateAvailableState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsAvailable                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAnnualRefundTicket::OnUpdateAvailableState(const bool bIsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnnualRefundTicket", "OnUpdateAvailableState");

	Params::FortAnnualRefundTicket_OnUpdateAvailableState Parms{};

	Parms.bIsAvailable = bIsAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnnualRefundTokenUI.FortAnnualRefundTicket.OnUpdatePendingState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsPending                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAnnualRefundTicket::OnUpdatePendingState(const bool bIsPending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnnualRefundTicket", "OnUpdatePendingState");

	Params::FortAnnualRefundTicket_OnUpdatePendingState Parms{};

	Parms.bIsPending = bIsPending;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryEntry.OnSetHistory
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHasBeenRefunded                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsTokenlessRefund                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayerHasTokens                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryEntry::OnSetHistory(bool bHasBeenRefunded, bool bIsTokenlessRefund, bool bPlayerHasTokens)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryEntry", "OnSetHistory");

	Params::FortPurchaseHistoryEntry_OnSetHistory Parms{};

	Parms.bHasBeenRefunded = bHasBeenRefunded;
	Parms.bIsTokenlessRefund = bIsTokenlessRefund;
	Parms.bPlayerHasTokens = bPlayerHasTokens;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryEntry.SetPurchaseText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             PurchaseText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bHasBeenRefunded                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryEntry::SetPurchaseText(const class FText& PurchaseText, bool bHasBeenRefunded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryEntry", "SetPurchaseText");

	Params::FortPurchaseHistoryEntry_SetPurchaseText Parms{};

	Parms.PurchaseText = std::move(PurchaseText);
	Parms.bHasBeenRefunded = bHasBeenRefunded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryEntry.SetupItemCard
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCosmeticItemCard*            ItemCard                                               (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryEntry::SetupItemCard(const class UFortCosmeticItemCard* ItemCard, const class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryEntry", "SetupItemCard");

	Params::FortPurchaseHistoryEntry_SetupItemCard Parms{};

	Parms.ItemCard = ItemCard;
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryEntry.UpdateItemList
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UFortCosmeticItemCard*>    ItemCards                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryEntry::UpdateItemList(const TArray<class UFortCosmeticItemCard*>& ItemCards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryEntry", "UpdateItemList");

	Params::FortPurchaseHistoryEntry_UpdateItemList Parms{};

	Parms.ItemCards = std::move(ItemCards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.HandlePreviousStepAction
// (Final, Native, Private, BlueprintCallable)

void UFortPurchaseHistoryScreen::HandlePreviousStepAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "HandlePreviousStepAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.HandleTabButtonClicked
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EPurchaseReturnStep                     ClickedStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::HandleTabButtonClicked(EPurchaseReturnStep ClickedStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "HandleTabButtonClicked");

	Params::FortPurchaseHistoryScreen_HandleTabButtonClicked Parms{};

	Parms.ClickedStep = ClickedStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.OnBeginRefundSubmission
// (Event, Protected, BlueprintEvent)

void UFortPurchaseHistoryScreen::OnBeginRefundSubmission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnBeginRefundSubmission");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.OnEndRefundSubmission
// (Event, Protected, BlueprintEvent)

void UFortPurchaseHistoryScreen::OnEndRefundSubmission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnEndRefundSubmission");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.OnItemRefresh
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FMtxPurchaseHistory              PurchaseHistory                                        (Parm, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::OnItemRefresh(const struct FMtxPurchaseHistory& PurchaseHistory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnItemRefresh");

	Params::FortPurchaseHistoryScreen_OnItemRefresh Parms{};

	Parms.PurchaseHistory = std::move(PurchaseHistory);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.OnNoPurchasesAvailable
// (Event, Protected, BlueprintEvent)

void UFortPurchaseHistoryScreen::OnNoPurchasesAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnNoPurchasesAvailable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.OnOpenSubmitRequest
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelectionTokenlessRefundable                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::OnOpenSubmitRequest(bool bIsSelectionTokenlessRefundable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnOpenSubmitRequest");

	Params::FortPurchaseHistoryScreen_OnOpenSubmitRequest Parms{};

	Parms.bIsSelectionTokenlessRefundable = bIsSelectionTokenlessRefundable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.OnPopulateView
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPurchaseReturnStep                     CurrentStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::OnPopulateView(EPurchaseReturnStep CurrentStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnPopulateView");

	Params::FortPurchaseHistoryScreen_OnPopulateView Parms{};

	Parms.CurrentStep = CurrentStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.UpdateItemList
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UCommonTextBlock*>         ItemsToReturn                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::UpdateItemList(const TArray<class UCommonTextBlock*>& ItemsToReturn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "UpdateItemList");

	Params::FortPurchaseHistoryScreen_UpdateItemList Parms{};

	Parms.ItemsToReturn = std::move(ItemsToReturn);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.GetCurrentStep
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPurchaseReturnStep                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPurchaseReturnStep UFortPurchaseHistoryScreen::GetCurrentStep() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "GetCurrentStep");

	Params::FortPurchaseHistoryScreen_GetCurrentStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

