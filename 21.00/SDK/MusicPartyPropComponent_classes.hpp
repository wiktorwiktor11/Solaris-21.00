#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MusicPartyPropComponent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MusicPartyPropComponent.MusicPartyPropComponent_C
// 0x00A8 (0x0148 - 0x00A0)
class UMusicPartyPropComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USoundSourceBus*                        SourceBus;                                         // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SourceBusComponent;                                // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OnSpeakerDamagedSound;                             // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OnSpeakerDestroyedSound;                           // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OnAllSpeakersDestroyedSound;                       // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AutoStopFadeOutTime;                               // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           MusicEventTag;                                     // 0x00D4(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class ABuildingActor>>  SpeakerActors;                                     // 0x00D8(0x0010)(Edit, BlueprintVisible)
	TMulticastInlineDelegate<void(class AActor* Speaker_Actor)> OnSpeakerRemoved;                                  // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class AActor* Speaker_Actor)> OnSpeakerDamaged;                                  // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class AActor* Speaker_Actor)> OnAllSpeakersDestroyed;                            // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bAutoUpdateAudioPosition;                          // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAutoUpdateAudioSpread;                            // 0x0119(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABuildingActor*>                 SpeakerActorsResolved;                             // 0x0120(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, RepNotify)
	float                                         MaxDistancePadding;                                // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         GameState;                                         // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMusicPartyManagerComponent_C*          ManagerComponent;                                  // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateAudioAttenuation();
	void Stop_Party(float FadeOutDuration);
	void Start_Party(class UAudioComponent* Audio_Component);
	void SetupAutoActivate();
	void SetSourceBusComponent(class UAudioComponent* SourceBusComponent_0);
	void ResolveSpeakerActors();
	void RemoveSpeakerServer(const class ABuildingActor*& Speaker);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnSourceBusVirtualizationChanged(bool bIsVirtualized);
	void OnRep_SpeakerActorsResolved();
	void OnReady_96C85A044ED9A5029B7FE68338D3E70F(class AGameStateBase* GameState_0);
	void OnOwnerDeathEffectsClient(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDiedServer(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnDamagedServer(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnBuildingHealthChangedClient();
	void On_Speaker_Removed_Rep(const struct FVector& Location);
	void On_Speaker_Damaged_Rep(const struct FVector& Location);
	void On_All_Speakers_Removed_Rep(const struct FVector& Location);
	void IsOwnedByBuildingActor(bool* Result);
	void ExecuteUbergraph_MusicPartyPropComponent(int32 EntryPoint);
	void BindToSpeakerDestruction();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MusicPartyPropComponent_C">();
	}
	static class UMusicPartyPropComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicPartyPropComponent_C>();
	}
};
static_assert(alignof(UMusicPartyPropComponent_C) == 0x000008, "Wrong alignment on UMusicPartyPropComponent_C");
static_assert(sizeof(UMusicPartyPropComponent_C) == 0x000148, "Wrong size on UMusicPartyPropComponent_C");
static_assert(offsetof(UMusicPartyPropComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UMusicPartyPropComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, SourceBus) == 0x0000A8, "Member 'UMusicPartyPropComponent_C::SourceBus' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, SourceBusComponent) == 0x0000B0, "Member 'UMusicPartyPropComponent_C::SourceBusComponent' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, OnSpeakerDamagedSound) == 0x0000B8, "Member 'UMusicPartyPropComponent_C::OnSpeakerDamagedSound' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, OnSpeakerDestroyedSound) == 0x0000C0, "Member 'UMusicPartyPropComponent_C::OnSpeakerDestroyedSound' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, OnAllSpeakersDestroyedSound) == 0x0000C8, "Member 'UMusicPartyPropComponent_C::OnAllSpeakersDestroyedSound' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, AutoStopFadeOutTime) == 0x0000D0, "Member 'UMusicPartyPropComponent_C::AutoStopFadeOutTime' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, MusicEventTag) == 0x0000D4, "Member 'UMusicPartyPropComponent_C::MusicEventTag' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, SpeakerActors) == 0x0000D8, "Member 'UMusicPartyPropComponent_C::SpeakerActors' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, OnSpeakerRemoved) == 0x0000E8, "Member 'UMusicPartyPropComponent_C::OnSpeakerRemoved' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, OnSpeakerDamaged) == 0x0000F8, "Member 'UMusicPartyPropComponent_C::OnSpeakerDamaged' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, OnAllSpeakersDestroyed) == 0x000108, "Member 'UMusicPartyPropComponent_C::OnAllSpeakersDestroyed' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, bAutoUpdateAudioPosition) == 0x000118, "Member 'UMusicPartyPropComponent_C::bAutoUpdateAudioPosition' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, bAutoUpdateAudioSpread) == 0x000119, "Member 'UMusicPartyPropComponent_C::bAutoUpdateAudioSpread' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, SpeakerActorsResolved) == 0x000120, "Member 'UMusicPartyPropComponent_C::SpeakerActorsResolved' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, MaxDistancePadding) == 0x000130, "Member 'UMusicPartyPropComponent_C::MaxDistancePadding' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, GameState) == 0x000138, "Member 'UMusicPartyPropComponent_C::GameState' has a wrong offset!");
static_assert(offsetof(UMusicPartyPropComponent_C, ManagerComponent) == 0x000140, "Member 'UMusicPartyPropComponent_C::ManagerComponent' has a wrong offset!");

}

