#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Ostrich_Rocket

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Ostrich_Rocket.B_Prj_Ostrich_Rocket_C
// 0x00E8 (0x0AD8 - 0x09F0)
class AB_Prj_Ostrich_Rocket_C final : public AFortProjectile_DrunkHoming
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               _RocketTrailPS;                                    // 0x09F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_OstrichRocket;                                  // 0x0A00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Rocket_AudioComponent;                             // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Ribbon_Trail_PSC;                                  // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Ribbon_Trail_PS;                                   // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Explosion_Generic_PS;                              // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Explosion_Generic_PSC;                             // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Rocket_Projectile_Explosion_Sound;                 // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StopLocation;                                      // 0x0A38(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Explosion_Flesh_Damage_PS;                         // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StopRotZ;                                          // 0x0A58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               Explosion_Flesh_Damage_PSC;                        // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Rocket_Projectile_Explosion_Water_Sound;           // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tick_Delta;                                        // 0x0A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RocketSpinRate;                                    // 0x0A84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Explosion_Impact_Offset;                           // 0x0A88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8C[0x4];                                      // 0x0A8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RocketSpin;                                        // 0x0A90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TimerMaxReached_;                                  // 0x0AA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA9[0x7];                                      // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DecalLocation;                                     // 0x0AB0(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC9[0x3];                                      // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FeedbackCue;                                       // 0x0ACC(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Explosion_Water;                                   // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_Ostrich_Rocket(int32 EntryPoint);
	void FuseTimerMax();
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void OnHomingPassedTarget();
	void OnStop(const struct FHitResult& Hit);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Ostrich_Rocket_C">();
	}
	static class AB_Prj_Ostrich_Rocket_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Ostrich_Rocket_C>();
	}
};
static_assert(alignof(AB_Prj_Ostrich_Rocket_C) == 0x000008, "Wrong alignment on AB_Prj_Ostrich_Rocket_C");
static_assert(sizeof(AB_Prj_Ostrich_Rocket_C) == 0x000AD8, "Wrong size on AB_Prj_Ostrich_Rocket_C");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, UberGraphFrame) == 0x0009F0, "Member 'AB_Prj_Ostrich_Rocket_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, _RocketTrailPS) == 0x0009F8, "Member 'AB_Prj_Ostrich_Rocket_C::_RocketTrailPS' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, SM_OstrichRocket) == 0x000A00, "Member 'AB_Prj_Ostrich_Rocket_C::SM_OstrichRocket' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Rocket_AudioComponent) == 0x000A08, "Member 'AB_Prj_Ostrich_Rocket_C::Rocket_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Ribbon_Trail_PSC) == 0x000A10, "Member 'AB_Prj_Ostrich_Rocket_C::Ribbon_Trail_PSC' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Ribbon_Trail_PS) == 0x000A18, "Member 'AB_Prj_Ostrich_Rocket_C::Ribbon_Trail_PS' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Explosion_Generic_PS) == 0x000A20, "Member 'AB_Prj_Ostrich_Rocket_C::Explosion_Generic_PS' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Explosion_Generic_PSC) == 0x000A28, "Member 'AB_Prj_Ostrich_Rocket_C::Explosion_Generic_PSC' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Rocket_Projectile_Explosion_Sound) == 0x000A30, "Member 'AB_Prj_Ostrich_Rocket_C::Rocket_Projectile_Explosion_Sound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, StopLocation) == 0x000A38, "Member 'AB_Prj_Ostrich_Rocket_C::StopLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Explosion_Flesh_Damage_PS) == 0x000A50, "Member 'AB_Prj_Ostrich_Rocket_C::Explosion_Flesh_Damage_PS' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, StopRotZ) == 0x000A58, "Member 'AB_Prj_Ostrich_Rocket_C::StopRotZ' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Explosion_Flesh_Damage_PSC) == 0x000A70, "Member 'AB_Prj_Ostrich_Rocket_C::Explosion_Flesh_Damage_PSC' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Rocket_Projectile_Explosion_Water_Sound) == 0x000A78, "Member 'AB_Prj_Ostrich_Rocket_C::Rocket_Projectile_Explosion_Water_Sound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Tick_Delta) == 0x000A80, "Member 'AB_Prj_Ostrich_Rocket_C::Tick_Delta' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, RocketSpinRate) == 0x000A84, "Member 'AB_Prj_Ostrich_Rocket_C::RocketSpinRate' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Explosion_Impact_Offset) == 0x000A88, "Member 'AB_Prj_Ostrich_Rocket_C::Explosion_Impact_Offset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, RocketSpin) == 0x000A90, "Member 'AB_Prj_Ostrich_Rocket_C::RocketSpin' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, TimerMaxReached_) == 0x000AA8, "Member 'AB_Prj_Ostrich_Rocket_C::TimerMaxReached_' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, DecalLocation) == 0x000AB0, "Member 'AB_Prj_Ostrich_Rocket_C::DecalLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, SurfaceType) == 0x000AC8, "Member 'AB_Prj_Ostrich_Rocket_C::SurfaceType' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, FeedbackCue) == 0x000ACC, "Member 'AB_Prj_Ostrich_Rocket_C::FeedbackCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Ostrich_Rocket_C, Explosion_Water) == 0x000AD0, "Member 'AB_Prj_Ostrich_Rocket_C::Explosion_Water' has a wrong offset!");

}

