#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SquadLock_PlayerIndicator

#include "Basic.hpp"

#include "SquadLock_PlayerIndicator_classes.hpp"
#include "SquadLock_PlayerIndicator_parameters.hpp"


namespace SDK
{

// Function SquadLock_PlayerIndicator.SquadLock_PlayerIndicator_C.Update UI Player In Range State
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInRangeAndScanned                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInRangePendingScan                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USquadLock_PlayerIndicator_C::Update_UI_Player_In_Range_State(bool bInRangeAndScanned, bool bInRangePendingScan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_PlayerIndicator_C", "Update UI Player In Range State");

	Params::SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State Parms{};

	Parms.bInRangeAndScanned = bInRangeAndScanned;
	Parms.bInRangePendingScan = bInRangePendingScan;

	UObject::ProcessEvent(Func, &Parms);
}

}

