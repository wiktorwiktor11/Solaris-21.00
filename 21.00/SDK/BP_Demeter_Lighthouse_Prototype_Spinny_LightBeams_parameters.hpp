#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams.BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C.initializeMaterialParams
// 0x0070 (0x0070 - 0x0000)
struct BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams final
{
public:
	float                                         CallFunc_getValidatedConeLength_Cone_Length;       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getValidatedConeLength_Cone_Length_1;     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegTan_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegTan_ReturnValue_1;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegTan_ReturnValue_2;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams) == 0x000008, "Wrong alignment on BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams");
static_assert(sizeof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams) == 0x000070, "Wrong size on BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_getValidatedConeLength_Cone_Length) == 0x000000, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_getValidatedConeLength_Cone_Length' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_FMax_ReturnValue) == 0x000004, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_getValidatedConeLength_Cone_Length_1) == 0x00000C, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_getValidatedConeLength_Cone_Length_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_BreakColor_R) == 0x000010, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_BreakColor_G) == 0x000014, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_BreakColor_B) == 0x000018, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_BreakColor_A) == 0x00001C, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_DegTan_ReturnValue) == 0x000020, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_DegTan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_MakeColor_ReturnValue) == 0x000028, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000038, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_DegTan_ReturnValue_1) == 0x000050, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_DegTan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_DegTan_ReturnValue_2) == 0x000054, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_DegTan_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000058, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000064, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000068, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initializeMaterialParams::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams.BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C.initBeam
// 0x0070 (0x0070 - 0x0000)
struct BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getValidatedConeLength_Cone_Length;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlatformName_ReturnValue_1;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam) == 0x000008, "Wrong alignment on BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam");
static_assert(sizeof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam) == 0x000070, "Wrong size on BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x00001C, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_getValidatedConeLength_Cone_Length) == 0x000038, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_getValidatedConeLength_Cone_Length' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_MakeVector_ReturnValue_1) == 0x000040, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_GetPlatformName_ReturnValue_1) == 0x000058, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_GetPlatformName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x000068, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_initBeam::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");

// Function BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams.BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C.getValidatedConeLength
// 0x0024 (0x0024 - 0x0000)
struct BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength final
{
public:
	float                                         Cone_Length_0;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength) == 0x000004, "Wrong alignment on BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength");
static_assert(sizeof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength) == 0x000024, "Wrong size on BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength, Cone_Length_0) == 0x000000, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength::Cone_Length_0' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength, Temp_int_Variable) == 0x000004, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength, Temp_float_Variable) == 0x000008, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength, Temp_float_Variable_1) == 0x00000C, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength, Temp_float_Variable_2) == 0x000010, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength, Temp_float_Variable_3) == 0x000014, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue) == 0x000018, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength, K2Node_Select_Default) == 0x00001C, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_getValidatedConeLength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams.BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C.ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams
// 0x0004 (0x0004 - 0x0000)
struct BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams) == 0x000004, "Wrong alignment on BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams");
static_assert(sizeof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams) == 0x000004, "Wrong size on BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams, EntryPoint) == 0x000000, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_LightBeams::EntryPoint' has a wrong offset!");

}

