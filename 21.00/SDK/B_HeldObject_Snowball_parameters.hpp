#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_HeldObject_Snowball

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.BlowUp
// 0x0008 (0x0008 - 0x0000)
struct B_HeldObject_Snowball_C_BlowUp final
{
public:
	class AFortPlayerPawn*                        LastHolder_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_BlowUp) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_BlowUp");
static_assert(sizeof(B_HeldObject_Snowball_C_BlowUp) == 0x000008, "Wrong size on B_HeldObject_Snowball_C_BlowUp");
static_assert(offsetof(B_HeldObject_Snowball_C_BlowUp, LastHolder_0) == 0x000000, "Member 'B_HeldObject_Snowball_C_BlowUp::LastHolder_0' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.BlueprintOnInteract
// 0x0010 (0x0010 - 0x0000)
struct B_HeldObject_Snowball_C_BlueprintOnInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_BlueprintOnInteract) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_BlueprintOnInteract");
static_assert(sizeof(B_HeldObject_Snowball_C_BlueprintOnInteract) == 0x000010, "Wrong size on B_HeldObject_Snowball_C_BlueprintOnInteract");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintOnInteract, InteractingPawn) == 0x000000, "Member 'B_HeldObject_Snowball_C_BlueprintOnInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintOnInteract, InteractionBeingAttempted) == 0x000008, "Member 'B_HeldObject_Snowball_C_BlueprintOnInteract::InteractionBeingAttempted' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0110 (0x0110 - 0x0000)
struct B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000110, "Wrong size on B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'B_HeldObject_Snowball_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.DoDamageEffectTotarget
// 0x0008 (0x0008 - 0x0000)
struct B_HeldObject_Snowball_C_DoDamageEffectTotarget final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_DoDamageEffectTotarget) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_DoDamageEffectTotarget");
static_assert(sizeof(B_HeldObject_Snowball_C_DoDamageEffectTotarget) == 0x000008, "Wrong size on B_HeldObject_Snowball_C_DoDamageEffectTotarget");
static_assert(offsetof(B_HeldObject_Snowball_C_DoDamageEffectTotarget, HitActor) == 0x000000, "Member 'B_HeldObject_Snowball_C_DoDamageEffectTotarget::HitActor' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.EnterWater
// 0x0018 (0x0018 - 0x0000)
struct B_HeldObject_Snowball_C_EnterWater final
{
public:
	class AFortWaterBodyActor*                    WaterBody;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         WaterInteractionComponent;                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstBody;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_EnterWater) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_EnterWater");
static_assert(sizeof(B_HeldObject_Snowball_C_EnterWater) == 0x000018, "Wrong size on B_HeldObject_Snowball_C_EnterWater");
static_assert(offsetof(B_HeldObject_Snowball_C_EnterWater, WaterBody) == 0x000000, "Member 'B_HeldObject_Snowball_C_EnterWater::WaterBody' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_EnterWater, WaterInteractionComponent) == 0x000008, "Member 'B_HeldObject_Snowball_C_EnterWater::WaterInteractionComponent' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_EnterWater, bIsFirstBody) == 0x000010, "Member 'B_HeldObject_Snowball_C_EnterWater::bIsFirstBody' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.EventSnowballDeath
// 0x0060 (0x0060 - 0x0000)
struct B_HeldObject_Snowball_C_EventSnowballDeath final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Momentum;                                          // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_EventSnowballDeath) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_EventSnowballDeath");
static_assert(sizeof(B_HeldObject_Snowball_C_EventSnowballDeath) == 0x000060, "Wrong size on B_HeldObject_Snowball_C_EventSnowballDeath");
static_assert(offsetof(B_HeldObject_Snowball_C_EventSnowballDeath, DamagedActor) == 0x000000, "Member 'B_HeldObject_Snowball_C_EventSnowballDeath::DamagedActor' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_EventSnowballDeath, Damage) == 0x000008, "Member 'B_HeldObject_Snowball_C_EventSnowballDeath::Damage' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_EventSnowballDeath, InstigatedBy) == 0x000010, "Member 'B_HeldObject_Snowball_C_EventSnowballDeath::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_EventSnowballDeath, DamageCauser) == 0x000018, "Member 'B_HeldObject_Snowball_C_EventSnowballDeath::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_EventSnowballDeath, HitLocation) == 0x000020, "Member 'B_HeldObject_Snowball_C_EventSnowballDeath::HitLocation' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_EventSnowballDeath, FHitComponent) == 0x000038, "Member 'B_HeldObject_Snowball_C_EventSnowballDeath::FHitComponent' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_EventSnowballDeath, BoneName) == 0x000040, "Member 'B_HeldObject_Snowball_C_EventSnowballDeath::BoneName' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_EventSnowballDeath, Momentum) == 0x000048, "Member 'B_HeldObject_Snowball_C_EventSnowballDeath::Momentum' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.ExecuteUbergraph_B_HeldObject_Snowball
// 0x0880 (0x0880 - 0x0000)
struct B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0048(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_CustomEvent_DamagedActor_1;                 // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_1;                       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy_1;                 // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser_1;                 // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation_1;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent_1;                // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName_1;                     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Momentum_1;                     // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate;              // 0x02E8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue_1;       // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x0360(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0388(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0390(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AFortPawn*                        K2Node_Event_InteractingPawn;                      // 0x0408(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    K2Node_Event_InteractionBeingAttempted;            // 0x0410(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0412(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413[0x5];                                      // 0x0413(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWaterBodyActor*                    K2Node_CustomEvent_WaterBody;                      // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         K2Node_CustomEvent_WaterInteractionComponent;      // 0x0430(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsFirstBody;                   // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_CustomEvent_Instigator;                     // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInWater_ReturnValue;                    // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0450(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_CustomEvent_LastHolder;                     // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0490(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent, bool bIsFirstBody)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0498(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x04A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x04B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x04B8(0x0010)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x04E8(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0520(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0610(0x0018)()
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62A[0x6];                                      // 0x062A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0648(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue_1;           // 0x0650(0x0010)()
	TDelegate<void(class AActor* HitActor)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0660(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C[0x4];                                      // 0x066C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WasCancelled;                   // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_679[0x7];                                      // 0x0679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x06A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x06B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              K2Node_Select_Default_1;                           // 0x06D0(0x0010)(ConstParm)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_3;  // 0x06F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_FortApplyGameplayEffectToTarget_ReturnValue; // 0x0718(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_4;  // 0x0728(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0730(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_2;           // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749[0x7];                                      // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Athena_Wumba_C*                      K2Node_DynamicCast_AsB_Athena_Wumba;               // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterByLOS_ReturnValue;                  // 0x075A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75B[0x1];                                      // 0x075B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool* ShouldCancel)>           K2Node_CreateDelegate_OutputDelegate_4;            // 0x075C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool WasCancelled)>            K2Node_CreateDelegate_OutputDelegate_5;            // 0x0768(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77C[0x4];                                      // 0x077C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0798(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball");
static_assert(sizeof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball) == 0x000880, "Wrong size on B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, EntryPoint) == 0x000000, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, Temp_bool_Variable) == 0x000004, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, Temp_object_Variable) == 0x000008, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_ComponentBoundEvent_HitComponent) == 0x000018, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_ComponentBoundEvent_OtherActor) == 0x000020, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_ComponentBoundEvent_OtherComp) == 0x000028, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000030, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_ComponentBoundEvent_Hit) == 0x000048, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_DamagedActor_1) == 0x000128, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_DamagedActor_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_Damage_1) == 0x000130, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_Damage_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_InstigatedBy_1) == 0x000138, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_DamageCauser_1) == 0x000140, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_HitLocation_1) == 0x000148, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_HitLocation_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_FHitComponent_1) == 0x000160, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_FHitComponent_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_BoneName_1) == 0x000168, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_BoneName_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_Momentum_1) == 0x000170, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_Momentum_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_bBlockingHit) == 0x000188, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_bInitialOverlap) == 0x000189, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_Time) == 0x00018C, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_Distance) == 0x000190, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_Location) == 0x000198, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_ImpactPoint) == 0x0001B0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_Normal) == 0x0001C8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_PhysMat) == 0x0001F8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_HitActor) == 0x000200, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_HitComponent) == 0x000208, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_HitBoneName) == 0x000210, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_BoneName) == 0x000214, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_ElementIndex) == 0x00021C, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_FaceIndex) == 0x000220, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_TraceStart) == 0x000228, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000258, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000270, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000288, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0002A0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0002B8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002D0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CreateDelegate_OutputDelegate) == 0x0002E8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetComponentScale_ReturnValue_1) == 0x0002F8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetComponentScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x000310, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_DamagedActor) == 0x000328, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_Damage) == 0x000330, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_InstigatedBy) == 0x000338, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_DamageCauser) == 0x000340, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_HitLocation) == 0x000348, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_FHitComponent) == 0x000360, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_BoneName) == 0x000368, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_Momentum) == 0x000370, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_Momentum' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000388, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CreateDelegate_OutputDelegate_1) == 0x000390, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, Temp_object_Variable_1) == 0x0003A0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0003A8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0003C0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0003D8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakVector_X) == 0x0003F0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakVector_Y) == 0x0003F4, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakVector_Z) == 0x0003F8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakVector_X_1) == 0x0003FC, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakVector_Y_1) == 0x000400, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BreakVector_Z_1) == 0x000404, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Event_InteractingPawn) == 0x000408, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Event_InteractionBeingAttempted) == 0x000410, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Event_InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_IsServer_ReturnValue) == 0x000411, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_SwitchEnum_CmpSuccess) == 0x000412, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000418, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_bSuccess) == 0x000420, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, Temp_bool_Has_Been_Initd_Variable) == 0x000421, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_WaterBody) == 0x000428, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_WaterBody' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_WaterInteractionComponent) == 0x000430, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_WaterInteractionComponent' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_bIsFirstBody) == 0x000438, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_bIsFirstBody' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_Instigator) == 0x000440, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_Instigator' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_IsValid_ReturnValue) == 0x000448, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_IsInWater_ReturnValue) == 0x000449, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_IsInWater_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000450, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_LastHolder) == 0x000458, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_LastHolder' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, Temp_object_Variable_2) == 0x000460, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, Temp_bool_Variable_1) == 0x000468, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000470, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Select_Default) == 0x000488, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000490, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CreateDelegate_OutputDelegate_2) == 0x000498, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x0004A8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x0004B0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x0004B8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x0004C8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Event_Damage) == 0x0004E0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Event_DamageTags) == 0x0004E8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Event_Momentum) == 0x000508, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Event_HitInfo) == 0x000520, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Event_InstigatedBy) == 0x000600, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Event_DamageCauser) == 0x000608, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Event_EffectContext) == 0x000610, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, Temp_bool_IsClosed_Variable) == 0x000628, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_IsValid_ReturnValue_1) == 0x000629, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetPawn_ReturnValue) == 0x000630, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x000638, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_bSuccess_1) == 0x000640, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000648, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_MakeOutgoingSpec_ReturnValue_1) == 0x000650, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_MakeOutgoingSpec_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CreateDelegate_OutputDelegate_3) == 0x000660, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_HitActor) == 0x000670, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CustomEvent_WasCancelled) == 0x000678, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CustomEvent_WasCancelled' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_AsFort_Pawn) == 0x000680, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_bSuccess_2) == 0x000688, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x000690, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_bSuccess_3) == 0x000698, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x0006A0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0006B8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_Select_Default_1) == 0x0006D0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_Normal_ReturnValue) == 0x0006E0, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_GetAbilitySystemComponent_ReturnValue_3) == 0x0006F8, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_GetAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000700, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BP_FortApplyGameplayEffectToTarget_ReturnValue) == 0x000718, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BP_FortApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_IsValid_ReturnValue_2) == 0x000720, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_GetAbilitySystemComponent_ReturnValue_4) == 0x000728, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_GetAbilitySystemComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000730, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_OnSameTeam_ReturnValue) == 0x000738, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_AsFort_Player_Pawn_2) == 0x000740, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_AsFort_Player_Pawn_2' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_bSuccess_4) == 0x000748, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_AsB_Athena_Wumba) == 0x000750, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_AsB_Athena_Wumba' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_DynamicCast_bSuccess_5) == 0x000758, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_BooleanAND_ReturnValue) == 0x000759, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_FilterByLOS_ReturnValue) == 0x00075A, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_FilterByLOS_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CreateDelegate_OutputDelegate_4) == 0x00075C, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, K2Node_CreateDelegate_OutputDelegate_5) == 0x000768, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000774, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_Add_FloatFloat_ReturnValue) == 0x000778, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_MakeVector_ReturnValue) == 0x000780, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000798, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000878, "Member 'B_HeldObject_Snowball_C_ExecuteUbergraph_B_HeldObject_Snowball::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.FilterByLOS
// 0x0060 (0x0060 - 0x0000)
struct B_HeldObject_Snowball_C_FilterByLOS final
{
public:
	class AActor*                                 ActorToCheck;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLineOfSightToActorWithChannel_ReturnValue; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_FilterByLOS) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_FilterByLOS");
static_assert(sizeof(B_HeldObject_Snowball_C_FilterByLOS) == 0x000060, "Wrong size on B_HeldObject_Snowball_C_FilterByLOS");
static_assert(offsetof(B_HeldObject_Snowball_C_FilterByLOS, ActorToCheck) == 0x000000, "Member 'B_HeldObject_Snowball_C_FilterByLOS::ActorToCheck' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_FilterByLOS, ReturnValue) == 0x000008, "Member 'B_HeldObject_Snowball_C_FilterByLOS::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_FilterByLOS, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'B_HeldObject_Snowball_C_FilterByLOS::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_FilterByLOS, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'B_HeldObject_Snowball_C_FilterByLOS::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_FilterByLOS, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'B_HeldObject_Snowball_C_FilterByLOS::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_FilterByLOS, CallFunc_CheckLineOfSightToActorWithChannel_ReturnValue) == 0x000058, "Member 'B_HeldObject_Snowball_C_FilterByLOS::CallFunc_CheckLineOfSightToActorWithChannel_ReturnValue' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.OnDamageCancelled
// 0x0001 (0x0001 - 0x0000)
struct B_HeldObject_Snowball_C_OnDamageCancelled final
{
public:
	bool                                          ShouldCancel;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_OnDamageCancelled) == 0x000001, "Wrong alignment on B_HeldObject_Snowball_C_OnDamageCancelled");
static_assert(sizeof(B_HeldObject_Snowball_C_OnDamageCancelled) == 0x000001, "Wrong size on B_HeldObject_Snowball_C_OnDamageCancelled");
static_assert(offsetof(B_HeldObject_Snowball_C_OnDamageCancelled, ShouldCancel) == 0x000000, "Member 'B_HeldObject_Snowball_C_OnDamageCancelled::ShouldCancel' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.OnDamageCompleted
// 0x0001 (0x0001 - 0x0000)
struct B_HeldObject_Snowball_C_OnDamageCompleted final
{
public:
	bool                                          WasCancelled;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_OnDamageCompleted) == 0x000001, "Wrong alignment on B_HeldObject_Snowball_C_OnDamageCompleted");
static_assert(sizeof(B_HeldObject_Snowball_C_OnDamageCompleted) == 0x000001, "Wrong size on B_HeldObject_Snowball_C_OnDamageCompleted");
static_assert(offsetof(B_HeldObject_Snowball_C_OnDamageCompleted, WasCancelled) == 0x000000, "Member 'B_HeldObject_Snowball_C_OnDamageCompleted::WasCancelled' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.OnDeathServer
// 0x0148 (0x0148 - 0x0000)
struct B_HeldObject_Snowball_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(B_HeldObject_Snowball_C_OnDeathServer) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_OnDeathServer");
static_assert(sizeof(B_HeldObject_Snowball_C_OnDeathServer) == 0x000148, "Wrong size on B_HeldObject_Snowball_C_OnDeathServer");
static_assert(offsetof(B_HeldObject_Snowball_C_OnDeathServer, Damage) == 0x000000, "Member 'B_HeldObject_Snowball_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnDeathServer, DamageTags) == 0x000008, "Member 'B_HeldObject_Snowball_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnDeathServer, Momentum) == 0x000028, "Member 'B_HeldObject_Snowball_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnDeathServer, HitInfo) == 0x000040, "Member 'B_HeldObject_Snowball_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnDeathServer, InstigatedBy) == 0x000120, "Member 'B_HeldObject_Snowball_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnDeathServer, DamageCauser) == 0x000128, "Member 'B_HeldObject_Snowball_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnDeathServer, EffectContext) == 0x000130, "Member 'B_HeldObject_Snowball_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.OnHit
// 0x0060 (0x0060 - 0x0000)
struct B_HeldObject_Snowball_C_OnHit final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Momentum;                                          // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_OnHit) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_OnHit");
static_assert(sizeof(B_HeldObject_Snowball_C_OnHit) == 0x000060, "Wrong size on B_HeldObject_Snowball_C_OnHit");
static_assert(offsetof(B_HeldObject_Snowball_C_OnHit, DamagedActor) == 0x000000, "Member 'B_HeldObject_Snowball_C_OnHit::DamagedActor' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnHit, Damage) == 0x000008, "Member 'B_HeldObject_Snowball_C_OnHit::Damage' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnHit, InstigatedBy) == 0x000010, "Member 'B_HeldObject_Snowball_C_OnHit::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnHit, DamageCauser) == 0x000018, "Member 'B_HeldObject_Snowball_C_OnHit::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnHit, HitLocation) == 0x000020, "Member 'B_HeldObject_Snowball_C_OnHit::HitLocation' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnHit, FHitComponent) == 0x000038, "Member 'B_HeldObject_Snowball_C_OnHit::FHitComponent' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnHit, BoneName) == 0x000040, "Member 'B_HeldObject_Snowball_C_OnHit::BoneName' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_OnHit, Momentum) == 0x000048, "Member 'B_HeldObject_Snowball_C_OnHit::Momentum' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.Server Only Handle Attach To Vehicle
// 0x0020 (0x0020 - 0x0000)
struct B_HeldObject_Snowball_C_Server_Only_Handle_Attach_To_Vehicle final
{
public:
	struct FVector                                HitLoc;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponentToAttachTo_0;                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_Server_Only_Handle_Attach_To_Vehicle) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_Server_Only_Handle_Attach_To_Vehicle");
static_assert(sizeof(B_HeldObject_Snowball_C_Server_Only_Handle_Attach_To_Vehicle) == 0x000020, "Wrong size on B_HeldObject_Snowball_C_Server_Only_Handle_Attach_To_Vehicle");
static_assert(offsetof(B_HeldObject_Snowball_C_Server_Only_Handle_Attach_To_Vehicle, HitLoc) == 0x000000, "Member 'B_HeldObject_Snowball_C_Server_Only_Handle_Attach_To_Vehicle::HitLoc' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_Server_Only_Handle_Attach_To_Vehicle, HitComponentToAttachTo_0) == 0x000018, "Member 'B_HeldObject_Snowball_C_Server_Only_Handle_Attach_To_Vehicle::HitComponentToAttachTo_0' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.Server Only Handle Player Controller OnUnPossess
// 0x0008 (0x0008 - 0x0000)
struct B_HeldObject_Snowball_C_Server_Only_Handle_Player_Controller_OnUnPossess final
{
public:
	class APawn*                                  PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_Server_Only_Handle_Player_Controller_OnUnPossess) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_Server_Only_Handle_Player_Controller_OnUnPossess");
static_assert(sizeof(B_HeldObject_Snowball_C_Server_Only_Handle_Player_Controller_OnUnPossess) == 0x000008, "Wrong size on B_HeldObject_Snowball_C_Server_Only_Handle_Player_Controller_OnUnPossess");
static_assert(offsetof(B_HeldObject_Snowball_C_Server_Only_Handle_Player_Controller_OnUnPossess, PlayerPawn) == 0x000000, "Member 'B_HeldObject_Snowball_C_Server_Only_Handle_Player_Controller_OnUnPossess::PlayerPawn' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.SetInstigator
// 0x0008 (0x0008 - 0x0000)
struct B_HeldObject_Snowball_C_SetInstigator final
{
public:
	class AFortPlayerPawn*                        Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_SetInstigator) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_SetInstigator");
static_assert(sizeof(B_HeldObject_Snowball_C_SetInstigator) == 0x000008, "Wrong size on B_HeldObject_Snowball_C_SetInstigator");
static_assert(offsetof(B_HeldObject_Snowball_C_SetInstigator, Instigator_0) == 0x000000, "Member 'B_HeldObject_Snowball_C_SetInstigator::Instigator_0' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.BlueprintCanInteract
// 0x0058 (0x0058 - 0x0000)
struct B_HeldObject_Snowball_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             InteractionType;                                   // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanInteract_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HeldObject_Snowball_C_BlueprintCanInteract) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_BlueprintCanInteract");
static_assert(sizeof(B_HeldObject_Snowball_C_BlueprintCanInteract) == 0x000058, "Wrong size on B_HeldObject_Snowball_C_BlueprintCanInteract");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, InteractionBeingAttempted) == 0x000008, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, InteractionType) == 0x000009, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, ReturnValue) == 0x00000A, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000010, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000020, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000028, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000038, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000040, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_Not_PreBool_ReturnValue_1) == 0x000049, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_CanInteract_ReturnValue) == 0x00004A, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_CanInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_VSize_ReturnValue) == 0x00004C, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000051, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_BooleanAND_ReturnValue_1) == 0x000052, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintCanInteract, CallFunc_BooleanAND_ReturnValue_2) == 0x000053, "Member 'B_HeldObject_Snowball_C_BlueprintCanInteract::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function B_HeldObject_Snowball.B_HeldObject_Snowball_C.BlueprintGetInteractionString
// 0x0028 (0x0028 - 0x0000)
struct B_HeldObject_Snowball_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(B_HeldObject_Snowball_C_BlueprintGetInteractionString) == 0x000008, "Wrong alignment on B_HeldObject_Snowball_C_BlueprintGetInteractionString");
static_assert(sizeof(B_HeldObject_Snowball_C_BlueprintGetInteractionString) == 0x000028, "Wrong size on B_HeldObject_Snowball_C_BlueprintGetInteractionString");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'B_HeldObject_Snowball_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintGetInteractionString, InteractionBeingAttempted) == 0x000008, "Member 'B_HeldObject_Snowball_C_BlueprintGetInteractionString::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_HeldObject_Snowball_C_BlueprintGetInteractionString, ReturnValue) == 0x000010, "Member 'B_HeldObject_Snowball_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");

}

