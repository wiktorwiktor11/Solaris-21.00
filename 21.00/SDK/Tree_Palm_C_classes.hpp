#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tree_Palm_C

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Parent_Tree_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Tree_Palm_C.Tree_Palm_C_C
// 0x0020 (0x0FA0 - 0x0F80)
class ATree_Palm_C_C final : public AParent_Tree_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Tree_Palm_C_C;                      // 0x0F78(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          HasBugs;                                           // 0x0F80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_F81[0x3];                                      // 0x0F81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UseLightningBug;                                   // 0x0F84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                BugOffset;                                         // 0x0F88(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Tree_Palm_C(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Tree_Palm_C_C">();
	}
	static class ATree_Palm_C_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATree_Palm_C_C>();
	}
};
static_assert(alignof(ATree_Palm_C_C) == 0x000010, "Wrong alignment on ATree_Palm_C_C");
static_assert(sizeof(ATree_Palm_C_C) == 0x000FA0, "Wrong size on ATree_Palm_C_C");
static_assert(offsetof(ATree_Palm_C_C, UberGraphFrame_Tree_Palm_C_C) == 0x000F78, "Member 'ATree_Palm_C_C::UberGraphFrame_Tree_Palm_C_C' has a wrong offset!");
static_assert(offsetof(ATree_Palm_C_C, HasBugs) == 0x000F80, "Member 'ATree_Palm_C_C::HasBugs' has a wrong offset!");
static_assert(offsetof(ATree_Palm_C_C, UseLightningBug) == 0x000F84, "Member 'ATree_Palm_C_C::UseLightningBug' has a wrong offset!");
static_assert(offsetof(ATree_Palm_C_C, BugOffset) == 0x000F88, "Member 'ATree_Palm_C_C::BugOffset' has a wrong offset!");

}

