#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuartzMusicTrackComponent_ButterCake

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "QuartzMusicTrackComponent_DataTracker_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass QuartzMusicTrackComponent_ButterCake.QuartzMusicTrackComponent_ButterCake_C
// 0x0040 (0x0210 - 0x01D0)
class UQuartzMusicTrackComponent_ButterCake_C final : public UQuartzMusicTrackComponent_DataTracker_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_QuartzMusicTrackComponent_ButterCake_C; // 0x01D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           AggressiveEvent_Tag;                               // 0x01D8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             StartAggroStinger;                                 // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             EndAggroStinger;                                   // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAggroStartPlayed;                                 // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAggroEndPlayed;                                   // 0x01F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AggroValue;                                        // 0x01F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        StartAggroComponent;                               // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        EndAggroComponent;                                 // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           UnawareEvent_Tag;                                  // 0x0208(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         UnwareValue;                                       // 0x020C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateStingerVolumes();
	void OnRep_AggroValue();
	void OnDataTrackerUpdate();
	void OnAggroStart();
	void OnAggroEnd();
	void On_Changed_Has_Any_Event_Value(class UFortGameplayDataTrackerComponent* DataTrackerComponent_0, bool bHasEventValues);
	void ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuartzMusicTrackComponent_ButterCake_C">();
	}
	static class UQuartzMusicTrackComponent_ButterCake_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuartzMusicTrackComponent_ButterCake_C>();
	}
};
static_assert(alignof(UQuartzMusicTrackComponent_ButterCake_C) == 0x000008, "Wrong alignment on UQuartzMusicTrackComponent_ButterCake_C");
static_assert(sizeof(UQuartzMusicTrackComponent_ButterCake_C) == 0x000210, "Wrong size on UQuartzMusicTrackComponent_ButterCake_C");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, UberGraphFrame_QuartzMusicTrackComponent_ButterCake_C) == 0x0001D0, "Member 'UQuartzMusicTrackComponent_ButterCake_C::UberGraphFrame_QuartzMusicTrackComponent_ButterCake_C' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, AggressiveEvent_Tag) == 0x0001D8, "Member 'UQuartzMusicTrackComponent_ButterCake_C::AggressiveEvent_Tag' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, StartAggroStinger) == 0x0001E0, "Member 'UQuartzMusicTrackComponent_ButterCake_C::StartAggroStinger' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, EndAggroStinger) == 0x0001E8, "Member 'UQuartzMusicTrackComponent_ButterCake_C::EndAggroStinger' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, bAggroStartPlayed) == 0x0001F0, "Member 'UQuartzMusicTrackComponent_ButterCake_C::bAggroStartPlayed' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, bAggroEndPlayed) == 0x0001F1, "Member 'UQuartzMusicTrackComponent_ButterCake_C::bAggroEndPlayed' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, AggroValue) == 0x0001F4, "Member 'UQuartzMusicTrackComponent_ButterCake_C::AggroValue' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, StartAggroComponent) == 0x0001F8, "Member 'UQuartzMusicTrackComponent_ButterCake_C::StartAggroComponent' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, EndAggroComponent) == 0x000200, "Member 'UQuartzMusicTrackComponent_ButterCake_C::EndAggroComponent' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, UnawareEvent_Tag) == 0x000208, "Member 'UQuartzMusicTrackComponent_ButterCake_C::UnawareEvent_Tag' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_ButterCake_C, UnwareValue) == 0x00020C, "Member 'UQuartzMusicTrackComponent_ButterCake_C::UnwareValue' has a wrong offset!");

}

