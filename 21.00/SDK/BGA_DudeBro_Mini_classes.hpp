#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_DudeBro_Mini

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_DudeBro_Mini.BGA_DudeBro_Mini_C
// 0x0258 (0x0BC8 - 0x0970)
class ABGA_DudeBro_Mini_C : public AFortAthenaLowGravZone
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0970(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        LoopingAmbAudio;                                   // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GeyserSteamBottom;                               // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GeyserSteam;                                     // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_FX_GeyserCone;                                   // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CorruptedVent_A;                                // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x09A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Grow_Lerp_Control_4CC9621E45AEA6FFC645F1904E950F8D; // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Grow__Direction_4CC9621E45AEA6FFC645F1904E950F8D;  // 0x09AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AD[0x3];                                      // 0x09AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Grow;                                              // 0x09B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity;                                           // 0x09B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC[0x4];                                      // 0x09BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   MeshComponent;                                     // 0x09C0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PrintingEffect;                                    // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               RuneAmbientEffect;                                 // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebrisSpawnRateScale;                              // 0x09D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmokeSpawnRateScale;                               // 0x09DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmberSpawnRateScale;                               // 0x09E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GlowSpawnRateScale;                                // 0x09E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebrisReset;                                       // 0x09E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9EC[0x4];                                      // 0x09EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         TraceGroundIgnoredActors;                          // 0x09F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          IsAtRune;                                          // 0x0A00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A01[0x7];                                      // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GroundLocation;                                    // 0x0A08(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableSafeZone;                                    // 0x0A20(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A21[0x3];                                      // 0x0A21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ZeroGravPrj;                                       // 0x0A24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CubeLookDirection;                                 // 0x0A28(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Overlaps;                                          // 0x0A40(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AActor*                                 ZapTarget;                                         // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DirectionToPlayer;                                 // 0x0A58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEndLocation;                                  // 0x0A70(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceStartLocation;                                // 0x0A88(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceMaxDistance;                                  // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA4[0x4];                                      // 0x0AA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TraceHitLocation;                                  // 0x0AA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceHitNormal;                                    // 0x0AC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        ZapInstigator;                                     // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         CubeZapStrength;                                   // 0x0AE0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          TraceDown;                                         // 0x0B08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B09[0x3];                                      // 0x0B09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Base_Bubbling_Mesh_Color;                          // 0x0B0C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Geyser_Illuminated_Mesh_Color;                     // 0x0B1C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0B2C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2D[0x3];                                      // 0x0B2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GeyserContrast;                                    // 0x0B30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpwardLaunchVelocity;                              // 0x0B34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnActivate;                                   // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnDeactivate;                                 // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBoost;                                       // 0x0B48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowEffects;                                      // 0x0B49(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisabled;                                        // 0x0B4A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          EnabledLive;                                       // 0x0B4B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4C[0x4];                                      // 0x0B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Vent_1_loc;                                        // 0x0B50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartDisabledOffset;                               // 0x0B68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterLaunchVelocity;                           // 0x0B6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ZOverride;                                         // 0x0B70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          XYOverride;                                        // 0x0B71(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B72[0x6];                                      // 0x0B72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SavedConeScale;                                    // 0x0B78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VolcanoCue;                                        // 0x0B90(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VentCue;                                           // 0x0B94(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 VehicleActor;                                      // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EditParticleSystems;                               // 0x0BA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA1[0x7];                                      // 0x0BA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_IgnoreVent;                                     // 0x0BA8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ActiveGeyser();
	void BndEvt__S_FX_GeyserCone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__S_FX_GeyserCone_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void DeactivateGeyser();
	void ExecuteUbergraph_BGA_DudeBro_Mini(int32 EntryPoint);
	void GeiserTimeout();
	void Grow__FinishedFunc();
	void Grow__UpdateFunc();
	void OnReady_4FB5731B488F3EF6AE379C861ACDFAB8();
	void OnRep_IsActive();
	void OnRep_IsDisabled();
	void ProjEnter(class AFortProjectileBase* Projectile);
	void ProjExit(class AFortProjectileBase* Projectile);
	void ReceiveBeginPlay();
	void SetGeiserActive();
	void ToyEnter(class APhysicsBall_Master_C* Projectile);
	void ToyExit(class APhysicsBall_Master_C* Projectile);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_DudeBro_Mini_C">();
	}
	static class ABGA_DudeBro_Mini_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_DudeBro_Mini_C>();
	}
};
static_assert(alignof(ABGA_DudeBro_Mini_C) == 0x000008, "Wrong alignment on ABGA_DudeBro_Mini_C");
static_assert(sizeof(ABGA_DudeBro_Mini_C) == 0x000BC8, "Wrong size on ABGA_DudeBro_Mini_C");
static_assert(offsetof(ABGA_DudeBro_Mini_C, UberGraphFrame) == 0x000970, "Member 'ABGA_DudeBro_Mini_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, LoopingAmbAudio) == 0x000978, "Member 'ABGA_DudeBro_Mini_C::LoopingAmbAudio' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, P_GeyserSteamBottom) == 0x000980, "Member 'ABGA_DudeBro_Mini_C::P_GeyserSteamBottom' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, P_GeyserSteam) == 0x000988, "Member 'ABGA_DudeBro_Mini_C::P_GeyserSteam' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, S_FX_GeyserCone) == 0x000990, "Member 'ABGA_DudeBro_Mini_C::S_FX_GeyserCone' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, SM_CorruptedVent_A) == 0x000998, "Member 'ABGA_DudeBro_Mini_C::SM_CorruptedVent_A' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Scene) == 0x0009A0, "Member 'ABGA_DudeBro_Mini_C::Scene' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Grow_Lerp_Control_4CC9621E45AEA6FFC645F1904E950F8D) == 0x0009A8, "Member 'ABGA_DudeBro_Mini_C::Grow_Lerp_Control_4CC9621E45AEA6FFC645F1904E950F8D' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Grow__Direction_4CC9621E45AEA6FFC645F1904E950F8D) == 0x0009AC, "Member 'ABGA_DudeBro_Mini_C::Grow__Direction_4CC9621E45AEA6FFC645F1904E950F8D' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Grow) == 0x0009B0, "Member 'ABGA_DudeBro_Mini_C::Grow' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Gravity) == 0x0009B8, "Member 'ABGA_DudeBro_Mini_C::Gravity' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, MeshComponent) == 0x0009C0, "Member 'ABGA_DudeBro_Mini_C::MeshComponent' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, PrintingEffect) == 0x0009C8, "Member 'ABGA_DudeBro_Mini_C::PrintingEffect' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, RuneAmbientEffect) == 0x0009D0, "Member 'ABGA_DudeBro_Mini_C::RuneAmbientEffect' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, DebrisSpawnRateScale) == 0x0009D8, "Member 'ABGA_DudeBro_Mini_C::DebrisSpawnRateScale' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, SmokeSpawnRateScale) == 0x0009DC, "Member 'ABGA_DudeBro_Mini_C::SmokeSpawnRateScale' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, EmberSpawnRateScale) == 0x0009E0, "Member 'ABGA_DudeBro_Mini_C::EmberSpawnRateScale' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, GlowSpawnRateScale) == 0x0009E4, "Member 'ABGA_DudeBro_Mini_C::GlowSpawnRateScale' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, DebrisReset) == 0x0009E8, "Member 'ABGA_DudeBro_Mini_C::DebrisReset' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceGroundIgnoredActors) == 0x0009F0, "Member 'ABGA_DudeBro_Mini_C::TraceGroundIgnoredActors' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, IsAtRune) == 0x000A00, "Member 'ABGA_DudeBro_Mini_C::IsAtRune' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, GroundLocation) == 0x000A08, "Member 'ABGA_DudeBro_Mini_C::GroundLocation' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, EnableSafeZone) == 0x000A20, "Member 'ABGA_DudeBro_Mini_C::EnableSafeZone' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, ZeroGravPrj) == 0x000A24, "Member 'ABGA_DudeBro_Mini_C::ZeroGravPrj' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, CubeLookDirection) == 0x000A28, "Member 'ABGA_DudeBro_Mini_C::CubeLookDirection' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Overlaps) == 0x000A40, "Member 'ABGA_DudeBro_Mini_C::Overlaps' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, ZapTarget) == 0x000A50, "Member 'ABGA_DudeBro_Mini_C::ZapTarget' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, DirectionToPlayer) == 0x000A58, "Member 'ABGA_DudeBro_Mini_C::DirectionToPlayer' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceEndLocation) == 0x000A70, "Member 'ABGA_DudeBro_Mini_C::TraceEndLocation' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceStartLocation) == 0x000A88, "Member 'ABGA_DudeBro_Mini_C::TraceStartLocation' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceMaxDistance) == 0x000AA0, "Member 'ABGA_DudeBro_Mini_C::TraceMaxDistance' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceHitLocation) == 0x000AA8, "Member 'ABGA_DudeBro_Mini_C::TraceHitLocation' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceHitNormal) == 0x000AC0, "Member 'ABGA_DudeBro_Mini_C::TraceHitNormal' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, ZapInstigator) == 0x000AD8, "Member 'ABGA_DudeBro_Mini_C::ZapInstigator' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, CubeZapStrength) == 0x000AE0, "Member 'ABGA_DudeBro_Mini_C::CubeZapStrength' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TraceDown) == 0x000B08, "Member 'ABGA_DudeBro_Mini_C::TraceDown' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Base_Bubbling_Mesh_Color) == 0x000B0C, "Member 'ABGA_DudeBro_Mini_C::Base_Bubbling_Mesh_Color' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Geyser_Illuminated_Mesh_Color) == 0x000B1C, "Member 'ABGA_DudeBro_Mini_C::Geyser_Illuminated_Mesh_Color' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, IsActive) == 0x000B2C, "Member 'ABGA_DudeBro_Mini_C::IsActive' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, GeyserContrast) == 0x000B30, "Member 'ABGA_DudeBro_Mini_C::GeyserContrast' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, UpwardLaunchVelocity) == 0x000B34, "Member 'ABGA_DudeBro_Mini_C::UpwardLaunchVelocity' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, SoundOnActivate) == 0x000B38, "Member 'ABGA_DudeBro_Mini_C::SoundOnActivate' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, SoundOnDeactivate) == 0x000B40, "Member 'ABGA_DudeBro_Mini_C::SoundOnDeactivate' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, ShouldBoost) == 0x000B48, "Member 'ABGA_DudeBro_Mini_C::ShouldBoost' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, AllowEffects) == 0x000B49, "Member 'ABGA_DudeBro_Mini_C::AllowEffects' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, IsDisabled) == 0x000B4A, "Member 'ABGA_DudeBro_Mini_C::IsDisabled' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, EnabledLive) == 0x000B4B, "Member 'ABGA_DudeBro_Mini_C::EnabledLive' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, Vent_1_loc) == 0x000B50, "Member 'ABGA_DudeBro_Mini_C::Vent_1_loc' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, StartDisabledOffset) == 0x000B68, "Member 'ABGA_DudeBro_Mini_C::StartDisabledOffset' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, CharacterLaunchVelocity) == 0x000B6C, "Member 'ABGA_DudeBro_Mini_C::CharacterLaunchVelocity' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, ZOverride) == 0x000B70, "Member 'ABGA_DudeBro_Mini_C::ZOverride' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, XYOverride) == 0x000B71, "Member 'ABGA_DudeBro_Mini_C::XYOverride' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, SavedConeScale) == 0x000B78, "Member 'ABGA_DudeBro_Mini_C::SavedConeScale' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, VolcanoCue) == 0x000B90, "Member 'ABGA_DudeBro_Mini_C::VolcanoCue' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, VentCue) == 0x000B94, "Member 'ABGA_DudeBro_Mini_C::VentCue' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, VehicleActor) == 0x000B98, "Member 'ABGA_DudeBro_Mini_C::VehicleActor' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, EditParticleSystems) == 0x000BA0, "Member 'ABGA_DudeBro_Mini_C::EditParticleSystems' has a wrong offset!");
static_assert(offsetof(ABGA_DudeBro_Mini_C, TC_IgnoreVent) == 0x000BA8, "Member 'ABGA_DudeBro_Mini_C::TC_IgnoreVent' has a wrong offset!");

}

