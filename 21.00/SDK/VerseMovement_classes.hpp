#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseMovement

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "NetworkPrediction_structs.hpp"
#include "VerseMovement_structs.hpp"
#include "EntityActor_classes.hpp"


namespace SDK
{

// Class VerseMovement.NetPhysicsMoveComponent
// 0x0120 (0x01C0 - 0x00A0)
class UNetPhysicsMoveComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x58];                                      // 0x00A0(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UNetPhysicsMoveConfig*                  MoveConfig;                                        // 0x00F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FNetworkPhysicsState                   NetworkPhysicsState;                               // 0x0100(0x0090)(Net, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FNetPhysicsMoveObject                  SimOutput;                                         // 0x0190(0x0001)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkPredictionAsyncProxy           ReplicatedObject;                                  // 0x0198(0x0010)(Net, NoDestructor, NativeAccessSpecifierPrivate)
	class APlayerController*                      CachedPC;                                          // 0x01A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B0[0x10];                                     // 0x01B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetPhysicsMoveComponent">();
	}
	static class UNetPhysicsMoveComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetPhysicsMoveComponent>();
	}
};
static_assert(alignof(UNetPhysicsMoveComponent) == 0x000010, "Wrong alignment on UNetPhysicsMoveComponent");
static_assert(sizeof(UNetPhysicsMoveComponent) == 0x0001C0, "Wrong size on UNetPhysicsMoveComponent");
static_assert(offsetof(UNetPhysicsMoveComponent, MoveConfig) == 0x0000F8, "Member 'UNetPhysicsMoveComponent::MoveConfig' has a wrong offset!");
static_assert(offsetof(UNetPhysicsMoveComponent, NetworkPhysicsState) == 0x000100, "Member 'UNetPhysicsMoveComponent::NetworkPhysicsState' has a wrong offset!");
static_assert(offsetof(UNetPhysicsMoveComponent, SimOutput) == 0x000190, "Member 'UNetPhysicsMoveComponent::SimOutput' has a wrong offset!");
static_assert(offsetof(UNetPhysicsMoveComponent, ReplicatedObject) == 0x000198, "Member 'UNetPhysicsMoveComponent::ReplicatedObject' has a wrong offset!");
static_assert(offsetof(UNetPhysicsMoveComponent, CachedPC) == 0x0001A8, "Member 'UNetPhysicsMoveComponent::CachedPC' has a wrong offset!");

// Class VerseMovement.NetPhysicsMoveConfig
// 0x0090 (0x00C0 - 0x0030)
class UNetPhysicsMoveConfig final : public UDataAsset
{
public:
	TArray<struct FNetPhysicsMoveConfigEntry>     Entries;                                           // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FNetPhysicsMoveLimits                  Limits;                                            // 0x0040(0x0080)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetPhysicsMoveConfig">();
	}
	static class UNetPhysicsMoveConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetPhysicsMoveConfig>();
	}
};
static_assert(alignof(UNetPhysicsMoveConfig) == 0x000008, "Wrong alignment on UNetPhysicsMoveConfig");
static_assert(sizeof(UNetPhysicsMoveConfig) == 0x0000C0, "Wrong size on UNetPhysicsMoveConfig");
static_assert(offsetof(UNetPhysicsMoveConfig, Entries) == 0x000030, "Member 'UNetPhysicsMoveConfig::Entries' has a wrong offset!");
static_assert(offsetof(UNetPhysicsMoveConfig, Limits) == 0x000040, "Member 'UNetPhysicsMoveConfig::Limits' has a wrong offset!");

// Class VerseMovement.VerseMovementComponentBase
// 0x0000 (0x0090 - 0x0090)
class UVerseMovementComponentBase : public UEntityActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseMovementComponentBase">();
	}
	static class UVerseMovementComponentBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseMovementComponentBase>();
	}
};
static_assert(alignof(UVerseMovementComponentBase) == 0x000008, "Wrong alignment on UVerseMovementComponentBase");
static_assert(sizeof(UVerseMovementComponentBase) == 0x000090, "Wrong size on UVerseMovementComponentBase");

}

