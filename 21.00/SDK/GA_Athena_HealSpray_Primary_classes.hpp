#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_HealSpray_Primary

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GA_Athena_MedConsumable_Parent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_HealSpray_Primary.GA_Athena_HealSpray_Primary_C
// 0x00F8 (0x0DF0 - 0x0CF8)
class UGA_Athena_HealSpray_Primary_C final : public UGA_Athena_MedConsumable_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Athena_HealSpray_Primary_C;      // 0x0CF8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTagContainer                  Tags_PreventActivation;                            // 0x0D00(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   MontageSection_Outro;                              // 0x0D20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D24[0x4];                                      // 0x0D24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_MaxDuration;                                   // 0x0D28(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           Handle_FailsafeTimer;                              // 0x0D50(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_MontageIntroDuration;                          // 0x0D58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           Tag_GC_SprayLoop;                                  // 0x0D80(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D84[0x4];                                      // 0x0D84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_OutOfAmmo;                                   // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage_DiscardWeapon;                             // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_AmmoChanged;                                   // 0x0D98(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9C[0x4];                                      // 0x0D9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_HealCapPct;                                    // 0x0DA0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  Tag_FailedToActivateDueToHealthThreshold;          // 0x0DC8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         HealthCheckPrecision;                              // 0x0DE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AmmoChangedEvent();
	void ApplyGCAfterMontageIntroDelay();
	void CallEndAbility();
	void EnableRelease();
	void ExecuteUbergraph_GA_Athena_HealSpray_Primary(int32 EntryPoint);
	void FailSafeTimer();
	void K2_ActivateAbility();
	void K2_CommitExecute();
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_OverrideFailedReason(const struct FGameplayTagContainer& FailedReason, struct FGameplayTagContainer* OverridenFailedReason);
	void MakeCustomMontageInfo();
	void MontageTriggeredPreCommit();
	void OnAbilityInputReleased();
	void OnHealthChanged();
	void OnMontageTriggeredPostCommitSuccess();
	void OnMontageTriggeredPreCommit();

	void CheckHealthThreshold(bool* ValidCheck, bool* IsUnderHealthThreshold) const;
	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_HealSpray_Primary_C">();
	}
	static class UGA_Athena_HealSpray_Primary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_HealSpray_Primary_C>();
	}
};
static_assert(alignof(UGA_Athena_HealSpray_Primary_C) == 0x000008, "Wrong alignment on UGA_Athena_HealSpray_Primary_C");
static_assert(sizeof(UGA_Athena_HealSpray_Primary_C) == 0x000DF0, "Wrong size on UGA_Athena_HealSpray_Primary_C");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, UberGraphFrame_GA_Athena_HealSpray_Primary_C) == 0x000CF8, "Member 'UGA_Athena_HealSpray_Primary_C::UberGraphFrame_GA_Athena_HealSpray_Primary_C' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, Tags_PreventActivation) == 0x000D00, "Member 'UGA_Athena_HealSpray_Primary_C::Tags_PreventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, MontageSection_Outro) == 0x000D20, "Member 'UGA_Athena_HealSpray_Primary_C::MontageSection_Outro' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, Row_MaxDuration) == 0x000D28, "Member 'UGA_Athena_HealSpray_Primary_C::Row_MaxDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, Handle_FailsafeTimer) == 0x000D50, "Member 'UGA_Athena_HealSpray_Primary_C::Handle_FailsafeTimer' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, Row_MontageIntroDuration) == 0x000D58, "Member 'UGA_Athena_HealSpray_Primary_C::Row_MontageIntroDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, Tag_GC_SprayLoop) == 0x000D80, "Member 'UGA_Athena_HealSpray_Primary_C::Tag_GC_SprayLoop' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, Sound_OutOfAmmo) == 0x000D88, "Member 'UGA_Athena_HealSpray_Primary_C::Sound_OutOfAmmo' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, Montage_DiscardWeapon) == 0x000D90, "Member 'UGA_Athena_HealSpray_Primary_C::Montage_DiscardWeapon' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, Tag_AmmoChanged) == 0x000D98, "Member 'UGA_Athena_HealSpray_Primary_C::Tag_AmmoChanged' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, Row_HealCapPct) == 0x000DA0, "Member 'UGA_Athena_HealSpray_Primary_C::Row_HealCapPct' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, Tag_FailedToActivateDueToHealthThreshold) == 0x000DC8, "Member 'UGA_Athena_HealSpray_Primary_C::Tag_FailedToActivateDueToHealthThreshold' has a wrong offset!");
static_assert(offsetof(UGA_Athena_HealSpray_Primary_C, HealthCheckPrecision) == 0x000DE8, "Member 'UGA_Athena_HealSpray_Primary_C::HealthCheckPrecision' has a wrong offset!");

}

