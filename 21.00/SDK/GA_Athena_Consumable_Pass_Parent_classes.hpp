#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Consumable_Pass_Parent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Consumable_Pass_Parent.GA_Athena_Consumable_Pass_Parent_C
// 0x01C0 (0x0CD0 - 0x0B10)
class UGA_Athena_Consumable_Pass_Parent_C : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWeaponRangedItemDefinition*        ItemDefinition;                                    // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ProjectileToThrow;                                 // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    ProjectileReference;                               // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceFromInstigatorCheck;                       // 0x0B38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileSpeedMin;                                // 0x0B3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileSpeedMax;                                // 0x0B40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileGravityScale;                            // 0x0B44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileTargetingOriginOffset;                   // 0x0B48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DummyShouldBounce;                                 // 0x0B60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B61[0x3];                                      // 0x0B61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DummyBounciness;                                   // 0x0B64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyFriction;                                     // 0x0B68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyMaxSpeed;                                     // 0x0B6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyGravity;                                      // 0x0B70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyTimeStep;                                     // 0x0B74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyExtent;                                       // 0x0B78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7C[0x4];                                      // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ProjectileTargetingOriginOffset_Crouched;          // 0x0B80(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InThrowWindup;                                     // 0x0B98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortGameplayAbilityMontageInfo        ThrowWindupMontage;                                // 0x0BA0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_ProjectileTrajectory_Athena_C*      TrajectoryIndicator;                               // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TrajectoryIndicatorClass;                          // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbilityKeyPressed;                                 // 0x0C08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C09[0x7];                                      // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GrenadeTargetingOriginOffsetWater;                 // 0x0C10(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalThrowAngle;                              // 0x0C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpeedPitch;                                     // 0x0C2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSpeedPitch;                                     // 0x0C30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxThrowPitch;                                     // 0x0C34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrajectoryBounces;                              // 0x0C38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsThrowing;                                        // 0x0C3C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3D[0x3];                                      // 0x0C3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PostThrowDelay;                                    // 0x0C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned_On_Equip;                                  // 0x0C44(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             DummyCollisionChannel;                             // 0x0C45(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C46[0x2];                                      // 0x0C46(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ThrowConsumablesEnabled;                           // 0x0C48(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_ItemThrown;                                      // 0x0C70(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           T_Quest;                                           // 0x0C90(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C94[0x4];                                      // 0x0C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_UtilityItem_Generic_Athena_C*        WeaponUtilityItemGeneric;                          // 0x0C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DummyMaxSteps;                                     // 0x0CA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA4[0x4];                                      // 0x0CA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Projectile_Trajectory_Final_Location;              // 0x0CA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Quest_NearOtherPlayer;                           // 0x0CC0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceCheckToNearbyPlayers;                      // 0x0CC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_OnPass;                                         // 0x0CC8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_CookLoop;                                       // 0x0CCC(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AddCookGC();
	void Bounced_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void CanBeDropped(bool* Yes);
	void Cancelled_B7154AE349A61FA4A5545D97B125C031(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cleanup_Trajectory_Display_On_End();
	void CleanupTrajectoryDisplay();
	void CleanupTrajectoryIndicatorOnUnequip();
	void Completed_B7154AE349A61FA4A5545D97B125C031(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Created_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void Destroyed_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void EventReceived_13E531C84957E69360FC6EB6E9818D90(const struct FGameplayEventData& Payload);
	void EventReceived_D907E28A43BC498803B5B0AD054E5FC1(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_Athena_Consumable_Pass_Parent(int32 EntryPoint);
	void Exploded_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void GetProjectileDataFromWeaponID();
	void GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult);
	void InitTrajectoryVariables();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnAbilityInputReleased();
	void OnBlendOut_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnCancelled_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnCompleted_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnFinish_3698CE084DFBBB65C54A74B61C442258();
	void OnFinish_37708BDA4A053044298FDD8A986CE91D();
	void OnFinish_CF0A57844174C8A87D0024B17D96B713();
	void OnInterrupted_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnSync_F83BC34A45D86702B453A1BFE1D7F7E1();
	void PlayThrowGC();
	void RemoveCookGC();
	void Server_SpawnProjectile(const struct FVector& Location, const struct FRotator& Direction, const struct FVector& Projected_Landing_Location);
	void SetupDummyProjectile();
	class AFortProjectileTrajectory* SpawnTrajectoryIndicator(bool bSpawnOnEquip);
	void Stopped_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void ThrowConsumable();
	void Touched_810B87EA424E705019D253BCBCE0A171(const struct FProjectileEventData& ProjectileData);
	void Triggered_B7154AE349A61FA4A5545D97B125C031(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void UpdateTrajectory();
	void UpdateTrajectorySpline();

	void CalcProjectileSpeedFromPitch(float AimPitch, float* GrenadeSpeed) const;
	void GetOwningPlayer(class AFortPlayerPawn** Player_Pawn) const;
	TSubclassOf<class AFortProjectileTrajectory> GetProjectileTrajectoryActor() const;
	bool ShouldOnlyShowTrajectoryOnUse() const;
	void SpawnLocationAndRotation(struct FVector* OutLoc, struct FRotator* OutRot) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Consumable_Pass_Parent_C">();
	}
	static class UGA_Athena_Consumable_Pass_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Consumable_Pass_Parent_C>();
	}
};
static_assert(alignof(UGA_Athena_Consumable_Pass_Parent_C) == 0x000008, "Wrong alignment on UGA_Athena_Consumable_Pass_Parent_C");
static_assert(sizeof(UGA_Athena_Consumable_Pass_Parent_C) == 0x000CD0, "Wrong size on UGA_Athena_Consumable_Pass_Parent_C");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, UberGraphFrame) == 0x000B10, "Member 'UGA_Athena_Consumable_Pass_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, PlayerPawn) == 0x000B18, "Member 'UGA_Athena_Consumable_Pass_Parent_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, ItemDefinition) == 0x000B20, "Member 'UGA_Athena_Consumable_Pass_Parent_C::ItemDefinition' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, ProjectileToThrow) == 0x000B28, "Member 'UGA_Athena_Consumable_Pass_Parent_C::ProjectileToThrow' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, ProjectileReference) == 0x000B30, "Member 'UGA_Athena_Consumable_Pass_Parent_C::ProjectileReference' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DistanceFromInstigatorCheck) == 0x000B38, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DistanceFromInstigatorCheck' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, ProjectileSpeedMin) == 0x000B3C, "Member 'UGA_Athena_Consumable_Pass_Parent_C::ProjectileSpeedMin' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, ProjectileSpeedMax) == 0x000B40, "Member 'UGA_Athena_Consumable_Pass_Parent_C::ProjectileSpeedMax' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, ProjectileGravityScale) == 0x000B44, "Member 'UGA_Athena_Consumable_Pass_Parent_C::ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, ProjectileTargetingOriginOffset) == 0x000B48, "Member 'UGA_Athena_Consumable_Pass_Parent_C::ProjectileTargetingOriginOffset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DummyShouldBounce) == 0x000B60, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DummyShouldBounce' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DummyBounciness) == 0x000B64, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DummyBounciness' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DummyFriction) == 0x000B68, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DummyFriction' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DummyMaxSpeed) == 0x000B6C, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DummyMaxSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DummyGravity) == 0x000B70, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DummyGravity' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DummyTimeStep) == 0x000B74, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DummyTimeStep' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DummyExtent) == 0x000B78, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DummyExtent' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, ProjectileTargetingOriginOffset_Crouched) == 0x000B80, "Member 'UGA_Athena_Consumable_Pass_Parent_C::ProjectileTargetingOriginOffset_Crouched' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, InThrowWindup) == 0x000B98, "Member 'UGA_Athena_Consumable_Pass_Parent_C::InThrowWindup' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, ThrowWindupMontage) == 0x000BA0, "Member 'UGA_Athena_Consumable_Pass_Parent_C::ThrowWindupMontage' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, TrajectoryIndicator) == 0x000BF8, "Member 'UGA_Athena_Consumable_Pass_Parent_C::TrajectoryIndicator' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, TrajectoryIndicatorClass) == 0x000C00, "Member 'UGA_Athena_Consumable_Pass_Parent_C::TrajectoryIndicatorClass' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, AbilityKeyPressed) == 0x000C08, "Member 'UGA_Athena_Consumable_Pass_Parent_C::AbilityKeyPressed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, GrenadeTargetingOriginOffsetWater) == 0x000C10, "Member 'UGA_Athena_Consumable_Pass_Parent_C::GrenadeTargetingOriginOffsetWater' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, AdditionalThrowAngle) == 0x000C28, "Member 'UGA_Athena_Consumable_Pass_Parent_C::AdditionalThrowAngle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, MaxSpeedPitch) == 0x000C2C, "Member 'UGA_Athena_Consumable_Pass_Parent_C::MaxSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, MinSpeedPitch) == 0x000C30, "Member 'UGA_Athena_Consumable_Pass_Parent_C::MinSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, MaxThrowPitch) == 0x000C34, "Member 'UGA_Athena_Consumable_Pass_Parent_C::MaxThrowPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, MaxTrajectoryBounces) == 0x000C38, "Member 'UGA_Athena_Consumable_Pass_Parent_C::MaxTrajectoryBounces' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, IsThrowing) == 0x000C3C, "Member 'UGA_Athena_Consumable_Pass_Parent_C::IsThrowing' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, PostThrowDelay) == 0x000C40, "Member 'UGA_Athena_Consumable_Pass_Parent_C::PostThrowDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, Spawned_On_Equip) == 0x000C44, "Member 'UGA_Athena_Consumable_Pass_Parent_C::Spawned_On_Equip' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DummyCollisionChannel) == 0x000C45, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DummyCollisionChannel' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, ThrowConsumablesEnabled) == 0x000C48, "Member 'UGA_Athena_Consumable_Pass_Parent_C::ThrowConsumablesEnabled' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, T_ItemThrown) == 0x000C70, "Member 'UGA_Athena_Consumable_Pass_Parent_C::T_ItemThrown' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, T_Quest) == 0x000C90, "Member 'UGA_Athena_Consumable_Pass_Parent_C::T_Quest' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, WeaponUtilityItemGeneric) == 0x000C98, "Member 'UGA_Athena_Consumable_Pass_Parent_C::WeaponUtilityItemGeneric' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DummyMaxSteps) == 0x000CA0, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DummyMaxSteps' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, Projectile_Trajectory_Final_Location) == 0x000CA8, "Member 'UGA_Athena_Consumable_Pass_Parent_C::Projectile_Trajectory_Final_Location' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, T_Quest_NearOtherPlayer) == 0x000CC0, "Member 'UGA_Athena_Consumable_Pass_Parent_C::T_Quest_NearOtherPlayer' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, DistanceCheckToNearbyPlayers) == 0x000CC4, "Member 'UGA_Athena_Consumable_Pass_Parent_C::DistanceCheckToNearbyPlayers' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, GC_OnPass) == 0x000CC8, "Member 'UGA_Athena_Consumable_Pass_Parent_C::GC_OnPass' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_Pass_Parent_C, GC_CookLoop) == 0x000CCC, "Member 'UGA_Athena_Consumable_Pass_Parent_C::GC_CookLoop' has a wrong offset!");

}

