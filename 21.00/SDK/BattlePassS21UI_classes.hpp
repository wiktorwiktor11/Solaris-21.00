#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassS21UI

#include "Basic.hpp"

#include "BattlePassBase_classes.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CommonInput_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// Class BattlePassS21UI.FortBattlePassTutorialTooltipS21
// 0x0010 (0x02F0 - 0x02E0)
class UFortBattlePassTutorialTooltipS21 final : public UCommonUserWidget
{
public:
	class UCommonRichTextBlock*                   Text_Tooltip;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideTooltip();
	void SetText(const class FText& Text);
	void ShowTooltip();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBattlePassTutorialTooltipS21">();
	}
	static class UFortBattlePassTutorialTooltipS21* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBattlePassTutorialTooltipS21>();
	}
};
static_assert(alignof(UFortBattlePassTutorialTooltipS21) == 0x000008, "Wrong alignment on UFortBattlePassTutorialTooltipS21");
static_assert(sizeof(UFortBattlePassTutorialTooltipS21) == 0x0002F0, "Wrong size on UFortBattlePassTutorialTooltipS21");
static_assert(offsetof(UFortBattlePassTutorialTooltipS21, Text_Tooltip) == 0x0002E0, "Member 'UFortBattlePassTutorialTooltipS21::Text_Tooltip' has a wrong offset!");

// Class BattlePassS21UI.BattlePassLandingPageS21
// 0x0050 (0x0570 - 0x0520)
class UBattlePassLandingPageS21 final : public UBattlePassLandingPageBase
{
public:
	class UBattlePassLandingPageButton*           Button_Rewards;                                    // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_CharacterCustomizer;                        // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_BonusRewards;                               // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_Quests;                                     // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_BuyBattlePass;                              // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_JoinSubscription;                           // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_BuyResources;                               // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassLandingPageButton*           Button_GiftBattlePass;                             // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_560[0x8];                                      // 0x0560(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaSeasonItemData_BattleStar*       SeasonData_BattleStar;                             // 0x0568(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnBattlePassGiftingAllowed(const bool bGiftingAllowed);
	void OnBattlePassOwned();
	void OnBattlePassSubscriptionAllowed(const bool bSubscriptionAllowed);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassLandingPageS21">();
	}
	static class UBattlePassLandingPageS21* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassLandingPageS21>();
	}
};
static_assert(alignof(UBattlePassLandingPageS21) == 0x000008, "Wrong alignment on UBattlePassLandingPageS21");
static_assert(sizeof(UBattlePassLandingPageS21) == 0x000570, "Wrong size on UBattlePassLandingPageS21");
static_assert(offsetof(UBattlePassLandingPageS21, Button_Rewards) == 0x000520, "Member 'UBattlePassLandingPageS21::Button_Rewards' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS21, Button_CharacterCustomizer) == 0x000528, "Member 'UBattlePassLandingPageS21::Button_CharacterCustomizer' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS21, Button_BonusRewards) == 0x000530, "Member 'UBattlePassLandingPageS21::Button_BonusRewards' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS21, Button_Quests) == 0x000538, "Member 'UBattlePassLandingPageS21::Button_Quests' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS21, Button_BuyBattlePass) == 0x000540, "Member 'UBattlePassLandingPageS21::Button_BuyBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS21, Button_JoinSubscription) == 0x000548, "Member 'UBattlePassLandingPageS21::Button_JoinSubscription' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS21, Button_BuyResources) == 0x000550, "Member 'UBattlePassLandingPageS21::Button_BuyResources' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS21, Button_GiftBattlePass) == 0x000558, "Member 'UBattlePassLandingPageS21::Button_GiftBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassLandingPageS21, SeasonData_BattleStar) == 0x000568, "Member 'UBattlePassLandingPageS21::SeasonData_BattleStar' has a wrong offset!");

// Class BattlePassS21UI.BattlePassRewardPageS21
// 0x0098 (0x0588 - 0x04F0)
class UBattlePassRewardPageS21 final : public UBattlePassRewardPageBase
{
public:
	TSubclassOf<class UFortBattlePassRewardGrid>  RewardsGridClass;                                  // 0x04F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortPageNavigator*                     PageNavigator;                                     // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTile*                    FocusedReward;                                     // 0x0500(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UFortBattlePassRewardGrid*>      GridPages;                                         // 0x0508(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_518[0x4];                                      // 0x0518(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	ERewardPageType                               RewardPageType;                                    // 0x051C(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HoldTileTooltip_ClaimedRewardsToHide;              // 0x0520(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         HoldTileTooltip_RequiredBattleStarsToShow;         // 0x0524(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 ClaimToonAFishTooltip_ClaimCheckTemplateId;        // 0x0528(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBattlePassTutorialTooltipS21*      TutorialTooltip_SecondPageUnlock;                  // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS21*      TutorialTooltip_ClaimAllRewards;                   // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS21*      TutorialTooltip_HoldTile;                          // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS21*      TutorialTooltip_Fishtoon_ClaimToonAFish;           // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS21*      TutorialTooltip_Fishtoon_ExploreToCollectInk;      // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS21*      TutorialTooltip_Fishtoon_MustUnlockInkColor;       // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS21*      TutorialTooltip_Fishtoon_MustCompleteObjective;    // 0x0568(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaSeasonItemData_BattleStar*       SeasonData_BattleStar;                             // 0x0570(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassBulkBuyInputData*            BulkBuyInputData;                                  // 0x0578(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_580[0x8];                                      // 0x0580(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInitForPageType(const ERewardPageType InRewardPageType);
	void OnInputMethodChanged(const ECommonInputType InputType);
	void OnPageChanged(const int32 PageNumber);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassRewardPageS21">();
	}
	static class UBattlePassRewardPageS21* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassRewardPageS21>();
	}
};
static_assert(alignof(UBattlePassRewardPageS21) == 0x000008, "Wrong alignment on UBattlePassRewardPageS21");
static_assert(sizeof(UBattlePassRewardPageS21) == 0x000588, "Wrong size on UBattlePassRewardPageS21");
static_assert(offsetof(UBattlePassRewardPageS21, RewardsGridClass) == 0x0004F0, "Member 'UBattlePassRewardPageS21::RewardsGridClass' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, PageNavigator) == 0x0004F8, "Member 'UBattlePassRewardPageS21::PageNavigator' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, FocusedReward) == 0x000500, "Member 'UBattlePassRewardPageS21::FocusedReward' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, GridPages) == 0x000508, "Member 'UBattlePassRewardPageS21::GridPages' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, RewardPageType) == 0x00051C, "Member 'UBattlePassRewardPageS21::RewardPageType' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, HoldTileTooltip_ClaimedRewardsToHide) == 0x000520, "Member 'UBattlePassRewardPageS21::HoldTileTooltip_ClaimedRewardsToHide' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, HoldTileTooltip_RequiredBattleStarsToShow) == 0x000524, "Member 'UBattlePassRewardPageS21::HoldTileTooltip_RequiredBattleStarsToShow' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, ClaimToonAFishTooltip_ClaimCheckTemplateId) == 0x000528, "Member 'UBattlePassRewardPageS21::ClaimToonAFishTooltip_ClaimCheckTemplateId' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, TutorialTooltip_SecondPageUnlock) == 0x000538, "Member 'UBattlePassRewardPageS21::TutorialTooltip_SecondPageUnlock' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, TutorialTooltip_ClaimAllRewards) == 0x000540, "Member 'UBattlePassRewardPageS21::TutorialTooltip_ClaimAllRewards' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, TutorialTooltip_HoldTile) == 0x000548, "Member 'UBattlePassRewardPageS21::TutorialTooltip_HoldTile' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, TutorialTooltip_Fishtoon_ClaimToonAFish) == 0x000550, "Member 'UBattlePassRewardPageS21::TutorialTooltip_Fishtoon_ClaimToonAFish' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, TutorialTooltip_Fishtoon_ExploreToCollectInk) == 0x000558, "Member 'UBattlePassRewardPageS21::TutorialTooltip_Fishtoon_ExploreToCollectInk' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, TutorialTooltip_Fishtoon_MustUnlockInkColor) == 0x000560, "Member 'UBattlePassRewardPageS21::TutorialTooltip_Fishtoon_MustUnlockInkColor' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, TutorialTooltip_Fishtoon_MustCompleteObjective) == 0x000568, "Member 'UBattlePassRewardPageS21::TutorialTooltip_Fishtoon_MustCompleteObjective' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, SeasonData_BattleStar) == 0x000570, "Member 'UBattlePassRewardPageS21::SeasonData_BattleStar' has a wrong offset!");
static_assert(offsetof(UBattlePassRewardPageS21, BulkBuyInputData) == 0x000578, "Member 'UBattlePassRewardPageS21::BulkBuyInputData' has a wrong offset!");

// Class BattlePassS21UI.BattlePassScreenS21
// 0x03C0 (0x0C38 - 0x0878)
class UBattlePassScreenS21 final : public UBattlePassScreenBase
{
public:
	TSubclassOf<class UFortBattlePassPurchaseResourcesWidget> ResourcePurchaseScreenClass;                       // 0x0878(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_880[0x8];                                      // 0x0880(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    Button_Close;                                      // 0x0888(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_CloseMobile;                                // 0x0890(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_BulkBuyRewards;                             // 0x0898(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_ToggleViewDetails;                          // 0x08A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ToggleViewDetails_Mobile;                   // 0x08A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_ReplayTrailer;                              // 0x08B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ReplayTrailer_Mobile;                       // 0x08B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_ShowAbout;                                  // 0x08C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ShowAbout_Mobile;                           // 0x08C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonLegacy*                    Button_ShowAboutCustomization;                     // 0x08D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_ShowAboutCustomization_Mobile;              // 0x08D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonVisibilitySwitcher*              MobileVisibilitySwitcher;                          // 0x08E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBattlePassResourcesWidgetBase*     BattlePassCurrencyPanel;                           // 0x08E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaExclusiveRewardBanner*           AthenaExclusiveRewardBanner;                       // 0x08F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_Description;                                  // 0x08F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_ItemName;                                     // 0x0900(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaRewardItemTypeRarityTag*         ItemRewardTag;                                     // 0x0908(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_SetDetails;                                   // 0x0910(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonVisibilitySwitcher*              Switcher_ContextualButtons;                        // 0x0918(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHoldableButton*                    Button_BuyLevels;                                  // 0x0920(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHoldableButton*                    Button_BuyBattlePass;                              // 0x0928(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortHoldableButton*                    Button_ClaimReward;                                // 0x0930(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_RequiresBP;                                    // 0x0938(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_PageLocked;                                    // 0x0940(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_BaseItem;                                      // 0x0948(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Prerequisite;                                  // 0x0950(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_CompletePage;                                  // 0x0958(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_NotEnough_Currency;                            // 0x0960(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Cost;                                          // 0x0968(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Owned;                                         // 0x0970(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Tag_Delayed;                                       // 0x0978(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_980[0x58];                                     // 0x0980(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaSeasonItemData_BattleStar*       SeasonData_BattleStar;                             // 0x09D8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaSeasonItemEntryBase*             CurrentSelectedEntry;                              // 0x09E0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<EBattlePassView>                       SwitcherSubPageTypes;                              // 0x09E8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UCommonVisibilitySwitcher*              SubPageSwitcher;                                   // 0x09F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A00[0xC0];                                     // 0x0A00(0x00C0)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    SeasonalBaseCustomizationItem;                     // 0x0AC0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasSubscription;                                  // 0x0AC8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AC9[0x3];                                      // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BattleStarsTooltipHideLevel;                       // 0x0ACC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AD0[0x8];                                      // 0x0AD0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortBattlePassTutorialTooltipS21*      TutorialTooltip_BattleStars;                       // 0x0AD8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortBattlePassTutorialTooltipS21*      TutorialTooltip_StylePoints;                       // 0x0AE0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AE8[0x150];                                    // 0x0AE8(0x0150)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleClaimRewardComplete(const bool bSuccess, const TArray<class FString>& OfferTemplateIdList);
	void HandleSwitcherVisibilityShown();
	void OnBattlePassOwned();
	void OnInsufficientFunds(const EBattlePassCurrencyType CurrencyType);
	void OnInsufficientResource(const class UFortPersistentResourceItemDefinition* PersistentResource);
	void OnItemDelayed(const struct FTimespan& Delay);
	void OnLevelChanged(const int32 Level);
	void OnSetClaimedRewardInfo(const int32 OwnedRewards, const int32 TotalRewards);
	void OnSetDynamicInput(const EBattlePassInputs InputType, const class UBattlePassInputData* InputData);
	void OnSetItemPrice(const int32 Cost, const EBattlePassCurrencyType CurrencyType);
	void OnSetPrerequisiteInfo(const class FText& Description, const int32 OwnedRewards, const int32 NeededRewards, const bool bShowPrerequisiteLock);
	void OnSetResourcePrice(const int32 Cost, const class UFortPersistentResourceItemDefinition* PersistentResource);
	void OnTransitionItemDetails(const bool bTransitionForward);
	void OverviewShowAnimationFinished();

	struct FTimespan GetQuestPageDelay() const;
	bool IsSeasonalCustomizationItemOwned() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassScreenS21">();
	}
	static class UBattlePassScreenS21* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassScreenS21>();
	}
};
static_assert(alignof(UBattlePassScreenS21) == 0x000008, "Wrong alignment on UBattlePassScreenS21");
static_assert(sizeof(UBattlePassScreenS21) == 0x000C38, "Wrong size on UBattlePassScreenS21");
static_assert(offsetof(UBattlePassScreenS21, ResourcePurchaseScreenClass) == 0x000878, "Member 'UBattlePassScreenS21::ResourcePurchaseScreenClass' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_Close) == 0x000888, "Member 'UBattlePassScreenS21::Button_Close' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_CloseMobile) == 0x000890, "Member 'UBattlePassScreenS21::Button_CloseMobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_BulkBuyRewards) == 0x000898, "Member 'UBattlePassScreenS21::Button_BulkBuyRewards' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_ToggleViewDetails) == 0x0008A0, "Member 'UBattlePassScreenS21::Button_ToggleViewDetails' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_ToggleViewDetails_Mobile) == 0x0008A8, "Member 'UBattlePassScreenS21::Button_ToggleViewDetails_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_ReplayTrailer) == 0x0008B0, "Member 'UBattlePassScreenS21::Button_ReplayTrailer' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_ReplayTrailer_Mobile) == 0x0008B8, "Member 'UBattlePassScreenS21::Button_ReplayTrailer_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_ShowAbout) == 0x0008C0, "Member 'UBattlePassScreenS21::Button_ShowAbout' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_ShowAbout_Mobile) == 0x0008C8, "Member 'UBattlePassScreenS21::Button_ShowAbout_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_ShowAboutCustomization) == 0x0008D0, "Member 'UBattlePassScreenS21::Button_ShowAboutCustomization' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_ShowAboutCustomization_Mobile) == 0x0008D8, "Member 'UBattlePassScreenS21::Button_ShowAboutCustomization_Mobile' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, MobileVisibilitySwitcher) == 0x0008E0, "Member 'UBattlePassScreenS21::MobileVisibilitySwitcher' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, BattlePassCurrencyPanel) == 0x0008E8, "Member 'UBattlePassScreenS21::BattlePassCurrencyPanel' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, AthenaExclusiveRewardBanner) == 0x0008F0, "Member 'UBattlePassScreenS21::AthenaExclusiveRewardBanner' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Text_Description) == 0x0008F8, "Member 'UBattlePassScreenS21::Text_Description' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Text_ItemName) == 0x000900, "Member 'UBattlePassScreenS21::Text_ItemName' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, ItemRewardTag) == 0x000908, "Member 'UBattlePassScreenS21::ItemRewardTag' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Text_SetDetails) == 0x000910, "Member 'UBattlePassScreenS21::Text_SetDetails' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Switcher_ContextualButtons) == 0x000918, "Member 'UBattlePassScreenS21::Switcher_ContextualButtons' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_BuyLevels) == 0x000920, "Member 'UBattlePassScreenS21::Button_BuyLevels' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_BuyBattlePass) == 0x000928, "Member 'UBattlePassScreenS21::Button_BuyBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Button_ClaimReward) == 0x000930, "Member 'UBattlePassScreenS21::Button_ClaimReward' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Tag_RequiresBP) == 0x000938, "Member 'UBattlePassScreenS21::Tag_RequiresBP' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Tag_PageLocked) == 0x000940, "Member 'UBattlePassScreenS21::Tag_PageLocked' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Tag_BaseItem) == 0x000948, "Member 'UBattlePassScreenS21::Tag_BaseItem' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Tag_Prerequisite) == 0x000950, "Member 'UBattlePassScreenS21::Tag_Prerequisite' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Tag_CompletePage) == 0x000958, "Member 'UBattlePassScreenS21::Tag_CompletePage' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Tag_NotEnough_Currency) == 0x000960, "Member 'UBattlePassScreenS21::Tag_NotEnough_Currency' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Tag_Cost) == 0x000968, "Member 'UBattlePassScreenS21::Tag_Cost' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Tag_Owned) == 0x000970, "Member 'UBattlePassScreenS21::Tag_Owned' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, Tag_Delayed) == 0x000978, "Member 'UBattlePassScreenS21::Tag_Delayed' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, SeasonData_BattleStar) == 0x0009D8, "Member 'UBattlePassScreenS21::SeasonData_BattleStar' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, CurrentSelectedEntry) == 0x0009E0, "Member 'UBattlePassScreenS21::CurrentSelectedEntry' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, SwitcherSubPageTypes) == 0x0009E8, "Member 'UBattlePassScreenS21::SwitcherSubPageTypes' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, SubPageSwitcher) == 0x0009F8, "Member 'UBattlePassScreenS21::SubPageSwitcher' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, SeasonalBaseCustomizationItem) == 0x000AC0, "Member 'UBattlePassScreenS21::SeasonalBaseCustomizationItem' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, bHasSubscription) == 0x000AC8, "Member 'UBattlePassScreenS21::bHasSubscription' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, BattleStarsTooltipHideLevel) == 0x000ACC, "Member 'UBattlePassScreenS21::BattleStarsTooltipHideLevel' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, TutorialTooltip_BattleStars) == 0x000AD8, "Member 'UBattlePassScreenS21::TutorialTooltip_BattleStars' has a wrong offset!");
static_assert(offsetof(UBattlePassScreenS21, TutorialTooltip_StylePoints) == 0x000AE0, "Member 'UBattlePassScreenS21::TutorialTooltip_StylePoints' has a wrong offset!");

// Class BattlePassS21UI.FortBattlePassCustomSkinPageS21
// 0x0018 (0x05A8 - 0x0590)
class UFortBattlePassCustomSkinPageS21 final : public UFortBattlePassCustomSkinPageBase
{
public:
	class FString                                 ClaimBaseItemTooltip_ClaimCheckTemplateId;         // 0x0590(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBattlePassTutorialTooltip*         TutorialTooltip_ClaimBaseItem;                     // 0x05A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBattlePassCustomSkinPageS21">();
	}
	static class UFortBattlePassCustomSkinPageS21* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBattlePassCustomSkinPageS21>();
	}
};
static_assert(alignof(UFortBattlePassCustomSkinPageS21) == 0x000008, "Wrong alignment on UFortBattlePassCustomSkinPageS21");
static_assert(sizeof(UFortBattlePassCustomSkinPageS21) == 0x0005A8, "Wrong size on UFortBattlePassCustomSkinPageS21");
static_assert(offsetof(UFortBattlePassCustomSkinPageS21, ClaimBaseItemTooltip_ClaimCheckTemplateId) == 0x000590, "Member 'UFortBattlePassCustomSkinPageS21::ClaimBaseItemTooltip_ClaimCheckTemplateId' has a wrong offset!");
static_assert(offsetof(UFortBattlePassCustomSkinPageS21, TutorialTooltip_ClaimBaseItem) == 0x0005A0, "Member 'UFortBattlePassCustomSkinPageS21::TutorialTooltip_ClaimBaseItem' has a wrong offset!");

// Class BattlePassS21UI.FortBattlePassResourcesWidgetS21
// 0x0020 (0x0310 - 0x02F0)
class UFortBattlePassResourcesWidgetS21 final : public UFortBattlePassResourcesWidgetBase
{
public:
	class UCommonTextBlock*                       Text_BattleStarsAmount;                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_StylePointsAmount;                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Border_StylePointsRewardsTag;                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Border_BattleStarsRewardsTag;                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnBattleStarRewardsSet(const int32 Rewards);
	void OnStylePointsRewardsSet(const int32 Rewards);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortBattlePassResourcesWidgetS21">();
	}
	static class UFortBattlePassResourcesWidgetS21* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortBattlePassResourcesWidgetS21>();
	}
};
static_assert(alignof(UFortBattlePassResourcesWidgetS21) == 0x000008, "Wrong alignment on UFortBattlePassResourcesWidgetS21");
static_assert(sizeof(UFortBattlePassResourcesWidgetS21) == 0x000310, "Wrong size on UFortBattlePassResourcesWidgetS21");
static_assert(offsetof(UFortBattlePassResourcesWidgetS21, Text_BattleStarsAmount) == 0x0002F0, "Member 'UFortBattlePassResourcesWidgetS21::Text_BattleStarsAmount' has a wrong offset!");
static_assert(offsetof(UFortBattlePassResourcesWidgetS21, Text_StylePointsAmount) == 0x0002F8, "Member 'UFortBattlePassResourcesWidgetS21::Text_StylePointsAmount' has a wrong offset!");
static_assert(offsetof(UFortBattlePassResourcesWidgetS21, Border_StylePointsRewardsTag) == 0x000300, "Member 'UFortBattlePassResourcesWidgetS21::Border_StylePointsRewardsTag' has a wrong offset!");
static_assert(offsetof(UFortBattlePassResourcesWidgetS21, Border_BattleStarsRewardsTag) == 0x000308, "Member 'UFortBattlePassResourcesWidgetS21::Border_BattleStarsRewardsTag' has a wrong offset!");

}

