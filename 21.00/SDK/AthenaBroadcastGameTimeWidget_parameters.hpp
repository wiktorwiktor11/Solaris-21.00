#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaBroadcastGameTimeWidget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function AthenaBroadcastGameTimeWidget.AthenaBroadcastGameTimeWidget_C.ExecuteUbergraph_AthenaBroadcastGameTimeWidget
// 0x000C (0x000C - 0x0000)
struct AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaGamePhaseStep                          K2Node_Event_GamePhaseStep;                        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget) == 0x000004, "Wrong alignment on AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget");
static_assert(sizeof(AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget) == 0x00000C, "Wrong size on AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget, EntryPoint) == 0x000000, "Member 'AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget, Temp_bool_Variable) == 0x000004, "Member 'AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget, Temp_byte_Variable) == 0x000005, "Member 'AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget, Temp_byte_Variable_1) == 0x000006, "Member 'AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget, K2Node_Event_GamePhaseStep) == 0x000007, "Member 'AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget::K2Node_Event_GamePhaseStep' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget, K2Node_Event_IsDesignTime) == 0x000008, "Member 'AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget, K2Node_Select_Default) == 0x000009, "Member 'AthenaBroadcastGameTimeWidget_C_ExecuteUbergraph_AthenaBroadcastGameTimeWidget::K2Node_Select_Default' has a wrong offset!");

// Function AthenaBroadcastGameTimeWidget.AthenaBroadcastGameTimeWidget_C.OnGamePhaseStepChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaBroadcastGameTimeWidget_C_OnGamePhaseStepChanged final
{
public:
	EAthenaGamePhaseStep                          GamePhaseStep;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastGameTimeWidget_C_OnGamePhaseStepChanged) == 0x000001, "Wrong alignment on AthenaBroadcastGameTimeWidget_C_OnGamePhaseStepChanged");
static_assert(sizeof(AthenaBroadcastGameTimeWidget_C_OnGamePhaseStepChanged) == 0x000001, "Wrong size on AthenaBroadcastGameTimeWidget_C_OnGamePhaseStepChanged");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_OnGamePhaseStepChanged, GamePhaseStep) == 0x000000, "Member 'AthenaBroadcastGameTimeWidget_C_OnGamePhaseStepChanged::GamePhaseStep' has a wrong offset!");

// Function AthenaBroadcastGameTimeWidget.AthenaBroadcastGameTimeWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaBroadcastGameTimeWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastGameTimeWidget_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaBroadcastGameTimeWidget_C_PreConstruct");
static_assert(sizeof(AthenaBroadcastGameTimeWidget_C_PreConstruct) == 0x000001, "Wrong size on AthenaBroadcastGameTimeWidget_C_PreConstruct");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaBroadcastGameTimeWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaBroadcastGameTimeWidget.AthenaBroadcastGameTimeWidget_C.SetIcon
// 0x0078 (0x0078 - 0x0000)
struct AthenaBroadcastGameTimeWidget_C_SetIcon final
{
public:
	EAthenaGamePhaseStep                          GamePhaseStep;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaGamePhaseStep                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastGameTimeWidget_C_SetIcon) == 0x000008, "Wrong alignment on AthenaBroadcastGameTimeWidget_C_SetIcon");
static_assert(sizeof(AthenaBroadcastGameTimeWidget_C_SetIcon) == 0x000078, "Wrong size on AthenaBroadcastGameTimeWidget_C_SetIcon");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, GamePhaseStep) == 0x000000, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::GamePhaseStep' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_byte_Variable) == 0x000001, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable) == 0x000008, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_1) == 0x000010, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_2) == 0x000018, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_3) == 0x000020, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_4) == 0x000028, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_5) == 0x000030, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_6) == 0x000038, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_7) == 0x000040, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_8) == 0x000048, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_9) == 0x000050, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_10) == 0x000058, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_11) == 0x000060, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, Temp_object_Variable_12) == 0x000068, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastGameTimeWidget_C_SetIcon, K2Node_Select_Default) == 0x000070, "Member 'AthenaBroadcastGameTimeWidget_C_SetIcon::K2Node_Select_Default' has a wrong offset!");

}

