#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseMovement_0

#include "Basic.hpp"

#include "SolarisInterop_structs.hpp"
#include "Verse_0_structs.hpp"
#include "Verse_structs.hpp"
#include "VerseMovement_0_structs.hpp"


namespace SDK::Params
{

// Function VerseMovement.VerseMovement._L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R
// 0x0010 (0x0010 - 0x0000)
struct VerseMovement__L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R final
{
public:
	class Uplayer_component*                      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseMovement__L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R) == 0x000008, "Wrong alignment on VerseMovement__L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R");
static_assert(sizeof(VerseMovement__L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R) == 0x000010, "Wrong size on VerseMovement__L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R");
static_assert(offsetof(VerseMovement__L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseMovement__L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseMovement__L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R, RetVal) == 0x000008, "Member 'VerseMovement__L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R::RetVal' has a wrong offset!");

// Function VerseMovement.VerseMovement.move_config$Factory
// 0x0020 (0x0020 - 0x0000)
struct VerseMovement_move_config_Factory final
{
public:
	struct Fmove_config                           RetVal;                                            // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<struct Fmove_config_entry>             _TEMP_0;                                           // 0x0010(0x0010)()
};
static_assert(alignof(VerseMovement_move_config_Factory) == 0x000008, "Wrong alignment on VerseMovement_move_config_Factory");
static_assert(sizeof(VerseMovement_move_config_Factory) == 0x000020, "Wrong size on VerseMovement_move_config_Factory");
static_assert(offsetof(VerseMovement_move_config_Factory, RetVal) == 0x000000, "Member 'VerseMovement_move_config_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_config_Factory, _TEMP_0) == 0x000010, "Member 'VerseMovement_move_config_Factory::_TEMP_0' has a wrong offset!");

// Function VerseMovement.VerseMovement.move_config_entry$Factory
// 0x0060 (0x0060 - 0x0000)
struct VerseMovement_move_config_entry_Factory final
{
public:
	struct Fmove_config_entry                     RetVal;                                            // 0x0000(0x0030)(Parm, OutParm, ReturnParm)
	FVerseStringProperty_                         _TEMP_0;                                           // 0x0030(0x0010)(HasGetValueTypeHash)
	TArray<struct Fmove_trigger>                  _TEMP_1;                                           // 0x0040(0x0010)()
	TArray<struct Fmove_response>                 _TEMP_2;                                           // 0x0050(0x0010)()
};
static_assert(alignof(VerseMovement_move_config_entry_Factory) == 0x000008, "Wrong alignment on VerseMovement_move_config_entry_Factory");
static_assert(sizeof(VerseMovement_move_config_entry_Factory) == 0x000060, "Wrong size on VerseMovement_move_config_entry_Factory");
static_assert(offsetof(VerseMovement_move_config_entry_Factory, RetVal) == 0x000000, "Member 'VerseMovement_move_config_entry_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_config_entry_Factory, _TEMP_0) == 0x000030, "Member 'VerseMovement_move_config_entry_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_config_entry_Factory, _TEMP_1) == 0x000040, "Member 'VerseMovement_move_config_entry_Factory::_TEMP_1' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_config_entry_Factory, _TEMP_2) == 0x000050, "Member 'VerseMovement_move_config_entry_Factory::_TEMP_2' has a wrong offset!");

// Function VerseMovement.VerseMovement.move_input_trigger_params$Factory
// 0x0060 (0x0060 - 0x0000)
struct VerseMovement_move_input_trigger_params_Factory final
{
public:
	struct Fmove_input_trigger_params             RetVal;                                            // 0x0000(0x0038)(Parm, OutParm, ReturnParm)
	FVerseStringProperty_                         _TEMP_0;                                           // 0x0038(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _TEMP_1;                                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector2                               _TEMP_2;                                           // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseMovement_move_input_trigger_params_Factory) == 0x000008, "Wrong alignment on VerseMovement_move_input_trigger_params_Factory");
static_assert(sizeof(VerseMovement_move_input_trigger_params_Factory) == 0x000060, "Wrong size on VerseMovement_move_input_trigger_params_Factory");
static_assert(offsetof(VerseMovement_move_input_trigger_params_Factory, RetVal) == 0x000000, "Member 'VerseMovement_move_input_trigger_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_input_trigger_params_Factory, _TEMP_0) == 0x000038, "Member 'VerseMovement_move_input_trigger_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_input_trigger_params_Factory, _TEMP_1) == 0x000048, "Member 'VerseMovement_move_input_trigger_params_Factory::_TEMP_1' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_input_trigger_params_Factory, _TEMP_2) == 0x000050, "Member 'VerseMovement_move_input_trigger_params_Factory::_TEMP_2' has a wrong offset!");

// Function VerseMovement.VerseMovement.move_physics_trigger_params$Factory
// 0x0030 (0x0030 - 0x0000)
struct VerseMovement_move_physics_trigger_params_Factory final
{
public:
	struct Fmove_physics_trigger_params           RetVal;                                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct Fvector3                               _TEMP_0;                                           // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseMovement_move_physics_trigger_params_Factory) == 0x000008, "Wrong alignment on VerseMovement_move_physics_trigger_params_Factory");
static_assert(sizeof(VerseMovement_move_physics_trigger_params_Factory) == 0x000030, "Wrong size on VerseMovement_move_physics_trigger_params_Factory");
static_assert(offsetof(VerseMovement_move_physics_trigger_params_Factory, RetVal) == 0x000000, "Member 'VerseMovement_move_physics_trigger_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_physics_trigger_params_Factory, _TEMP_0) == 0x000018, "Member 'VerseMovement_move_physics_trigger_params_Factory::_TEMP_0' has a wrong offset!");

// Function VerseMovement.VerseMovement.move_response$Factory
// 0x0088 (0x0088 - 0x0000)
struct VerseMovement_move_response_Factory final
{
public:
	struct Fmove_response                         RetVal;                                            // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NoDestructor)
	struct Fvector3                               _TEMP_0;                                           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector3                               _TEMP_2;                                           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseMovement_move_response_Factory) == 0x000008, "Wrong alignment on VerseMovement_move_response_Factory");
static_assert(sizeof(VerseMovement_move_response_Factory) == 0x000088, "Wrong size on VerseMovement_move_response_Factory");
static_assert(offsetof(VerseMovement_move_response_Factory, RetVal) == 0x000000, "Member 'VerseMovement_move_response_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_response_Factory, _TEMP_0) == 0x000050, "Member 'VerseMovement_move_response_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_response_Factory, _TEMP_1) == 0x000068, "Member 'VerseMovement_move_response_Factory::_TEMP_1' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_response_Factory, _TEMP_2) == 0x000070, "Member 'VerseMovement_move_response_Factory::_TEMP_2' has a wrong offset!");

// Function VerseMovement.VerseMovement.move_trace_trigger_params$Factory
// 0x0058 (0x0058 - 0x0000)
struct VerseMovement_move_trace_trigger_params_Factory final
{
public:
	struct Fmove_trace_trigger_params             RetVal;                                            // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NoDestructor)
	struct Fvector3                               _TEMP_0;                                           // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseMovement_move_trace_trigger_params_Factory) == 0x000008, "Wrong alignment on VerseMovement_move_trace_trigger_params_Factory");
static_assert(sizeof(VerseMovement_move_trace_trigger_params_Factory) == 0x000058, "Wrong size on VerseMovement_move_trace_trigger_params_Factory");
static_assert(offsetof(VerseMovement_move_trace_trigger_params_Factory, RetVal) == 0x000000, "Member 'VerseMovement_move_trace_trigger_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_trace_trigger_params_Factory, _TEMP_0) == 0x000038, "Member 'VerseMovement_move_trace_trigger_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_trace_trigger_params_Factory, _TEMP_1) == 0x000050, "Member 'VerseMovement_move_trace_trigger_params_Factory::_TEMP_1' has a wrong offset!");

// Function VerseMovement.VerseMovement.move_trigger$Factory
// 0x0118 (0x0118 - 0x0000)
struct VerseMovement_move_trigger_Factory final
{
public:
	struct Fmove_trigger                          RetVal;                                            // 0x0000(0x0090)(Parm, OutParm, ReturnParm)
	struct Fmove_input_trigger_params             _TEMP_0;                                           // 0x0090(0x0038)()
	struct Fmove_physics_trigger_params           _TEMP_1;                                           // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Fmove_trace_trigger_params             _TEMP_2;                                           // 0x00E0(0x0038)(NoDestructor)
};
static_assert(alignof(VerseMovement_move_trigger_Factory) == 0x000008, "Wrong alignment on VerseMovement_move_trigger_Factory");
static_assert(sizeof(VerseMovement_move_trigger_Factory) == 0x000118, "Wrong size on VerseMovement_move_trigger_Factory");
static_assert(offsetof(VerseMovement_move_trigger_Factory, RetVal) == 0x000000, "Member 'VerseMovement_move_trigger_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_trigger_Factory, _TEMP_0) == 0x000090, "Member 'VerseMovement_move_trigger_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_trigger_Factory, _TEMP_1) == 0x0000C8, "Member 'VerseMovement_move_trigger_Factory::_TEMP_1' has a wrong offset!");
static_assert(offsetof(VerseMovement_move_trigger_Factory, _TEMP_2) == 0x0000E0, "Member 'VerseMovement_move_trigger_Factory::_TEMP_2' has a wrong offset!");

// Function VerseMovement.movement_component.$InitCDO
// 0x0001 (0x0001 - 0x0000)
struct movement_component__InitCDO final
{
public:
	EVerseTrue                                    _TEMP_0;                                           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(movement_component__InitCDO) == 0x000001, "Wrong alignment on movement_component__InitCDO");
static_assert(sizeof(movement_component__InitCDO) == 0x000001, "Wrong size on movement_component__InitCDO");
static_assert(offsetof(movement_component__InitCDO, _TEMP_0) == 0x000000, "Member 'movement_component__InitCDO::_TEMP_0' has a wrong offset!");

// Function VerseMovement.movement_component._L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R
// 0x0018 (0x0018 - 0x0000)
struct movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R final
{
public:
	struct Fvector3                               __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R) == 0x000008, "Wrong alignment on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R");
static_assert(sizeof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R) == 0x000018, "Wrong size on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R");
static_assert(offsetof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseMovement.movement_component._L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R
// 0x0018 (0x0018 - 0x0000)
struct movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R final
{
public:
	struct Fvector3                               __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R) == 0x000008, "Wrong alignment on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R");
static_assert(sizeof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R) == 0x000018, "Wrong size on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R");
static_assert(offsetof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseMovement.movement_component._L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R
// 0x0008 (0x0008 - 0x0000)
struct movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R final
{
public:
	class Uplayer_component*                      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R) == 0x000008, "Wrong alignment on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R");
static_assert(sizeof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R) == 0x000008, "Wrong size on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R");
static_assert(offsetof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseMovement.movement_component._L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R
// 0x0008 (0x0008 - 0x0000)
struct movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R final
{
public:
	class Uplayer_component*                      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R) == 0x000008, "Wrong alignment on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R");
static_assert(sizeof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R) == 0x000008, "Wrong size on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R");
static_assert(offsetof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseMovement.movement_component._L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R
// 0x0008 (0x0008 - 0x0000)
struct movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R final
{
public:
	class Umove_config_asset*                     __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R) == 0x000008, "Wrong alignment on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R");
static_assert(sizeof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R) == 0x000008, "Wrong size on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R");
static_assert(offsetof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseMovement.movement_component._L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R
// 0x0010 (0x0010 - 0x0000)
struct movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R final
{
public:
	struct Fmove_config                           __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm)
};
static_assert(alignof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R) == 0x000008, "Wrong alignment on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R");
static_assert(sizeof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R) == 0x000010, "Wrong size on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R");
static_assert(offsetof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseMovement.movement_component._L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetEnabled_L_Nlogic_R
// 0x0001 (0x0001 - 0x0000)
struct movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetEnabled_L_Nlogic_R final
{
public:
	uint8                                         __verse_0xB2CDDD72_Argument : 1;                   // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetEnabled_L_Nlogic_R) == 0x000001, "Wrong alignment on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetEnabled_L_Nlogic_R");
static_assert(sizeof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetEnabled_L_Nlogic_R) == 0x000001, "Wrong size on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetEnabled_L_Nlogic_R");

// Function VerseMovement.movement_component._L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R
// 0x0018 (0x0018 - 0x0000)
struct movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R final
{
public:
	struct Fvector3                               __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R) == 0x000008, "Wrong alignment on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R");
static_assert(sizeof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R) == 0x000018, "Wrong size on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R");
static_assert(offsetof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseMovement.movement_component._L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R
// 0x0020 (0x0020 - 0x0000)
struct movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R final
{
public:
	struct FVerseRotation                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, NoDestructor)
};
static_assert(alignof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R) == 0x000010, "Wrong alignment on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R");
static_assert(sizeof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R) == 0x000020, "Wrong size on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R");
static_assert(offsetof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseMovement.movement_component._L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R
// 0x0018 (0x0018 - 0x0000)
struct movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R final
{
public:
	struct Fvector3                               __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R) == 0x000008, "Wrong alignment on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R");
static_assert(sizeof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R) == 0x000018, "Wrong size on movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R");
static_assert(offsetof(movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'movement_component__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseMovement.VerseMovementUtil.$InitCDO
// 0x0CF8 (0x0CF8 - 0x0000)
struct VerseMovementUtil__InitCDO final
{
public:
	struct Fmove_config                           _TEMP_0;                                           // 0x0000(0x0010)()
	TArray<struct Fmove_config_entry>             _TEMP_1;                                           // 0x0010(0x0010)()
	struct Fmove_config_entry                     _TEMP_2;                                           // 0x0020(0x0030)()
	FVerseStringProperty_                         _TEMP_3;                                           // 0x0050(0x0010)(HasGetValueTypeHash)
	TArray<struct Fmove_trigger>                  _TEMP_4;                                           // 0x0060(0x0010)()
	struct Fmove_trigger                          _TEMP_5;                                           // 0x0070(0x0090)()
	struct Fmove_input_trigger_params             _TEMP_6;                                           // 0x0100(0x0038)()
	FVerseStringProperty_                         _TEMP_7;                                           // 0x0138(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _TEMP_8;                                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector2                               _TEMP_9;                                           // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct Fmove_response>                 _TEMP_10;                                          // 0x0160(0x0010)()
	struct Fmove_response                         _TEMP_11;                                          // 0x0170(0x0050)(NoDestructor)
	struct Fvector3                               _TEMP_12;                                          // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_13;                                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector3                               _TEMP_14;                                          // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Fmove_config_entry                     _TEMP_15;                                          // 0x01F8(0x0030)()
	FVerseStringProperty_                         _TEMP_16;                                          // 0x0228(0x0010)(HasGetValueTypeHash)
	TArray<struct Fmove_trigger>                  _TEMP_17;                                          // 0x0238(0x0010)()
	struct Fmove_trigger                          _TEMP_18;                                          // 0x0248(0x0090)()
	struct Fmove_input_trigger_params             _TEMP_19;                                          // 0x02D8(0x0038)()
	FVerseStringProperty_                         _TEMP_20;                                          // 0x0310(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _TEMP_21;                                          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector2                               _TEMP_22;                                          // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct Fmove_response>                 _TEMP_23;                                          // 0x0338(0x0010)()
	struct Fmove_response                         _TEMP_24;                                          // 0x0348(0x0050)(NoDestructor)
	struct Fvector3                               _TEMP_25;                                          // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_26;                                          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector3                               _TEMP_27;                                          // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Fmove_config_entry                     _TEMP_28;                                          // 0x03D0(0x0030)()
	FVerseStringProperty_                         _TEMP_29;                                          // 0x0400(0x0010)(HasGetValueTypeHash)
	TArray<struct Fmove_trigger>                  _TEMP_30;                                          // 0x0410(0x0010)()
	struct Fmove_trigger                          _TEMP_31;                                          // 0x0420(0x0090)()
	struct Fmove_input_trigger_params             _TEMP_32;                                          // 0x04B0(0x0038)()
	FVerseStringProperty_                         _TEMP_33;                                          // 0x04E8(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _TEMP_34;                                          // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector2                               _TEMP_35;                                          // 0x0500(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Fmove_trigger                          _TEMP_36;                                          // 0x0510(0x0090)()
	struct Fmove_trace_trigger_params             _TEMP_37;                                          // 0x05A0(0x0038)(NoDestructor)
	struct Fvector3                               _TEMP_38;                                          // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_39;                                          // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct Fmove_response>                 _TEMP_40;                                          // 0x05F8(0x0010)()
	struct Fmove_response                         _TEMP_41;                                          // 0x0608(0x0050)(NoDestructor)
	struct Fvector3                               _TEMP_42;                                          // 0x0658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_43;                                          // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector3                               _TEMP_44;                                          // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Fmove_config_entry                     _TEMP_45;                                          // 0x0690(0x0030)()
	FVerseStringProperty_                         _TEMP_46;                                          // 0x06C0(0x0010)(HasGetValueTypeHash)
	TArray<struct Fmove_trigger>                  _TEMP_47;                                          // 0x06D0(0x0010)()
	struct Fmove_trigger                          _TEMP_48;                                          // 0x06E0(0x0090)()
	struct Fmove_input_trigger_params             _TEMP_49;                                          // 0x0770(0x0038)()
	FVerseStringProperty_                         _TEMP_50;                                          // 0x07A8(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _TEMP_51;                                          // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector2                               _TEMP_52;                                          // 0x07C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Fmove_trigger                          _TEMP_53;                                          // 0x07D0(0x0090)()
	struct Fmove_trace_trigger_params             _TEMP_54;                                          // 0x0860(0x0038)(NoDestructor)
	struct Fvector3                               _TEMP_55;                                          // 0x0898(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_56;                                          // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct Fmove_response>                 _TEMP_57;                                          // 0x08B8(0x0010)()
	struct Fmove_response                         _TEMP_58;                                          // 0x08C8(0x0050)(NoDestructor)
	struct Fvector3                               _TEMP_59;                                          // 0x0918(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_60;                                          // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector3                               _TEMP_61;                                          // 0x0938(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Fmove_config_entry                     _TEMP_62;                                          // 0x0950(0x0030)()
	FVerseStringProperty_                         _TEMP_63;                                          // 0x0980(0x0010)(HasGetValueTypeHash)
	TArray<struct Fmove_trigger>                  _TEMP_64;                                          // 0x0990(0x0010)()
	struct Fmove_trigger                          _TEMP_65;                                          // 0x09A0(0x0090)()
	struct Fmove_input_trigger_params             _TEMP_66;                                          // 0x0A30(0x0038)()
	FVerseStringProperty_                         _TEMP_67;                                          // 0x0A68(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _TEMP_68;                                          // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector2                               _TEMP_69;                                          // 0x0A80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct Fmove_response>                 _TEMP_70;                                          // 0x0A90(0x0010)()
	struct Fmove_response                         _TEMP_71;                                          // 0x0AA0(0x0050)(NoDestructor)
	struct Fvector3                               _TEMP_72;                                          // 0x0AF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_73;                                          // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector3                               _TEMP_74;                                          // 0x0B10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Fmove_config_entry                     _TEMP_75;                                          // 0x0B28(0x0030)()
	FVerseStringProperty_                         _TEMP_76;                                          // 0x0B58(0x0010)(HasGetValueTypeHash)
	TArray<struct Fmove_trigger>                  _TEMP_77;                                          // 0x0B68(0x0010)()
	struct Fmove_trigger                          _TEMP_78;                                          // 0x0B78(0x0090)()
	struct Fmove_trace_trigger_params             _TEMP_79;                                          // 0x0C08(0x0038)(NoDestructor)
	struct Fvector3                               _TEMP_80;                                          // 0x0C40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_81;                                          // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct Fmove_response>                 _TEMP_82;                                          // 0x0C60(0x0010)()
	struct Fmove_response                         _TEMP_83;                                          // 0x0C70(0x0050)(NoDestructor)
	struct Fvector3                               _TEMP_84;                                          // 0x0CC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_85;                                          // 0x0CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector3                               _TEMP_86;                                          // 0x0CE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseMovementUtil__InitCDO) == 0x000008, "Wrong alignment on VerseMovementUtil__InitCDO");
static_assert(sizeof(VerseMovementUtil__InitCDO) == 0x000CF8, "Wrong size on VerseMovementUtil__InitCDO");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_0) == 0x000000, "Member 'VerseMovementUtil__InitCDO::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_1) == 0x000010, "Member 'VerseMovementUtil__InitCDO::_TEMP_1' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_2) == 0x000020, "Member 'VerseMovementUtil__InitCDO::_TEMP_2' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_3) == 0x000050, "Member 'VerseMovementUtil__InitCDO::_TEMP_3' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_4) == 0x000060, "Member 'VerseMovementUtil__InitCDO::_TEMP_4' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_5) == 0x000070, "Member 'VerseMovementUtil__InitCDO::_TEMP_5' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_6) == 0x000100, "Member 'VerseMovementUtil__InitCDO::_TEMP_6' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_7) == 0x000138, "Member 'VerseMovementUtil__InitCDO::_TEMP_7' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_8) == 0x000148, "Member 'VerseMovementUtil__InitCDO::_TEMP_8' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_9) == 0x000150, "Member 'VerseMovementUtil__InitCDO::_TEMP_9' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_10) == 0x000160, "Member 'VerseMovementUtil__InitCDO::_TEMP_10' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_11) == 0x000170, "Member 'VerseMovementUtil__InitCDO::_TEMP_11' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_12) == 0x0001C0, "Member 'VerseMovementUtil__InitCDO::_TEMP_12' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_13) == 0x0001D8, "Member 'VerseMovementUtil__InitCDO::_TEMP_13' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_14) == 0x0001E0, "Member 'VerseMovementUtil__InitCDO::_TEMP_14' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_15) == 0x0001F8, "Member 'VerseMovementUtil__InitCDO::_TEMP_15' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_16) == 0x000228, "Member 'VerseMovementUtil__InitCDO::_TEMP_16' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_17) == 0x000238, "Member 'VerseMovementUtil__InitCDO::_TEMP_17' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_18) == 0x000248, "Member 'VerseMovementUtil__InitCDO::_TEMP_18' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_19) == 0x0002D8, "Member 'VerseMovementUtil__InitCDO::_TEMP_19' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_20) == 0x000310, "Member 'VerseMovementUtil__InitCDO::_TEMP_20' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_21) == 0x000320, "Member 'VerseMovementUtil__InitCDO::_TEMP_21' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_22) == 0x000328, "Member 'VerseMovementUtil__InitCDO::_TEMP_22' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_23) == 0x000338, "Member 'VerseMovementUtil__InitCDO::_TEMP_23' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_24) == 0x000348, "Member 'VerseMovementUtil__InitCDO::_TEMP_24' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_25) == 0x000398, "Member 'VerseMovementUtil__InitCDO::_TEMP_25' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_26) == 0x0003B0, "Member 'VerseMovementUtil__InitCDO::_TEMP_26' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_27) == 0x0003B8, "Member 'VerseMovementUtil__InitCDO::_TEMP_27' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_28) == 0x0003D0, "Member 'VerseMovementUtil__InitCDO::_TEMP_28' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_29) == 0x000400, "Member 'VerseMovementUtil__InitCDO::_TEMP_29' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_30) == 0x000410, "Member 'VerseMovementUtil__InitCDO::_TEMP_30' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_31) == 0x000420, "Member 'VerseMovementUtil__InitCDO::_TEMP_31' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_32) == 0x0004B0, "Member 'VerseMovementUtil__InitCDO::_TEMP_32' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_33) == 0x0004E8, "Member 'VerseMovementUtil__InitCDO::_TEMP_33' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_34) == 0x0004F8, "Member 'VerseMovementUtil__InitCDO::_TEMP_34' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_35) == 0x000500, "Member 'VerseMovementUtil__InitCDO::_TEMP_35' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_36) == 0x000510, "Member 'VerseMovementUtil__InitCDO::_TEMP_36' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_37) == 0x0005A0, "Member 'VerseMovementUtil__InitCDO::_TEMP_37' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_38) == 0x0005D8, "Member 'VerseMovementUtil__InitCDO::_TEMP_38' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_39) == 0x0005F0, "Member 'VerseMovementUtil__InitCDO::_TEMP_39' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_40) == 0x0005F8, "Member 'VerseMovementUtil__InitCDO::_TEMP_40' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_41) == 0x000608, "Member 'VerseMovementUtil__InitCDO::_TEMP_41' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_42) == 0x000658, "Member 'VerseMovementUtil__InitCDO::_TEMP_42' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_43) == 0x000670, "Member 'VerseMovementUtil__InitCDO::_TEMP_43' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_44) == 0x000678, "Member 'VerseMovementUtil__InitCDO::_TEMP_44' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_45) == 0x000690, "Member 'VerseMovementUtil__InitCDO::_TEMP_45' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_46) == 0x0006C0, "Member 'VerseMovementUtil__InitCDO::_TEMP_46' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_47) == 0x0006D0, "Member 'VerseMovementUtil__InitCDO::_TEMP_47' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_48) == 0x0006E0, "Member 'VerseMovementUtil__InitCDO::_TEMP_48' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_49) == 0x000770, "Member 'VerseMovementUtil__InitCDO::_TEMP_49' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_50) == 0x0007A8, "Member 'VerseMovementUtil__InitCDO::_TEMP_50' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_51) == 0x0007B8, "Member 'VerseMovementUtil__InitCDO::_TEMP_51' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_52) == 0x0007C0, "Member 'VerseMovementUtil__InitCDO::_TEMP_52' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_53) == 0x0007D0, "Member 'VerseMovementUtil__InitCDO::_TEMP_53' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_54) == 0x000860, "Member 'VerseMovementUtil__InitCDO::_TEMP_54' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_55) == 0x000898, "Member 'VerseMovementUtil__InitCDO::_TEMP_55' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_56) == 0x0008B0, "Member 'VerseMovementUtil__InitCDO::_TEMP_56' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_57) == 0x0008B8, "Member 'VerseMovementUtil__InitCDO::_TEMP_57' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_58) == 0x0008C8, "Member 'VerseMovementUtil__InitCDO::_TEMP_58' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_59) == 0x000918, "Member 'VerseMovementUtil__InitCDO::_TEMP_59' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_60) == 0x000930, "Member 'VerseMovementUtil__InitCDO::_TEMP_60' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_61) == 0x000938, "Member 'VerseMovementUtil__InitCDO::_TEMP_61' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_62) == 0x000950, "Member 'VerseMovementUtil__InitCDO::_TEMP_62' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_63) == 0x000980, "Member 'VerseMovementUtil__InitCDO::_TEMP_63' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_64) == 0x000990, "Member 'VerseMovementUtil__InitCDO::_TEMP_64' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_65) == 0x0009A0, "Member 'VerseMovementUtil__InitCDO::_TEMP_65' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_66) == 0x000A30, "Member 'VerseMovementUtil__InitCDO::_TEMP_66' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_67) == 0x000A68, "Member 'VerseMovementUtil__InitCDO::_TEMP_67' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_68) == 0x000A78, "Member 'VerseMovementUtil__InitCDO::_TEMP_68' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_69) == 0x000A80, "Member 'VerseMovementUtil__InitCDO::_TEMP_69' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_70) == 0x000A90, "Member 'VerseMovementUtil__InitCDO::_TEMP_70' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_71) == 0x000AA0, "Member 'VerseMovementUtil__InitCDO::_TEMP_71' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_72) == 0x000AF0, "Member 'VerseMovementUtil__InitCDO::_TEMP_72' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_73) == 0x000B08, "Member 'VerseMovementUtil__InitCDO::_TEMP_73' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_74) == 0x000B10, "Member 'VerseMovementUtil__InitCDO::_TEMP_74' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_75) == 0x000B28, "Member 'VerseMovementUtil__InitCDO::_TEMP_75' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_76) == 0x000B58, "Member 'VerseMovementUtil__InitCDO::_TEMP_76' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_77) == 0x000B68, "Member 'VerseMovementUtil__InitCDO::_TEMP_77' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_78) == 0x000B78, "Member 'VerseMovementUtil__InitCDO::_TEMP_78' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_79) == 0x000C08, "Member 'VerseMovementUtil__InitCDO::_TEMP_79' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_80) == 0x000C40, "Member 'VerseMovementUtil__InitCDO::_TEMP_80' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_81) == 0x000C58, "Member 'VerseMovementUtil__InitCDO::_TEMP_81' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_82) == 0x000C60, "Member 'VerseMovementUtil__InitCDO::_TEMP_82' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_83) == 0x000C70, "Member 'VerseMovementUtil__InitCDO::_TEMP_83' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_84) == 0x000CC0, "Member 'VerseMovementUtil__InitCDO::_TEMP_84' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_85) == 0x000CD8, "Member 'VerseMovementUtil__InitCDO::_TEMP_85' has a wrong offset!");
static_assert(offsetof(VerseMovementUtil__InitCDO, _TEMP_86) == 0x000CE0, "Member 'VerseMovementUtil__InitCDO::_TEMP_86' has a wrong offset!");

}

