#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ResTorchWeapon

#include "Basic.hpp"

#include "B_ResTorchWeapon_classes.hpp"
#include "B_ResTorchWeapon_parameters.hpp"


namespace SDK
{

// Function B_ResTorchWeapon.B_ResTorchWeapon_C.ActivateIdleSound
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::ActivateIdleSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "ActivateIdleSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.DeactivateAudioComponents
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::DeactivateAudioComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "DeactivateAudioComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.DestroyTimer
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::DestroyTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "DestroyTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.DrawDecalOnTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Healing_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::DrawDecalOnTarget(const struct FVector& Location, bool Healing_, const struct FVector& Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "DrawDecalOnTarget");

	Params::B_ResTorchWeapon_C_DrawDecalOnTarget Parms{};

	Parms.Location = std::move(Location);
	Parms.Healing_ = Healing_;
	Parms.Normal = std::move(Normal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.EnableAmmoEvents
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::EnableAmmoEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "EnableAmmoEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.ExecuteUbergraph_B_ResTorchWeapon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::ExecuteUbergraph_B_ResTorchWeapon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "ExecuteUbergraph_B_ResTorchWeapon");

	Params::B_ResTorchWeapon_C_ExecuteUbergraph_B_ResTorchWeapon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.GameplayCue.Impact.Generic
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AB_ResTorchWeapon_C::GameplayCue_Impact_Generic(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "GameplayCue.Impact.Generic");

	Params::B_ResTorchWeapon_C_GameplayCue_Impact_Generic Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.Get FX By Actor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraSystem*                   NS                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::Get_FX_By_Actor(class AActor* Actor, class UNiagaraSystem** NS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "Get FX By Actor");

	Params::B_ResTorchWeapon_C_Get_FX_By_Actor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (NS != nullptr)
		*NS = Parms.NS;
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.Get SFX By Actor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           SurfacedActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundBase*                       Impact_Sound                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   HealthPercent                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::Get_SFX_By_Actor(class AActor* SurfacedActor, class USoundBase** Impact_Sound, float* HealthPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "Get SFX By Actor");

	Params::B_ResTorchWeapon_C_Get_SFX_By_Actor Parms{};

	Parms.SurfacedActor = SurfacedActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Impact_Sound != nullptr)
		*Impact_Sound = Parms.Impact_Sound;

	if (HealthPercent != nullptr)
		*HealthPercent = Parms.HealthPercent;
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.GetActorAndLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::GetActorAndLocation(const struct FGameplayCueParameters& Parameters, struct FVector* Location, class AActor** HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "GetActorAndLocation");

	Params::B_ResTorchWeapon_C_GetActorAndLocation Parms{};

	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (HitActor != nullptr)
		*HitActor = Parms.HitActor;
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.Is Full Health?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Full                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   HealthPercent                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::Is_Full_Health_(class AActor* Actor, bool* Full, float* HealthPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "Is Full Health?");

	Params::B_ResTorchWeapon_C_Is_Full_Health_ Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Full != nullptr)
		*Full = Parms.Full;

	if (HealthPercent != nullptr)
		*HealthPercent = Parms.HealthPercent;
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.IsSMActorHealable?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABuildingActor*                   Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::IsSMActorHealable_(class ABuildingActor* Actor, bool* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "IsSMActorHealable?");

	Params::B_ResTorchWeapon_C_IsSMActorHealable_ Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.K2_OnUnEquip
// (Event, Public, BlueprintEvent)

void AB_ResTorchWeapon_C::K2_OnUnEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "K2_OnUnEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.Make Normalized Rot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator AB_ResTorchWeapon_C::Make_Normalized_Rot(const struct FVector& Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "Make Normalized Rot");

	Params::B_ResTorchWeapon_C_Make_Normalized_Rot Parms{};

	Parms.Normal = std::move(Normal);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.OnAmmoCountChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AB_ResTorchWeapon_C::OnAmmoCountChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "OnAmmoCountChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.OnHolstered
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::OnHolstered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "OnHolstered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.OnPlayWeaponFireFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPersistentFire                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSecondaryFire                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "OnPlayWeaponFireFX");

	Params::B_ResTorchWeapon_C_OnPlayWeaponFireFX Parms{};

	Parms.bPersistentFire = bPersistentFire;
	Parms.bSecondaryFire = bSecondaryFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.OnRep_OnEffectsFadeIn
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::OnRep_OnEffectsFadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "OnRep_OnEffectsFadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.OnRep_OnHealLoopFaded
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::OnRep_OnHealLoopFaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "OnRep_OnHealLoopFaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.OnStopWeaponFireFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AB_ResTorchWeapon_C::OnStopWeaponFireFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "OnStopWeaponFireFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.OnUnholstered
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::OnUnholstered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "OnUnholstered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.OnWeaponAttached
// (Event, Public, BlueprintEvent)

void AB_ResTorchWeapon_C::OnWeaponAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "OnWeaponAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.PlayFXLatent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                NS                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::PlayFXLatent(class UNiagaraComponent* NS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "PlayFXLatent");

	Params::B_ResTorchWeapon_C_PlayFXLatent Parms{};

	Parms.NS = NS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.PlayHealingLoop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::PlayHealingLoop(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "PlayHealingLoop");

	Params::B_ResTorchWeapon_C_PlayHealingLoop Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.PlayImpactFXOnCue
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayCueParameters           InputParams                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void AB_ResTorchWeapon_C::PlayImpactFXOnCue(const struct FGameplayCueParameters& InputParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "PlayImpactFXOnCue");

	Params::B_ResTorchWeapon_C_PlayImpactFXOnCue Parms{};

	Parms.InputParams = std::move(InputParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.PlayWeaponFireFX_ForceFeedback
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::PlayWeaponFireFX_ForceFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "PlayWeaponFireFX_ForceFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_ResTorchWeapon_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.RepUnequipFX
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::RepUnequipFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "RepUnequipFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.ResetLatentFX
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::ResetLatentFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "ResetLatentFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.ScaleUpTimeline__FinishedFunc
// (BlueprintEvent)

void AB_ResTorchWeapon_C::ScaleUpTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "ScaleUpTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.ScaleUpTimeline__UpdateFunc
// (BlueprintEvent)

void AB_ResTorchWeapon_C::ScaleUpTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "ScaleUpTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.SetEndFlameColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFXSystemComponent*               FXComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ResTorchWeapon_C::SetEndFlameColor(class UFXSystemComponent* FXComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "SetEndFlameColor");

	Params::B_ResTorchWeapon_C_SetEndFlameColor Parms{};

	Parms.FXComp = FXComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.SetHealingOff
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::SetHealingOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "SetHealingOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.ShrinkAndFadeActiveFire
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::ShrinkAndFadeActiveFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "ShrinkAndFadeActiveFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ResTorchWeapon.B_ResTorchWeapon_C.StopTimeline
// (BlueprintCallable, BlueprintEvent)

void AB_ResTorchWeapon_C::StopTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ResTorchWeapon_C", "StopTimeline");

	UObject::ProcessEvent(Func, nullptr);
}

}

