#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StateTreeModule

#include "Basic.hpp"

#include "StateTreeModule_structs.hpp"


namespace SDK::Params
{

// Function StateTreeModule.StateTreeTaskBlueprintBase.ReceiveEnterState
// 0x0018 (0x0018 - 0x0000)
struct StateTreeTaskBlueprintBase_ReceiveEnterState final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStateTreeStateChangeType                     ChangeType;                                        // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x1];                                        // 0x0009(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeTransitionResult             TRANSITION;                                        // 0x000A(0x000A)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	EStateTreeRunStatus                           ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StateTreeTaskBlueprintBase_ReceiveEnterState) == 0x000008, "Wrong alignment on StateTreeTaskBlueprintBase_ReceiveEnterState");
static_assert(sizeof(StateTreeTaskBlueprintBase_ReceiveEnterState) == 0x000018, "Wrong size on StateTreeTaskBlueprintBase_ReceiveEnterState");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveEnterState, OwnerActor) == 0x000000, "Member 'StateTreeTaskBlueprintBase_ReceiveEnterState::OwnerActor' has a wrong offset!");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveEnterState, ChangeType) == 0x000008, "Member 'StateTreeTaskBlueprintBase_ReceiveEnterState::ChangeType' has a wrong offset!");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveEnterState, TRANSITION) == 0x00000A, "Member 'StateTreeTaskBlueprintBase_ReceiveEnterState::TRANSITION' has a wrong offset!");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveEnterState, ReturnValue) == 0x000014, "Member 'StateTreeTaskBlueprintBase_ReceiveEnterState::ReturnValue' has a wrong offset!");

// Function StateTreeModule.StateTreeTaskBlueprintBase.ReceiveExitState
// 0x0018 (0x0018 - 0x0000)
struct StateTreeTaskBlueprintBase_ReceiveExitState final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStateTreeStateChangeType                     ChangeType;                                        // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x1];                                        // 0x0009(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeTransitionResult             TRANSITION;                                        // 0x000A(0x000A)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StateTreeTaskBlueprintBase_ReceiveExitState) == 0x000008, "Wrong alignment on StateTreeTaskBlueprintBase_ReceiveExitState");
static_assert(sizeof(StateTreeTaskBlueprintBase_ReceiveExitState) == 0x000018, "Wrong size on StateTreeTaskBlueprintBase_ReceiveExitState");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveExitState, OwnerActor) == 0x000000, "Member 'StateTreeTaskBlueprintBase_ReceiveExitState::OwnerActor' has a wrong offset!");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveExitState, ChangeType) == 0x000008, "Member 'StateTreeTaskBlueprintBase_ReceiveExitState::ChangeType' has a wrong offset!");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveExitState, TRANSITION) == 0x00000A, "Member 'StateTreeTaskBlueprintBase_ReceiveExitState::TRANSITION' has a wrong offset!");

// Function StateTreeModule.StateTreeTaskBlueprintBase.ReceiveStateCompleted
// 0x0010 (0x0010 - 0x0000)
struct StateTreeTaskBlueprintBase_ReceiveStateCompleted final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStateTreeRunStatus                           CompletionStatus;                                  // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x1];                                        // 0x0009(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeHandle                       CompletedState;                                    // 0x000A(0x0002)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StateTreeTaskBlueprintBase_ReceiveStateCompleted) == 0x000008, "Wrong alignment on StateTreeTaskBlueprintBase_ReceiveStateCompleted");
static_assert(sizeof(StateTreeTaskBlueprintBase_ReceiveStateCompleted) == 0x000010, "Wrong size on StateTreeTaskBlueprintBase_ReceiveStateCompleted");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveStateCompleted, OwnerActor) == 0x000000, "Member 'StateTreeTaskBlueprintBase_ReceiveStateCompleted::OwnerActor' has a wrong offset!");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveStateCompleted, CompletionStatus) == 0x000008, "Member 'StateTreeTaskBlueprintBase_ReceiveStateCompleted::CompletionStatus' has a wrong offset!");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveStateCompleted, CompletedState) == 0x00000A, "Member 'StateTreeTaskBlueprintBase_ReceiveStateCompleted::CompletedState' has a wrong offset!");

// Function StateTreeModule.StateTreeTaskBlueprintBase.ReceiveTick
// 0x0010 (0x0010 - 0x0000)
struct StateTreeTaskBlueprintBase_ReceiveTick final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeltaTime;                                         // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStateTreeRunStatus                           ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StateTreeTaskBlueprintBase_ReceiveTick) == 0x000008, "Wrong alignment on StateTreeTaskBlueprintBase_ReceiveTick");
static_assert(sizeof(StateTreeTaskBlueprintBase_ReceiveTick) == 0x000010, "Wrong size on StateTreeTaskBlueprintBase_ReceiveTick");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveTick, OwnerActor) == 0x000000, "Member 'StateTreeTaskBlueprintBase_ReceiveTick::OwnerActor' has a wrong offset!");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveTick, DeltaTime) == 0x000008, "Member 'StateTreeTaskBlueprintBase_ReceiveTick::DeltaTime' has a wrong offset!");
static_assert(offsetof(StateTreeTaskBlueprintBase_ReceiveTick, ReturnValue) == 0x00000C, "Member 'StateTreeTaskBlueprintBase_ReceiveTick::ReturnValue' has a wrong offset!");

// Function StateTreeModule.StateTreeConditionBlueprintBase.ReceiveTestCondition
// 0x0010 (0x0010 - 0x0000)
struct StateTreeConditionBlueprintBase_ReceiveTestCondition final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StateTreeConditionBlueprintBase_ReceiveTestCondition) == 0x000008, "Wrong alignment on StateTreeConditionBlueprintBase_ReceiveTestCondition");
static_assert(sizeof(StateTreeConditionBlueprintBase_ReceiveTestCondition) == 0x000010, "Wrong size on StateTreeConditionBlueprintBase_ReceiveTestCondition");
static_assert(offsetof(StateTreeConditionBlueprintBase_ReceiveTestCondition, OwnerActor) == 0x000000, "Member 'StateTreeConditionBlueprintBase_ReceiveTestCondition::OwnerActor' has a wrong offset!");
static_assert(offsetof(StateTreeConditionBlueprintBase_ReceiveTestCondition, ReturnValue) == 0x000008, "Member 'StateTreeConditionBlueprintBase_ReceiveTestCondition::ReturnValue' has a wrong offset!");

// Function StateTreeModule.StateTreeEvaluatorBlueprintBase.ReceiveEnterState
// 0x0018 (0x0018 - 0x0000)
struct StateTreeEvaluatorBlueprintBase_ReceiveEnterState final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStateTreeStateChangeType                     ChangeType;                                        // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x1];                                        // 0x0009(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeTransitionResult             TRANSITION;                                        // 0x000A(0x000A)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StateTreeEvaluatorBlueprintBase_ReceiveEnterState) == 0x000008, "Wrong alignment on StateTreeEvaluatorBlueprintBase_ReceiveEnterState");
static_assert(sizeof(StateTreeEvaluatorBlueprintBase_ReceiveEnterState) == 0x000018, "Wrong size on StateTreeEvaluatorBlueprintBase_ReceiveEnterState");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveEnterState, OwnerActor) == 0x000000, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveEnterState::OwnerActor' has a wrong offset!");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveEnterState, ChangeType) == 0x000008, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveEnterState::ChangeType' has a wrong offset!");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveEnterState, TRANSITION) == 0x00000A, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveEnterState::TRANSITION' has a wrong offset!");

// Function StateTreeModule.StateTreeEvaluatorBlueprintBase.ReceiveEvaluate
// 0x0010 (0x0010 - 0x0000)
struct StateTreeEvaluatorBlueprintBase_ReceiveEvaluate final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStateTreeEvaluationType                      EvalType;                                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StateTreeEvaluatorBlueprintBase_ReceiveEvaluate) == 0x000008, "Wrong alignment on StateTreeEvaluatorBlueprintBase_ReceiveEvaluate");
static_assert(sizeof(StateTreeEvaluatorBlueprintBase_ReceiveEvaluate) == 0x000010, "Wrong size on StateTreeEvaluatorBlueprintBase_ReceiveEvaluate");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveEvaluate, OwnerActor) == 0x000000, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveEvaluate::OwnerActor' has a wrong offset!");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveEvaluate, EvalType) == 0x000008, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveEvaluate::EvalType' has a wrong offset!");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveEvaluate, DeltaTime) == 0x00000C, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveEvaluate::DeltaTime' has a wrong offset!");

// Function StateTreeModule.StateTreeEvaluatorBlueprintBase.ReceiveExitState
// 0x0018 (0x0018 - 0x0000)
struct StateTreeEvaluatorBlueprintBase_ReceiveExitState final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStateTreeStateChangeType                     ChangeType;                                        // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x1];                                        // 0x0009(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeTransitionResult             TRANSITION;                                        // 0x000A(0x000A)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StateTreeEvaluatorBlueprintBase_ReceiveExitState) == 0x000008, "Wrong alignment on StateTreeEvaluatorBlueprintBase_ReceiveExitState");
static_assert(sizeof(StateTreeEvaluatorBlueprintBase_ReceiveExitState) == 0x000018, "Wrong size on StateTreeEvaluatorBlueprintBase_ReceiveExitState");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveExitState, OwnerActor) == 0x000000, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveExitState::OwnerActor' has a wrong offset!");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveExitState, ChangeType) == 0x000008, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveExitState::ChangeType' has a wrong offset!");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveExitState, TRANSITION) == 0x00000A, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveExitState::TRANSITION' has a wrong offset!");

// Function StateTreeModule.StateTreeEvaluatorBlueprintBase.ReceiveStateCompleted
// 0x0010 (0x0010 - 0x0000)
struct StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EStateTreeRunStatus                           CompletionStatus;                                  // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x1];                                        // 0x0009(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeHandle                       CompletedState;                                    // 0x000A(0x0002)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted) == 0x000008, "Wrong alignment on StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted");
static_assert(sizeof(StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted) == 0x000010, "Wrong size on StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted, OwnerActor) == 0x000000, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted::OwnerActor' has a wrong offset!");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted, CompletionStatus) == 0x000008, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted::CompletionStatus' has a wrong offset!");
static_assert(offsetof(StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted, CompletedState) == 0x00000A, "Member 'StateTreeEvaluatorBlueprintBase_ReceiveStateCompleted::CompletedState' has a wrong offset!");

}

