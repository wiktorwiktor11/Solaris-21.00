#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Galileo_Lobster_Block_Collision

#include "Basic.hpp"

#include "B_Galileo_Lobster_Block_Collision_classes.hpp"
#include "B_Galileo_Lobster_Block_Collision_parameters.hpp"


namespace SDK
{

// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.ApplyHeal
// (BlueprintCallable, BlueprintEvent)

void AB_Galileo_Lobster_Block_Collision_C::ApplyHeal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "ApplyHeal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.BlockedLobsterImpulse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitInfo                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class ACharacter*                       Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Galileo_Lobster_Block_Collision_C::BlockedLobsterImpulse(const struct FHitResult& HitInfo, class ACharacter* Instigator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "BlockedLobsterImpulse");

	Params::B_Galileo_Lobster_Block_Collision_C_BlockedLobsterImpulse Parms{};

	Parms.HitInfo = std::move(HitInfo);
	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              FHitComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Galileo_Lobster_Block_Collision_C::CustomEvent_0(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "CustomEvent_0");

	Params::B_Galileo_Lobster_Block_Collision_C_CustomEvent_0 Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.ExecuteBlockGameplayCue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          Color_Hot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Color_Cool                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WasGalileoBun                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Galileo_Lobster_Block_Collision_C::ExecuteBlockGameplayCue(float Damage, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext, class AActor* Instigator_0, const struct FHitResult& HitResult, const struct FVector& Color_Hot, const struct FVector& Color_Cool, bool* WasGalileoBun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "ExecuteBlockGameplayCue");

	Params::B_Galileo_Lobster_Block_Collision_C_ExecuteBlockGameplayCue Parms{};

	Parms.Damage = Damage;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);
	Parms.Instigator_0 = Instigator_0;
	Parms.HitResult = std::move(HitResult);
	Parms.Color_Hot = std::move(Color_Hot);
	Parms.Color_Cool = std::move(Color_Cool);

	UObject::ProcessEvent(Func, &Parms);

	if (WasGalileoBun != nullptr)
		*WasGalileoBun = Parms.WasGalileoBun;
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.ExecuteUbergraph_B_Galileo_Lobster_Block_Collision
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Galileo_Lobster_Block_Collision_C::ExecuteUbergraph_B_Galileo_Lobster_Block_Collision(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "ExecuteUbergraph_B_Galileo_Lobster_Block_Collision");

	Params::B_Galileo_Lobster_Block_Collision_C_ExecuteUbergraph_B_Galileo_Lobster_Block_Collision Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.GameplayCue.Damage
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AB_Galileo_Lobster_Block_Collision_C::GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "GameplayCue.Damage");

	Params::B_Galileo_Lobster_Block_Collision_C_GameplayCue_Damage Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.OnBuildingHealthChanged_Event
// (BlueprintCallable, BlueprintEvent)

void AB_Galileo_Lobster_Block_Collision_C::OnBuildingHealthChanged_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "OnBuildingHealthChanged_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.OnDamageServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_Galileo_Lobster_Block_Collision_C::OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "OnDamageServer");

	Params::B_Galileo_Lobster_Block_Collision_C_OnDamageServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_Galileo_Lobster_Block_Collision_C::OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "OnDeathServer");

	Params::B_Galileo_Lobster_Block_Collision_C_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.OnPlayerStartDBNO_Event_0
// (BlueprintCallable, BlueprintEvent)

void AB_Galileo_Lobster_Block_Collision_C::OnPlayerStartDBNO_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "OnPlayerStartDBNO_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.OnRep_CollisionEnabled
// (BlueprintCallable, BlueprintEvent)

void AB_Galileo_Lobster_Block_Collision_C::OnRep_CollisionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "OnRep_CollisionEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_Galileo_Lobster_Block_Collision_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.RemovalChecks
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Galileo_Lobster_Block_Collision_C::RemovalChecks(class AFortPlayerPawn* PlayerPawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "RemovalChecks");

	Params::B_Galileo_Lobster_Block_Collision_C_RemovalChecks Parms{};

	Parms.PlayerPawn_0 = PlayerPawn_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.RemoveDeflectReaction
// (BlueprintCallable, BlueprintEvent)

void AB_Galileo_Lobster_Block_Collision_C::RemoveDeflectReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "RemoveDeflectReaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.SendBlockedDamageEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Galileo_Lobster_Block_Collision_C::SendBlockedDamageEvent(float Damage, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "SendBlockedDamageEvent");

	Params::B_Galileo_Lobster_Block_Collision_C_SendBlockedDamageEvent Parms{};

	Parms.Damage = Damage;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.SetCanReflect
// (BlueprintCallable, BlueprintEvent)

void AB_Galileo_Lobster_Block_Collision_C::SetCanReflect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "SetCanReflect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.SpawnReflectProj
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitInfo                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    WasGalileoBun                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Galileo_Lobster_Block_Collision_C::SpawnReflectProj(const struct FHitResult& HitInfo, bool WasGalileoBun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "SpawnReflectProj");

	Params::B_Galileo_Lobster_Block_Collision_C_SpawnReflectProj Parms{};

	Parms.HitInfo = std::move(HitInfo);
	Parms.WasGalileoBun = WasGalileoBun;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Galileo_Lobster_Block_Collision.B_Galileo_Lobster_Block_Collision_C.StartHealingTimer
// (BlueprintCallable, BlueprintEvent)

void AB_Galileo_Lobster_Block_Collision_C::StartHealingTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Galileo_Lobster_Block_Collision_C", "StartHealingTimer");

	UObject::ProcessEvent(Func, nullptr);
}

}

