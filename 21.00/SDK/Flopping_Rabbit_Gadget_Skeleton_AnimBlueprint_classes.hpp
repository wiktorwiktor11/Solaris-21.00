#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Flopping_Rabbit_Gadget_Skeleton_AnimBlueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Flopping_Rabbit_Gadget_Skeleton_AnimBlueprint.Flopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C
// 0x11C0 (0x1510 - 0x0350)
class UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_SubInput;                            // 0x0368(0x00C0)()
	uint8                                         Pad_428[0x8];                                      // 0x0428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x0430(0x0980)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0DB0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0DD0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0DF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0E18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0E40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0E68(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0E90(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0ED0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0EF0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0F30(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0F50(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0F90(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0FB0(0x00B8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1068(0x0128)()
	struct FAnimNode_Trail                        AnimGraphNode_Trail;                               // 0x1190(0x02A0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1430(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1478(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1498(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x14B8(0x0020)()
	bool                                          OneHandGrip;                                       // 0x14D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D9[0x3];                                     // 0x14D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Trail_Alpha;                                       // 0x14DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Trail_RelaxScale;                                  // 0x14E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E4[0x4];                                     // 0x14E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               GripRotation;                                      // 0x14E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTethered;                                        // 0x1500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Flopping_Rabbit_Gadget_Skeleton_AnimBlueprint(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Flopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C">();
	}
	static class UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C>();
	}
};
static_assert(alignof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C) == 0x000010, "Wrong alignment on UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C");
static_assert(sizeof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C) == 0x001510, "Wrong size on UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, UberGraphFrame) == 0x000350, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_SubInput) == 0x000368, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_SubInput' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_RigidBody) == 0x000430, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000DB0, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000DD0, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_TransitionResult_3) == 0x000DF0, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_TransitionResult_2) == 0x000E18, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_TransitionResult_1) == 0x000E40, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_TransitionResult) == 0x000E68, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_SequencePlayer_2) == 0x000E90, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_StateResult_2) == 0x000ED0, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_SequencePlayer_1) == 0x000EF0, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_StateResult_1) == 0x000F30, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_SequencePlayer) == 0x000F50, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_StateResult) == 0x000F90, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_StateMachine) == 0x000FB0, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_ModifyBone) == 0x001068, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_Trail) == 0x001190, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_Trail' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_Slot) == 0x001430, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_Root) == 0x001478, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_LocalToComponentSpace) == 0x001498, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace) == 0x0014B8, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, OneHandGrip) == 0x0014D8, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::OneHandGrip' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, Trail_Alpha) == 0x0014DC, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::Trail_Alpha' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, Trail_RelaxScale) == 0x0014E0, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::Trail_RelaxScale' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, GripRotation) == 0x0014E8, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::GripRotation' has a wrong offset!");
static_assert(offsetof(UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C, IsTethered) == 0x001500, "Member 'UFlopping_Rabbit_Gadget_Skeleton_AnimBlueprint_C::IsTethered' has a wrong offset!");

}

