#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PhysicsTree_Reporter

#include "Basic.hpp"

#include "PhysicsLogAnalytics_DamageCategory_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsLogAnalyticsStruct_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_PhysicsTree_Reporter.B_PhysicsTree_Reporter_C
// 0x0020 (0x0290 - 0x0270)
class AB_PhysicsTree_Reporter_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene;                                             // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPhysicsLogAnalyticsStruct>     PhysicsLogData;                                    // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void EndMatchReport();
	void ExecuteUbergraph_B_PhysicsTree_Reporter(int32 EntryPoint);
	void GetLogDataByInstanceName(const class FString& InstanceName, struct FPhysicsLogAnalyticsStruct* Data, int32* Index_0, bool* Success);
	void OnReady_FFF47C8E40A1C412A19C8B8828BD5787(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void PhaseChanged(EAthenaGamePhase GamePhase);
	void ReceiveBeginPlay();
	void ReportDamageInflicted(const class FString& InstanceName, EPhysicsLogAnalytics_DamageCategory DamageCategory, float Amount);
	void ReportLogDestroyed(const class FString& Instance_Name, const struct FVector& Location);
	void ReportLogFelled(const class FString& Instance_Name, const class FString& Felled_By, const struct FVector& Location);
	void ReportTreeAnalytics();
	void WrapString(const class FString& Prepend, const class FString& String, const class FString& Append, class FString* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_PhysicsTree_Reporter_C">();
	}
	static class AB_PhysicsTree_Reporter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_PhysicsTree_Reporter_C>();
	}
};
static_assert(alignof(AB_PhysicsTree_Reporter_C) == 0x000008, "Wrong alignment on AB_PhysicsTree_Reporter_C");
static_assert(sizeof(AB_PhysicsTree_Reporter_C) == 0x000290, "Wrong size on AB_PhysicsTree_Reporter_C");
static_assert(offsetof(AB_PhysicsTree_Reporter_C, UberGraphFrame) == 0x000270, "Member 'AB_PhysicsTree_Reporter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_PhysicsTree_Reporter_C, Scene) == 0x000278, "Member 'AB_PhysicsTree_Reporter_C::Scene' has a wrong offset!");
static_assert(offsetof(AB_PhysicsTree_Reporter_C, PhysicsLogData) == 0x000280, "Member 'AB_PhysicsTree_Reporter_C::PhysicsLogData' has a wrong offset!");

}

