#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TargetSlotsAvailable

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Enum_NPC_TargetSlots_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TargetSlotsAvailable.TargetSlotsAvailable_C
// 0x0040 (0x00E0 - 0x00A0)
class UTargetSlotsAvailable_C final : public UBTDecorator_BlueprintBase
{
public:
	class AAIController*                          NPC_PawnParentController;                          // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANPC_Pawn_Parent_C*                     NPC_PawnParent;                                    // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_NPC_TargetSlots                          TargetSlotType;                                    // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 NPC_BlackboardKeyToTestTargetSlotsOn;              // 0x00B8(0x0028)(Edit, BlueprintVisible)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TargetSlotsAvailable_C">();
	}
	static class UTargetSlotsAvailable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTargetSlotsAvailable_C>();
	}
};
static_assert(alignof(UTargetSlotsAvailable_C) == 0x000008, "Wrong alignment on UTargetSlotsAvailable_C");
static_assert(sizeof(UTargetSlotsAvailable_C) == 0x0000E0, "Wrong size on UTargetSlotsAvailable_C");
static_assert(offsetof(UTargetSlotsAvailable_C, NPC_PawnParentController) == 0x0000A0, "Member 'UTargetSlotsAvailable_C::NPC_PawnParentController' has a wrong offset!");
static_assert(offsetof(UTargetSlotsAvailable_C, NPC_PawnParent) == 0x0000A8, "Member 'UTargetSlotsAvailable_C::NPC_PawnParent' has a wrong offset!");
static_assert(offsetof(UTargetSlotsAvailable_C, TargetSlotType) == 0x0000B0, "Member 'UTargetSlotsAvailable_C::TargetSlotType' has a wrong offset!");
static_assert(offsetof(UTargetSlotsAvailable_C, NPC_BlackboardKeyToTestTargetSlotsOn) == 0x0000B8, "Member 'UTargetSlotsAvailable_C::NPC_BlackboardKeyToTestTargetSlotsOn' has a wrong offset!");

}

