#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SmartObjectsModule

#include "Basic.hpp"

#include "SmartObjectsModule_structs.hpp"
#include "GameplayTags_0_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SmartObjectsModule.AITask_UseSmartObject.UseClaimedSmartObject
// 0x0028 (0x0028 - 0x0000)
struct AITask_UseSmartObject_UseClaimedSmartObject final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0008(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bLockAILogic;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAITask_UseSmartObject*                 ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AITask_UseSmartObject_UseClaimedSmartObject) == 0x000008, "Wrong alignment on AITask_UseSmartObject_UseClaimedSmartObject");
static_assert(sizeof(AITask_UseSmartObject_UseClaimedSmartObject) == 0x000028, "Wrong size on AITask_UseSmartObject_UseClaimedSmartObject");
static_assert(offsetof(AITask_UseSmartObject_UseClaimedSmartObject, Controller) == 0x000000, "Member 'AITask_UseSmartObject_UseClaimedSmartObject::Controller' has a wrong offset!");
static_assert(offsetof(AITask_UseSmartObject_UseClaimedSmartObject, ClaimHandle) == 0x000008, "Member 'AITask_UseSmartObject_UseClaimedSmartObject::ClaimHandle' has a wrong offset!");
static_assert(offsetof(AITask_UseSmartObject_UseClaimedSmartObject, bLockAILogic) == 0x000018, "Member 'AITask_UseSmartObject_UseClaimedSmartObject::bLockAILogic' has a wrong offset!");
static_assert(offsetof(AITask_UseSmartObject_UseClaimedSmartObject, ReturnValue) == 0x000020, "Member 'AITask_UseSmartObject_UseClaimedSmartObject::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.AITask_UseSmartObject.UseSmartObject
// 0x0028 (0x0028 - 0x0000)
struct AITask_UseSmartObject_UseSmartObject final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SmartObjectActor;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USmartObjectComponent*                  SmartObjectComponent;                              // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLockAILogic;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAITask_UseSmartObject*                 ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AITask_UseSmartObject_UseSmartObject) == 0x000008, "Wrong alignment on AITask_UseSmartObject_UseSmartObject");
static_assert(sizeof(AITask_UseSmartObject_UseSmartObject) == 0x000028, "Wrong size on AITask_UseSmartObject_UseSmartObject");
static_assert(offsetof(AITask_UseSmartObject_UseSmartObject, Controller) == 0x000000, "Member 'AITask_UseSmartObject_UseSmartObject::Controller' has a wrong offset!");
static_assert(offsetof(AITask_UseSmartObject_UseSmartObject, SmartObjectActor) == 0x000008, "Member 'AITask_UseSmartObject_UseSmartObject::SmartObjectActor' has a wrong offset!");
static_assert(offsetof(AITask_UseSmartObject_UseSmartObject, SmartObjectComponent) == 0x000010, "Member 'AITask_UseSmartObject_UseSmartObject::SmartObjectComponent' has a wrong offset!");
static_assert(offsetof(AITask_UseSmartObject_UseSmartObject, bLockAILogic) == 0x000018, "Member 'AITask_UseSmartObject_UseSmartObject::bLockAILogic' has a wrong offset!");
static_assert(offsetof(AITask_UseSmartObject_UseSmartObject, ReturnValue) == 0x000020, "Member 'AITask_UseSmartObject_UseSmartObject::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.GetValueAsSOClaimHandle
// 0x0020 (0x0020 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle final
{
public:
	class UBlackboardComponent*                   BlackboardComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   KeyName;                                           // 0x0008(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                ReturnValue;                                       // 0x000C(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle) == 0x000020, "Wrong size on SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle, BlackboardComponent) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle::BlackboardComponent' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle, KeyName) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle::KeyName' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle, ReturnValue) == 0x00000C, "Member 'SmartObjectBlueprintFunctionLibrary_GetValueAsSOClaimHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.IsValidSmartObjectClaimHandle
// 0x0014 (0x0014 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle final
{
public:
	struct FSmartObjectClaimHandle                Handle;                                            // 0x0000(0x0010)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle) == 0x000004, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle) == 0x000014, "Wrong size on SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle, Handle) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle, ReturnValue) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_IsValidSmartObjectClaimHandle::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.K2_AddLooseGameplayTags
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags) == 0x000030, "Wrong size on SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags, Actor) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags::Actor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags, GameplayTags) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags::GameplayTags' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags, ReturnValue) == 0x000028, "Member 'SmartObjectBlueprintFunctionLibrary_K2_AddLooseGameplayTags::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.K2_RemoveLooseGameplayTags
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags) == 0x000030, "Wrong size on SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags, Actor) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags::Actor' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags, GameplayTags) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags::GameplayTags' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags, ReturnValue) == 0x000028, "Member 'SmartObjectBlueprintFunctionLibrary_K2_RemoveLooseGameplayTags::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.K2_SetSmartObjectEnabled
// 0x0010 (0x0010 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled final
{
public:
	class AActor*                                 SmartObject;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled) == 0x000010, "Wrong size on SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled, SmartObject) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled::SmartObject' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled, bEnabled) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled, ReturnValue) == 0x000009, "Member 'SmartObjectBlueprintFunctionLibrary_K2_SetSmartObjectEnabled::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.K2_UseSmartObject
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject final
{
public:
	class AActor*                                 Avatar;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SmartObject;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject) == 0x000018, "Wrong size on SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject, Avatar) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject::Avatar' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject, SmartObject) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject::SmartObject' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject, ReturnValue) == 0x000010, "Member 'SmartObjectBlueprintFunctionLibrary_K2_UseSmartObject::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectBlueprintFunctionLibrary.SetValueAsSOClaimHandle
// 0x0020 (0x0020 - 0x0000)
struct SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle final
{
public:
	class UBlackboardComponent*                   BlackboardComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   KeyName;                                           // 0x0008(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                Value;                                             // 0x000C(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle) == 0x000008, "Wrong alignment on SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle");
static_assert(sizeof(SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle) == 0x000020, "Wrong size on SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle, BlackboardComponent) == 0x000000, "Member 'SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle::BlackboardComponent' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle, KeyName) == 0x000008, "Member 'SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle::KeyName' has a wrong offset!");
static_assert(offsetof(SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle, Value) == 0x00000C, "Member 'SmartObjectBlueprintFunctionLibrary_SetValueAsSOClaimHandle::Value' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.AddTagToInstance
// 0x0008 (0x0008 - 0x0000)
struct SmartObjectSubsystem_AddTagToInstance final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0004(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_AddTagToInstance) == 0x000004, "Wrong alignment on SmartObjectSubsystem_AddTagToInstance");
static_assert(sizeof(SmartObjectSubsystem_AddTagToInstance) == 0x000008, "Wrong size on SmartObjectSubsystem_AddTagToInstance");
static_assert(offsetof(SmartObjectSubsystem_AddTagToInstance, Handle) == 0x000000, "Member 'SmartObjectSubsystem_AddTagToInstance::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_AddTagToInstance, Tag) == 0x000004, "Member 'SmartObjectSubsystem_AddTagToInstance::Tag' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.Claim
// 0x001C (0x001C - 0x0000)
struct SmartObjectSubsystem_Claim final
{
public:
	struct FSmartObjectRequestResult              RequestResult;                                     // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FSmartObjectClaimHandle                ReturnValue;                                       // 0x000C(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_Claim) == 0x000004, "Wrong alignment on SmartObjectSubsystem_Claim");
static_assert(sizeof(SmartObjectSubsystem_Claim) == 0x00001C, "Wrong size on SmartObjectSubsystem_Claim");
static_assert(offsetof(SmartObjectSubsystem_Claim, RequestResult) == 0x000000, "Member 'SmartObjectSubsystem_Claim::RequestResult' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_Claim, ReturnValue) == 0x00000C, "Member 'SmartObjectSubsystem_Claim::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetBehaviorDefinition
// 0x0020 (0x0020 - 0x0000)
struct SmartObjectSubsystem_GetBehaviorDefinition final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class USmartObjectBehaviorDefinition> DefinitionClass;                                   // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class USmartObjectBehaviorDefinition*   ReturnValue;                                       // 0x0018(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_GetBehaviorDefinition) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetBehaviorDefinition");
static_assert(sizeof(SmartObjectSubsystem_GetBehaviorDefinition) == 0x000020, "Wrong size on SmartObjectSubsystem_GetBehaviorDefinition");
static_assert(offsetof(SmartObjectSubsystem_GetBehaviorDefinition, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_GetBehaviorDefinition::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetBehaviorDefinition, DefinitionClass) == 0x000010, "Member 'SmartObjectSubsystem_GetBehaviorDefinition::DefinitionClass' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetBehaviorDefinition, ReturnValue) == 0x000018, "Member 'SmartObjectSubsystem_GetBehaviorDefinition::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.Release
// 0x0014 (0x0014 - 0x0000)
struct SmartObjectSubsystem_Release final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_Release) == 0x000004, "Wrong alignment on SmartObjectSubsystem_Release");
static_assert(sizeof(SmartObjectSubsystem_Release) == 0x000014, "Wrong size on SmartObjectSubsystem_Release");
static_assert(offsetof(SmartObjectSubsystem_Release, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_Release::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_Release, ReturnValue) == 0x000010, "Member 'SmartObjectSubsystem_Release::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.RemoveTagFromInstance
// 0x0008 (0x0008 - 0x0000)
struct SmartObjectSubsystem_RemoveTagFromInstance final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0004(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_RemoveTagFromInstance) == 0x000004, "Wrong alignment on SmartObjectSubsystem_RemoveTagFromInstance");
static_assert(sizeof(SmartObjectSubsystem_RemoveTagFromInstance) == 0x000008, "Wrong size on SmartObjectSubsystem_RemoveTagFromInstance");
static_assert(offsetof(SmartObjectSubsystem_RemoveTagFromInstance, Handle) == 0x000000, "Member 'SmartObjectSubsystem_RemoveTagFromInstance::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_RemoveTagFromInstance, Tag) == 0x000004, "Member 'SmartObjectSubsystem_RemoveTagFromInstance::Tag' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.Use
// 0x0020 (0x0020 - 0x0000)
struct SmartObjectSubsystem_Use final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class USmartObjectBehaviorDefinition> DefinitionClass;                                   // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class USmartObjectBehaviorDefinition*   ReturnValue;                                       // 0x0018(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_Use) == 0x000008, "Wrong alignment on SmartObjectSubsystem_Use");
static_assert(sizeof(SmartObjectSubsystem_Use) == 0x000020, "Wrong size on SmartObjectSubsystem_Use");
static_assert(offsetof(SmartObjectSubsystem_Use, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_Use::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_Use, DefinitionClass) == 0x000010, "Member 'SmartObjectSubsystem_Use::DefinitionClass' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_Use, ReturnValue) == 0x000018, "Member 'SmartObjectSubsystem_Use::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.FindSmartObject
// 0x0100 (0x0100 - 0x0000)
struct SmartObjectSubsystem_FindSmartObject final
{
public:
	struct FSmartObjectRequest                    Request;                                           // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSmartObjectRequestResult              ReturnValue;                                       // 0x00F0(0x000C)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_FindSmartObject) == 0x000010, "Wrong alignment on SmartObjectSubsystem_FindSmartObject");
static_assert(sizeof(SmartObjectSubsystem_FindSmartObject) == 0x000100, "Wrong size on SmartObjectSubsystem_FindSmartObject");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObject, Request) == 0x000000, "Member 'SmartObjectSubsystem_FindSmartObject::Request' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObject, ReturnValue) == 0x0000F0, "Member 'SmartObjectSubsystem_FindSmartObject::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.FindSmartObjects
// 0x0110 (0x0110 - 0x0000)
struct SmartObjectSubsystem_FindSmartObjects final
{
public:
	struct FSmartObjectRequest                    Request;                                           // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FSmartObjectRequestResult>      OutResults;                                        // 0x00F0(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0100(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0xF];                                      // 0x0101(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_FindSmartObjects) == 0x000010, "Wrong alignment on SmartObjectSubsystem_FindSmartObjects");
static_assert(sizeof(SmartObjectSubsystem_FindSmartObjects) == 0x000110, "Wrong size on SmartObjectSubsystem_FindSmartObjects");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects, Request) == 0x000000, "Member 'SmartObjectSubsystem_FindSmartObjects::Request' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects, OutResults) == 0x0000F0, "Member 'SmartObjectSubsystem_FindSmartObjects::OutResults' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_FindSmartObjects, ReturnValue) == 0x000100, "Member 'SmartObjectSubsystem_FindSmartObjects::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetInstanceTags
// 0x0028 (0x0028 - 0x0000)
struct SmartObjectSubsystem_GetInstanceTags final
{
public:
	struct FSmartObjectHandle                     Handle;                                            // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ReturnValue;                                       // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_GetInstanceTags) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetInstanceTags");
static_assert(sizeof(SmartObjectSubsystem_GetInstanceTags) == 0x000028, "Wrong size on SmartObjectSubsystem_GetInstanceTags");
static_assert(offsetof(SmartObjectSubsystem_GetInstanceTags, Handle) == 0x000000, "Member 'SmartObjectSubsystem_GetInstanceTags::Handle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetInstanceTags, ReturnValue) == 0x000008, "Member 'SmartObjectSubsystem_GetInstanceTags::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetSlotLocation
// 0x0030 (0x0030 - 0x0000)
struct SmartObjectSubsystem_GetSlotLocation final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                OutSlotLocation;                                   // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_GetSlotLocation) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetSlotLocation");
static_assert(sizeof(SmartObjectSubsystem_GetSlotLocation) == 0x000030, "Wrong size on SmartObjectSubsystem_GetSlotLocation");
static_assert(offsetof(SmartObjectSubsystem_GetSlotLocation, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_GetSlotLocation::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotLocation, OutSlotLocation) == 0x000010, "Member 'SmartObjectSubsystem_GetSlotLocation::OutSlotLocation' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotLocation, ReturnValue) == 0x000028, "Member 'SmartObjectSubsystem_GetSlotLocation::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetSlotTransform
// 0x0080 (0x0080 - 0x0000)
struct SmartObjectSubsystem_GetSlotTransform final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                             OutSlotTransform;                                  // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SmartObjectSubsystem_GetSlotTransform) == 0x000010, "Wrong alignment on SmartObjectSubsystem_GetSlotTransform");
static_assert(sizeof(SmartObjectSubsystem_GetSlotTransform) == 0x000080, "Wrong size on SmartObjectSubsystem_GetSlotTransform");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTransform, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_GetSlotTransform::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTransform, OutSlotTransform) == 0x000010, "Member 'SmartObjectSubsystem_GetSlotTransform::OutSlotTransform' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSlotTransform, ReturnValue) == 0x000070, "Member 'SmartObjectSubsystem_GetSlotTransform::ReturnValue' has a wrong offset!");

// Function SmartObjectsModule.SmartObjectSubsystem.GetSmartObjectComponent
// 0x0018 (0x0018 - 0x0000)
struct SmartObjectSubsystem_GetSmartObjectComponent final
{
public:
	struct FSmartObjectClaimHandle                ClaimHandle;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class USmartObjectComponent*                  ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SmartObjectSubsystem_GetSmartObjectComponent) == 0x000008, "Wrong alignment on SmartObjectSubsystem_GetSmartObjectComponent");
static_assert(sizeof(SmartObjectSubsystem_GetSmartObjectComponent) == 0x000018, "Wrong size on SmartObjectSubsystem_GetSmartObjectComponent");
static_assert(offsetof(SmartObjectSubsystem_GetSmartObjectComponent, ClaimHandle) == 0x000000, "Member 'SmartObjectSubsystem_GetSmartObjectComponent::ClaimHandle' has a wrong offset!");
static_assert(offsetof(SmartObjectSubsystem_GetSmartObjectComponent, ReturnValue) == 0x000010, "Member 'SmartObjectSubsystem_GetSmartObjectComponent::ReturnValue' has a wrong offset!");

}

