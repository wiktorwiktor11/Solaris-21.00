#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DaisyPetals_HISM

#include "Basic.hpp"

#include "DaisyPetals_HISM_classes.hpp"
#include "DaisyPetals_HISM_parameters.hpp"


namespace SDK
{

// Function DaisyPetals_HISM.DaisyPetals_HISM_C.ValidateScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Seed                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UDaisyPetals_HISM_C::ValidateScale(int32 InstanceIndex, int32 Seed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaisyPetals_HISM_C", "ValidateScale");

	Params::DaisyPetals_HISM_C_ValidateScale Parms{};

	Parms.InstanceIndex = InstanceIndex;
	Parms.Seed = Seed;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DaisyPetals_HISM.DaisyPetals_HISM_C.ValidateRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         InRot                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Seed                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UDaisyPetals_HISM_C::ValidateRotation(const struct FRotator& InRot, int32 InstanceIndex, int32 Seed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaisyPetals_HISM_C", "ValidateRotation");

	Params::DaisyPetals_HISM_C_ValidateRotation Parms{};

	Parms.InRot = std::move(InRot);
	Parms.InstanceIndex = InstanceIndex;
	Parms.Seed = Seed;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DaisyPetals_HISM.DaisyPetals_HISM_C.ValidateOffsetFromCenter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Seed                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDaisyPetals_HISM_C::ValidateOffsetFromCenter(int32 InstanceIndex, int32 Seed, float* Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaisyPetals_HISM_C", "ValidateOffsetFromCenter");

	Params::DaisyPetals_HISM_C_ValidateOffsetFromCenter Parms{};

	Parms.InstanceIndex = InstanceIndex;
	Parms.Seed = Seed;

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = Parms.Offset;
}


// Function DaisyPetals_HISM.DaisyPetals_HISM_C.PopulatePetals
// (Public, BlueprintCallable, BlueprintEvent)

void UDaisyPetals_HISM_C::PopulatePetals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaisyPetals_HISM_C", "PopulatePetals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DaisyPetals_HISM.DaisyPetals_HISM_C.convertIndexToSeedOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   inInt                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UDaisyPetals_HISM_C::convertIndexToSeedOffset(int32 inInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaisyPetals_HISM_C", "convertIndexToSeedOffset");

	Params::DaisyPetals_HISM_C_convertIndexToSeedOffset Parms{};

	Parms.inInt = inInt;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DaisyPetals_HISM.DaisyPetals_HISM_C.AddPetals
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDaisyPetals_HISM_C::AddPetals(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DaisyPetals_HISM_C", "AddPetals");

	Params::DaisyPetals_HISM_C_AddPetals Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}

}

