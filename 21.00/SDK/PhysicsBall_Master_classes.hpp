#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PhysicsBall_Master

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PhysicsBall_Master.PhysicsBall_Master_C
// 0x00F8 (0x0AE8 - 0x09F0)
class APhysicsBall_Master_C : public AFortPhysicsBall
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Ball;                                              // 0x09F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleAudioVoice*                 RollingAudio;                                      // 0x0A00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           FortCollisionAudio;                                // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         VelocityHitMagMultiplier;                          // 0x0A18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitPitch;                                          // 0x0A1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitMagMax;                                         // 0x0A20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A24[0x4];                                      // 0x0A24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             BallHitSound;                                      // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OtherVelocity;                                     // 0x0A30(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OtherLocation;                                     // 0x0A48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinAngularPower;                                   // 0x0A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitOtherBall;                                      // 0x0A64(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitOtherPawn;                                      // 0x0A65(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ServerAuthoritative;                               // 0x0A66(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlotTrajectory;                                    // 0x0A67(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Debug_LastPosition;                                // 0x0A68(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitialSpawnPosition;                              // 0x0A80(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EverCameToRest;                                    // 0x0A98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A99[0x3];                                      // 0x0A99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BounceCount;                                       // 0x0A9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               GenericImpactFX;                                   // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               WaterImpactFX;                                     // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DustRadius;                                        // 0x0AB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB4[0x4];                                      // 0x0AB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DustSize;                                          // 0x0AB8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StopInWaterVelocityZ;                              // 0x0AD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StopInWaterVelocityHorizontal;                     // 0x0AD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             WaterImpactSound;                                  // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAttachedToPlayer;                               // 0x0AE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyImpulseToBall(const struct FVector& HitLocation, const struct FVector& HitVelocity, float HitMagnitude);
	void BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody);
	void CheckStopInWaterOnServer();
	void DrawDebugTrajectory();
	void ExecuteUbergraph_PhysicsBall_Master(int32 EntryPoint);
	float GetHitScale(const struct FVector& HitLocation, const struct FVector& HitVelocity);
	void ImpactFX(class AActor* HitActor, const struct FVector& SpawnLocation, bool Overlap_);
	void MakeBallDormant();
	void OnPawnTouchedMe(class APawn* TouchingPawn, const struct FVector& ImpactNormal, const struct FVector& OtherVelocity_0);
	void OnRep_PlotTrajectory();
	void OnReplicatedVelocityStartOrStop(bool bStart);
	void PlayPawnImpactAudio(class APawn* TouchingPawn, const struct FVector& ImpactNormal, const struct FVector& PawnVelocity);
	void ProjectileStop(const struct FHitResult& ImpactResult);
	void ReceiveBeginPlay();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveTick(float DeltaSeconds);
	void SetBallVelocityAndStartTicking(const struct FVector& NewVelocity);
	void SetIsAttachedToPlayer(bool IsAttached);
	void SetTickingEnabled(bool ShouldTick);
	void UpdateDirectionAndRotationRate(float DeltaSeconds);
	void Water_Collision(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PhysicsBall_Master_C">();
	}
	static class APhysicsBall_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APhysicsBall_Master_C>();
	}
};
static_assert(alignof(APhysicsBall_Master_C) == 0x000008, "Wrong alignment on APhysicsBall_Master_C");
static_assert(sizeof(APhysicsBall_Master_C) == 0x000AE8, "Wrong size on APhysicsBall_Master_C");
static_assert(offsetof(APhysicsBall_Master_C, UberGraphFrame) == 0x0009F0, "Member 'APhysicsBall_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, Ball) == 0x0009F8, "Member 'APhysicsBall_Master_C::Ball' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, RollingAudio) == 0x000A00, "Member 'APhysicsBall_Master_C::RollingAudio' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, FortCollisionAudio) == 0x000A08, "Member 'APhysicsBall_Master_C::FortCollisionAudio' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, ProjectileMovement) == 0x000A10, "Member 'APhysicsBall_Master_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, VelocityHitMagMultiplier) == 0x000A18, "Member 'APhysicsBall_Master_C::VelocityHitMagMultiplier' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, HitPitch) == 0x000A1C, "Member 'APhysicsBall_Master_C::HitPitch' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, HitMagMax) == 0x000A20, "Member 'APhysicsBall_Master_C::HitMagMax' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, BallHitSound) == 0x000A28, "Member 'APhysicsBall_Master_C::BallHitSound' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, OtherVelocity) == 0x000A30, "Member 'APhysicsBall_Master_C::OtherVelocity' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, OtherLocation) == 0x000A48, "Member 'APhysicsBall_Master_C::OtherLocation' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, MinAngularPower) == 0x000A60, "Member 'APhysicsBall_Master_C::MinAngularPower' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, HitOtherBall) == 0x000A64, "Member 'APhysicsBall_Master_C::HitOtherBall' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, HitOtherPawn) == 0x000A65, "Member 'APhysicsBall_Master_C::HitOtherPawn' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, ServerAuthoritative) == 0x000A66, "Member 'APhysicsBall_Master_C::ServerAuthoritative' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, PlotTrajectory) == 0x000A67, "Member 'APhysicsBall_Master_C::PlotTrajectory' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, Debug_LastPosition) == 0x000A68, "Member 'APhysicsBall_Master_C::Debug_LastPosition' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, InitialSpawnPosition) == 0x000A80, "Member 'APhysicsBall_Master_C::InitialSpawnPosition' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, EverCameToRest) == 0x000A98, "Member 'APhysicsBall_Master_C::EverCameToRest' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, BounceCount) == 0x000A9C, "Member 'APhysicsBall_Master_C::BounceCount' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, GenericImpactFX) == 0x000AA0, "Member 'APhysicsBall_Master_C::GenericImpactFX' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, WaterImpactFX) == 0x000AA8, "Member 'APhysicsBall_Master_C::WaterImpactFX' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, DustRadius) == 0x000AB0, "Member 'APhysicsBall_Master_C::DustRadius' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, DustSize) == 0x000AB8, "Member 'APhysicsBall_Master_C::DustSize' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, StopInWaterVelocityZ) == 0x000AD0, "Member 'APhysicsBall_Master_C::StopInWaterVelocityZ' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, StopInWaterVelocityHorizontal) == 0x000AD4, "Member 'APhysicsBall_Master_C::StopInWaterVelocityHorizontal' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, WaterImpactSound) == 0x000AD8, "Member 'APhysicsBall_Master_C::WaterImpactSound' has a wrong offset!");
static_assert(offsetof(APhysicsBall_Master_C, bIsAttachedToPlayer) == 0x000AE0, "Member 'APhysicsBall_Master_C::bIsAttachedToPlayer' has a wrong offset!");

}

