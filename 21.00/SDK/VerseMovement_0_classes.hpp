#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseMovement_0

#include "Basic.hpp"

#include "Verse_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "VerseEngine_0_classes.hpp"
#include "Verse_0_structs.hpp"
#include "SolarisInterop_structs.hpp"
#include "VerseMovement_0_structs.hpp"
#include "VerseMovement_classes.hpp"


namespace SDK
{

// SolarisGeneratedClass VerseMovement.$SolarisSignatureFunctionOuter
// 0x0000 (0x0028 - 0x0028)
class VerseMovement_0::U_SolarisSignatureFunctionOuter final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SolarisGeneratedClass VerseMovement.$SolarisSignatureFunctionOuter", true>();
	}
	static class VerseMovement_0::U_SolarisSignatureFunctionOuter* GetDefaultObj()
	{
		return GetDefaultObjImpl<VerseMovement_0::U_SolarisSignatureFunctionOuter>();
	}
};
static_assert(alignof(VerseMovement_0::U_SolarisSignatureFunctionOuter) == 0x000008, "Wrong alignment on VerseMovement_0::U_SolarisSignatureFunctionOuter");
static_assert(sizeof(VerseMovement_0::U_SolarisSignatureFunctionOuter) == 0x000028, "Wrong size on VerseMovement_0::U_SolarisSignatureFunctionOuter");

// SolarisGeneratedClass VerseMovement.VerseMovement
// 0x0000 (0x0028 - 0x0028)
class UVerseMovement final : public UObject
{
public:
	static FOptionProperty_ _L_2fVerse_2eorg_2fEngine_2fVerseMovement_N_RGetPlayerMoveComponent_L_Nplayer__component_R(class Uplayer_component* __verse_0xB2CDDD72_Argument);
	static struct Fmove_config move_config_Factory();
	static struct Fmove_config_entry move_config_entry_Factory();
	static struct Fmove_input_trigger_params move_input_trigger_params_Factory();
	static struct Fmove_physics_trigger_params move_physics_trigger_params_Factory();
	static struct Fmove_response move_response_Factory();
	static struct Fmove_trace_trigger_params move_trace_trigger_params_Factory();
	static struct Fmove_trigger move_trigger_Factory();

	void _InitCDO();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseMovement">();
	}
	static class UVerseMovement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseMovement>();
	}
};
static_assert(alignof(UVerseMovement) == 0x000008, "Wrong alignment on UVerseMovement");
static_assert(sizeof(UVerseMovement) == 0x000028, "Wrong size on UVerseMovement");

// SolarisGeneratedClass VerseMovement.move_config_asset
// 0x0000 (0x00B0 - 0x00B0)
class Umove_config_asset final : public UAsset
{
public:
	void _InitCDO();
	void _InitInstance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"move_config_asset">();
	}
	static class Umove_config_asset* GetDefaultObj()
	{
		return GetDefaultObjImpl<Umove_config_asset>();
	}
};
static_assert(alignof(Umove_config_asset) == 0x000008, "Wrong alignment on Umove_config_asset");
static_assert(sizeof(Umove_config_asset) == 0x0000B0, "Wrong size on Umove_config_asset");

// SolarisGeneratedClass VerseMovement.movement_component
// 0x0080 (0x0110 - 0x0090)
class Umovement_component final : public UVerseMovementComponentBase
{
public:
	TDelegate<void(uint8 __verse_0xB2CDDD72_Argument)> __verse_0xDDD0E1FA__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetEnabled_L_Nlogic_R; // 0x0090(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class Umove_config_asset* __verse_0xB2CDDD72_Argument)> __verse_0xDD1E1C78__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R; // 0x009C(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct Fmove_config& __verse_0xB2CDDD72_Argument)> __verse_0xA1CC94F9__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R; // 0x00A8(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct Fvector3& __verse_0xB2CDDD72_Argument)> __verse_0xF92F8A2F__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R; // 0x00B4(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVerseRotation& __verse_0xB2CDDD72_Argument)> __verse_0xCD9EB304__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R; // 0x00C0(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct Fvector3& __verse_0xB2CDDD72_Argument)> __verse_0x897A3BB6__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R; // 0x00CC(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct Fvector3& __verse_0xB2CDDD72_Argument)> __verse_0x7995CBAC__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R; // 0x00D8(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct Fvector3& __verse_0xB2CDDD72_Argument)> __verse_0x09E834C8__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R; // 0x00E4(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class Uplayer_component* __verse_0xB2CDDD72_Argument)> __verse_0x9D5237F3__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R; // 0x00F0(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class Uplayer_component* __verse_0xB2CDDD72_Argument)> __verse_0xF91671FF__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R; // 0x00FC(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EVerseTrue                                    __verse_0xC055765D_CompareByPointer;               // 0x0108(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void _InitCDO();
	void _InitInstance();
	void _L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R(const struct Fvector3& __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R(const struct Fvector3& __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R(class Uplayer_component* __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R(class Uplayer_component* __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R(class Umove_config_asset* __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R(const struct Fmove_config& __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetEnabled_L_Nlogic_R(uint8 __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R(const struct Fvector3& __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R(const struct FVerseRotation& __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R(const struct Fvector3& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"movement_component">();
	}
	static class Umovement_component* GetDefaultObj()
	{
		return GetDefaultObjImpl<Umovement_component>();
	}
};
static_assert(alignof(Umovement_component) == 0x000008, "Wrong alignment on Umovement_component");
static_assert(sizeof(Umovement_component) == 0x000110, "Wrong size on Umovement_component");
static_assert(offsetof(Umovement_component, __verse_0xDDD0E1FA__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetEnabled_L_Nlogic_R) == 0x000090, "Member 'Umovement_component::__verse_0xDDD0E1FA__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetEnabled_L_Nlogic_R' has a wrong offset!");
static_assert(offsetof(Umovement_component, __verse_0xDD1E1C78__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R) == 0x00009C, "Member 'Umovement_component::__verse_0xDD1E1C78__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config__asset_R' has a wrong offset!");
static_assert(offsetof(Umovement_component, __verse_0xA1CC94F9__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R) == 0x0000A8, "Member 'Umovement_component::__verse_0xA1CC94F9__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetConfig_L_Nmove__config_R' has a wrong offset!");
static_assert(offsetof(Umovement_component, __verse_0xF92F8A2F__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R) == 0x0000B4, "Member 'Umovement_component::__verse_0xF92F8A2F__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetPosition_L_Nvector3_R' has a wrong offset!");
static_assert(offsetof(Umovement_component, __verse_0xCD9EB304__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R) == 0x0000C0, "Member 'Umovement_component::__verse_0xCD9EB304__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetRotation_L_Nrotation_R' has a wrong offset!");
static_assert(offsetof(Umovement_component, __verse_0x897A3BB6__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R) == 0x0000CC, "Member 'Umovement_component::__verse_0x897A3BB6__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RSetVelocity_L_Nvector3_R' has a wrong offset!");
static_assert(offsetof(Umovement_component, __verse_0x7995CBAC__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R) == 0x0000D8, "Member 'Umovement_component::__verse_0x7995CBAC__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddImpulse_L_Nvector3_R' has a wrong offset!");
static_assert(offsetof(Umovement_component, __verse_0x09E834C8__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R) == 0x0000E4, "Member 'Umovement_component::__verse_0x09E834C8__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RAddAngularImpulse_L_Nvector3_R' has a wrong offset!");
static_assert(offsetof(Umovement_component, __verse_0x9D5237F3__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R) == 0x0000F0, "Member 'Umovement_component::__verse_0x9D5237F3__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_REnableInput_L_Nplayer__component_R' has a wrong offset!");
static_assert(offsetof(Umovement_component, __verse_0xF91671FF__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R) == 0x0000FC, "Member 'Umovement_component::__verse_0xF91671FF__L_2fVerse_2eorg_2fEngine_2fVerseMovement_2fmovement__component_N_RDisableInput_L_Nplayer__component_R' has a wrong offset!");
static_assert(offsetof(Umovement_component, __verse_0xC055765D_CompareByPointer) == 0x000108, "Member 'Umovement_component::__verse_0xC055765D_CompareByPointer' has a wrong offset!");

// SolarisGeneratedClass VerseMovement.VerseMovementUtil
// 0x0010 (0x0038 - 0x0028)
class UVerseMovementUtil final : public UObject
{
public:
	struct Fmove_config                           __verse_0x40F5E85A_CarConfig;                      // 0x0028(0x0010)(InstancedReference)

public:
	void _InitCDO();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseMovementUtil">();
	}
	static class UVerseMovementUtil* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseMovementUtil>();
	}
};
static_assert(alignof(UVerseMovementUtil) == 0x000008, "Wrong alignment on UVerseMovementUtil");
static_assert(sizeof(UVerseMovementUtil) == 0x000038, "Wrong size on UVerseMovementUtil");
static_assert(offsetof(UVerseMovementUtil, __verse_0x40F5E85A_CarConfig) == 0x000028, "Member 'UVerseMovementUtil::__verse_0x40F5E85A_CarConfig' has a wrong offset!");

}

