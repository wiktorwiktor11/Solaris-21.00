#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseExperimental

#include "Basic.hpp"

#include "SolarisInterop_structs.hpp"
#include "VerseExperimental_structs.hpp"


namespace SDK::Params
{

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R
// 0x0048 (0x0048 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R final
{
public:
	struct Ftuple_Lint_Mint_Mint_Mint_Mint_Mint_Mint_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0038)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0038(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000048, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, RetVal) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R
// 0x0038 (0x0038 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R final
{
public:
	struct Ftuple_Lint_Mint_Mint_Mint_Mint_R      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0028)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0028(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000038, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, RetVal) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RCreateTimeSpan_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R
// 0x0098 (0x0098 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R final
{
public:
	struct Ftuple_Lint_Mint_Mint_Mint_Mint_Mint_Mint_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0038)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0038(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EVerseFalse                                   _TEMP_0;                                           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _TEMP_1;                                           // 0x0048(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct Ftuple_Lint_Mint_Mint_Mint_Mint_Mint_Mint_R& __verse_0xB2CDDD72_Argument)> _TEMP_2;                                           // 0x0054(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct Ftuple_Lint_Mint_Mint_Mint_Mint_Mint_Mint_R _TEMP_3;                                           // 0x0060(0x0038)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000098, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, RetVal) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, _TEMP_0) == 0x000041, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, _TEMP_1) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::_TEMP_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, _TEMP_2) == 0x000054, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::_TEMP_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, _TEMP_3) == 0x000060, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rdate__time_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::_TEMP_3' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax final
{
public:
	struct VerseExperimental::Ftuple_L_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdate_time                             RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMax::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin final
{
public:
	struct VerseExperimental::Ftuple_L_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdate_time                             RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDateTimeMin::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R final
{
public:
	struct VerseExperimental::Ftuple_Lint_Mint_R  __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInMonth_L_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R final
{
public:
	int64                                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RDaysInYear_L_Nint_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Fdate_parts                            RetVal;                                            // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDate_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDay_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	Eday_of_week                                  RetVal;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDayOfWeek_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetDays_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetHours_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMicroseconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMilliseconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMinutes_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonth_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	Emonth_of_year                                RetVal;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetMonthOfYear_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetNanoseconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetSeconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R
// 0x0038 (0x0038 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Ftime_of_day_parts                     RetVal;                                            // 0x0008(0x0030)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R) == 0x000038, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTimeOfDay_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalDays_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalHours_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMicroseconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMilliseconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalMinutes_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetTotalSeconds_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGetYear_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R
// 0x0038 (0x0038 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdate_time                             _TEMP_0;                                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0028(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R) == 0x000038, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, _TEMP_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R, _TEMP_1) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ndate__time_M_Ndate__time_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R
// 0x0058 (0x0058 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0020(0x0011)(Parm, OutParm, ReturnParm, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftime_span                             _TEMP_0;                                           // 0x0038(0x0010)(NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0048(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R) == 0x000058, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, _TEMP_0) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R, _TEMP_1) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreater_L_Ntime__span_M_Ntime__span_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R
// 0x0038 (0x0038 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdate_time                             _TEMP_0;                                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0028(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R) == 0x000038, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, _TEMP_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R, _TEMP_1) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ndate__time_M_Ndate__time_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R
// 0x0058 (0x0058 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0020(0x0011)(Parm, OutParm, ReturnParm, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftime_span                             _TEMP_0;                                           // 0x0038(0x0010)(NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0048(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R) == 0x000058, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, _TEMP_0) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R, _TEMP_1) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RGreaterEqual_L_Ntime__span_M_Ntime__span_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R
// 0x0038 (0x0038 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdate_time                             _TEMP_0;                                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0028(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R) == 0x000038, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, _TEMP_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R, _TEMP_1) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ndate__time_M_Ndate__time_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R
// 0x0058 (0x0058 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0020(0x0011)(Parm, OutParm, ReturnParm, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftime_span                             _TEMP_0;                                           // 0x0038(0x0010)(NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0048(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R) == 0x000058, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, _TEMP_0) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R, _TEMP_1) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLess_L_Ntime__span_M_Ntime__span_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R
// 0x0038 (0x0038 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdate_time                             _TEMP_0;                                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0028(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R) == 0x000038, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, _TEMP_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R, _TEMP_1) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ndate__time_M_Ndate__time_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R
// 0x0058 (0x0058 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0020(0x0011)(Parm, OutParm, ReturnParm, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftime_span                             _TEMP_0;                                           // 0x0038(0x0010)(NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0048(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R) == 0x000058, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, _TEMP_0) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R, _TEMP_1) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RLessEqual_L_Ntime__span_M_Ntime__span_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R
// 0x0050 (0x0050 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R final
{
public:
	struct Ftuple_Lfloat_Mtime__span_R            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	TDelegate<void(const struct Ftuple_Ltime__span_Mfloat_R& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Ltime__span_Mfloat_R            _TEMP_1;                                           // 0x0038(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R) == 0x000050, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R, _TEMP_0) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R, _TEMP_1) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Nfloat_M_Ntime__span_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R
// 0x0050 (0x0050 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R final
{
public:
	struct Ftuple_Ltime__span_Mfloat_R            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	TDelegate<void(const struct Ftuple_Ltime__span_Mfloat_R& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Ltime__span_Mfloat_R            _TEMP_1;                                           // 0x0038(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R) == 0x000050, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R, _TEMP_0) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R, _TEMP_1) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2a_27_L_Ntime__span_M_Nfloat_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R
// 0x0048 (0x0048 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R final
{
public:
	struct Ftuple_Ldate__time_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct Fdate_time                             RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct Ftuple_Ldate__time_Mtime__span_R& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0020(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Ldate__time_Mtime__span_R       _TEMP_1;                                           // 0x0030(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R) == 0x000048, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R, _TEMP_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R, _TEMP_1) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ndate__time_M_Ntime__span_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R
// 0x0060 (0x0060 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	TDelegate<void(const struct Ftuple_Ltime__span_Mtime__span_R& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Ltime__span_Mtime__span_R       _TEMP_1;                                           // 0x0040(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R) == 0x000060, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R, _TEMP_0) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R, _TEMP_1) == 0x000040, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2b_27_L_Ntime__span_M_Ntime__span_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R
// 0x0040 (0x0040 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	TDelegate<void(const struct Ftuple_Ldate__time_Mdate__time_R& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0020(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Ldate__time_Mdate__time_R       _TEMP_1;                                           // 0x0030(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R) == 0x000040, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R, _TEMP_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R, _TEMP_1) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ndate__time_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R
// 0x0048 (0x0048 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R final
{
public:
	struct Ftuple_Ldate__time_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct Fdate_time                             RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	TDelegate<void(const struct Ftuple_Ldate__time_Mtime__span_R& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0020(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Ldate__time_Mtime__span_R       _TEMP_1;                                           // 0x0030(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R) == 0x000048, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R, _TEMP_0) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R, _TEMP_1) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ndate__time_M_Ntime__span_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R
// 0x0060 (0x0060 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	TDelegate<void(const struct Ftuple_Ltime__span_Mtime__span_R& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Ltime__span_Mtime__span_R       _TEMP_1;                                           // 0x0040(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R) == 0x000060, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R, _TEMP_0) == 0x000030, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R, _TEMP_1) == 0x000040, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_M_Ntime__span_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	struct Ftime_span                             RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2d_27_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R
// 0x0050 (0x0050 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R final
{
public:
	struct Ftuple_Ltime__span_Mfloat_R            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	TDelegate<void(const struct Ftuple_Ltime__span_Mfloat_R& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Ltime__span_Mfloat_R            _TEMP_1;                                           // 0x0038(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R) == 0x000050, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R, _TEMP_0) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R, _TEMP_1) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Roperator_27_2f_27_L_Ntime__span_M_Nfloat_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R final
{
public:
	struct Ftuple_Ldate__time_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct Fdate_time                             RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ndate__time_M_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R
// 0x0030 (0x0030 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R) == 0x000030, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeAdd_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R
// 0x0028 (0x0028 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R final
{
public:
	struct Ftuple_Ltime__span_Mfloat_R            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R) == 0x000028, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeDivide_L_Ntime__span_M_Nfloat_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R
// 0x0028 (0x0028 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R final
{
public:
	struct Ftuple_Ltime__span_Mfloat_R            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R) == 0x000028, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeMultiply_L_Ntime__span_M_Nfloat_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	struct Ftime_span                             RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeNegate_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R final
{
public:
	struct Ftuple_Ldate__time_Mdate__time_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R final
{
public:
	struct Ftuple_Ldate__time_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct Fdate_time                             RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R, RetVal) == 0x000018, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ndate__time_M_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R
// 0x0030 (0x0030 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R final
{
public:
	struct Ftuple_Ltime__span_Mtime__span_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R) == 0x000030, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R, RetVal) == 0x000020, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RPerformNativeSubtract_L_Ntime__span_M_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R
// 0x0070 (0x0070 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R final
{
public:
	struct Ftuple_Lint_Mint_Mint_Mint_Mint_R      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0028)(Parm, HasGetValueTypeHash)
	struct Ftime_span                             RetVal;                                            // 0x0028(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	TDelegate<void(const struct Ftuple_Lint_Mint_Mint_Mint_Mint_R& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0038(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Lint_Mint_Mint_Mint_Mint_R      _TEMP_1;                                           // 0x0048(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000070, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, RetVal) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, _TEMP_0) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, _TEMP_1) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_Rtime__span_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::_TEMP_1' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R) == 0x000018, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ndate__time_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R
// 0x0020 (0x0020 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R final
{
public:
	struct Ftime_span                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	FVerseStringProperty_                         RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R) == 0x000020, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R, RetVal) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RToString_L_Ntime__span_R::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow final
{
public:
	struct VerseExperimental::Ftuple_L_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdate_time                             RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow) == 0x000010, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RUtcNow::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R
// 0x0080 (0x0080 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R final
{
public:
	struct Fdate_time                             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _TEMP_0 : 1;                                       // 0x000A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _TEMP_1;                                           // 0x0010(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct Ftuple_Ldate__time_Mdate__time_R& __verse_0xB2CDDD72_Argument)> _TEMP_2;                                           // 0x001C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mdate__time_R       _TEMP_3;                                           // 0x0028(0x0010)(HasGetValueTypeHash)
	TDelegate<void(const struct VerseExperimental::Ftuple_L_R& __verse_0xB2CDDD72_Argument)> _TEMP_4;                                           // 0x0038(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct VerseExperimental::Ftuple_L_R          _TEMP_5;                                           // 0x0044(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _TEMP_6;                                           // 0x0048(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct Ftuple_Ldate__time_Mdate__time_R& __verse_0xB2CDDD72_Argument)> _TEMP_7;                                           // 0x0054(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct Ftuple_Ldate__time_Mdate__time_R       _TEMP_8;                                           // 0x0060(0x0010)(HasGetValueTypeHash)
	TDelegate<void(const struct VerseExperimental::Ftuple_L_R& __verse_0xB2CDDD72_Argument)> _TEMP_9;                                           // 0x0070(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct VerseExperimental::Ftuple_L_R          _TEMP_10;                                          // 0x007C(0x0001)(HasGetValueTypeHash)
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R) == 0x000080, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, RetVal) == 0x000008, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::RetVal' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _TEMP_1) == 0x000010, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_TEMP_1' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _TEMP_2) == 0x00001C, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_TEMP_2' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _TEMP_3) == 0x000028, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_TEMP_3' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _TEMP_4) == 0x000038, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_TEMP_4' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _TEMP_5) == 0x000044, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_TEMP_5' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _TEMP_6) == 0x000048, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_TEMP_6' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _TEMP_7) == 0x000054, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_TEMP_7' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _TEMP_8) == 0x000060, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_TEMP_8' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _TEMP_9) == 0x000070, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_TEMP_9' has a wrong offset!");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R, _TEMP_10) == 0x00007C, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidate_L_Ndate__time_R::_TEMP_10' has a wrong offset!");

// Function VerseExperimental.VerseExperimental._L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R
// 0x0040 (0x0040 - 0x0000)
struct VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R final
{
public:
	struct Ftuple_Lint_Mint_Mint_Mint_Mint_Mint_Mint_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0038)(Parm, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000008, "Wrong alignment on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(sizeof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R) == 0x000040, "Wrong size on VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R");
static_assert(offsetof(VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseExperimental__L_2fVerse_2eorg_2fVerseExperimental_N_RValidateDateTime_L_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.date_parts$Factory
// 0x0018 (0x0018 - 0x0000)
struct VerseExperimental_date_parts_Factory final
{
public:
	struct Fdate_parts                            RetVal;                                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental_date_parts_Factory) == 0x000008, "Wrong alignment on VerseExperimental_date_parts_Factory");
static_assert(sizeof(VerseExperimental_date_parts_Factory) == 0x000018, "Wrong size on VerseExperimental_date_parts_Factory");
static_assert(offsetof(VerseExperimental_date_parts_Factory, RetVal) == 0x000000, "Member 'VerseExperimental_date_parts_Factory::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.date_time$Factory
// 0x0008 (0x0008 - 0x0000)
struct VerseExperimental_date_time_Factory final
{
public:
	struct Fdate_time                             RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental_date_time_Factory) == 0x000008, "Wrong alignment on VerseExperimental_date_time_Factory");
static_assert(sizeof(VerseExperimental_date_time_Factory) == 0x000008, "Wrong size on VerseExperimental_date_time_Factory");
static_assert(offsetof(VerseExperimental_date_time_Factory, RetVal) == 0x000000, "Member 'VerseExperimental_date_time_Factory::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.time_of_day_parts$Factory
// 0x0030 (0x0030 - 0x0000)
struct VerseExperimental_time_of_day_parts_Factory final
{
public:
	struct Ftime_of_day_parts                     RetVal;                                            // 0x0000(0x0030)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseExperimental_time_of_day_parts_Factory) == 0x000008, "Wrong alignment on VerseExperimental_time_of_day_parts_Factory");
static_assert(sizeof(VerseExperimental_time_of_day_parts_Factory) == 0x000030, "Wrong size on VerseExperimental_time_of_day_parts_Factory");
static_assert(offsetof(VerseExperimental_time_of_day_parts_Factory, RetVal) == 0x000000, "Member 'VerseExperimental_time_of_day_parts_Factory::RetVal' has a wrong offset!");

// Function VerseExperimental.VerseExperimental.time_span$Factory
// 0x0010 (0x0010 - 0x0000)
struct VerseExperimental_time_span_Factory final
{
public:
	struct Ftime_span                             RetVal;                                            // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseExperimental_time_span_Factory) == 0x000008, "Wrong alignment on VerseExperimental_time_span_Factory");
static_assert(sizeof(VerseExperimental_time_span_Factory) == 0x000010, "Wrong size on VerseExperimental_time_span_Factory");
static_assert(offsetof(VerseExperimental_time_span_Factory, RetVal) == 0x000000, "Member 'VerseExperimental_time_span_Factory::RetVal' has a wrong offset!");

}

