#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_DMR_Athena_Weap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "B_Ranged_Generic_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_DMR_Athena_Weap.B_DMR_Athena_Weap_C
// 0x0080 (0x1780 - 0x1700)
class AB_DMR_Athena_Weap_C final : public AB_Ranged_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_DMR_Athena_Weap_C;                // 0x1700(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         FireShake_NewTrack_0_367B801A4E18E53CF292BDB5540F63F1; // 0x1708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FireShake__Direction_367B801A4E18E53CF292BDB5540F63F1; // 0x170C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_170D[0x3];                                     // 0x170D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FireShake;                                         // 0x1710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ADS_NewTrack_0_F8555B9B490A957B45982FA7DD11223A;   // 0x1718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ADS__Direction_F8555B9B490A957B45982FA7DD11223A;   // 0x171C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171D[0x3];                                     // 0x171D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Ads;                                               // 0x1720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Firing_Rate;                                       // 0x1728(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XOffset;                                           // 0x172C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YOffset;                                           // 0x1730(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreADSYOffset;                                     // 0x1734(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PreviousRotation;                                  // 0x1738(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         PreADSXOffset;                                     // 0x1750(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YOffsetInterpTarget;                               // 0x1754(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XOffsetInterpTarget;                               // 0x1758(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YADSOffset;                                        // 0x175C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XADSOffset;                                        // 0x1760(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ADSAlpha;                                          // 0x1764(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XStrafeOffset;                                     // 0x1768(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YRecoilOffset;                                     // 0x176C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XRecoilOffset;                                     // 0x1770(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Firing;                                            // 0x1774(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1775[0x3];                                     // 0x1775(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           RecoilTimerHandle;                                 // 0x1778(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ADS__FinishedFunc();
	void ADS__UpdateFunc();
	void ExecuteUbergraph_B_DMR_Athena_Weap(int32 EntryPoint);
	void FireShake__FinishedFunc();
	void FireShake__UpdateFunc();
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnSetTargeting(bool bNewIsTargeting);
	void OnSpawnProjectile(class AFortProjectileBase* SpawnProjectile);
	void OnStopWeaponFireFX();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RecoilCamShake();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_DMR_Athena_Weap_C">();
	}
	static class AB_DMR_Athena_Weap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_DMR_Athena_Weap_C>();
	}
};
static_assert(alignof(AB_DMR_Athena_Weap_C) == 0x000008, "Wrong alignment on AB_DMR_Athena_Weap_C");
static_assert(sizeof(AB_DMR_Athena_Weap_C) == 0x001780, "Wrong size on AB_DMR_Athena_Weap_C");
static_assert(offsetof(AB_DMR_Athena_Weap_C, UberGraphFrame_B_DMR_Athena_Weap_C) == 0x001700, "Member 'AB_DMR_Athena_Weap_C::UberGraphFrame_B_DMR_Athena_Weap_C' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, FireShake_NewTrack_0_367B801A4E18E53CF292BDB5540F63F1) == 0x001708, "Member 'AB_DMR_Athena_Weap_C::FireShake_NewTrack_0_367B801A4E18E53CF292BDB5540F63F1' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, FireShake__Direction_367B801A4E18E53CF292BDB5540F63F1) == 0x00170C, "Member 'AB_DMR_Athena_Weap_C::FireShake__Direction_367B801A4E18E53CF292BDB5540F63F1' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, FireShake) == 0x001710, "Member 'AB_DMR_Athena_Weap_C::FireShake' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, ADS_NewTrack_0_F8555B9B490A957B45982FA7DD11223A) == 0x001718, "Member 'AB_DMR_Athena_Weap_C::ADS_NewTrack_0_F8555B9B490A957B45982FA7DD11223A' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, ADS__Direction_F8555B9B490A957B45982FA7DD11223A) == 0x00171C, "Member 'AB_DMR_Athena_Weap_C::ADS__Direction_F8555B9B490A957B45982FA7DD11223A' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, Ads) == 0x001720, "Member 'AB_DMR_Athena_Weap_C::Ads' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, Firing_Rate) == 0x001728, "Member 'AB_DMR_Athena_Weap_C::Firing_Rate' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, XOffset) == 0x00172C, "Member 'AB_DMR_Athena_Weap_C::XOffset' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, YOffset) == 0x001730, "Member 'AB_DMR_Athena_Weap_C::YOffset' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, PreADSYOffset) == 0x001734, "Member 'AB_DMR_Athena_Weap_C::PreADSYOffset' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, PreviousRotation) == 0x001738, "Member 'AB_DMR_Athena_Weap_C::PreviousRotation' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, PreADSXOffset) == 0x001750, "Member 'AB_DMR_Athena_Weap_C::PreADSXOffset' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, YOffsetInterpTarget) == 0x001754, "Member 'AB_DMR_Athena_Weap_C::YOffsetInterpTarget' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, XOffsetInterpTarget) == 0x001758, "Member 'AB_DMR_Athena_Weap_C::XOffsetInterpTarget' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, YADSOffset) == 0x00175C, "Member 'AB_DMR_Athena_Weap_C::YADSOffset' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, XADSOffset) == 0x001760, "Member 'AB_DMR_Athena_Weap_C::XADSOffset' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, ADSAlpha) == 0x001764, "Member 'AB_DMR_Athena_Weap_C::ADSAlpha' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, XStrafeOffset) == 0x001768, "Member 'AB_DMR_Athena_Weap_C::XStrafeOffset' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, YRecoilOffset) == 0x00176C, "Member 'AB_DMR_Athena_Weap_C::YRecoilOffset' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, XRecoilOffset) == 0x001770, "Member 'AB_DMR_Athena_Weap_C::XRecoilOffset' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, Firing) == 0x001774, "Member 'AB_DMR_Athena_Weap_C::Firing' has a wrong offset!");
static_assert(offsetof(AB_DMR_Athena_Weap_C, RecoilTimerHandle) == 0x001778, "Member 'AB_DMR_Athena_Weap_C::RecoilTimerHandle' has a wrong offset!");

}

