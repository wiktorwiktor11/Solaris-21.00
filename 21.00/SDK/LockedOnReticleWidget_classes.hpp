#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LockedOnReticleWidget

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LockedOnReticleWidget.LockedOnReticleWidget_C
// 0x0040 (0x02F8 - 0x02B8)
class ULockedOnReticleWidget_C final : public UUserWidget
{
public:
	class UImage*                                 Reticle_LockedOn;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_LockedOn_CenterdotShadow;                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_LockedOn_Glow;                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_LockedOn_Growth;                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_LockedOn_Pulse;                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_LockedOn_SecondaryRings;                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_LockedOn_Shadow_Overall;                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_LockedOn_Shadow_Rings;                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LockedOnReticleWidget_C">();
	}
	static class ULockedOnReticleWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULockedOnReticleWidget_C>();
	}
};
static_assert(alignof(ULockedOnReticleWidget_C) == 0x000008, "Wrong alignment on ULockedOnReticleWidget_C");
static_assert(sizeof(ULockedOnReticleWidget_C) == 0x0002F8, "Wrong size on ULockedOnReticleWidget_C");
static_assert(offsetof(ULockedOnReticleWidget_C, Reticle_LockedOn) == 0x0002B8, "Member 'ULockedOnReticleWidget_C::Reticle_LockedOn' has a wrong offset!");
static_assert(offsetof(ULockedOnReticleWidget_C, Reticle_LockedOn_CenterdotShadow) == 0x0002C0, "Member 'ULockedOnReticleWidget_C::Reticle_LockedOn_CenterdotShadow' has a wrong offset!");
static_assert(offsetof(ULockedOnReticleWidget_C, Reticle_LockedOn_Glow) == 0x0002C8, "Member 'ULockedOnReticleWidget_C::Reticle_LockedOn_Glow' has a wrong offset!");
static_assert(offsetof(ULockedOnReticleWidget_C, Reticle_LockedOn_Growth) == 0x0002D0, "Member 'ULockedOnReticleWidget_C::Reticle_LockedOn_Growth' has a wrong offset!");
static_assert(offsetof(ULockedOnReticleWidget_C, Reticle_LockedOn_Pulse) == 0x0002D8, "Member 'ULockedOnReticleWidget_C::Reticle_LockedOn_Pulse' has a wrong offset!");
static_assert(offsetof(ULockedOnReticleWidget_C, Reticle_LockedOn_SecondaryRings) == 0x0002E0, "Member 'ULockedOnReticleWidget_C::Reticle_LockedOn_SecondaryRings' has a wrong offset!");
static_assert(offsetof(ULockedOnReticleWidget_C, Reticle_LockedOn_Shadow_Overall) == 0x0002E8, "Member 'ULockedOnReticleWidget_C::Reticle_LockedOn_Shadow_Overall' has a wrong offset!");
static_assert(offsetof(ULockedOnReticleWidget_C, Reticle_LockedOn_Shadow_Rings) == 0x0002F0, "Member 'ULockedOnReticleWidget_C::Reticle_LockedOn_Shadow_Rings' has a wrong offset!");

}

