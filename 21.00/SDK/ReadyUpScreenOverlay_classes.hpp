#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReadyUpScreenOverlay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ReadyUpScreenOverlay.ReadyUpScreenOverlay_C
// 0x0090 (0x0438 - 0x03A8)
class UReadyUpScreenOverlay_C final : public UAthenaReadyUpScreenOverlay
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       InitialCountdownState;                             // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Countdown;                                         // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UAthenaServerShutdownWidget_C*          AthenaServerShutdownWidget;                        // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInGameSocialUserWidget_C*              InGameSlot_0;                                      // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInGameSocialUserWidget_C*              InGameSlot_1;                                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInGameSocialUserWidget_C*              InGameSlot_2;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInLobbySocialUserWidget_C*             LobbySlot_0;                                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInLobbySocialUserWidget_C*             LobbySlot_1;                                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInLobbySocialUserWidget_C*             LobbySlot_2;                                       // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInGameSocialUserWidget_C*              LocalPlayerSlot;                                   // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPostGameBottomBarWidget_C*             PostGameBottomBarWidget;                           // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SocialUserBox;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_ErrorHeader;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Waiting;                                      // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   CachedErrorText;                                   // 0x0420(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Destruct();
	void ExecuteUbergraph_ReadyUpScreenOverlay(int32 EntryPoint);
	void OnCancelReadyUp();
	void OnCountdownProgressed();
	void OnCountdownStarted();
	void OnExitToLobbyCountdownProgressed(float CountdownValue);
	void OnMatchmakingFinished(bool bSuccess);
	void OnMatchmakingStarted();
	void OnReadyUp();
	void PreConstruct(bool IsDesignTime);
	void UpdateExitToLobbyCountdownText(float CountdownValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ReadyUpScreenOverlay_C">();
	}
	static class UReadyUpScreenOverlay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReadyUpScreenOverlay_C>();
	}
};
static_assert(alignof(UReadyUpScreenOverlay_C) == 0x000008, "Wrong alignment on UReadyUpScreenOverlay_C");
static_assert(sizeof(UReadyUpScreenOverlay_C) == 0x000438, "Wrong size on UReadyUpScreenOverlay_C");
static_assert(offsetof(UReadyUpScreenOverlay_C, UberGraphFrame) == 0x0003A8, "Member 'UReadyUpScreenOverlay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, InitialCountdownState) == 0x0003B0, "Member 'UReadyUpScreenOverlay_C::InitialCountdownState' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, Countdown) == 0x0003B8, "Member 'UReadyUpScreenOverlay_C::Countdown' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, AthenaServerShutdownWidget) == 0x0003C0, "Member 'UReadyUpScreenOverlay_C::AthenaServerShutdownWidget' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, InGameSlot_0) == 0x0003C8, "Member 'UReadyUpScreenOverlay_C::InGameSlot_0' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, InGameSlot_1) == 0x0003D0, "Member 'UReadyUpScreenOverlay_C::InGameSlot_1' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, InGameSlot_2) == 0x0003D8, "Member 'UReadyUpScreenOverlay_C::InGameSlot_2' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, LobbySlot_0) == 0x0003E0, "Member 'UReadyUpScreenOverlay_C::LobbySlot_0' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, LobbySlot_1) == 0x0003E8, "Member 'UReadyUpScreenOverlay_C::LobbySlot_1' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, LobbySlot_2) == 0x0003F0, "Member 'UReadyUpScreenOverlay_C::LobbySlot_2' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, LocalPlayerSlot) == 0x0003F8, "Member 'UReadyUpScreenOverlay_C::LocalPlayerSlot' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, PostGameBottomBarWidget) == 0x000400, "Member 'UReadyUpScreenOverlay_C::PostGameBottomBarWidget' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, SocialUserBox) == 0x000408, "Member 'UReadyUpScreenOverlay_C::SocialUserBox' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, Text_ErrorHeader) == 0x000410, "Member 'UReadyUpScreenOverlay_C::Text_ErrorHeader' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, Text_Waiting) == 0x000418, "Member 'UReadyUpScreenOverlay_C::Text_Waiting' has a wrong offset!");
static_assert(offsetof(UReadyUpScreenOverlay_C, CachedErrorText) == 0x000420, "Member 'UReadyUpScreenOverlay_C::CachedErrorText' has a wrong offset!");

}

