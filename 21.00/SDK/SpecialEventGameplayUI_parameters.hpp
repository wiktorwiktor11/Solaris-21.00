#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecialEventGameplayUI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_0_structs.hpp"


namespace SDK::Params
{

// Function SpecialEventGameplayUI.SpecialEventCursorWidget.BP_OnCursorModeChanged
// 0x0010 (0x0010 - 0x0000)
struct SpecialEventCursorWidget_BP_OnCursorModeChanged final
{
public:
	class USpecialEventCursorPawnComponent*       InCursorPawnComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           NewCursorModeTag;                                  // 0x0008(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           OldCursorModeTag;                                  // 0x000C(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpecialEventCursorWidget_BP_OnCursorModeChanged) == 0x000008, "Wrong alignment on SpecialEventCursorWidget_BP_OnCursorModeChanged");
static_assert(sizeof(SpecialEventCursorWidget_BP_OnCursorModeChanged) == 0x000010, "Wrong size on SpecialEventCursorWidget_BP_OnCursorModeChanged");
static_assert(offsetof(SpecialEventCursorWidget_BP_OnCursorModeChanged, InCursorPawnComponent) == 0x000000, "Member 'SpecialEventCursorWidget_BP_OnCursorModeChanged::InCursorPawnComponent' has a wrong offset!");
static_assert(offsetof(SpecialEventCursorWidget_BP_OnCursorModeChanged, NewCursorModeTag) == 0x000008, "Member 'SpecialEventCursorWidget_BP_OnCursorModeChanged::NewCursorModeTag' has a wrong offset!");
static_assert(offsetof(SpecialEventCursorWidget_BP_OnCursorModeChanged, OldCursorModeTag) == 0x00000C, "Member 'SpecialEventCursorWidget_BP_OnCursorModeChanged::OldCursorModeTag' has a wrong offset!");

// Function SpecialEventGameplayUI.SpecialEventCursorWidget.BP_OnDesiredVisibilityChanged
// 0x0010 (0x0010 - 0x0000)
struct SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged final
{
public:
	class USpecialEventCursorPawnComponent*       InCursorPawnComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CursorModeTag;                                     // 0x0008(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldBeVisible;                                  // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged) == 0x000008, "Wrong alignment on SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged");
static_assert(sizeof(SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged) == 0x000010, "Wrong size on SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged");
static_assert(offsetof(SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged, InCursorPawnComponent) == 0x000000, "Member 'SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged::InCursorPawnComponent' has a wrong offset!");
static_assert(offsetof(SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged, CursorModeTag) == 0x000008, "Member 'SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged::CursorModeTag' has a wrong offset!");
static_assert(offsetof(SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged, bShouldBeVisible) == 0x00000C, "Member 'SpecialEventCursorWidget_BP_OnDesiredVisibilityChanged::bShouldBeVisible' has a wrong offset!");

// Function SpecialEventGameplayUI.SpecialEventCursorWidget.OnCursorModeChanged
// 0x0010 (0x0010 - 0x0000)
struct SpecialEventCursorWidget_OnCursorModeChanged final
{
public:
	class USpecialEventCursorPawnComponent*       InCursorPawnComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           NewCursorModeTag;                                  // 0x0008(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           OldCursorModeTag;                                  // 0x000C(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpecialEventCursorWidget_OnCursorModeChanged) == 0x000008, "Wrong alignment on SpecialEventCursorWidget_OnCursorModeChanged");
static_assert(sizeof(SpecialEventCursorWidget_OnCursorModeChanged) == 0x000010, "Wrong size on SpecialEventCursorWidget_OnCursorModeChanged");
static_assert(offsetof(SpecialEventCursorWidget_OnCursorModeChanged, InCursorPawnComponent) == 0x000000, "Member 'SpecialEventCursorWidget_OnCursorModeChanged::InCursorPawnComponent' has a wrong offset!");
static_assert(offsetof(SpecialEventCursorWidget_OnCursorModeChanged, NewCursorModeTag) == 0x000008, "Member 'SpecialEventCursorWidget_OnCursorModeChanged::NewCursorModeTag' has a wrong offset!");
static_assert(offsetof(SpecialEventCursorWidget_OnCursorModeChanged, OldCursorModeTag) == 0x00000C, "Member 'SpecialEventCursorWidget_OnCursorModeChanged::OldCursorModeTag' has a wrong offset!");

// Function SpecialEventGameplayUI.SpecialEventCursorWidget.OnDesiredVisibilityChanged
// 0x0010 (0x0010 - 0x0000)
struct SpecialEventCursorWidget_OnDesiredVisibilityChanged final
{
public:
	class USpecialEventCursorPawnComponent*       InCursorPawnComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CursorModeTag;                                     // 0x0008(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldBeVisible;                                  // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpecialEventCursorWidget_OnDesiredVisibilityChanged) == 0x000008, "Wrong alignment on SpecialEventCursorWidget_OnDesiredVisibilityChanged");
static_assert(sizeof(SpecialEventCursorWidget_OnDesiredVisibilityChanged) == 0x000010, "Wrong size on SpecialEventCursorWidget_OnDesiredVisibilityChanged");
static_assert(offsetof(SpecialEventCursorWidget_OnDesiredVisibilityChanged, InCursorPawnComponent) == 0x000000, "Member 'SpecialEventCursorWidget_OnDesiredVisibilityChanged::InCursorPawnComponent' has a wrong offset!");
static_assert(offsetof(SpecialEventCursorWidget_OnDesiredVisibilityChanged, CursorModeTag) == 0x000008, "Member 'SpecialEventCursorWidget_OnDesiredVisibilityChanged::CursorModeTag' has a wrong offset!");
static_assert(offsetof(SpecialEventCursorWidget_OnDesiredVisibilityChanged, bShouldBeVisible) == 0x00000C, "Member 'SpecialEventCursorWidget_OnDesiredVisibilityChanged::bShouldBeVisible' has a wrong offset!");

// Function SpecialEventGameplayUI.SpecialEventCursorWidget.OnViewportLocationChanged
// 0x0028 (0x0028 - 0x0000)
struct SpecialEventCursorWidget_OnViewportLocationChanged final
{
public:
	class USpecialEventCursorPawnComponent*       InCursorPawnComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              NormalizedLocation;                                // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ViewportLocation;                                  // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpecialEventCursorWidget_OnViewportLocationChanged) == 0x000008, "Wrong alignment on SpecialEventCursorWidget_OnViewportLocationChanged");
static_assert(sizeof(SpecialEventCursorWidget_OnViewportLocationChanged) == 0x000028, "Wrong size on SpecialEventCursorWidget_OnViewportLocationChanged");
static_assert(offsetof(SpecialEventCursorWidget_OnViewportLocationChanged, InCursorPawnComponent) == 0x000000, "Member 'SpecialEventCursorWidget_OnViewportLocationChanged::InCursorPawnComponent' has a wrong offset!");
static_assert(offsetof(SpecialEventCursorWidget_OnViewportLocationChanged, NormalizedLocation) == 0x000008, "Member 'SpecialEventCursorWidget_OnViewportLocationChanged::NormalizedLocation' has a wrong offset!");
static_assert(offsetof(SpecialEventCursorWidget_OnViewportLocationChanged, ViewportLocation) == 0x000018, "Member 'SpecialEventCursorWidget_OnViewportLocationChanged::ViewportLocation' has a wrong offset!");

// Function SpecialEventGameplayUI.SpecialEventCursorWidget.GetCursorModeTags
// 0x0020 (0x0020 - 0x0000)
struct SpecialEventCursorWidget_GetCursorModeTags final
{
public:
	struct FGameplayTagContainer                  ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SpecialEventCursorWidget_GetCursorModeTags) == 0x000008, "Wrong alignment on SpecialEventCursorWidget_GetCursorModeTags");
static_assert(sizeof(SpecialEventCursorWidget_GetCursorModeTags) == 0x000020, "Wrong size on SpecialEventCursorWidget_GetCursorModeTags");
static_assert(offsetof(SpecialEventCursorWidget_GetCursorModeTags, ReturnValue) == 0x000000, "Member 'SpecialEventCursorWidget_GetCursorModeTags::ReturnValue' has a wrong offset!");

// Function SpecialEventGameplayUI.SpecialEventUILibrary.HideFrontEndStateWidget
// 0x0010 (0x0010 - 0x0000)
struct SpecialEventUILibrary_HideFrontEndStateWidget final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewlyHidden;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SpecialEventUILibrary_HideFrontEndStateWidget) == 0x000008, "Wrong alignment on SpecialEventUILibrary_HideFrontEndStateWidget");
static_assert(sizeof(SpecialEventUILibrary_HideFrontEndStateWidget) == 0x000010, "Wrong size on SpecialEventUILibrary_HideFrontEndStateWidget");
static_assert(offsetof(SpecialEventUILibrary_HideFrontEndStateWidget, WorldContextObject) == 0x000000, "Member 'SpecialEventUILibrary_HideFrontEndStateWidget::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SpecialEventUILibrary_HideFrontEndStateWidget, bNewlyHidden) == 0x000008, "Member 'SpecialEventUILibrary_HideFrontEndStateWidget::bNewlyHidden' has a wrong offset!");

}

