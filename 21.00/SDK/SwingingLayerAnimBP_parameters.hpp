#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SwingingLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SwingingLayerAnimBP.SwingingLayerAnimBP_C.AnimGraph
// 0x0020 (0x0020 - 0x0000)
struct SwingingLayerAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimGraph_0;                                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwingingLayerAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on SwingingLayerAnimBP_C_AnimGraph");
static_assert(sizeof(SwingingLayerAnimBP_C_AnimGraph) == 0x000020, "Wrong size on SwingingLayerAnimBP_C_AnimGraph");
static_assert(offsetof(SwingingLayerAnimBP_C_AnimGraph, InPose) == 0x000000, "Member 'SwingingLayerAnimBP_C_AnimGraph::InPose' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_AnimGraph, AnimGraph_0) == 0x000010, "Member 'SwingingLayerAnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function SwingingLayerAnimBP.SwingingLayerAnimBP_C.BlueprintProcessAnimInputEvent
// 0x0008 (0x0008 - 0x0000)
struct SwingingLayerAnimBP_C_BlueprintProcessAnimInputEvent final
{
public:
	const class UFortAnimInputEvent*              AnimInputEvent;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SwingingLayerAnimBP_C_BlueprintProcessAnimInputEvent) == 0x000008, "Wrong alignment on SwingingLayerAnimBP_C_BlueprintProcessAnimInputEvent");
static_assert(sizeof(SwingingLayerAnimBP_C_BlueprintProcessAnimInputEvent) == 0x000008, "Wrong size on SwingingLayerAnimBP_C_BlueprintProcessAnimInputEvent");
static_assert(offsetof(SwingingLayerAnimBP_C_BlueprintProcessAnimInputEvent, AnimInputEvent) == 0x000000, "Member 'SwingingLayerAnimBP_C_BlueprintProcessAnimInputEvent::AnimInputEvent' has a wrong offset!");

// Function SwingingLayerAnimBP.SwingingLayerAnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct SwingingLayerAnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SwingingLayerAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on SwingingLayerAnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(SwingingLayerAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on SwingingLayerAnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(SwingingLayerAnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'SwingingLayerAnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function SwingingLayerAnimBP.SwingingLayerAnimBP_C.CharacterSkeletalControlPostLegIK
// 0x0020 (0x0020 - 0x0000)
struct SwingingLayerAnimBP_C_CharacterSkeletalControlPostLegIK final
{
public:
	struct FPoseLink                              InPosePostLegIK;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              CharacterSkeletalControlPostLegIK_0;               // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwingingLayerAnimBP_C_CharacterSkeletalControlPostLegIK) == 0x000008, "Wrong alignment on SwingingLayerAnimBP_C_CharacterSkeletalControlPostLegIK");
static_assert(sizeof(SwingingLayerAnimBP_C_CharacterSkeletalControlPostLegIK) == 0x000020, "Wrong size on SwingingLayerAnimBP_C_CharacterSkeletalControlPostLegIK");
static_assert(offsetof(SwingingLayerAnimBP_C_CharacterSkeletalControlPostLegIK, InPosePostLegIK) == 0x000000, "Member 'SwingingLayerAnimBP_C_CharacterSkeletalControlPostLegIK::InPosePostLegIK' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_CharacterSkeletalControlPostLegIK, CharacterSkeletalControlPostLegIK_0) == 0x000010, "Member 'SwingingLayerAnimBP_C_CharacterSkeletalControlPostLegIK::CharacterSkeletalControlPostLegIK_0' has a wrong offset!");

// Function SwingingLayerAnimBP.SwingingLayerAnimBP_C.ExecuteUbergraph_SwingingLayerAnimBP
// 0x0080 (0x0080 - 0x0000)
struct SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortAnimInputEvent*              K2Node_Event_AnimInputEvent;                       // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNamed_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Ranged_WestSausage_Parallel_Athena_C* K2Node_DynamicCast_AsB_Ranged_West_Sausage_Parallel_Athena; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP) == 0x000008, "Wrong alignment on SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP");
static_assert(sizeof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP) == 0x000080, "Wrong size on SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, EntryPoint) == 0x000000, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000005, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_1) == 0x000007, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000A, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue_3) == 0x00000B, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_2) == 0x00000D, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue_4) == 0x00000E, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue_5) == 0x00000F, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_3) == 0x000010, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_4) == 0x000011, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue_6) == 0x000012, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue_7) == 0x000020, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_5) == 0x000021, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000022, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x000023, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_6) == 0x000024, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_7) == 0x000025, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue_8) == 0x000026, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_8) == 0x000027, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_9) == 0x000028, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Not_PreBool_ReturnValue_9) == 0x000029, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_10) == 0x00002A, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002B, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, K2Node_Event_DeltaTimeX) == 0x00002C, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, K2Node_Event_AnimInputEvent) == 0x000030, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::K2Node_Event_AnimInputEvent' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_BooleanAND_ReturnValue_11) == 0x000038, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_IsNamed_ReturnValue) == 0x000039, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_IsNamed_ReturnValue' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, K2Node_DynamicCast_AsB_Ranged_West_Sausage_Parallel_Athena) == 0x000040, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::K2Node_DynamicCast_AsB_Ranged_West_Sausage_Parallel_Athena' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000050, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP, CallFunc_ComposeRotators_ReturnValue) == 0x000068, "Member 'SwingingLayerAnimBP_C_ExecuteUbergraph_SwingingLayerAnimBP::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function SwingingLayerAnimBP.SwingingLayerAnimBP_C.FullBodyOverride
// 0x0020 (0x0020 - 0x0000)
struct SwingingLayerAnimBP_C_FullBodyOverride final
{
public:
	struct FPoseLink                              PassThroughFullBodyPose;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              FullBodyOverride_0;                                // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SwingingLayerAnimBP_C_FullBodyOverride) == 0x000008, "Wrong alignment on SwingingLayerAnimBP_C_FullBodyOverride");
static_assert(sizeof(SwingingLayerAnimBP_C_FullBodyOverride) == 0x000020, "Wrong size on SwingingLayerAnimBP_C_FullBodyOverride");
static_assert(offsetof(SwingingLayerAnimBP_C_FullBodyOverride, PassThroughFullBodyPose) == 0x000000, "Member 'SwingingLayerAnimBP_C_FullBodyOverride::PassThroughFullBodyPose' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_FullBodyOverride, FullBodyOverride_0) == 0x000010, "Member 'SwingingLayerAnimBP_C_FullBodyOverride::FullBodyOverride_0' has a wrong offset!");

// Function SwingingLayerAnimBP.SwingingLayerAnimBP_C.SplitVector
// 0x0070 (0x0070 - 0x0000)
struct SwingingLayerAnimBP_C_SplitVector final
{
public:
	struct FVector                                Vec;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Magnitude;                                         // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Direction;                                         // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHigh;                                            // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SwingingLayerAnimBP_C_SplitVector) == 0x000008, "Wrong alignment on SwingingLayerAnimBP_C_SplitVector");
static_assert(sizeof(SwingingLayerAnimBP_C_SplitVector) == 0x000070, "Wrong size on SwingingLayerAnimBP_C_SplitVector");
static_assert(offsetof(SwingingLayerAnimBP_C_SplitVector, Vec) == 0x000000, "Member 'SwingingLayerAnimBP_C_SplitVector::Vec' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_SplitVector, Magnitude) == 0x000018, "Member 'SwingingLayerAnimBP_C_SplitVector::Magnitude' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_SplitVector, Direction) == 0x000020, "Member 'SwingingLayerAnimBP_C_SplitVector::Direction' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_SplitVector, IsHigh) == 0x000038, "Member 'SwingingLayerAnimBP_C_SplitVector::IsHigh' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_SplitVector, CallFunc_VSize_ReturnValue) == 0x00003C, "Member 'SwingingLayerAnimBP_C_SplitVector::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_SplitVector, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000040, "Member 'SwingingLayerAnimBP_C_SplitVector::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SwingingLayerAnimBP_C_SplitVector, CallFunc_Divide_VectorVector_ReturnValue) == 0x000058, "Member 'SwingingLayerAnimBP_C_SplitVector::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");

}

