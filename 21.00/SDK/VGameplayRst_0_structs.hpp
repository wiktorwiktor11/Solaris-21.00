#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VGameplayRst_0

#include "Basic.hpp"

#include "VerseExperimental_structs.hpp"
#include "Verse_0_structs.hpp"


namespace SDK
{

// SolarisGeneratedEnum VGameplayRst.activation_state
// NumValues: 0x0002
enum class Eactivation_state : uint8
{
	Active                                   = 0,
	Inactive                                 = 1,
};

// SolarisGeneratedEnum VGameplayRst.collision_shape_mode
// NumValues: 0x0004
enum class Ecollision_shape_mode : uint8
{
	CollisionMesh                            = 0,
	CollisionBox                             = 1,
	CollisionCapsule                         = 2,
	CollisionSphere                          = 3,
};

// SolarisGeneratedEnum VGameplayRst.collision_type
// NumValues: 0x0004
enum class Ecollision_type : uint8
{
	NoCollision                              = 0,
	QueryOnly                                = 1,
	SimulationOnly                           = 2,
	QueryAndSimulation                       = 3,
};

// SolarisGeneratedEnum VGameplayRst.default_animation_mode_type
// NumValues: 0x0004
enum class Edefault_animation_mode_type : uint8
{
	UseAnimationBlueprint                    = 0,
	UseAnimationInstance                     = 1,
	UseAnimationAsset                        = 2,
	UseCustomMode                            = 3,
};

// SolarisGeneratedEnum VGameplayRst.default_mesh_type
// NumValues: 0x0005
enum class Edefault_mesh_type : uint8
{
	CUBE                                     = 0,
	Sphere                                   = 1,
	Cylinder                                 = 2,
	Cone                                     = 3,
	Plane                                    = 4,
};

// SolarisGeneratedEnum VGameplayRst.dof_movement_mode
// NumValues: 0x0007
enum class Edof_movement_mode : uint8
{
	Default                                  = 0,
	SixDOF                                   = 1,
	YZPlane                                  = 2,
	XZPlane                                  = 3,
	XYPlane                                  = 4,
	CustomPlane                              = 5,
	NoConstraints                            = 6,
};

// SolarisGeneratedEnum VGameplayRst.physics_trace_category
// NumValues: 0x0003
enum class Ephysics_trace_category : uint8
{
	Channel                                  = 0,
	Profile                                  = 1,
	Object                                   = 2,
};

// SolarisGeneratedEnum VGameplayRst.physics_trace_channel
// NumValues: 0x000E
enum class Ephysics_trace_channel : uint8
{
	WorldStatic                              = 0,
	WorldDynamic                             = 1,
	Pawn                                     = 2,
	Visibility                               = 3,
	Camera                                   = 4,
	PhysicsBody                              = 5,
	Vehicle                                  = 6,
	Destructible                             = 7,
	GameTraceChannel1                        = 8,
	GameTraceChannel2                        = 9,
	GameTraceChannel3                        = 10,
	GameTraceChannel4                        = 11,
	GameTraceChannel5                        = 12,
	GameTraceChannel6                        = 13,
};

// SolarisGeneratedEnum VGameplayRst.physics_trace_shape
// NumValues: 0x0003
enum class Ephysics_trace_shape : uint8
{
	Line                                     = 0,
	Box                                      = 1,
	ShapeSphere                              = 2,
};

// SolarisGeneratedEnum VGameplayRst.physics_trace_type
// NumValues: 0x0003
enum class Ephysics_trace_type : uint8
{
	Single                                   = 0,
	Multi                                    = 1,
	Test                                     = 2,
};

// SolarisGeneratedEnum VGameplayRst.tag_search_sort_type
// NumValues: 0x0002
enum class Etag_search_sort_type : uint8
{
	Unsorted                                 = 0,
	Sorted                                   = 1,
};

// SolarisGeneratedStruct VGameplayRst.hit_result
// 0x0040 (0x0040 - 0x0000)
struct Fhit_result final
{
public:
	int64                                         __verse_0x592C3A0F_OtherEntityID;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ucollision_component*                   __verse_0x15DAA648_OtherComponent;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Fvector3                               __verse_0xA0175DA6_HitNormal;                      // 0x0010(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct Fvector3                               __verse_0xE16733E1_HitLocation;                    // 0x0028(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Fhit_result) == 0x000008, "Wrong alignment on Fhit_result");
static_assert(sizeof(Fhit_result) == 0x000040, "Wrong size on Fhit_result");
static_assert(offsetof(Fhit_result, __verse_0x592C3A0F_OtherEntityID) == 0x000000, "Member 'Fhit_result::__verse_0x592C3A0F_OtherEntityID' has a wrong offset!");
static_assert(offsetof(Fhit_result, __verse_0x15DAA648_OtherComponent) == 0x000008, "Member 'Fhit_result::__verse_0x15DAA648_OtherComponent' has a wrong offset!");
static_assert(offsetof(Fhit_result, __verse_0xA0175DA6_HitNormal) == 0x000010, "Member 'Fhit_result::__verse_0xA0175DA6_HitNormal' has a wrong offset!");
static_assert(offsetof(Fhit_result, __verse_0xE16733E1_HitLocation) == 0x000028, "Member 'Fhit_result::__verse_0xE16733E1_HitLocation' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_L_Kchar_Mtransform__v_M_Kchar_R
// 0x0070 (0x0070 - 0x0000)
struct Ftuple_L_Kchar_Mtransform__v_M_Kchar_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	struct Ftransform_v                           __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0050)(InstancedReference, NoDestructor)
	FVerseStringProperty_                         __verse_0x932BF92E_Elem2;                          // 0x0060(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kchar_Mtransform__v_M_Kchar_R) == 0x000010, "Wrong alignment on Ftuple_L_Kchar_Mtransform__v_M_Kchar_R");
static_assert(sizeof(Ftuple_L_Kchar_Mtransform__v_M_Kchar_R) == 0x000070, "Wrong size on Ftuple_L_Kchar_Mtransform__v_M_Kchar_R");
static_assert(offsetof(Ftuple_L_Kchar_Mtransform__v_M_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_Mtransform__v_M_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_Mtransform__v_M_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_Mtransform__v_M_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_Mtransform__v_M_Kchar_R, __verse_0x932BF92E_Elem2) == 0x000060, "Member 'Ftuple_L_Kchar_Mtransform__v_M_Kchar_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_L_R
// 0x0001 (0x0001 - 0x0000)
struct VGameplayRst_0::Ftuple_L_R final
{
public:
	uint8                                         _StructPaddingDummy;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VGameplayRst_0::Ftuple_L_R) == 0x000001, "Wrong alignment on VGameplayRst_0::Ftuple_L_R");
static_assert(sizeof(VGameplayRst_0::Ftuple_L_R) == 0x000001, "Wrong size on VGameplayRst_0::Ftuple_L_R");
static_assert(offsetof(VGameplayRst_0::Ftuple_L_R, _StructPaddingDummy) == 0x000000, "Member 'VGameplayRst_0::Ftuple_L_R::_StructPaddingDummy' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Lcomponent_Mint_Mtype_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_Lcomponent_Mint_Mtype_R final
{
public:
	class UEntityComponent*                       __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 __verse_0x932BF92E_Elem2;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lcomponent_Mint_Mtype_R) == 0x000008, "Wrong alignment on Ftuple_Lcomponent_Mint_Mtype_R");
static_assert(sizeof(Ftuple_Lcomponent_Mint_Mtype_R) == 0x000018, "Wrong size on Ftuple_Lcomponent_Mint_Mtype_R");
static_assert(offsetof(Ftuple_Lcomponent_Mint_Mtype_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lcomponent_Mint_Mtype_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mint_Mtype_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lcomponent_Mint_Mtype_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mint_Mtype_R, __verse_0x932BF92E_Elem2) == 0x000010, "Member 'Ftuple_Lcomponent_Mint_Mtype_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R
// 0x0078 (0x0078 - 0x0000)
struct Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R final
{
public:
	class UEntityComponent*                       __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Ephysics_trace_category                       __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Ephysics_trace_type                           __verse_0x932BF92E_Elem2;                          // 0x0009(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Ephysics_trace_shape                          __verse_0xF64C4596_Elem3;                          // 0x000A(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Ephysics_trace_channel                        __verse_0x4F74920B_Elem4;                          // 0x000B(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fvector3                               __verse_0x2A132EB3_Elem5;                          // 0x0010(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct Fvector3                               __verse_0xC4BC9BA1_Elem6;                          // 0x0028(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	uint8                                         __verse_0xA1DB2719_Elem7 : 1;                      // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fvector3                               __verse_0xF7CB4441_Elem8;                          // 0x0048(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	double                                        __verse_0x92ACF8F9_Elem9;                          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x2E90A5DD_Elem10;                         // 0x0068(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R) == 0x000008, "Wrong alignment on Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R");
static_assert(sizeof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R) == 0x000078, "Wrong size on Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R");
static_assert(offsetof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R, __verse_0x932BF92E_Elem2) == 0x000009, "Member 'Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R, __verse_0xF64C4596_Elem3) == 0x00000A, "Member 'Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R::__verse_0xF64C4596_Elem3' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R, __verse_0x4F74920B_Elem4) == 0x00000B, "Member 'Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R::__verse_0x4F74920B_Elem4' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R, __verse_0x2A132EB3_Elem5) == 0x000010, "Member 'Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R::__verse_0x2A132EB3_Elem5' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R, __verse_0xC4BC9BA1_Elem6) == 0x000028, "Member 'Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R::__verse_0xC4BC9BA1_Elem6' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R, __verse_0xF7CB4441_Elem8) == 0x000048, "Member 'Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R::__verse_0xF7CB4441_Elem8' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R, __verse_0x92ACF8F9_Elem9) == 0x000060, "Member 'Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R::__verse_0x92ACF8F9_Elem9' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R, __verse_0x2E90A5DD_Elem10) == 0x000068, "Member 'Ftuple_Lcomponent_Mphysics__trace__category_Mphysics__trace__type_Mphysics__trace__shape_Mphysics__trace__channel_Mvector3_Mvector3_Mlogic_Mvector3_Mfloat_M_Kchar_R::__verse_0x2E90A5DD_Elem10' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Lcomponent_Mtype_R
// 0x0010 (0x0010 - 0x0000)
struct VGameplayRst_0::Ftuple_Lcomponent_Mtype_R final
{
public:
	class UEntityComponent*                       __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VGameplayRst_0::Ftuple_Lcomponent_Mtype_R) == 0x000008, "Wrong alignment on VGameplayRst_0::Ftuple_Lcomponent_Mtype_R");
static_assert(sizeof(VGameplayRst_0::Ftuple_Lcomponent_Mtype_R) == 0x000010, "Wrong size on VGameplayRst_0::Ftuple_Lcomponent_Mtype_R");
static_assert(offsetof(VGameplayRst_0::Ftuple_Lcomponent_Mtype_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VGameplayRst_0::Ftuple_Lcomponent_Mtype_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VGameplayRst_0::Ftuple_Lcomponent_Mtype_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'VGameplayRst_0::Ftuple_Lcomponent_Mtype_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Lfloat_Mactivation__state_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lfloat_Mactivation__state_R final
{
public:
	double                                        __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Eactivation_state                             __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lfloat_Mactivation__state_R) == 0x000008, "Wrong alignment on Ftuple_Lfloat_Mactivation__state_R");
static_assert(sizeof(Ftuple_Lfloat_Mactivation__state_R) == 0x000010, "Wrong size on Ftuple_Lfloat_Mactivation__state_R");
static_assert(offsetof(Ftuple_Lfloat_Mactivation__state_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lfloat_Mactivation__state_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lfloat_Mactivation__state_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lfloat_Mactivation__state_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Lfloat_Mfloat_R
// 0x0010 (0x0010 - 0x0000)
struct VGameplayRst_0::Ftuple_Lfloat_Mfloat_R final
{
public:
	double                                        __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VGameplayRst_0::Ftuple_Lfloat_Mfloat_R) == 0x000008, "Wrong alignment on VGameplayRst_0::Ftuple_Lfloat_Mfloat_R");
static_assert(sizeof(VGameplayRst_0::Ftuple_Lfloat_Mfloat_R) == 0x000010, "Wrong size on VGameplayRst_0::Ftuple_Lfloat_Mfloat_R");
static_assert(offsetof(VGameplayRst_0::Ftuple_Lfloat_Mfloat_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VGameplayRst_0::Ftuple_Lfloat_Mfloat_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VGameplayRst_0::Ftuple_Lfloat_Mfloat_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'VGameplayRst_0::Ftuple_Lfloat_Mfloat_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Lfloat_Mlogic_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lfloat_Mlogic_R final
{
public:
	double                                        __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         __verse_0x7D844C3C_Elem1 : 1;                      // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(Ftuple_Lfloat_Mlogic_R) == 0x000008, "Wrong alignment on Ftuple_Lfloat_Mlogic_R");
static_assert(sizeof(Ftuple_Lfloat_Mlogic_R) == 0x000010, "Wrong size on Ftuple_Lfloat_Mlogic_R");
static_assert(offsetof(Ftuple_Lfloat_Mlogic_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lfloat_Mlogic_R::__verse_0x18E3F084_Elem0' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Lint_Msubtype_Lcomponent_R_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lint_Msubtype_Lcomponent_R_R final
{
public:
	int64                                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lint_Msubtype_Lcomponent_R_R) == 0x000008, "Wrong alignment on Ftuple_Lint_Msubtype_Lcomponent_R_R");
static_assert(sizeof(Ftuple_Lint_Msubtype_Lcomponent_R_R) == 0x000010, "Wrong size on Ftuple_Lint_Msubtype_Lcomponent_R_R");
static_assert(offsetof(Ftuple_Lint_Msubtype_Lcomponent_R_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lint_Msubtype_Lcomponent_R_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lint_Msubtype_Lcomponent_R_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lint_Msubtype_Lcomponent_R_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Llevel__v_Mtime__span_M_Kchar_R
// 0x0028 (0x0028 - 0x0000)
struct Ftuple_Llevel__v_Mtime__span_M_Kchar_R final
{
public:
	class Ulevel_v*                               __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Ftime_span                             __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0010)(InstancedReference, NoDestructor)
	FVerseStringProperty_                         __verse_0x932BF92E_Elem2;                          // 0x0018(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Llevel__v_Mtime__span_M_Kchar_R) == 0x000008, "Wrong alignment on Ftuple_Llevel__v_Mtime__span_M_Kchar_R");
static_assert(sizeof(Ftuple_Llevel__v_Mtime__span_M_Kchar_R) == 0x000028, "Wrong size on Ftuple_Llevel__v_Mtime__span_M_Kchar_R");
static_assert(offsetof(Ftuple_Llevel__v_Mtime__span_M_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Llevel__v_Mtime__span_M_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Llevel__v_Mtime__span_M_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Llevel__v_Mtime__span_M_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Llevel__v_Mtime__span_M_Kchar_R, __verse_0x932BF92E_Elem2) == 0x000018, "Member 'Ftuple_Llevel__v_Mtime__span_M_Kchar_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Llogic_Mlogic_R
// 0x0002 (0x0002 - 0x0000)
struct VGameplayRst_0::Ftuple_Llogic_Mlogic_R final
{
public:
	uint8                                         __verse_0x18E3F084_Elem0 : 1;                      // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_0_1 : 7;                                    // 0x0000(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         __verse_0x7D844C3C_Elem1 : 1;                      // 0x0001(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(VGameplayRst_0::Ftuple_Llogic_Mlogic_R) == 0x000001, "Wrong alignment on VGameplayRst_0::Ftuple_Llogic_Mlogic_R");
static_assert(sizeof(VGameplayRst_0::Ftuple_Llogic_Mlogic_R) == 0x000002, "Wrong size on VGameplayRst_0::Ftuple_Llogic_Mlogic_R");

// SolarisGeneratedStruct VGameplayRst.tuple_Lmaterial__v_Mint_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lmaterial__v_Mint_R final
{
public:
	class Umaterial_v*                            __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lmaterial__v_Mint_R) == 0x000008, "Wrong alignment on Ftuple_Lmaterial__v_Mint_R");
static_assert(sizeof(Ftuple_Lmaterial__v_Mint_R) == 0x000010, "Wrong size on Ftuple_Lmaterial__v_Mint_R");
static_assert(offsetof(Ftuple_Lmaterial__v_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lmaterial__v_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lmaterial__v_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lmaterial__v_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Lplayer__component_M_Kchar_M_Kchar_R
// 0x0028 (0x0028 - 0x0000)
struct VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R final
{
public:
	class Uplayer_component*                      __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x932BF92E_Elem2;                          // 0x0018(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R) == 0x000008, "Wrong alignment on VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R");
static_assert(sizeof(VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R) == 0x000028, "Wrong size on VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R");
static_assert(offsetof(VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R, __verse_0x932BF92E_Elem2) == 0x000018, "Member 'VGameplayRst_0::Ftuple_Lplayer__component_M_Kchar_M_Kchar_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Lplayer__component_M_Kchar_Mint_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_Lplayer__component_M_Kchar_Mint_R final
{
public:
	class Uplayer_component*                      __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0010)(InstancedReference, HasGetValueTypeHash)
	int64                                         __verse_0x932BF92E_Elem2;                          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer__component_M_Kchar_Mint_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer__component_M_Kchar_Mint_R");
static_assert(sizeof(Ftuple_Lplayer__component_M_Kchar_Mint_R) == 0x000020, "Wrong size on Ftuple_Lplayer__component_M_Kchar_Mint_R");
static_assert(offsetof(Ftuple_Lplayer__component_M_Kchar_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer__component_M_Kchar_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer__component_M_Kchar_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer__component_M_Kchar_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer__component_M_Kchar_Mint_R, __verse_0x932BF92E_Elem2) == 0x000018, "Member 'Ftuple_Lplayer__component_M_Kchar_Mint_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Ltime__span_M_Kchar_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_Ltime__span_M_Kchar_R final
{
public:
	struct Ftime_span                             __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, NoDestructor)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Ltime__span_M_Kchar_R) == 0x000008, "Wrong alignment on Ftuple_Ltime__span_M_Kchar_R");
static_assert(sizeof(Ftuple_Ltime__span_M_Kchar_R) == 0x000020, "Wrong size on Ftuple_Ltime__span_M_Kchar_R");
static_assert(offsetof(Ftuple_Ltime__span_M_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Ltime__span_M_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Ltime__span_M_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_Ltime__span_M_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Ltransform__v_M_Kchar_R
// 0x0060 (0x0060 - 0x0000)
struct VGameplayRst_0::Ftuple_Ltransform__v_M_Kchar_R final
{
public:
	struct Ftransform_v                           __verse_0x18E3F084_Elem0;                          // 0x0000(0x0050)(InstancedReference, NoDestructor)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0050(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(VGameplayRst_0::Ftuple_Ltransform__v_M_Kchar_R) == 0x000010, "Wrong alignment on VGameplayRst_0::Ftuple_Ltransform__v_M_Kchar_R");
static_assert(sizeof(VGameplayRst_0::Ftuple_Ltransform__v_M_Kchar_R) == 0x000060, "Wrong size on VGameplayRst_0::Ftuple_Ltransform__v_M_Kchar_R");
static_assert(offsetof(VGameplayRst_0::Ftuple_Ltransform__v_M_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VGameplayRst_0::Ftuple_Ltransform__v_M_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VGameplayRst_0::Ftuple_Ltransform__v_M_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000050, "Member 'VGameplayRst_0::Ftuple_Ltransform__v_M_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VGameplayRst.tuple_Lvector3_Mvector3_R
// 0x0030 (0x0030 - 0x0000)
struct VGameplayRst_0::Ftuple_Lvector3_Mvector3_R final
{
public:
	struct Fvector3                               __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct Fvector3                               __verse_0x7D844C3C_Elem1;                          // 0x0018(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VGameplayRst_0::Ftuple_Lvector3_Mvector3_R) == 0x000008, "Wrong alignment on VGameplayRst_0::Ftuple_Lvector3_Mvector3_R");
static_assert(sizeof(VGameplayRst_0::Ftuple_Lvector3_Mvector3_R) == 0x000030, "Wrong size on VGameplayRst_0::Ftuple_Lvector3_Mvector3_R");
static_assert(offsetof(VGameplayRst_0::Ftuple_Lvector3_Mvector3_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VGameplayRst_0::Ftuple_Lvector3_Mvector3_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VGameplayRst_0::Ftuple_Lvector3_Mvector3_R, __verse_0x7D844C3C_Elem1) == 0x000018, "Member 'VGameplayRst_0::Ftuple_Lvector3_Mvector3_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

}

