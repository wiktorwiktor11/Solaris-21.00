#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Barricade_CowCatcher

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.ActivateDeployMaterialAnimation
// 0x0004 (0x0004 - 0x0000)
struct BGA_Barricade_CowCatcher_C_ActivateDeployMaterialAnimation final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_ActivateDeployMaterialAnimation) == 0x000004, "Wrong alignment on BGA_Barricade_CowCatcher_C_ActivateDeployMaterialAnimation");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_ActivateDeployMaterialAnimation) == 0x000004, "Wrong size on BGA_Barricade_CowCatcher_C_ActivateDeployMaterialAnimation");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ActivateDeployMaterialAnimation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_ActivateDeployMaterialAnimation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.BndEvt__BGA_Barricade_CowCatcher_FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BGA_Barricade_CowCatcher_C_BndEvt__BGA_Barricade_CowCatcher_FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_BndEvt__BGA_Barricade_CowCatcher_FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on BGA_Barricade_CowCatcher_C_BndEvt__BGA_Barricade_CowCatcher_FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_BndEvt__BGA_Barricade_CowCatcher_FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature) == 0x000008, "Wrong size on BGA_Barricade_CowCatcher_C_BndEvt__BGA_Barricade_CowCatcher_FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_BndEvt__BGA_Barricade_CowCatcher_FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature, DamageCauser) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_BndEvt__BGA_Barricade_CowCatcher_FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature::DamageCauser' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.CanDestroyBelow?
// 0x0398 (0x0398 - 0x0000)
struct BGA_Barricade_CowCatcher_C_CanDestroyBelow_ final
{
public:
	class ABuildingActor*                         TestActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             NewLocalVar_0;                                     // 0x0028(0x00E0)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         DestructZThreshold;                                // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingType                             Temp_byte_Variable;                                // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x01A8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01D0(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2[0x2];                                      // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0340(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0393(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_) == 0x000008, "Wrong alignment on BGA_Barricade_CowCatcher_C_CanDestroyBelow_");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_) == 0x000398, "Wrong size on BGA_Barricade_CowCatcher_C_CanDestroyBelow_");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, TestActor) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::TestActor' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Normal) == 0x000008, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Normal' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, ReturnValue) == 0x000020, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, NewLocalVar_0) == 0x000028, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, DestructZThreshold) == 0x000108, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::DestructZThreshold' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable) == 0x00010C, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakVector_X) == 0x000128, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakVector_Y) == 0x00012C, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakVector_Z) == 0x000130, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_1) == 0x000134, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000135, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_2) == 0x000136, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_3) == 0x000137, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_4) == 0x000138, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_5) == 0x000139, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_6) == 0x00013A, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_7) == 0x00013B, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_8) == 0x00013C, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_9) == 0x00013D, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_10) == 0x00013E, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_11) == 0x00013F, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_bool_Variable_12) == 0x000140, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_byte_Variable) == 0x000141, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000148, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakVector_X_1) == 0x000160, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakVector_Y_1) == 0x000164, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakVector_Z_1) == 0x000168, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, K2Node_Select_Default) == 0x00016C, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_Add_FloatFloat_ReturnValue) == 0x000170, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000178, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_MakeVector_ReturnValue) == 0x000190, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, Temp_object_Variable) == 0x0001A8, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0001B8, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_LineTraceSingle_OutHit) == 0x0001D0, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_LineTraceSingle_ReturnValue) == 0x0002B0, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakVector_X_2) == 0x0002B4, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakVector_Y_2) == 0x0002B8, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakVector_Z_2) == 0x0002BC, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_bBlockingHit) == 0x0002C0, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002C1, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_Time) == 0x0002C4, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_Distance) == 0x0002C8, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_Location) == 0x0002D0, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_ImpactPoint) == 0x0002E8, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_Normal) == 0x000300, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_ImpactNormal) == 0x000318, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_PhysMat) == 0x000330, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_HitActor) == 0x000338, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_HitComponent) == 0x000340, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_HitBoneName) == 0x000348, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_BoneName) == 0x00034C, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_HitItem) == 0x000350, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_ElementIndex) == 0x000354, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_FaceIndex) == 0x000358, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_TraceStart) == 0x000360, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BreakHitResult_TraceEnd) == 0x000378, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_Less_FloatFloat_ReturnValue) == 0x000390, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000391, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_BooleanAND_ReturnValue) == 0x000392, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanDestroyBelow_, CallFunc_Not_PreBool_ReturnValue) == 0x000393, "Member 'BGA_Barricade_CowCatcher_C_CanDestroyBelow_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.CanSpawnOnActor?
// 0x0028 (0x0028 - 0x0000)
struct BGA_Barricade_CowCatcher_C_CanSpawnOnActor_ final
{
public:
	class AActor*                                 TestActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalBool;                                         // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingType                             Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_) == 0x000008, "Wrong alignment on BGA_Barricade_CowCatcher_C_CanSpawnOnActor_");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_) == 0x000028, "Wrong size on BGA_Barricade_CowCatcher_C_CanSpawnOnActor_");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, TestActor) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::TestActor' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, ReturnValue) == 0x000008, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, LocalBool) == 0x000009, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::LocalBool' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_byte_Variable) == 0x00000A, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, K2Node_DynamicCast_AsBuilding_Actor) == 0x000010, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable) == 0x000019, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_1) == 0x00001A, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_2) == 0x00001B, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_3) == 0x00001C, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_4) == 0x00001D, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_5) == 0x00001E, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_6) == 0x00001F, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_7) == 0x000020, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_8) == 0x000021, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_9) == 0x000022, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_10) == 0x000023, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_11) == 0x000024, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, Temp_bool_Variable_12) == 0x000025, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_CanSpawnOnActor_, K2Node_Select_Default) == 0x000026, "Member 'BGA_Barricade_CowCatcher_C_CanSpawnOnActor_::K2Node_Select_Default' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.DestroyAllOverlapping
// 0x0030 (0x0030 - 0x0000)
struct BGA_Barricade_CowCatcher_C_DestroyAllOverlapping final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping) == 0x000008, "Wrong alignment on BGA_Barricade_CowCatcher_C_DestroyAllOverlapping");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping) == 0x000030, "Wrong size on BGA_Barricade_CowCatcher_C_DestroyAllOverlapping");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_DestroyAllOverlapping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping, CallFunc_GetValueAtLevel_ReturnValue) == 0x000004, "Member 'BGA_Barricade_CowCatcher_C_DestroyAllOverlapping::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BGA_Barricade_CowCatcher_C_DestroyAllOverlapping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping, CallFunc_Array_Get_Item) == 0x000010, "Member 'BGA_Barricade_CowCatcher_C_DestroyAllOverlapping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping, K2Node_DynamicCast_AsBuilding_Actor) == 0x000018, "Member 'BGA_Barricade_CowCatcher_C_DestroyAllOverlapping::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BGA_Barricade_CowCatcher_C_DestroyAllOverlapping::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BGA_Barricade_CowCatcher_C_DestroyAllOverlapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BGA_Barricade_CowCatcher_C_DestroyAllOverlapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_DestroyAllOverlapping, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BGA_Barricade_CowCatcher_C_DestroyAllOverlapping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.ExecuteUbergraph_BGA_Barricade_CowCatcher
// 0x01C8 (0x01C8 - 0x0000)
struct BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPickup*                            CallFunc_K2_SpawnPickupInWorld_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_DamageCauser;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PerformLinkingCheck_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0050(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0088(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0178(0x0018)()
	bool                                          K2Node_Event_bBlockedByPawn;                       // 0x0190(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0194(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllOverlapping_Overlapped;             // 0x01A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAllOverlapping_Success_;               // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SnapToSurface_ReturnedHit_;               // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B3[0x5];                                      // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x01B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher) == 0x000008, "Wrong alignment on BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher) == 0x0001C8, "Wrong size on BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, EntryPoint) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::EntryPoint' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_GetActorForwardVector_ReturnValue) == 0x000008, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_K2_SpawnPickupInWorld_ReturnValue) == 0x000038, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_K2_SpawnPickupInWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, K2Node_ComponentBoundEvent_DamageCauser) == 0x000040, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::K2Node_ComponentBoundEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_PerformLinkingCheck_ReturnValue) == 0x000048, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_PerformLinkingCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, K2Node_Event_Damage) == 0x00004C, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, K2Node_Event_DamageTags) == 0x000050, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, K2Node_Event_Momentum) == 0x000070, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, K2Node_Event_HitInfo) == 0x000088, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, K2Node_Event_InstigatedBy) == 0x000168, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, K2Node_Event_DamageCauser) == 0x000170, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, K2Node_Event_EffectContext) == 0x000178, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, K2Node_Event_bBlockedByPawn) == 0x000190, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::K2Node_Event_bBlockedByPawn' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_IsDedicatedServer_ReturnValue) == 0x000191, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, K2Node_CreateDelegate_OutputDelegate) == 0x000194, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_GetAllOverlapping_Overlapped) == 0x0001A0, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_GetAllOverlapping_Overlapped' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_GetAllOverlapping_Success_) == 0x0001B0, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_GetAllOverlapping_Success_' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0001B1, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_SnapToSurface_ReturnedHit_) == 0x0001B2, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_SnapToSurface_ReturnedHit_' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_K2_SetTimer_ReturnValue) == 0x0001B8, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_GetValueAsBool_ReturnValue) == 0x0001C0, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher, CallFunc_Not_PreBool_ReturnValue) == 0x0001C1, "Member 'BGA_Barricade_CowCatcher_C_ExecuteUbergraph_BGA_Barricade_CowCatcher::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.GetAllOverlapping
// 0x02B8 (0x02B8 - 0x0000)
struct BGA_Barricade_CowCatcher_C_GetAllOverlapping final
{
public:
	TArray<class AActor*>                         Overlapped;                                        // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Success_;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverlappedArmorWall_;                              // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         OverlappedActors;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0030(0x0020)()
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorsLinkedTo_OutArray;               // 0x0058(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_BoxTraceMulti_OutHits;                    // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMulti_ReturnValue;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00B8(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19E[0x2];                                      // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_283[0x5];                                      // 0x0283(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDestroyBelow__ReturnValue;             // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_GetAllOverlapping) == 0x000008, "Wrong alignment on BGA_Barricade_CowCatcher_C_GetAllOverlapping");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_GetAllOverlapping) == 0x0002B8, "Wrong size on BGA_Barricade_CowCatcher_C_GetAllOverlapping");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, Overlapped) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::Overlapped' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, Success_) == 0x000010, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::Success_' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, OverlappedArmorWall_) == 0x000011, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::OverlappedArmorWall_' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, OverlappedActors) == 0x000018, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::OverlappedActors' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000030, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_GetValueAsBool_ReturnValue) == 0x000050, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BooleanNAND_ReturnValue) == 0x000051, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, Temp_bool_Variable) == 0x000052, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_GetActorsLinkedTo_OutArray) == 0x000058, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_GetActorsLinkedTo_OutArray' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000068, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000080, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BoxTraceMulti_OutHits) == 0x0000A0, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BoxTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BoxTraceMulti_ReturnValue) == 0x0000B0, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BoxTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_bBlockingHit) == 0x00019C, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_bInitialOverlap) == 0x00019D, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_Time) == 0x0001A0, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_Distance) == 0x0001A4, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_Location) == 0x0001A8, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C0, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_Normal) == 0x0001D8, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F0, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_PhysMat) == 0x000208, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_HitActor) == 0x000210, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_HitComponent) == 0x000218, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_HitBoneName) == 0x000220, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_BoneName) == 0x000224, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_HitItem) == 0x000228, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_ElementIndex) == 0x00022C, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_FaceIndex) == 0x000230, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_TraceStart) == 0x000238, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BreakHitResult_TraceEnd) == 0x000250, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_Less_IntInt_ReturnValue) == 0x000268, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000270, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_BooleanAND_ReturnValue) == 0x000281, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000282, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, K2Node_DynamicCast_AsBuilding_Actor) == 0x000288, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, K2Node_DynamicCast_bSuccess_1) == 0x000290, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_Add_IntInt_ReturnValue) == 0x000294, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000298, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0002A8, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_Array_Add_ReturnValue) == 0x0002AC, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAllOverlapping, CallFunc_CanDestroyBelow__ReturnValue) == 0x0002B0, "Member 'BGA_Barricade_CowCatcher_C_GetAllOverlapping::CallFunc_CanDestroyBelow__ReturnValue' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.OnDeathServer
// 0x0148 (0x0148 - 0x0000)
struct BGA_Barricade_CowCatcher_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_OnDeathServer) == 0x000008, "Wrong alignment on BGA_Barricade_CowCatcher_C_OnDeathServer");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_OnDeathServer) == 0x000148, "Wrong size on BGA_Barricade_CowCatcher_C_OnDeathServer");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_OnDeathServer, Damage) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_OnDeathServer, DamageTags) == 0x000008, "Member 'BGA_Barricade_CowCatcher_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_OnDeathServer, Momentum) == 0x000028, "Member 'BGA_Barricade_CowCatcher_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_OnDeathServer, HitInfo) == 0x000040, "Member 'BGA_Barricade_CowCatcher_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_OnDeathServer, InstigatedBy) == 0x000120, "Member 'BGA_Barricade_CowCatcher_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_OnDeathServer, DamageCauser) == 0x000128, "Member 'BGA_Barricade_CowCatcher_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_OnDeathServer, EffectContext) == 0x000130, "Member 'BGA_Barricade_CowCatcher_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.OnPlacementBlockedByPawnChanged
// 0x0001 (0x0001 - 0x0000)
struct BGA_Barricade_CowCatcher_C_OnPlacementBlockedByPawnChanged final
{
public:
	bool                                          bBlockedByPawn;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_OnPlacementBlockedByPawnChanged) == 0x000001, "Wrong alignment on BGA_Barricade_CowCatcher_C_OnPlacementBlockedByPawnChanged");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_OnPlacementBlockedByPawnChanged) == 0x000001, "Wrong size on BGA_Barricade_CowCatcher_C_OnPlacementBlockedByPawnChanged");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_OnPlacementBlockedByPawnChanged, bBlockedByPawn) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_OnPlacementBlockedByPawnChanged::bBlockedByPawn' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.OnRep_OnSpawn?
// 0x00E8 (0x00E8 - 0x0000)
struct BGA_Barricade_CowCatcher_C_OnRep_OnSpawn_ final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0000(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_OnRep_OnSpawn_) == 0x000008, "Wrong alignment on BGA_Barricade_CowCatcher_C_OnRep_OnSpawn_");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_OnRep_OnSpawn_) == 0x0000E8, "Wrong size on BGA_Barricade_CowCatcher_C_OnRep_OnSpawn_");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_OnRep_OnSpawn_, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_OnRep_OnSpawn_::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_OnRep_OnSpawn_, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000E0, "Member 'BGA_Barricade_CowCatcher_C_OnRep_OnSpawn_::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.SnapToSurface
// 0x0390 (0x0390 - 0x0000)
struct BGA_Barricade_CowCatcher_C_SnapToSurface final
{
public:
	float                                         TraceLength;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         IgnoredActors;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnedHit_;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidHit_;                                         // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_X;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Y;                       // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakRotIntoAxes_Z;                       // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0110(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F3[0x1];                                      // 0x01F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSpawnOnActor__ReturnValue;             // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0330(0x0060)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_SnapToSurface) == 0x000010, "Wrong alignment on BGA_Barricade_CowCatcher_C_SnapToSurface");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_SnapToSurface) == 0x000390, "Wrong size on BGA_Barricade_CowCatcher_C_SnapToSurface");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, TraceLength) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::TraceLength' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, IgnoredActors) == 0x000008, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::IgnoredActors' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, ReturnedHit_) == 0x000018, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::ReturnedHit_' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, ValidHit_) == 0x000019, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::ValidHit_' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_GetActorScale3D_ReturnValue) == 0x000020, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000050, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakVector_X) == 0x000068, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakVector_Y) == 0x00006C, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakVector_Z) == 0x000070, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakRotator_Roll) == 0x000074, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakRotator_Pitch) == 0x000078, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakRotator_Yaw) == 0x00007C, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakRotIntoAxes_X) == 0x000080, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakRotIntoAxes_X' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakRotIntoAxes_Y) == 0x000098, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakRotIntoAxes_Y' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakRotIntoAxes_Z) == 0x0000B0, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakRotIntoAxes_Z' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C8, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakVector_X_1) == 0x0000E4, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakVector_Y_1) == 0x0000E8, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakVector_Z_1) == 0x0000EC, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000F0, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_LineTraceSingle_OutHit) == 0x000110, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_LineTraceSingle_ReturnValue) == 0x0001F0, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_bBlockingHit) == 0x0001F1, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001F2, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_Time) == 0x0001F4, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_Distance) == 0x0001F8, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_Location) == 0x000200, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_ImpactPoint) == 0x000218, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_Normal) == 0x000230, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_ImpactNormal) == 0x000248, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_PhysMat) == 0x000260, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_HitActor) == 0x000268, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_HitComponent) == 0x000270, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_HitBoneName) == 0x000278, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_BoneName) == 0x00027C, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_HitItem) == 0x000280, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_ElementIndex) == 0x000284, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_FaceIndex) == 0x000288, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_TraceStart) == 0x000290, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakHitResult_TraceEnd) == 0x0002A8, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_CanSpawnOnActor__ReturnValue) == 0x0002C0, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_CanSpawnOnActor__ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_MakeRotFromZX_ReturnValue) == 0x0002C8, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakRotator_Roll_1) == 0x0002E0, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakRotator_Pitch_1) == 0x0002E4, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakRotator_Yaw_1) == 0x0002E8, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakVector_X_2) == 0x0002EC, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakVector_Y_2) == 0x0002F0, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_BreakVector_Z_2) == 0x0002F4, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_MakeRotator_ReturnValue) == 0x0002F8, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_Add_FloatFloat_ReturnValue) == 0x000310, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_MakeVector_ReturnValue_1) == 0x000318, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_SnapToSurface, CallFunc_MakeTransform_ReturnValue) == 0x000330, "Member 'BGA_Barricade_CowCatcher_C_SnapToSurface::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.UpdateDamageMaterials
// 0x001C (0x001C - 0x0000)
struct BGA_Barricade_CowCatcher_C_UpdateDamageMaterials final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBuildingHealthPercentage_ReturnValue;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_UpdateDamageMaterials) == 0x000004, "Wrong alignment on BGA_Barricade_CowCatcher_C_UpdateDamageMaterials");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_UpdateDamageMaterials) == 0x00001C, "Wrong size on BGA_Barricade_CowCatcher_C_UpdateDamageMaterials");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_UpdateDamageMaterials, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_UpdateDamageMaterials::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_UpdateDamageMaterials, CallFunc_GetBuildingHealthPercentage_ReturnValue) == 0x000004, "Member 'BGA_Barricade_CowCatcher_C_UpdateDamageMaterials::CallFunc_GetBuildingHealthPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_UpdateDamageMaterials, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BGA_Barricade_CowCatcher_C_UpdateDamageMaterials::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_UpdateDamageMaterials, CallFunc_Round_ReturnValue) == 0x00000C, "Member 'BGA_Barricade_CowCatcher_C_UpdateDamageMaterials::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_UpdateDamageMaterials, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'BGA_Barricade_CowCatcher_C_UpdateDamageMaterials::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_UpdateDamageMaterials, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BGA_Barricade_CowCatcher_C_UpdateDamageMaterials::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_UpdateDamageMaterials, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'BGA_Barricade_CowCatcher_C_UpdateDamageMaterials::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.GetAffiliationsToShowFor
// 0x0020 (0x0020 - 0x0000)
struct BGA_Barricade_CowCatcher_C_GetAffiliationsToShowFor final
{
public:
	TArray<EFortTeamAffiliation>                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EFortTeamAffiliation>                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_GetAffiliationsToShowFor) == 0x000008, "Wrong alignment on BGA_Barricade_CowCatcher_C_GetAffiliationsToShowFor");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_GetAffiliationsToShowFor) == 0x000020, "Wrong size on BGA_Barricade_CowCatcher_C_GetAffiliationsToShowFor");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAffiliationsToShowFor, ReturnValue) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_GetAffiliationsToShowFor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_GetAffiliationsToShowFor, K2Node_MakeArray_Array) == 0x000010, "Member 'BGA_Barricade_CowCatcher_C_GetAffiliationsToShowFor::K2Node_MakeArray_Array' has a wrong offset!");

// Function BGA_Barricade_CowCatcher.BGA_Barricade_CowCatcher_C.ShouldShowSoundIndicator
// 0x0020 (0x0020 - 0x0000)
struct BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator final
{
public:
	class AFortPlayerController*                  PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator) == 0x000008, "Wrong alignment on BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator");
static_assert(sizeof(BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator) == 0x000020, "Wrong size on BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator, PlayerController) == 0x000000, "Member 'BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator::PlayerController' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator, ReturnValue) == 0x000008, "Member 'BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator, CallFunc_GetInstigatorController_ReturnValue) == 0x000010, "Member 'BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BGA_Barricade_CowCatcher_C_ShouldShowSoundIndicator::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

