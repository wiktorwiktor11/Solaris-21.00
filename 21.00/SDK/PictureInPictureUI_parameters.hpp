#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PictureInPictureUI

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "PictureInPictureDescriptors_structs.hpp"


namespace SDK::Params
{

// Function PictureInPictureUI.PictureInPictureBladeMenuButton.HandlePiPEnabled
// 0x0001 (0x0001 - 0x0000)
struct PictureInPictureBladeMenuButton_HandlePiPEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PictureInPictureBladeMenuButton_HandlePiPEnabled) == 0x000001, "Wrong alignment on PictureInPictureBladeMenuButton_HandlePiPEnabled");
static_assert(sizeof(PictureInPictureBladeMenuButton_HandlePiPEnabled) == 0x000001, "Wrong size on PictureInPictureBladeMenuButton_HandlePiPEnabled");
static_assert(offsetof(PictureInPictureBladeMenuButton_HandlePiPEnabled, Enabled) == 0x000000, "Member 'PictureInPictureBladeMenuButton_HandlePiPEnabled::Enabled' has a wrong offset!");

// Function PictureInPictureUI.PictureInPictureBladeMenuButton.UpdatePiPStatusBP
// 0x0003 (0x0003 - 0x0000)
struct PictureInPictureBladeMenuButton_UpdatePiPStatusBP final
{
public:
	bool                                          LoggedIn;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enabled;                                           // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ParentalControlsEnabled;                           // 0x0002(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PictureInPictureBladeMenuButton_UpdatePiPStatusBP) == 0x000001, "Wrong alignment on PictureInPictureBladeMenuButton_UpdatePiPStatusBP");
static_assert(sizeof(PictureInPictureBladeMenuButton_UpdatePiPStatusBP) == 0x000003, "Wrong size on PictureInPictureBladeMenuButton_UpdatePiPStatusBP");
static_assert(offsetof(PictureInPictureBladeMenuButton_UpdatePiPStatusBP, LoggedIn) == 0x000000, "Member 'PictureInPictureBladeMenuButton_UpdatePiPStatusBP::LoggedIn' has a wrong offset!");
static_assert(offsetof(PictureInPictureBladeMenuButton_UpdatePiPStatusBP, Enabled) == 0x000001, "Member 'PictureInPictureBladeMenuButton_UpdatePiPStatusBP::Enabled' has a wrong offset!");
static_assert(offsetof(PictureInPictureBladeMenuButton_UpdatePiPStatusBP, ParentalControlsEnabled) == 0x000002, "Member 'PictureInPictureBladeMenuButton_UpdatePiPStatusBP::ParentalControlsEnabled' has a wrong offset!");

// Function PictureInPictureUI.PictureInPicturePanelWidget.FlipPIPAudioSubmix
// 0x0070 (0x0070 - 0x0000)
struct PictureInPicturePanelWidget_FlipPIPAudioSubmix final
{
public:
	bool                                          bInDefault;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortMediaEventsStreamAssets           InStreamAssets;                                    // 0x0008(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0068(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PictureInPicturePanelWidget_FlipPIPAudioSubmix) == 0x000008, "Wrong alignment on PictureInPicturePanelWidget_FlipPIPAudioSubmix");
static_assert(sizeof(PictureInPicturePanelWidget_FlipPIPAudioSubmix) == 0x000070, "Wrong size on PictureInPicturePanelWidget_FlipPIPAudioSubmix");
static_assert(offsetof(PictureInPicturePanelWidget_FlipPIPAudioSubmix, bInDefault) == 0x000000, "Member 'PictureInPicturePanelWidget_FlipPIPAudioSubmix::bInDefault' has a wrong offset!");
static_assert(offsetof(PictureInPicturePanelWidget_FlipPIPAudioSubmix, InStreamAssets) == 0x000008, "Member 'PictureInPicturePanelWidget_FlipPIPAudioSubmix::InStreamAssets' has a wrong offset!");
static_assert(offsetof(PictureInPicturePanelWidget_FlipPIPAudioSubmix, bForce) == 0x000068, "Member 'PictureInPicturePanelWidget_FlipPIPAudioSubmix::bForce' has a wrong offset!");

// Function PictureInPictureUI.PictureInPicturePanelWidget.HandleIsPictureInPictureEnabledChanged
// 0x0001 (0x0001 - 0x0000)
struct PictureInPicturePanelWidget_HandleIsPictureInPictureEnabledChanged final
{
public:
	bool                                          bIsPiPEnabled;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PictureInPicturePanelWidget_HandleIsPictureInPictureEnabledChanged) == 0x000001, "Wrong alignment on PictureInPicturePanelWidget_HandleIsPictureInPictureEnabledChanged");
static_assert(sizeof(PictureInPicturePanelWidget_HandleIsPictureInPictureEnabledChanged) == 0x000001, "Wrong size on PictureInPicturePanelWidget_HandleIsPictureInPictureEnabledChanged");
static_assert(offsetof(PictureInPicturePanelWidget_HandleIsPictureInPictureEnabledChanged, bIsPiPEnabled) == 0x000000, "Member 'PictureInPicturePanelWidget_HandleIsPictureInPictureEnabledChanged::bIsPiPEnabled' has a wrong offset!");

// Function PictureInPictureUI.PictureInPicturePanelWidget.HandleOnPartnerChanged
// 0x0008 (0x0008 - 0x0000)
struct PictureInPicturePanelWidget_HandleOnPartnerChanged final
{
public:
	class UPictureInPicturePartnerControls*       NewPartnerControls;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PictureInPicturePanelWidget_HandleOnPartnerChanged) == 0x000008, "Wrong alignment on PictureInPicturePanelWidget_HandleOnPartnerChanged");
static_assert(sizeof(PictureInPicturePanelWidget_HandleOnPartnerChanged) == 0x000008, "Wrong size on PictureInPicturePanelWidget_HandleOnPartnerChanged");
static_assert(offsetof(PictureInPicturePanelWidget_HandleOnPartnerChanged, NewPartnerControls) == 0x000000, "Member 'PictureInPicturePanelWidget_HandleOnPartnerChanged::NewPartnerControls' has a wrong offset!");

// Function PictureInPictureUI.PictureInPicturePanelWidget.HandleOnPartnerSourceChanged
// 0x0128 (0x0128 - 0x0000)
struct PictureInPicturePanelWidget_HandleOnPartnerSourceChanged final
{
public:
	struct FPiPPartnerSource                      InSelectedSource;                                  // 0x0000(0x0128)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(PictureInPicturePanelWidget_HandleOnPartnerSourceChanged) == 0x000008, "Wrong alignment on PictureInPicturePanelWidget_HandleOnPartnerSourceChanged");
static_assert(sizeof(PictureInPicturePanelWidget_HandleOnPartnerSourceChanged) == 0x000128, "Wrong size on PictureInPicturePanelWidget_HandleOnPartnerSourceChanged");
static_assert(offsetof(PictureInPicturePanelWidget_HandleOnPartnerSourceChanged, InSelectedSource) == 0x000000, "Member 'PictureInPicturePanelWidget_HandleOnPartnerSourceChanged::InSelectedSource' has a wrong offset!");

// Function PictureInPictureUI.PictureInPicturePanelWidget.HandleToggleFullscreenMap
// 0x0001 (0x0001 - 0x0000)
struct PictureInPicturePanelWidget_HandleToggleFullscreenMap final
{
public:
	bool                                          bFullscreenMapVisible;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PictureInPicturePanelWidget_HandleToggleFullscreenMap) == 0x000001, "Wrong alignment on PictureInPicturePanelWidget_HandleToggleFullscreenMap");
static_assert(sizeof(PictureInPicturePanelWidget_HandleToggleFullscreenMap) == 0x000001, "Wrong size on PictureInPicturePanelWidget_HandleToggleFullscreenMap");
static_assert(offsetof(PictureInPicturePanelWidget_HandleToggleFullscreenMap, bFullscreenMapVisible) == 0x000000, "Member 'PictureInPicturePanelWidget_HandleToggleFullscreenMap::bFullscreenMapVisible' has a wrong offset!");

// Function PictureInPictureUI.PictureInPicturePanelWidget.SetupPIPSoundComponent
// 0x0060 (0x0060 - 0x0000)
struct PictureInPicturePanelWidget_SetupPIPSoundComponent final
{
public:
	struct FFortMediaEventsStreamAssets           InStreamAssets;                                    // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PictureInPicturePanelWidget_SetupPIPSoundComponent) == 0x000008, "Wrong alignment on PictureInPicturePanelWidget_SetupPIPSoundComponent");
static_assert(sizeof(PictureInPicturePanelWidget_SetupPIPSoundComponent) == 0x000060, "Wrong size on PictureInPicturePanelWidget_SetupPIPSoundComponent");
static_assert(offsetof(PictureInPicturePanelWidget_SetupPIPSoundComponent, InStreamAssets) == 0x000000, "Member 'PictureInPicturePanelWidget_SetupPIPSoundComponent::InStreamAssets' has a wrong offset!");

// Function PictureInPictureUI.PictureInPicturePanelWidget.ShowDebugInfo
// 0x0001 (0x0001 - 0x0000)
struct PictureInPicturePanelWidget_ShowDebugInfo final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PictureInPicturePanelWidget_ShowDebugInfo) == 0x000001, "Wrong alignment on PictureInPicturePanelWidget_ShowDebugInfo");
static_assert(sizeof(PictureInPicturePanelWidget_ShowDebugInfo) == 0x000001, "Wrong size on PictureInPicturePanelWidget_ShowDebugInfo");
static_assert(offsetof(PictureInPicturePanelWidget_ShowDebugInfo, bShow) == 0x000000, "Member 'PictureInPicturePanelWidget_ShowDebugInfo::bShow' has a wrong offset!");

// Function PictureInPictureUI.PictureInPictureSourcePicker.HandleOnPartnerChanged
// 0x0008 (0x0008 - 0x0000)
struct PictureInPictureSourcePicker_HandleOnPartnerChanged final
{
public:
	class UPictureInPicturePartnerControls*       NewPartner;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PictureInPictureSourcePicker_HandleOnPartnerChanged) == 0x000008, "Wrong alignment on PictureInPictureSourcePicker_HandleOnPartnerChanged");
static_assert(sizeof(PictureInPictureSourcePicker_HandleOnPartnerChanged) == 0x000008, "Wrong size on PictureInPictureSourcePicker_HandleOnPartnerChanged");
static_assert(offsetof(PictureInPictureSourcePicker_HandleOnPartnerChanged, NewPartner) == 0x000000, "Member 'PictureInPictureSourcePicker_HandleOnPartnerChanged::NewPartner' has a wrong offset!");

// Function PictureInPictureUI.PictureInPictureSourcePicker.HandleOnPartnerSourceChanged
// 0x0010 (0x0010 - 0x0000)
struct PictureInPictureSourcePicker_HandleOnPartnerSourceChanged final
{
public:
	TArray<struct FPiPPartnerSource>              CurrentSources;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(PictureInPictureSourcePicker_HandleOnPartnerSourceChanged) == 0x000008, "Wrong alignment on PictureInPictureSourcePicker_HandleOnPartnerSourceChanged");
static_assert(sizeof(PictureInPictureSourcePicker_HandleOnPartnerSourceChanged) == 0x000010, "Wrong size on PictureInPictureSourcePicker_HandleOnPartnerSourceChanged");
static_assert(offsetof(PictureInPictureSourcePicker_HandleOnPartnerSourceChanged, CurrentSources) == 0x000000, "Member 'PictureInPictureSourcePicker_HandleOnPartnerSourceChanged::CurrentSources' has a wrong offset!");

}

