#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CalendarDriven_PathProvider

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CalendarDriven_PathProvider.BP_CalendarDriven_PathProvider_C
// 0x0038 (0x02A8 - 0x0270)
class ABP_CalendarDriven_PathProvider_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortAthenaPatrolPathPointProvider*> PointProvider;                                     // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class FString                                 CalendarEventName;                                 // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          DebugBypassCalendarEvent;                          // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AbductionPhase;                                    // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void OnReady_C2064A2A4E601EA29FC3EDA1D3ECD635(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void GetAbductionPhase(float Progress, int32* Stage);
	void ExecuteUbergraph_BP_CalendarDriven_PathProvider(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CalendarDriven_PathProvider_C">();
	}
	static class ABP_CalendarDriven_PathProvider_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CalendarDriven_PathProvider_C>();
	}
};
static_assert(alignof(ABP_CalendarDriven_PathProvider_C) == 0x000008, "Wrong alignment on ABP_CalendarDriven_PathProvider_C");
static_assert(sizeof(ABP_CalendarDriven_PathProvider_C) == 0x0002A8, "Wrong size on ABP_CalendarDriven_PathProvider_C");
static_assert(offsetof(ABP_CalendarDriven_PathProvider_C, UberGraphFrame) == 0x000270, "Member 'ABP_CalendarDriven_PathProvider_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDriven_PathProvider_C, DefaultSceneRoot) == 0x000278, "Member 'ABP_CalendarDriven_PathProvider_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDriven_PathProvider_C, PointProvider) == 0x000280, "Member 'ABP_CalendarDriven_PathProvider_C::PointProvider' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDriven_PathProvider_C, CalendarEventName) == 0x000290, "Member 'ABP_CalendarDriven_PathProvider_C::CalendarEventName' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDriven_PathProvider_C, DebugBypassCalendarEvent) == 0x0002A0, "Member 'ABP_CalendarDriven_PathProvider_C::DebugBypassCalendarEvent' has a wrong offset!");
static_assert(offsetof(ABP_CalendarDriven_PathProvider_C, AbductionPhase) == 0x0002A4, "Member 'ABP_CalendarDriven_PathProvider_C::AbductionPhase' has a wrong offset!");

}

