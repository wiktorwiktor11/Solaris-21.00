#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Artemis_Daisy_GiantTree_A

#include "Basic.hpp"

#include "BP_Artemis_StaticMesh_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Artemis_Daisy_GiantTree_A.BP_Artemis_Daisy_GiantTree_A_C
// 0x0138 (0x03F0 - 0x02B8)
class ABP_Artemis_Daisy_GiantTree_A_C final : public ABP_Artemis_StaticMesh_C
{
public:
	class UStaticMeshComponent*                   PlayerCollision2;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlayerCollision3;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlayerCollision4;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlayerCollision;                                   // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Daisy_GiantTree_K;                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Daisy_GiantTree_J;                              // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Daisy_GiantTree_I;                              // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Daisy_GiantTree_H;                              // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Daisy_GiantTree_G;                              // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Daisy_GiantTree_F;                              // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Daisy_GiantTree_E;                              // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Daisy_GiantTree_D;                              // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Daisy_GiantTree_C;                              // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Daisy_GiantTree_B;                              // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B16;                                        // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B15;                                        // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B14;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B13;                                        // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BranchA5;                                          // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B12;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B11;                                        // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B10;                                        // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B9;                                         // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BranchA4;                                          // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BranchA3;                                          // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B8;                                         // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B7;                                         // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B6;                                         // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B5;                                         // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B4;                                         // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_C1;                                         // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B3;                                         // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BranchA2;                                          // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B2;                                         // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BranchA1;                                          // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B1;                                         // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_C;                                          // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Branch_B;                                          // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BranchA;                                           // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Artemis_Daisy_GiantTree_A_C">();
	}
	static class ABP_Artemis_Daisy_GiantTree_A_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Artemis_Daisy_GiantTree_A_C>();
	}
};
static_assert(alignof(ABP_Artemis_Daisy_GiantTree_A_C) == 0x000008, "Wrong alignment on ABP_Artemis_Daisy_GiantTree_A_C");
static_assert(sizeof(ABP_Artemis_Daisy_GiantTree_A_C) == 0x0003F0, "Wrong size on ABP_Artemis_Daisy_GiantTree_A_C");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, PlayerCollision2) == 0x0002B8, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::PlayerCollision2' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, PlayerCollision3) == 0x0002C0, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::PlayerCollision3' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, PlayerCollision4) == 0x0002C8, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::PlayerCollision4' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, PlayerCollision) == 0x0002D0, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::PlayerCollision' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, SM_Daisy_GiantTree_K) == 0x0002D8, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::SM_Daisy_GiantTree_K' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, SM_Daisy_GiantTree_J) == 0x0002E0, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::SM_Daisy_GiantTree_J' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, SM_Daisy_GiantTree_I) == 0x0002E8, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::SM_Daisy_GiantTree_I' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, SM_Daisy_GiantTree_H) == 0x0002F0, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::SM_Daisy_GiantTree_H' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, SM_Daisy_GiantTree_G) == 0x0002F8, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::SM_Daisy_GiantTree_G' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, SM_Daisy_GiantTree_F) == 0x000300, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::SM_Daisy_GiantTree_F' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, SM_Daisy_GiantTree_E) == 0x000308, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::SM_Daisy_GiantTree_E' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, SM_Daisy_GiantTree_D) == 0x000310, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::SM_Daisy_GiantTree_D' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, SM_Daisy_GiantTree_C) == 0x000318, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::SM_Daisy_GiantTree_C' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, SM_Daisy_GiantTree_B) == 0x000320, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::SM_Daisy_GiantTree_B' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B16) == 0x000328, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B16' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B15) == 0x000330, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B15' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B14) == 0x000338, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B14' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B13) == 0x000340, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B13' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, BranchA5) == 0x000348, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::BranchA5' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B12) == 0x000350, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B12' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B11) == 0x000358, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B11' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B10) == 0x000360, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B10' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B9) == 0x000368, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B9' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, BranchA4) == 0x000370, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::BranchA4' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, BranchA3) == 0x000378, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::BranchA3' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B8) == 0x000380, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B8' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B7) == 0x000388, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B7' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B6) == 0x000390, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B6' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B5) == 0x000398, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B5' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B4) == 0x0003A0, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B4' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_C1) == 0x0003A8, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_C1' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B3) == 0x0003B0, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B3' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, BranchA2) == 0x0003B8, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::BranchA2' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B2) == 0x0003C0, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B2' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, BranchA1) == 0x0003C8, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::BranchA1' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B1) == 0x0003D0, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B1' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_C) == 0x0003D8, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_C' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, Branch_B) == 0x0003E0, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::Branch_B' has a wrong offset!");
static_assert(offsetof(ABP_Artemis_Daisy_GiantTree_A_C, BranchA) == 0x0003E8, "Member 'ABP_Artemis_Daisy_GiantTree_A_C::BranchA' has a wrong offset!");

}

