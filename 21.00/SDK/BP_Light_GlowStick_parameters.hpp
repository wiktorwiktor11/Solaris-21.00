#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Light_GlowStick

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Light_GlowStick.BP_Light_GlowStick_C.ExecuteUbergraph_BP_Light_GlowStick
// 0x0158 (0x0158 - 0x0000)
struct BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0018(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0050(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0140(0x0018)()
};
static_assert(alignof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick) == 0x000008, "Wrong alignment on BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick");
static_assert(sizeof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick) == 0x000158, "Wrong size on BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick");
static_assert(offsetof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick, EntryPoint) == 0x000000, "Member 'BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000008, "Member 'BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick, K2Node_Event_Damage) == 0x000010, "Member 'BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick, K2Node_Event_DamageTags) == 0x000018, "Member 'BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick, K2Node_Event_Momentum) == 0x000038, "Member 'BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick, K2Node_Event_HitInfo) == 0x000050, "Member 'BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick, K2Node_Event_InstigatedBy) == 0x000130, "Member 'BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick, K2Node_Event_DamageCauser) == 0x000138, "Member 'BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick, K2Node_Event_EffectContext) == 0x000140, "Member 'BP_Light_GlowStick_C_ExecuteUbergraph_BP_Light_GlowStick::K2Node_Event_EffectContext' has a wrong offset!");

// Function BP_Light_GlowStick.BP_Light_GlowStick_C.OnDamageServer
// 0x0148 (0x0148 - 0x0000)
struct BP_Light_GlowStick_C_OnDamageServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Light_GlowStick_C_OnDamageServer) == 0x000008, "Wrong alignment on BP_Light_GlowStick_C_OnDamageServer");
static_assert(sizeof(BP_Light_GlowStick_C_OnDamageServer) == 0x000148, "Wrong size on BP_Light_GlowStick_C_OnDamageServer");
static_assert(offsetof(BP_Light_GlowStick_C_OnDamageServer, Damage) == 0x000000, "Member 'BP_Light_GlowStick_C_OnDamageServer::Damage' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_OnDamageServer, DamageTags) == 0x000008, "Member 'BP_Light_GlowStick_C_OnDamageServer::DamageTags' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_OnDamageServer, Momentum) == 0x000028, "Member 'BP_Light_GlowStick_C_OnDamageServer::Momentum' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_OnDamageServer, HitInfo) == 0x000040, "Member 'BP_Light_GlowStick_C_OnDamageServer::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_OnDamageServer, InstigatedBy) == 0x000120, "Member 'BP_Light_GlowStick_C_OnDamageServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_OnDamageServer, DamageCauser) == 0x000128, "Member 'BP_Light_GlowStick_C_OnDamageServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_OnDamageServer, EffectContext) == 0x000130, "Member 'BP_Light_GlowStick_C_OnDamageServer::EffectContext' has a wrong offset!");

// Function BP_Light_GlowStick.BP_Light_GlowStick_C.OnRep_Destroy
// 0x0008 (0x0008 - 0x0000)
struct BP_Light_GlowStick_C_OnRep_Destroy final
{
public:
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Light_GlowStick_C_OnRep_Destroy) == 0x000008, "Wrong alignment on BP_Light_GlowStick_C_OnRep_Destroy");
static_assert(sizeof(BP_Light_GlowStick_C_OnRep_Destroy) == 0x000008, "Wrong size on BP_Light_GlowStick_C_OnRep_Destroy");
static_assert(offsetof(BP_Light_GlowStick_C_OnRep_Destroy, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000000, "Member 'BP_Light_GlowStick_C_OnRep_Destroy::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function BP_Light_GlowStick.BP_Light_GlowStick_C.SetLightBrightness
// 0x0001 (0x0001 - 0x0000)
struct BP_Light_GlowStick_C_SetLightBrightness final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Light_GlowStick_C_SetLightBrightness) == 0x000001, "Wrong alignment on BP_Light_GlowStick_C_SetLightBrightness");
static_assert(sizeof(BP_Light_GlowStick_C_SetLightBrightness) == 0x000001, "Wrong size on BP_Light_GlowStick_C_SetLightBrightness");
static_assert(offsetof(BP_Light_GlowStick_C_SetLightBrightness, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_Light_GlowStick_C_SetLightBrightness::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Light_GlowStick.BP_Light_GlowStick_C.SetLightColor
// 0x0010 (0x0010 - 0x0000)
struct BP_Light_GlowStick_C_SetLightColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Light_GlowStick_C_SetLightColor) == 0x000004, "Wrong alignment on BP_Light_GlowStick_C_SetLightColor");
static_assert(sizeof(BP_Light_GlowStick_C_SetLightColor) == 0x000010, "Wrong size on BP_Light_GlowStick_C_SetLightColor");
static_assert(offsetof(BP_Light_GlowStick_C_SetLightColor, Color) == 0x000000, "Member 'BP_Light_GlowStick_C_SetLightColor::Color' has a wrong offset!");

// Function BP_Light_GlowStick.BP_Light_GlowStick_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_Light_GlowStick_C_UserConstructionScript final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Light_GlowStick_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Light_GlowStick_C_UserConstructionScript");
static_assert(sizeof(BP_Light_GlowStick_C_UserConstructionScript) == 0x000010, "Wrong size on BP_Light_GlowStick_C_UserConstructionScript");
static_assert(offsetof(BP_Light_GlowStick_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_Light_GlowStick_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Light_GlowStick_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_Light_GlowStick_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

