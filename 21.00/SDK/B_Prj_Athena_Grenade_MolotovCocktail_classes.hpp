#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_Grenade_MolotovCocktail

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "B_Prj_Athena_Grenade_Base_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_Grenade_MolotovCocktail.B_Prj_Athena_Grenade_MolotovCocktail_C
// 0x0230 (0x0DB0 - 0x0B80)
class AB_Prj_Athena_Grenade_MolotovCocktail_C final : public AB_Prj_Athena_Grenade_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Prj_Athena_Grenade_MolotovCocktail_C; // 0x0B80(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Niagara_Projectile_Particles;                      // 0x0B88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Location;                                      // 0x0B90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Bottle_Smash_Audio_Cue;                            // 0x0BA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Ignite_Audio_Cue;                                  // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Normal;                                        // 0x0BB8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        ProjectileSpawnVectors;                            // 0x0BD0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         SpawnedProjectileMinSpeed;                         // 0x0BE0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         SpawnedProjectileMaxSpeed;                         // 0x0C08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ConeHalfAngleInDegrees;                            // 0x0C30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         FireBallsToSpawn;                                  // 0x0C58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          CurieActivated;                                    // 0x0C80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C81[0x7];                                      // 0x0C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         DoWeUseHomingProjectile;                           // 0x0C88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                ReflectionVector;                                  // 0x0CB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FireflyProjectileAngleExtreme;                     // 0x0CC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CCC[0x4];                                      // 0x0CCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FireflyProjectileDirection;                        // 0x0CD0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FireflyProjectileRadius_Min;                       // 0x0CE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FireflyProjectileRadius_Max;                       // 0x0CEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FireflyProjectileEndPoint;                         // 0x0CF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumProjectileSpawned;                              // 0x0D08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumProjectilesToSpawn;                             // 0x0D0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewTemp;                                           // 0x0D10(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnteredWater;                                      // 0x0D28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit;                                               // 0x0D29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2A[0x6];                                      // 0x0D2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemAsset*                         Sound_EnterWater;                                  // 0x0D30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               ItemToSpawn_Molotov;                               // 0x0D38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanInteractWithWater;                              // 0x0D40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D41[0xF];                                      // 0x0D41(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnBGATransform;                                 // 0x0D50(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody);
	void Defer_BGA_Spawn();
	void Drunk_Projectiles();
	void ExecuteUbergraph_B_Prj_Athena_Grenade_MolotovCocktail(int32 EntryPoint);
	void FireflyProjectileLogic();
	void HasEnteredWater();
	void OnCurieActive_7575DCC3440AA42836D7988BCA6485E5();
	void ReceiveBeginPlay();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_Grenade_MolotovCocktail_C">();
	}
	static class AB_Prj_Athena_Grenade_MolotovCocktail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_Grenade_MolotovCocktail_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_Grenade_MolotovCocktail_C) == 0x000010, "Wrong alignment on AB_Prj_Athena_Grenade_MolotovCocktail_C");
static_assert(sizeof(AB_Prj_Athena_Grenade_MolotovCocktail_C) == 0x000DB0, "Wrong size on AB_Prj_Athena_Grenade_MolotovCocktail_C");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, UberGraphFrame_B_Prj_Athena_Grenade_MolotovCocktail_C) == 0x000B80, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::UberGraphFrame_B_Prj_Athena_Grenade_MolotovCocktail_C' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, Niagara_Projectile_Particles) == 0x000B88, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::Niagara_Projectile_Particles' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, Hit_Location) == 0x000B90, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::Hit_Location' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, Bottle_Smash_Audio_Cue) == 0x000BA8, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::Bottle_Smash_Audio_Cue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, Ignite_Audio_Cue) == 0x000BB0, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::Ignite_Audio_Cue' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, Hit_Normal) == 0x000BB8, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::Hit_Normal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, ProjectileSpawnVectors) == 0x000BD0, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::ProjectileSpawnVectors' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, SpawnedProjectileMinSpeed) == 0x000BE0, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::SpawnedProjectileMinSpeed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, SpawnedProjectileMaxSpeed) == 0x000C08, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::SpawnedProjectileMaxSpeed' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, ConeHalfAngleInDegrees) == 0x000C30, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::ConeHalfAngleInDegrees' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, FireBallsToSpawn) == 0x000C58, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::FireBallsToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, CurieActivated) == 0x000C80, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::CurieActivated' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, DoWeUseHomingProjectile) == 0x000C88, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::DoWeUseHomingProjectile' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, ReflectionVector) == 0x000CB0, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::ReflectionVector' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, FireflyProjectileAngleExtreme) == 0x000CC8, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::FireflyProjectileAngleExtreme' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, FireflyProjectileDirection) == 0x000CD0, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::FireflyProjectileDirection' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, FireflyProjectileRadius_Min) == 0x000CE8, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::FireflyProjectileRadius_Min' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, FireflyProjectileRadius_Max) == 0x000CEC, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::FireflyProjectileRadius_Max' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, FireflyProjectileEndPoint) == 0x000CF0, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::FireflyProjectileEndPoint' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, NumProjectileSpawned) == 0x000D08, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::NumProjectileSpawned' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, NumProjectilesToSpawn) == 0x000D0C, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::NumProjectilesToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, NewTemp) == 0x000D10, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::NewTemp' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, EnteredWater) == 0x000D28, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::EnteredWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, Hit) == 0x000D29, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::Hit' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, Sound_EnterWater) == 0x000D30, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::Sound_EnterWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, ItemToSpawn_Molotov) == 0x000D38, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::ItemToSpawn_Molotov' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, CanInteractWithWater) == 0x000D40, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::CanInteractWithWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_Grenade_MolotovCocktail_C, SpawnBGATransform) == 0x000D50, "Member 'AB_Prj_Athena_Grenade_MolotovCocktail_C::SpawnBGATransform' has a wrong offset!");

}

