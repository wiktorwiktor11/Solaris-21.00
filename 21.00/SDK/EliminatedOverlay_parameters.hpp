#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EliminatedOverlay

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function EliminatedOverlay.EliminatedOverlay_C.AdjustVertical BoxEliminatedPadding
// 0x0048 (0x0048 - 0x0000)
struct EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding final
{
public:
	class UOverlaySlot*                           VerticalBoxSlot;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAdjustPadding;                                    // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_FindParentWidgetOfType_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaHUD_C*                           K2Node_DynamicCast_AsAthena_HUD;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding) == 0x000008, "Wrong alignment on EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding");
static_assert(sizeof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding) == 0x000048, "Wrong size on EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding");
static_assert(offsetof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding, VerticalBoxSlot) == 0x000000, "Member 'EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding::VerticalBoxSlot' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding, bAdjustPadding) == 0x000008, "Member 'EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding::bAdjustPadding' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding, CallFunc_FindParentWidgetOfType_ReturnValue) == 0x000010, "Member 'EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding::CallFunc_FindParentWidgetOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding, K2Node_DynamicCast_AsAthena_HUD) == 0x000018, "Member 'EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding::K2Node_DynamicCast_AsAthena_HUD' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000028, "Member 'EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding, K2Node_MakeStruct_Margin) == 0x000030, "Member 'EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding, CallFunc_IsMobileGame_ReturnValue) == 0x000040, "Member 'EliminatedOverlay_C_AdjustVertical_BoxEliminatedPadding::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");

// Function EliminatedOverlay.EliminatedOverlay_C.DeathCauseToText
// 0x0508 (0x0508 - 0x0000)
struct EliminatedOverlay_C_DeathCauseToText final
{
public:
	EDeathCause                                   DeathCause;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
	EDeathCause                                   Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0118(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0130(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0160(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0178(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0190(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01C0(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x01D8(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x01F0(0x0018)()
	class FText                                   Temp_text_Variable_20;                             // 0x0208(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x0220(0x0018)()
	class FText                                   Temp_text_Variable_22;                             // 0x0238(0x0018)()
	class FText                                   Temp_text_Variable_23;                             // 0x0250(0x0018)()
	class FText                                   Temp_text_Variable_24;                             // 0x0268(0x0018)()
	class FText                                   Temp_text_Variable_25;                             // 0x0280(0x0018)()
	class FText                                   Temp_text_Variable_26;                             // 0x0298(0x0018)()
	class FText                                   Temp_text_Variable_27;                             // 0x02B0(0x0018)()
	class FText                                   Temp_text_Variable_28;                             // 0x02C8(0x0018)()
	class FText                                   Temp_text_Variable_29;                             // 0x02E0(0x0018)()
	class FText                                   Temp_text_Variable_30;                             // 0x02F8(0x0018)()
	class FText                                   Temp_text_Variable_31;                             // 0x0310(0x0018)()
	class FText                                   Temp_text_Variable_32;                             // 0x0328(0x0018)()
	class FText                                   Temp_text_Variable_33;                             // 0x0340(0x0018)()
	class FText                                   Temp_text_Variable_34;                             // 0x0358(0x0018)()
	class FText                                   Temp_text_Variable_35;                             // 0x0370(0x0018)()
	class FText                                   Temp_text_Variable_36;                             // 0x0388(0x0018)()
	class FText                                   Temp_text_Variable_37;                             // 0x03A0(0x0018)()
	class FText                                   Temp_text_Variable_38;                             // 0x03B8(0x0018)()
	class FText                                   Temp_text_Variable_39;                             // 0x03D0(0x0018)()
	class FText                                   Temp_text_Variable_40;                             // 0x03E8(0x0018)()
	class FText                                   Temp_text_Variable_41;                             // 0x0400(0x0018)()
	class FText                                   Temp_text_Variable_42;                             // 0x0418(0x0018)()
	class FText                                   Temp_text_Variable_43;                             // 0x0430(0x0018)()
	class FText                                   Temp_text_Variable_44;                             // 0x0448(0x0018)()
	class FText                                   Temp_text_Variable_45;                             // 0x0460(0x0018)()
	class FText                                   Temp_text_Variable_46;                             // 0x0478(0x0018)()
	class FText                                   Temp_text_Variable_47;                             // 0x0490(0x0018)()
	class FText                                   Temp_text_Variable_48;                             // 0x04A8(0x0018)()
	class FText                                   Temp_text_Variable_49;                             // 0x04C0(0x0018)()
	class FText                                   Temp_text_Variable_50;                             // 0x04D8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x04F0(0x0018)()
};
static_assert(alignof(EliminatedOverlay_C_DeathCauseToText) == 0x000008, "Wrong alignment on EliminatedOverlay_C_DeathCauseToText");
static_assert(sizeof(EliminatedOverlay_C_DeathCauseToText) == 0x000508, "Wrong size on EliminatedOverlay_C_DeathCauseToText");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, DeathCause) == 0x000000, "Member 'EliminatedOverlay_C_DeathCauseToText::DeathCause' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, ReturnValue) == 0x000008, "Member 'EliminatedOverlay_C_DeathCauseToText::ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_byte_Variable) == 0x000020, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable) == 0x000028, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_1) == 0x000040, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_2) == 0x000058, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_3) == 0x000070, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_4) == 0x000088, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_5) == 0x0000A0, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_6) == 0x0000B8, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_7) == 0x0000D0, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_8) == 0x0000E8, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_9) == 0x000100, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_10) == 0x000118, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_11) == 0x000130, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_12) == 0x000148, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_13) == 0x000160, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_14) == 0x000178, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_15) == 0x000190, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_16) == 0x0001A8, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_17) == 0x0001C0, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_18) == 0x0001D8, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_19) == 0x0001F0, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_20) == 0x000208, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_21) == 0x000220, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_22) == 0x000238, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_22' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_23) == 0x000250, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_23' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_24) == 0x000268, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_24' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_25) == 0x000280, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_25' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_26) == 0x000298, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_26' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_27) == 0x0002B0, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_27' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_28) == 0x0002C8, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_28' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_29) == 0x0002E0, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_29' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_30) == 0x0002F8, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_30' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_31) == 0x000310, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_31' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_32) == 0x000328, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_32' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_33) == 0x000340, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_33' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_34) == 0x000358, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_34' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_35) == 0x000370, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_35' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_36) == 0x000388, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_36' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_37) == 0x0003A0, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_37' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_38) == 0x0003B8, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_38' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_39) == 0x0003D0, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_39' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_40) == 0x0003E8, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_40' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_41) == 0x000400, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_41' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_42) == 0x000418, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_42' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_43) == 0x000430, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_43' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_44) == 0x000448, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_44' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_45) == 0x000460, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_45' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_46) == 0x000478, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_46' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_47) == 0x000490, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_47' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_48) == 0x0004A8, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_48' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_49) == 0x0004C0, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_49' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, Temp_text_Variable_50) == 0x0004D8, "Member 'EliminatedOverlay_C_DeathCauseToText::Temp_text_Variable_50' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_DeathCauseToText, K2Node_Select_Default) == 0x0004F0, "Member 'EliminatedOverlay_C_DeathCauseToText::K2Node_Select_Default' has a wrong offset!");

// Function EliminatedOverlay.EliminatedOverlay_C.ExecuteUbergraph_EliminatedOverlay
// 0x0128 (0x0128 - 0x0000)
struct EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortMinigame* Minigame)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bSpectatorStreaming)>     K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerBannerInfo                      K2Node_Event_BannerInfo;                           // 0x0078(0x0028)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_6;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00D8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          K2Node_CustomEvent_Minigame;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          CallFunc_GetMinigameForPlayerState_ReturnValue;    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0118(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay) == 0x000008, "Wrong alignment on EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay");
static_assert(sizeof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay) == 0x000128, "Wrong size on EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, EntryPoint) == 0x000000, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::EntryPoint' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000050, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_MakeArray_Array) == 0x000060, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_Event_BannerInfo) == 0x000078, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_Event_BannerInfo' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000A0, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000A8, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_PlayAnimation_ReturnValue_3) == 0x0000B0, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_PlayAnimation_ReturnValue_4) == 0x0000B8, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_PlayAnimation_ReturnValue_5) == 0x0000C0, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_GetEndTime_ReturnValue) == 0x0000C8, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_PlayAnimation_ReturnValue_6) == 0x0000D0, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_PlayAnimation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000D8, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x0000E8, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x0000F0, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000100, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_CustomEvent_Minigame) == 0x000108, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_CustomEvent_Minigame' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_GetMinigameForPlayerState_ReturnValue) == 0x000110, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_GetMinigameForPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, K2Node_CreateDelegate_OutputDelegate_5) == 0x000118, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay, CallFunc_IsValid_ReturnValue_1) == 0x000124, "Member 'EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function EliminatedOverlay.EliminatedOverlay_C.IsEliminatedByIntroAnimFinished
// 0x0003 (0x0003 - 0x0000)
struct EliminatedOverlay_C_IsEliminatedByIntroAnimFinished final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EliminatedOverlay_C_IsEliminatedByIntroAnimFinished) == 0x000001, "Wrong alignment on EliminatedOverlay_C_IsEliminatedByIntroAnimFinished");
static_assert(sizeof(EliminatedOverlay_C_IsEliminatedByIntroAnimFinished) == 0x000003, "Wrong size on EliminatedOverlay_C_IsEliminatedByIntroAnimFinished");
static_assert(offsetof(EliminatedOverlay_C_IsEliminatedByIntroAnimFinished, ReturnValue) == 0x000000, "Member 'EliminatedOverlay_C_IsEliminatedByIntroAnimFinished::ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_IsEliminatedByIntroAnimFinished, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000001, "Member 'EliminatedOverlay_C_IsEliminatedByIntroAnimFinished::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_IsEliminatedByIntroAnimFinished, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'EliminatedOverlay_C_IsEliminatedByIntroAnimFinished::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function EliminatedOverlay.EliminatedOverlay_C.On UI Extensions Changed
// 0x0008 (0x0008 - 0x0000)
struct EliminatedOverlay_C_On_UI_Extensions_Changed final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EliminatedOverlay_C_On_UI_Extensions_Changed) == 0x000008, "Wrong alignment on EliminatedOverlay_C_On_UI_Extensions_Changed");
static_assert(sizeof(EliminatedOverlay_C_On_UI_Extensions_Changed) == 0x000008, "Wrong size on EliminatedOverlay_C_On_UI_Extensions_Changed");
static_assert(offsetof(EliminatedOverlay_C_On_UI_Extensions_Changed, Minigame) == 0x000000, "Member 'EliminatedOverlay_C_On_UI_Extensions_Changed::Minigame' has a wrong offset!");

// Function EliminatedOverlay.EliminatedOverlay_C.SetBannerInfo
// 0x0028 (0x0028 - 0x0000)
struct EliminatedOverlay_C_SetBannerInfo final
{
public:
	struct FPlayerBannerInfo                      BannerInfo;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(EliminatedOverlay_C_SetBannerInfo) == 0x000008, "Wrong alignment on EliminatedOverlay_C_SetBannerInfo");
static_assert(sizeof(EliminatedOverlay_C_SetBannerInfo) == 0x000028, "Wrong size on EliminatedOverlay_C_SetBannerInfo");
static_assert(offsetof(EliminatedOverlay_C_SetBannerInfo, BannerInfo) == 0x000000, "Member 'EliminatedOverlay_C_SetBannerInfo::BannerInfo' has a wrong offset!");

// Function EliminatedOverlay.EliminatedOverlay_C.SetPlaceTextFont_TEMP
// 0x0100 (0x0100 - 0x0000)
struct EliminatedOverlay_C_SetPlaceTextFont_TEMP final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerStateAthena*                 CallFunc_GetPlayerState_ReturnValue;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default_2;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0098(0x0014)()
	int32                                         K2Node_Select_Default_3;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x00B0(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(EliminatedOverlay_C_SetPlaceTextFont_TEMP) == 0x000008, "Wrong alignment on EliminatedOverlay_C_SetPlaceTextFont_TEMP");
static_assert(sizeof(EliminatedOverlay_C_SetPlaceTextFont_TEMP) == 0x000100, "Wrong size on EliminatedOverlay_C_SetPlaceTextFont_TEMP");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_int_Variable) == 0x000000, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_int_Variable_1) == 0x000004, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_struct_Variable) == 0x000008, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_struct_Variable_1) == 0x000018, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_struct_Variable_2) == 0x000028, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_struct_Variable_3) == 0x000038, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_bool_Variable) == 0x000048, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_object_Variable) == 0x000050, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_object_Variable_1) == 0x000058, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_bool_Variable_1) == 0x000060, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_int_Variable_2) == 0x000064, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_int_Variable_3) == 0x000068, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, CallFunc_GetPlayerState_ReturnValue) == 0x000070, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, Temp_bool_Variable_2) == 0x000078, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, CallFunc_Less_IntInt_ReturnValue) == 0x00007A, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, K2Node_Select_Default) == 0x00007C, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, K2Node_Select_Default_1) == 0x000080, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, K2Node_Select_Default_2) == 0x000090, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, K2Node_MakeStruct_SlateColor) == 0x000098, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, K2Node_Select_Default_3) == 0x0000AC, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(EliminatedOverlay_C_SetPlaceTextFont_TEMP, K2Node_MakeStruct_SlateFontInfo) == 0x0000B0, "Member 'EliminatedOverlay_C_SetPlaceTextFont_TEMP::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

}

