#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseCore

#include "Basic.hpp"


namespace SDK
{

// SolarisGeneratedStruct VerseCore.tuple_L_Kany_M_Kany_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_L_Kany_M_Kany_R final
{
public:
	TArray<FVerseDynamicProperty_>                __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference)
	TArray<FVerseDynamicProperty_>                __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference)
};
static_assert(alignof(Ftuple_L_Kany_M_Kany_R) == 0x000008, "Wrong alignment on Ftuple_L_Kany_M_Kany_R");
static_assert(sizeof(Ftuple_L_Kany_M_Kany_R) == 0x000020, "Wrong size on Ftuple_L_Kany_M_Kany_R");
static_assert(offsetof(Ftuple_L_Kany_M_Kany_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kany_M_Kany_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kany_M_Kany_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kany_M_Kany_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseCore.tuple_L_Kany_Many_Mint_R
// 0x0028 (0x0028 - 0x0000)
struct Ftuple_L_Kany_Many_Mint_R final
{
public:
	TArray<FVerseDynamicProperty_>                __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference)
	FVerseDynamicProperty_                        __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference, HasGetValueTypeHash)
	int64                                         __verse_0x932BF92E_Elem2;                          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kany_Many_Mint_R) == 0x000008, "Wrong alignment on Ftuple_L_Kany_Many_Mint_R");
static_assert(sizeof(Ftuple_L_Kany_Many_Mint_R) == 0x000028, "Wrong size on Ftuple_L_Kany_Many_Mint_R");
static_assert(offsetof(Ftuple_L_Kany_Many_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kany_Many_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kany_Many_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kany_Many_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kany_Many_Mint_R, __verse_0x932BF92E_Elem2) == 0x000020, "Member 'Ftuple_L_Kany_Many_Mint_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct VerseCore.tuple_L_Kany_Mint_Many_R
// 0x0028 (0x0028 - 0x0000)
struct Ftuple_L_Kany_Mint_Many_R final
{
public:
	TArray<FVerseDynamicProperty_>                __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0x932BF92E_Elem2;                          // 0x0018(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kany_Mint_Many_R) == 0x000008, "Wrong alignment on Ftuple_L_Kany_Mint_Many_R");
static_assert(sizeof(Ftuple_L_Kany_Mint_Many_R) == 0x000028, "Wrong size on Ftuple_L_Kany_Mint_Many_R");
static_assert(offsetof(Ftuple_L_Kany_Mint_Many_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kany_Mint_Many_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kany_Mint_Many_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kany_Mint_Many_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kany_Mint_Many_R, __verse_0x932BF92E_Elem2) == 0x000018, "Member 'Ftuple_L_Kany_Mint_Many_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct VerseCore.tuple_L_Kany_Mint_Mint_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_L_Kany_Mint_Mint_R final
{
public:
	TArray<FVerseDynamicProperty_>                __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x932BF92E_Elem2;                          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kany_Mint_Mint_R) == 0x000008, "Wrong alignment on Ftuple_L_Kany_Mint_Mint_R");
static_assert(sizeof(Ftuple_L_Kany_Mint_Mint_R) == 0x000020, "Wrong size on Ftuple_L_Kany_Mint_Mint_R");
static_assert(offsetof(Ftuple_L_Kany_Mint_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kany_Mint_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kany_Mint_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kany_Mint_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kany_Mint_Mint_R, __verse_0x932BF92E_Elem2) == 0x000018, "Member 'Ftuple_L_Kany_Mint_Mint_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct VerseCore.tuple_L_Kany_Mint_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_L_Kany_Mint_R final
{
public:
	TArray<FVerseDynamicProperty_>                __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kany_Mint_R) == 0x000008, "Wrong alignment on Ftuple_L_Kany_Mint_R");
static_assert(sizeof(Ftuple_L_Kany_Mint_R) == 0x000018, "Wrong size on Ftuple_L_Kany_Mint_R");
static_assert(offsetof(Ftuple_L_Kany_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kany_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kany_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kany_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseCore.tuple_L_Kchar_M_K_Kchar_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_L_Kchar_M_K_Kchar_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	TArray<FVerseStringProperty_>                 __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference)
};
static_assert(alignof(Ftuple_L_Kchar_M_K_Kchar_R) == 0x000008, "Wrong alignment on Ftuple_L_Kchar_M_K_Kchar_R");
static_assert(sizeof(Ftuple_L_Kchar_M_K_Kchar_R) == 0x000020, "Wrong size on Ftuple_L_Kchar_M_K_Kchar_R");
static_assert(offsetof(Ftuple_L_Kchar_M_K_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_M_K_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_K_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_M_K_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseCore.tuple_L_Kchar_Mint_Mint_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_L_Kchar_Mint_Mint_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x932BF92E_Elem2;                          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kchar_Mint_Mint_R) == 0x000008, "Wrong alignment on Ftuple_L_Kchar_Mint_Mint_R");
static_assert(sizeof(Ftuple_L_Kchar_Mint_Mint_R) == 0x000020, "Wrong size on Ftuple_L_Kchar_Mint_Mint_R");
static_assert(offsetof(Ftuple_L_Kchar_Mint_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_Mint_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_Mint_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_Mint_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_Mint_Mint_R, __verse_0x932BF92E_Elem2) == 0x000018, "Member 'Ftuple_L_Kchar_Mint_Mint_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct VerseCore.tuple_L_Kchar_Mprintable_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_L_Kchar_Mprintable_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	class UObject*                                __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kchar_Mprintable_R) == 0x000008, "Wrong alignment on Ftuple_L_Kchar_Mprintable_R");
static_assert(sizeof(Ftuple_L_Kchar_Mprintable_R) == 0x000018, "Wrong size on Ftuple_L_Kchar_Mprintable_R");
static_assert(offsetof(Ftuple_L_Kchar_Mprintable_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_Mprintable_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_Mprintable_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_Mprintable_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseCore.tuple_L_R
// 0x0001 (0x0001 - 0x0000)
struct VerseCore::Ftuple_L_R final
{
public:
	uint8                                         _StructPaddingDummy;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseCore::Ftuple_L_R) == 0x000001, "Wrong alignment on VerseCore::Ftuple_L_R");
static_assert(sizeof(VerseCore::Ftuple_L_R) == 0x000001, "Wrong size on VerseCore::Ftuple_L_R");
static_assert(offsetof(VerseCore::Ftuple_L_R, _StructPaddingDummy) == 0x000000, "Member 'VerseCore::Ftuple_L_R::_StructPaddingDummy' has a wrong offset!");

// SolarisGeneratedStruct VerseCore.tuple_Lany_M_Kany_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_Lany_M_Kany_R final
{
public:
	FVerseDynamicProperty_                        __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference)
};
static_assert(alignof(Ftuple_Lany_M_Kany_R) == 0x000008, "Wrong alignment on Ftuple_Lany_M_Kany_R");
static_assert(sizeof(Ftuple_Lany_M_Kany_R) == 0x000020, "Wrong size on Ftuple_Lany_M_Kany_R");
static_assert(offsetof(Ftuple_Lany_M_Kany_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lany_M_Kany_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lany_M_Kany_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_Lany_M_Kany_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseCore.tuple_Lint_Mint_R
// 0x0010 (0x0010 - 0x0000)
struct VerseCore::Ftuple_Lint_Mint_R final
{
public:
	int64                                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseCore::Ftuple_Lint_Mint_R) == 0x000008, "Wrong alignment on VerseCore::Ftuple_Lint_Mint_R");
static_assert(sizeof(VerseCore::Ftuple_Lint_Mint_R) == 0x000010, "Wrong size on VerseCore::Ftuple_Lint_Mint_R");
static_assert(offsetof(VerseCore::Ftuple_Lint_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseCore::Ftuple_Lint_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseCore::Ftuple_Lint_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'VerseCore::Ftuple_Lint_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

}

