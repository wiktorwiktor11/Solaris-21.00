#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecialEventVaultWorld

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function SpecialEventVaultWorld.SpecialEventVaultWorld_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct SpecialEventVaultWorld_C_UserConstructionScript final
{
public:
	class AFortStaticMeshActor*                   K2Node_DynamicCast_AsFort_Static_Mesh_Actor;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpecialEventVaultWorld_C_UserConstructionScript) == 0x000008, "Wrong alignment on SpecialEventVaultWorld_C_UserConstructionScript");
static_assert(sizeof(SpecialEventVaultWorld_C_UserConstructionScript) == 0x000010, "Wrong size on SpecialEventVaultWorld_C_UserConstructionScript");
static_assert(offsetof(SpecialEventVaultWorld_C_UserConstructionScript, K2Node_DynamicCast_AsFort_Static_Mesh_Actor) == 0x000000, "Member 'SpecialEventVaultWorld_C_UserConstructionScript::K2Node_DynamicCast_AsFort_Static_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'SpecialEventVaultWorld_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SpecialEventVaultWorld.SpecialEventVaultWorld_C.TransitionBackgroundForward
// 0x0038 (0x0038 - 0x0000)
struct SpecialEventVaultWorld_C_TransitionBackgroundForward final
{
public:
	float                                         Forward;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreTransitionOffset;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FXTransitionFade;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpecialEventVaultWorld_C_TransitionBackgroundForward) == 0x000008, "Wrong alignment on SpecialEventVaultWorld_C_TransitionBackgroundForward");
static_assert(sizeof(SpecialEventVaultWorld_C_TransitionBackgroundForward) == 0x000038, "Wrong size on SpecialEventVaultWorld_C_TransitionBackgroundForward");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, Forward) == 0x000000, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::Forward' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, PreTransitionOffset) == 0x000004, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::PreTransitionOffset' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, FXTransitionFade) == 0x000008, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::FXTransitionFade' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, Mid) == 0x000010, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::Mid' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, CallFunc_Lerp_ReturnValue_1) == 0x00001C, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, CallFunc_Lerp_ReturnValue_2) == 0x000020, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, CallFunc_Lerp_ReturnValue_3) == 0x000024, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, CallFunc_Lerp_ReturnValue_4) == 0x000028, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, CallFunc_Lerp_ReturnValue_5) == 0x00002C, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, CallFunc_Lerp_ReturnValue_6) == 0x000030, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundForward, CallFunc_Lerp_ReturnValue_7) == 0x000034, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundForward::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");

// Function SpecialEventVaultWorld.SpecialEventVaultWorld_C.TransitionBackgroundBackward
// 0x0038 (0x0038 - 0x0000)
struct SpecialEventVaultWorld_C_TransitionBackgroundBackward final
{
public:
	float                                         Backward;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreTransitionOffset;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FXTransitionFade;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpecialEventVaultWorld_C_TransitionBackgroundBackward) == 0x000008, "Wrong alignment on SpecialEventVaultWorld_C_TransitionBackgroundBackward");
static_assert(sizeof(SpecialEventVaultWorld_C_TransitionBackgroundBackward) == 0x000038, "Wrong size on SpecialEventVaultWorld_C_TransitionBackgroundBackward");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, Backward) == 0x000000, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::Backward' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, PreTransitionOffset) == 0x000004, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::PreTransitionOffset' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, FXTransitionFade) == 0x000008, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::FXTransitionFade' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, Mid) == 0x000010, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::Mid' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, CallFunc_Lerp_ReturnValue_1) == 0x00001C, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, CallFunc_Lerp_ReturnValue_2) == 0x000020, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, CallFunc_Lerp_ReturnValue_3) == 0x000024, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, CallFunc_Lerp_ReturnValue_4) == 0x000028, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, CallFunc_Lerp_ReturnValue_5) == 0x00002C, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, CallFunc_Lerp_ReturnValue_6) == 0x000030, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_TransitionBackgroundBackward, CallFunc_Lerp_ReturnValue_7) == 0x000034, "Member 'SpecialEventVaultWorld_C_TransitionBackgroundBackward::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");

// Function SpecialEventVaultWorld.SpecialEventVaultWorld_C.SetupBackgroundMaterial
// 0x00E0 (0x00E0 - 0x0000)
struct SpecialEventVaultWorld_C_SetupBackgroundMaterial final
{
public:
	class UTexture2D*                             TextureBackground;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackDynamicBackground                BackgroundInfo;                                    // 0x0008(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_6;                              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_8;                              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_10;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_4;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_5;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpecialEventVaultWorld_C_SetupBackgroundMaterial) == 0x000008, "Wrong alignment on SpecialEventVaultWorld_C_SetupBackgroundMaterial");
static_assert(sizeof(SpecialEventVaultWorld_C_SetupBackgroundMaterial) == 0x0000E0, "Wrong size on SpecialEventVaultWorld_C_SetupBackgroundMaterial");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, TextureBackground) == 0x000000, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::TextureBackground' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, BackgroundInfo) == 0x000008, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::BackgroundInfo' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Mid) == 0x000068, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Mid' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable) == 0x000070, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000074, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000078, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_1) == 0x000080, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable) == 0x000084, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_2) == 0x000088, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_3) == 0x00008C, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable_1) == 0x000090, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_4) == 0x000094, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_5) == 0x000098, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable_2) == 0x00009C, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_6) == 0x0000A0, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_7) == 0x0000A4, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable_3) == 0x0000A8, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_8) == 0x0000AC, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default) == 0x0000B0, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default_1) == 0x0000B4, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default_2) == 0x0000B8, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default_3) == 0x0000BC, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_9) == 0x0000C0, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable_4) == 0x0000C4, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_10) == 0x0000C8, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default_4) == 0x0000CC, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_name_Variable_11) == 0x0000D0, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, Temp_bool_Variable_5) == 0x0000D4, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_SetupBackgroundMaterial, K2Node_Select_Default_5) == 0x0000D8, "Member 'SpecialEventVaultWorld_C_SetupBackgroundMaterial::K2Node_Select_Default_5' has a wrong offset!");

// Function SpecialEventVaultWorld.SpecialEventVaultWorld_C.OnSetupBackground
// 0x0068 (0x0068 - 0x0000)
struct SpecialEventVaultWorld_C_OnSetupBackground final
{
public:
	const class UTexture2D*                       LoadedBackgroundTexture;                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackDynamicBackground                BackgroundInfo;                                    // 0x0008(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SpecialEventVaultWorld_C_OnSetupBackground) == 0x000008, "Wrong alignment on SpecialEventVaultWorld_C_OnSetupBackground");
static_assert(sizeof(SpecialEventVaultWorld_C_OnSetupBackground) == 0x000068, "Wrong size on SpecialEventVaultWorld_C_OnSetupBackground");
static_assert(offsetof(SpecialEventVaultWorld_C_OnSetupBackground, LoadedBackgroundTexture) == 0x000000, "Member 'SpecialEventVaultWorld_C_OnSetupBackground::LoadedBackgroundTexture' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_OnSetupBackground, BackgroundInfo) == 0x000008, "Member 'SpecialEventVaultWorld_C_OnSetupBackground::BackgroundInfo' has a wrong offset!");

// Function SpecialEventVaultWorld.SpecialEventVaultWorld_C.OnUpdateMaterialIndex
// 0x0004 (0x0004 - 0x0000)
struct SpecialEventVaultWorld_C_OnUpdateMaterialIndex final
{
public:
	int32                                         MaterialIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpecialEventVaultWorld_C_OnUpdateMaterialIndex) == 0x000004, "Wrong alignment on SpecialEventVaultWorld_C_OnUpdateMaterialIndex");
static_assert(sizeof(SpecialEventVaultWorld_C_OnUpdateMaterialIndex) == 0x000004, "Wrong size on SpecialEventVaultWorld_C_OnUpdateMaterialIndex");
static_assert(offsetof(SpecialEventVaultWorld_C_OnUpdateMaterialIndex, MaterialIndex) == 0x000000, "Member 'SpecialEventVaultWorld_C_OnUpdateMaterialIndex::MaterialIndex' has a wrong offset!");

// Function SpecialEventVaultWorld.SpecialEventVaultWorld_C.OnUpdateDisplay
// 0x0002 (0x0002 - 0x0000)
struct SpecialEventVaultWorld_C_OnUpdateDisplay final
{
public:
	bool                                          bShowFloor;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowEffects;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpecialEventVaultWorld_C_OnUpdateDisplay) == 0x000001, "Wrong alignment on SpecialEventVaultWorld_C_OnUpdateDisplay");
static_assert(sizeof(SpecialEventVaultWorld_C_OnUpdateDisplay) == 0x000002, "Wrong size on SpecialEventVaultWorld_C_OnUpdateDisplay");
static_assert(offsetof(SpecialEventVaultWorld_C_OnUpdateDisplay, bShowFloor) == 0x000000, "Member 'SpecialEventVaultWorld_C_OnUpdateDisplay::bShowFloor' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_OnUpdateDisplay, bShowEffects) == 0x000001, "Member 'SpecialEventVaultWorld_C_OnUpdateDisplay::bShowEffects' has a wrong offset!");

// Function SpecialEventVaultWorld.SpecialEventVaultWorld_C.OnTransitionItemDetails
// 0x0001 (0x0001 - 0x0000)
struct SpecialEventVaultWorld_C_OnTransitionItemDetails final
{
public:
	bool                                          bShowItemDetails;                                  // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpecialEventVaultWorld_C_OnTransitionItemDetails) == 0x000001, "Wrong alignment on SpecialEventVaultWorld_C_OnTransitionItemDetails");
static_assert(sizeof(SpecialEventVaultWorld_C_OnTransitionItemDetails) == 0x000001, "Wrong size on SpecialEventVaultWorld_C_OnTransitionItemDetails");
static_assert(offsetof(SpecialEventVaultWorld_C_OnTransitionItemDetails, bShowItemDetails) == 0x000000, "Member 'SpecialEventVaultWorld_C_OnTransitionItemDetails::bShowItemDetails' has a wrong offset!");

// Function SpecialEventVaultWorld.SpecialEventVaultWorld_C.OnTransitionBackground
// 0x0001 (0x0001 - 0x0000)
struct SpecialEventVaultWorld_C_OnTransitionBackground final
{
public:
	bool                                          bPlayForward;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpecialEventVaultWorld_C_OnTransitionBackground) == 0x000001, "Wrong alignment on SpecialEventVaultWorld_C_OnTransitionBackground");
static_assert(sizeof(SpecialEventVaultWorld_C_OnTransitionBackground) == 0x000001, "Wrong size on SpecialEventVaultWorld_C_OnTransitionBackground");
static_assert(offsetof(SpecialEventVaultWorld_C_OnTransitionBackground, bPlayForward) == 0x000000, "Member 'SpecialEventVaultWorld_C_OnTransitionBackground::bPlayForward' has a wrong offset!");

// Function SpecialEventVaultWorld.SpecialEventVaultWorld_C.ExecuteUbergraph_SpecialEventVaultWorld
// 0x0090 (0x0090 - 0x0000)
struct SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPlayForward;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTexture2D*                       K2Node_Event_LoadedBackgroundTexture;              // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackDynamicBackground                K2Node_Event_BackgroundInfo;                       // 0x0020(0x0060)(ConstParm)
	bool                                          K2Node_Event_bShowFloor;                           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowEffects;                         // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowItemDetails;                     // 0x0082(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MaterialIndex;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld) == 0x000008, "Wrong alignment on SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld");
static_assert(sizeof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld) == 0x000090, "Wrong size on SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, EntryPoint) == 0x000000, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::EntryPoint' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, K2Node_Event_bPlayForward) == 0x000010, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::K2Node_Event_bPlayForward' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, CallFunc_Not_PreBool_ReturnValue_1) == 0x000012, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, K2Node_Event_LoadedBackgroundTexture) == 0x000018, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::K2Node_Event_LoadedBackgroundTexture' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, K2Node_Event_BackgroundInfo) == 0x000020, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::K2Node_Event_BackgroundInfo' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, K2Node_Event_bShowFloor) == 0x000080, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::K2Node_Event_bShowFloor' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, K2Node_Event_bShowEffects) == 0x000081, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::K2Node_Event_bShowEffects' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, K2Node_Event_bShowItemDetails) == 0x000082, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::K2Node_Event_bShowItemDetails' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, CallFunc_Not_PreBool_ReturnValue_2) == 0x000083, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, K2Node_Event_MaterialIndex) == 0x000084, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::K2Node_Event_MaterialIndex' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld, CallFunc_SelectFloat_ReturnValue) == 0x00008C, "Member 'SpecialEventVaultWorld_C_ExecuteUbergraph_SpecialEventVaultWorld::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

}

