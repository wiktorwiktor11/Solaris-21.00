#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TempestRuntime

#include "Basic.hpp"

#include "TempestRuntime_classes.hpp"
#include "TempestRuntime_parameters.hpp"


namespace SDK
{

// Function TempestRuntime.FortCheatManager_Tempest.EndTempestStorm
// (Final, BlueprintAuthorityOnly, Exec, Native, Public)
// Parameters:
// class FString                           StormName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_Tempest::EndTempestStorm(const class FString& StormName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_Tempest", "EndTempestStorm");

	Params::FortCheatManager_Tempest_EndTempestStorm Parms{};

	Parms.StormName = std::move(StormName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TempestRuntime.TempestMovementComponent.OnRep_MovementData
// (Final, Native, Private, Const)

void UTempestMovementComponent::OnRep_MovementData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestMovementComponent", "OnRep_MovementData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TempestRuntime.TempestStateMachineComponent.ForceDissipate
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InDissipationReason                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTempestStateMachineComponent::ForceDissipate(const class FString& InDissipationReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestStateMachineComponent", "ForceDissipate");

	Params::TempestStateMachineComponent_ForceDissipate Parms{};

	Parms.InDissipationReason = std::move(InDissipationReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TempestRuntime.TempestStateMachineComponent.OnRep_CurrentStateInfo
// (Final, Native, Private)

void UTempestStateMachineComponent::OnRep_CurrentStateInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestStateMachineComponent", "OnRep_CurrentStateInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TempestRuntime.TempestStateMachineComponent.GetCurrentState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETempestState                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETempestState UTempestStateMachineComponent::GetCurrentState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestStateMachineComponent", "GetCurrentState");

	Params::TempestStateMachineComponent_GetCurrentState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TempestRuntime.TempestStateMachineComponent.GetCurrentStateCompletionPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTempestStateMachineComponent::GetCurrentStateCompletionPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestStateMachineComponent", "GetCurrentStateCompletionPercentage");

	Params::TempestStateMachineComponent_GetCurrentStateCompletionPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TempestRuntime.TempestStateMachineComponent.GetCurrentStateInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTempestStateInfo                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTempestStateInfo UTempestStateMachineComponent::GetCurrentStateInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TempestStateMachineComponent", "GetCurrentStateInfo");

	Params::TempestStateMachineComponent_GetCurrentStateInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

