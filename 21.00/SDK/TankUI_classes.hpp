#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TankUI

#include "Basic.hpp"

#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// Class TankUI.FortGameSettingRegistryExtension_Tank
// 0x0000 (0x0028 - 0x0028)
class UFortGameSettingRegistryExtension_Tank final : public UFortGameSettingRegistryExtension
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameSettingRegistryExtension_Tank">();
	}
	static class UFortGameSettingRegistryExtension_Tank* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameSettingRegistryExtension_Tank>();
	}
};
static_assert(alignof(UFortGameSettingRegistryExtension_Tank) == 0x000008, "Wrong alignment on UFortGameSettingRegistryExtension_Tank");
static_assert(sizeof(UFortGameSettingRegistryExtension_Tank) == 0x000028, "Wrong size on UFortGameSettingRegistryExtension_Tank");

// Class TankUI.TankVehicleReticle
// 0x0020 (0x03D0 - 0x03B0)
class UTankVehicleReticle final : public UFortAthenaVehicleDashboardWidget
{
public:
	class AFortTankVehicle*                       OwningTankVehicle;                                 // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinTurretPitch;                                    // 0x03B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxTurretPitch;                                    // 0x03BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDistanceMeterEnabled;                             // 0x03C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bTankOrientationEventsEnabled;                     // 0x03C1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C2[0xE];                                      // 0x03C2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleOnDamageablePartHealthChanged(const struct FVehicleDamageablePartConfig& PartConfig, const struct FVehicleDamageablePart& Part, const bool bNewlyDisabled, const bool bNewlyEnabled);
	void HandleOnEquipMountedWeapon(class AFortWeaponRanged* EquippedMountedWeapon);
	void OnCannonFired(const float RateTime);
	void OnTankDistanceUpdate(const float Distance, const float DistancePercent);
	void OnTankEngineHealthChanged(const float EngineHealth, const float EngineHealthMax, const bool bNewlyDisabled, const bool bNewlyEnabled);
	void OnTankHatchHealthChanged(const float HatchHealth, const float HatchHealthMax, const bool bNewlyDisabled, const bool bNewlyEnabled);
	void OnTankRotationValueChanged(const float TankValue, const float TurretValue);
	void OnTankTargetingPressed();
	void OnTankTargetingReleased();
	void OnTankTurretAimPitchValueChanged(const float Pitch, const float PitchPercent);
	void OnTankTurretAimYawValueChanged(const float Value);
	void OnTreadEnabledChanged(const bool bEnabled, const ETreadSide Side);
	void SetupVehicleFromBP(class AActor* NewVehicle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TankVehicleReticle">();
	}
	static class UTankVehicleReticle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTankVehicleReticle>();
	}
};
static_assert(alignof(UTankVehicleReticle) == 0x000008, "Wrong alignment on UTankVehicleReticle");
static_assert(sizeof(UTankVehicleReticle) == 0x0003D0, "Wrong size on UTankVehicleReticle");
static_assert(offsetof(UTankVehicleReticle, OwningTankVehicle) == 0x0003B0, "Member 'UTankVehicleReticle::OwningTankVehicle' has a wrong offset!");
static_assert(offsetof(UTankVehicleReticle, MinTurretPitch) == 0x0003B8, "Member 'UTankVehicleReticle::MinTurretPitch' has a wrong offset!");
static_assert(offsetof(UTankVehicleReticle, MaxTurretPitch) == 0x0003BC, "Member 'UTankVehicleReticle::MaxTurretPitch' has a wrong offset!");
static_assert(offsetof(UTankVehicleReticle, bDistanceMeterEnabled) == 0x0003C0, "Member 'UTankVehicleReticle::bDistanceMeterEnabled' has a wrong offset!");
static_assert(offsetof(UTankVehicleReticle, bTankOrientationEventsEnabled) == 0x0003C1, "Member 'UTankVehicleReticle::bTankOrientationEventsEnabled' has a wrong offset!");

}

