#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KoalaUI

#include "Basic.hpp"

#include "KoalaUI_structs.hpp"


namespace SDK::Params
{

// Function KoalaUI.FortSidebarPanelKoala.OnConnectionChanged
// 0x0001 (0x0001 - 0x0000)
struct FortSidebarPanelKoala_OnConnectionChanged final
{
public:
	bool                                          bConnected;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSidebarPanelKoala_OnConnectionChanged) == 0x000001, "Wrong alignment on FortSidebarPanelKoala_OnConnectionChanged");
static_assert(sizeof(FortSidebarPanelKoala_OnConnectionChanged) == 0x000001, "Wrong size on FortSidebarPanelKoala_OnConnectionChanged");
static_assert(offsetof(FortSidebarPanelKoala_OnConnectionChanged, bConnected) == 0x000000, "Member 'FortSidebarPanelKoala_OnConnectionChanged::bConnected' has a wrong offset!");

// Function KoalaUI.KoalaHUDWidget.GetTrackedClipCount
// 0x0004 (0x0004 - 0x0000)
struct KoalaHUDWidget_GetTrackedClipCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaHUDWidget_GetTrackedClipCount) == 0x000004, "Wrong alignment on KoalaHUDWidget_GetTrackedClipCount");
static_assert(sizeof(KoalaHUDWidget_GetTrackedClipCount) == 0x000004, "Wrong size on KoalaHUDWidget_GetTrackedClipCount");
static_assert(offsetof(KoalaHUDWidget_GetTrackedClipCount, ReturnValue) == 0x000000, "Member 'KoalaHUDWidget_GetTrackedClipCount::ReturnValue' has a wrong offset!");

// Function KoalaUI.KoalaHUDWidget.OnAvailabilityChanged
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_OnAvailabilityChanged final
{
public:
	EKoalaAvailability                            Availability;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaHUDWidget_OnAvailabilityChanged) == 0x000001, "Wrong alignment on KoalaHUDWidget_OnAvailabilityChanged");
static_assert(sizeof(KoalaHUDWidget_OnAvailabilityChanged) == 0x000001, "Wrong size on KoalaHUDWidget_OnAvailabilityChanged");
static_assert(offsetof(KoalaHUDWidget_OnAvailabilityChanged, Availability) == 0x000000, "Member 'KoalaHUDWidget_OnAvailabilityChanged::Availability' has a wrong offset!");

// Function KoalaUI.KoalaHUDWidget.OnClipStatusChanged
// 0x000C (0x000C - 0x0000)
struct KoalaHUDWidget_OnClipStatusChanged final
{
public:
	int32                                         InClipID;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKoalaClipStatus                              InClipStatus;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InUploadProgress;                                  // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaHUDWidget_OnClipStatusChanged) == 0x000004, "Wrong alignment on KoalaHUDWidget_OnClipStatusChanged");
static_assert(sizeof(KoalaHUDWidget_OnClipStatusChanged) == 0x00000C, "Wrong size on KoalaHUDWidget_OnClipStatusChanged");
static_assert(offsetof(KoalaHUDWidget_OnClipStatusChanged, InClipID) == 0x000000, "Member 'KoalaHUDWidget_OnClipStatusChanged::InClipID' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_OnClipStatusChanged, InClipStatus) == 0x000004, "Member 'KoalaHUDWidget_OnClipStatusChanged::InClipStatus' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_OnClipStatusChanged, InUploadProgress) == 0x000008, "Member 'KoalaHUDWidget_OnClipStatusChanged::InUploadProgress' has a wrong offset!");

// Function KoalaUI.KoalaHUDWidget.OnConnectionChanged
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_OnConnectionChanged final
{
public:
	EKoalaConnectionStatus                        InStatus;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaHUDWidget_OnConnectionChanged) == 0x000001, "Wrong alignment on KoalaHUDWidget_OnConnectionChanged");
static_assert(sizeof(KoalaHUDWidget_OnConnectionChanged) == 0x000001, "Wrong size on KoalaHUDWidget_OnConnectionChanged");
static_assert(offsetof(KoalaHUDWidget_OnConnectionChanged, InStatus) == 0x000000, "Member 'KoalaHUDWidget_OnConnectionChanged::InStatus' has a wrong offset!");

// Function KoalaUI.KoalaHUDWidget.OnCreateClipComplete
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_OnCreateClipComplete final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaHUDWidget_OnCreateClipComplete) == 0x000001, "Wrong alignment on KoalaHUDWidget_OnCreateClipComplete");
static_assert(sizeof(KoalaHUDWidget_OnCreateClipComplete) == 0x000001, "Wrong size on KoalaHUDWidget_OnCreateClipComplete");
static_assert(offsetof(KoalaHUDWidget_OnCreateClipComplete, bSuccess) == 0x000000, "Member 'KoalaHUDWidget_OnCreateClipComplete::bSuccess' has a wrong offset!");

// Function KoalaUI.KoalaHUDWidget.OnInputProgress
// 0x0004 (0x0004 - 0x0000)
struct KoalaHUDWidget_OnInputProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaHUDWidget_OnInputProgress) == 0x000004, "Wrong alignment on KoalaHUDWidget_OnInputProgress");
static_assert(sizeof(KoalaHUDWidget_OnInputProgress) == 0x000004, "Wrong size on KoalaHUDWidget_OnInputProgress");
static_assert(offsetof(KoalaHUDWidget_OnInputProgress, Progress) == 0x000000, "Member 'KoalaHUDWidget_OnInputProgress::Progress' has a wrong offset!");

// Function KoalaUI.KoalaHUDWidget.OnRecordingStatusChanged
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_OnRecordingStatusChanged final
{
public:
	EKoalaRecording                               InRecordingStatus;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaHUDWidget_OnRecordingStatusChanged) == 0x000001, "Wrong alignment on KoalaHUDWidget_OnRecordingStatusChanged");
static_assert(sizeof(KoalaHUDWidget_OnRecordingStatusChanged) == 0x000001, "Wrong size on KoalaHUDWidget_OnRecordingStatusChanged");
static_assert(offsetof(KoalaHUDWidget_OnRecordingStatusChanged, InRecordingStatus) == 0x000000, "Member 'KoalaHUDWidget_OnRecordingStatusChanged::InRecordingStatus' has a wrong offset!");

// Function KoalaUI.KoalaHUDWidget.OnReminderTimerStarted
// 0x0004 (0x0004 - 0x0000)
struct KoalaHUDWidget_OnReminderTimerStarted final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaHUDWidget_OnReminderTimerStarted) == 0x000004, "Wrong alignment on KoalaHUDWidget_OnReminderTimerStarted");
static_assert(sizeof(KoalaHUDWidget_OnReminderTimerStarted) == 0x000004, "Wrong size on KoalaHUDWidget_OnReminderTimerStarted");
static_assert(offsetof(KoalaHUDWidget_OnReminderTimerStarted, Time) == 0x000000, "Member 'KoalaHUDWidget_OnReminderTimerStarted::Time' has a wrong offset!");

// Function KoalaUI.KoalaHUDWidget.GetUploadingClipCount
// 0x0004 (0x0004 - 0x0000)
struct KoalaHUDWidget_GetUploadingClipCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaHUDWidget_GetUploadingClipCount) == 0x000004, "Wrong alignment on KoalaHUDWidget_GetUploadingClipCount");
static_assert(sizeof(KoalaHUDWidget_GetUploadingClipCount) == 0x000004, "Wrong size on KoalaHUDWidget_GetUploadingClipCount");
static_assert(offsetof(KoalaHUDWidget_GetUploadingClipCount, ReturnValue) == 0x000000, "Member 'KoalaHUDWidget_GetUploadingClipCount::ReturnValue' has a wrong offset!");

// Function KoalaUI.KoalaSettingDetailExtension.OnAvailabilityChanged
// 0x0001 (0x0001 - 0x0000)
struct KoalaSettingDetailExtension_OnAvailabilityChanged final
{
public:
	bool                                          bAvailable;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaSettingDetailExtension_OnAvailabilityChanged) == 0x000001, "Wrong alignment on KoalaSettingDetailExtension_OnAvailabilityChanged");
static_assert(sizeof(KoalaSettingDetailExtension_OnAvailabilityChanged) == 0x000001, "Wrong size on KoalaSettingDetailExtension_OnAvailabilityChanged");
static_assert(offsetof(KoalaSettingDetailExtension_OnAvailabilityChanged, bAvailable) == 0x000000, "Member 'KoalaSettingDetailExtension_OnAvailabilityChanged::bAvailable' has a wrong offset!");

// Function KoalaUI.KoalaSettingDetailExtension.OnConnectionChanged
// 0x0001 (0x0001 - 0x0000)
struct KoalaSettingDetailExtension_OnConnectionChanged final
{
public:
	bool                                          bConnected;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KoalaSettingDetailExtension_OnConnectionChanged) == 0x000001, "Wrong alignment on KoalaSettingDetailExtension_OnConnectionChanged");
static_assert(sizeof(KoalaSettingDetailExtension_OnConnectionChanged) == 0x000001, "Wrong size on KoalaSettingDetailExtension_OnConnectionChanged");
static_assert(offsetof(KoalaSettingDetailExtension_OnConnectionChanged, bConnected) == 0x000000, "Member 'KoalaSettingDetailExtension_OnConnectionChanged::bConnected' has a wrong offset!");

}

