#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_AppleSun_Apple_Athena

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_AppleSun_Apple_Athena.BGA_AppleSun_Apple_Athena_C
// 0x04B0 (0x0F70 - 0x0AC0)
class ABGA_AppleSun_Apple_Athena_C : public ABuildingGameplayActorCrashpad
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          PlayerDetector;                                    // 0x0AC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Applesun_Activate;                                 // 0x0AD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AppleSun_Warning_Loop_01;                          // 0x0AD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLinkToActorComponent*              FortLinkToActor;                                   // 0x0AE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          SidesPawnBlocker;                                  // 0x0AE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pad;                                               // 0x0AF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0AF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_AppleSun_Spawn;                                  // 0x0B00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_AppleSun_DespawnTell;                            // 0x0B08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BeginDeflate_NewTrack_0_E511D36F4D2E46D8AE33548AA66A76B4; // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BeginDeflate__Direction_E511D36F4D2E46D8AE33548AA66A76B4; // 0x0B14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B15[0x3];                                      // 0x0B15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BeginDeflate;                                      // 0x0B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Destroy_Scale_A5AFC0D0430E50F432FB2FB260534172;    // 0x0B20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Destroy_Deflate_A5AFC0D0430E50F432FB2FB260534172;  // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Destroy__Direction_A5AFC0D0430E50F432FB2FB260534172; // 0x0B3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3D[0x3];                                      // 0x0B3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Destroy;                                           // 0x0B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         GrowthStart;                                       // 0x0B48(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          OverlapLaunchesActivated;                          // 0x0B70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B71[0x7];                                      // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            LaunchCurve;                                       // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LifespanTimer;                                     // 0x0B80(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimeoutTellTimer;                                  // 0x0B88(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LaunchAngleWeight;                                 // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartScale;                                        // 0x0B98(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SpawnFeedbackGC;                                   // 0x0BB0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DeathFeedbackGC;                                   // 0x0BB4(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_Quest_AppleSun_Use;                              // 0x0BB8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                WaterLocation;                                     // 0x0BD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BounceLocation;                                    // 0x0BF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        NewVar_0;                                          // 0x0C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         GrowthEnd;                                         // 0x0C10(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinLaunch;                                         // 0x0C38(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxLaunch;                                         // 0x0C60(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VehicleLaunchMultiplierXY;                         // 0x0C88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VehicleLaunchMultiplierZ;                          // 0x0CB0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ProjectileLaunchMultiplierXY;                      // 0x0CD8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ProjectileLaunchMultiplierZ;                       // 0x0D00(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Lifespan_;                                         // 0x0D28(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         TimeoutTellDuration_;                              // 0x0D50(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         HorizontalLaunch;                                  // 0x0D78(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         MinNonPawnVelocity;                                // 0x0DA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxNonPawnVelocity;                                // 0x0DA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LinkedActor;                                       // 0x0DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AFortPawn*, float>                 TrackedPlayers;                                    // 0x0DB0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_Crashpad_;                                      // 0x0E00(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinLaunch_Crashpad_;                               // 0x0E20(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxLaunch_Crashpad_;                               // 0x0E48(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HasLifespan;                                       // 0x0E70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWorldPlaced;                                     // 0x0E71(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsesCollisionTimer;                                // 0x0E72(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyByShark;                                    // 0x0E73(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_BuildingPhysics;                               // 0x0E74(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_PhysicsObjectImpulseMult;                      // 0x0E78(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         PhysicsObjectMassMultiplier;                       // 0x0EA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA4[0x4];                                      // 0x0EA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CollidingActor;                                    // 0x0EA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            FallImmunityGameplayEffect;                        // 0x0EB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_EventUsedLaunchPad;                            // 0x0EB8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Placed_Launch_Mod;                                 // 0x0EBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            WebLaunchGameplayEffect;                           // 0x0EC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UFXSystemAsset*                         Death_Effect_Template;                             // 0x0EC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     Death_Effect;                                      // 0x0ED0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Death_Effect_At_Loction;                           // 0x0ED8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED9[0x7];                                      // 0x0ED9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             ThreeP_BounceSound;                                // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OneP_Bounce_Sound;                                 // 0x0EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DestroySound;                                      // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CachedUseNativeCollisionHandling;                  // 0x0EF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF9[0x7];                                      // 0x0EF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCrashpadDynamicParams                 HandleCollisionDynamicParams;                      // 0x0F00(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 CrashpadBounceScales;                              // 0x0F60(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BeginDeflate__FinishedFunc();
	void BeginDeflate__UpdateFunc();
	void BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Box_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature(class AActor* DamageCauser);
	void BndEvt__PlayerDetector_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__PlayerDetector_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BounceMulticast(const struct FVector& Position, const float BounceIntensity, class AActor* Actor);
	void CatchObjectsInside();
	void CheckForSpyPerk(bool* HasPerk);
	void DespawnTell();
	void Destroy__FinishedFunc();
	void Destroy__UpdateFunc();
	void DestroyCrashpad();
	void DestroyPad();
	void DoBounceMulticast(const struct FVector& BounceLocation_0, const float BounceIntensity, const class AActor* BouncingActor);
	void DoCollisionHandling();
	void ExecuteUbergraph_BGA_AppleSun_Apple_Athena(int32 EntryPoint);
	struct FVector Get_Launch_Reference_Vector(class ACharacter* Fort_Pawn);
	void LaunchBuldingActors(class AActor* Actor);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void PlayBounceAudio(class AActor* Actor);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_AppleSun_Apple_Athena_C">();
	}
	static class ABGA_AppleSun_Apple_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_AppleSun_Apple_Athena_C>();
	}
};
static_assert(alignof(ABGA_AppleSun_Apple_Athena_C) == 0x000008, "Wrong alignment on ABGA_AppleSun_Apple_Athena_C");
static_assert(sizeof(ABGA_AppleSun_Apple_Athena_C) == 0x000F70, "Wrong size on ABGA_AppleSun_Apple_Athena_C");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, UberGraphFrame) == 0x000AC0, "Member 'ABGA_AppleSun_Apple_Athena_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, PlayerDetector) == 0x000AC8, "Member 'ABGA_AppleSun_Apple_Athena_C::PlayerDetector' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Applesun_Activate) == 0x000AD0, "Member 'ABGA_AppleSun_Apple_Athena_C::Applesun_Activate' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, AppleSun_Warning_Loop_01) == 0x000AD8, "Member 'ABGA_AppleSun_Apple_Athena_C::AppleSun_Warning_Loop_01' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, FortLinkToActor) == 0x000AE0, "Member 'ABGA_AppleSun_Apple_Athena_C::FortLinkToActor' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, SidesPawnBlocker) == 0x000AE8, "Member 'ABGA_AppleSun_Apple_Athena_C::SidesPawnBlocker' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Pad) == 0x000AF0, "Member 'ABGA_AppleSun_Apple_Athena_C::Pad' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Box) == 0x000AF8, "Member 'ABGA_AppleSun_Apple_Athena_C::Box' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, P_AppleSun_Spawn) == 0x000B00, "Member 'ABGA_AppleSun_Apple_Athena_C::P_AppleSun_Spawn' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, P_AppleSun_DespawnTell) == 0x000B08, "Member 'ABGA_AppleSun_Apple_Athena_C::P_AppleSun_DespawnTell' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, BeginDeflate_NewTrack_0_E511D36F4D2E46D8AE33548AA66A76B4) == 0x000B10, "Member 'ABGA_AppleSun_Apple_Athena_C::BeginDeflate_NewTrack_0_E511D36F4D2E46D8AE33548AA66A76B4' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, BeginDeflate__Direction_E511D36F4D2E46D8AE33548AA66A76B4) == 0x000B14, "Member 'ABGA_AppleSun_Apple_Athena_C::BeginDeflate__Direction_E511D36F4D2E46D8AE33548AA66A76B4' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, BeginDeflate) == 0x000B18, "Member 'ABGA_AppleSun_Apple_Athena_C::BeginDeflate' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Destroy_Scale_A5AFC0D0430E50F432FB2FB260534172) == 0x000B20, "Member 'ABGA_AppleSun_Apple_Athena_C::Destroy_Scale_A5AFC0D0430E50F432FB2FB260534172' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Destroy_Deflate_A5AFC0D0430E50F432FB2FB260534172) == 0x000B38, "Member 'ABGA_AppleSun_Apple_Athena_C::Destroy_Deflate_A5AFC0D0430E50F432FB2FB260534172' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Destroy__Direction_A5AFC0D0430E50F432FB2FB260534172) == 0x000B3C, "Member 'ABGA_AppleSun_Apple_Athena_C::Destroy__Direction_A5AFC0D0430E50F432FB2FB260534172' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Destroy) == 0x000B40, "Member 'ABGA_AppleSun_Apple_Athena_C::Destroy' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, GrowthStart) == 0x000B48, "Member 'ABGA_AppleSun_Apple_Athena_C::GrowthStart' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, OverlapLaunchesActivated) == 0x000B70, "Member 'ABGA_AppleSun_Apple_Athena_C::OverlapLaunchesActivated' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, LaunchCurve) == 0x000B78, "Member 'ABGA_AppleSun_Apple_Athena_C::LaunchCurve' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, LifespanTimer) == 0x000B80, "Member 'ABGA_AppleSun_Apple_Athena_C::LifespanTimer' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, TimeoutTellTimer) == 0x000B88, "Member 'ABGA_AppleSun_Apple_Athena_C::TimeoutTellTimer' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, LaunchAngleWeight) == 0x000B90, "Member 'ABGA_AppleSun_Apple_Athena_C::LaunchAngleWeight' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, StartScale) == 0x000B98, "Member 'ABGA_AppleSun_Apple_Athena_C::StartScale' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, SpawnFeedbackGC) == 0x000BB0, "Member 'ABGA_AppleSun_Apple_Athena_C::SpawnFeedbackGC' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, DeathFeedbackGC) == 0x000BB4, "Member 'ABGA_AppleSun_Apple_Athena_C::DeathFeedbackGC' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, T_Quest_AppleSun_Use) == 0x000BB8, "Member 'ABGA_AppleSun_Apple_Athena_C::T_Quest_AppleSun_Use' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, WaterLocation) == 0x000BD8, "Member 'ABGA_AppleSun_Apple_Athena_C::WaterLocation' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, BounceLocation) == 0x000BF0, "Member 'ABGA_AppleSun_Apple_Athena_C::BounceLocation' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, NewVar_0) == 0x000C08, "Member 'ABGA_AppleSun_Apple_Athena_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, GrowthEnd) == 0x000C10, "Member 'ABGA_AppleSun_Apple_Athena_C::GrowthEnd' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MinLaunch) == 0x000C38, "Member 'ABGA_AppleSun_Apple_Athena_C::MinLaunch' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MaxLaunch) == 0x000C60, "Member 'ABGA_AppleSun_Apple_Athena_C::MaxLaunch' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, VehicleLaunchMultiplierXY) == 0x000C88, "Member 'ABGA_AppleSun_Apple_Athena_C::VehicleLaunchMultiplierXY' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, VehicleLaunchMultiplierZ) == 0x000CB0, "Member 'ABGA_AppleSun_Apple_Athena_C::VehicleLaunchMultiplierZ' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, ProjectileLaunchMultiplierXY) == 0x000CD8, "Member 'ABGA_AppleSun_Apple_Athena_C::ProjectileLaunchMultiplierXY' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, ProjectileLaunchMultiplierZ) == 0x000D00, "Member 'ABGA_AppleSun_Apple_Athena_C::ProjectileLaunchMultiplierZ' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Lifespan_) == 0x000D28, "Member 'ABGA_AppleSun_Apple_Athena_C::Lifespan_' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, TimeoutTellDuration_) == 0x000D50, "Member 'ABGA_AppleSun_Apple_Athena_C::TimeoutTellDuration_' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, HorizontalLaunch) == 0x000D78, "Member 'ABGA_AppleSun_Apple_Athena_C::HorizontalLaunch' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MinNonPawnVelocity) == 0x000DA0, "Member 'ABGA_AppleSun_Apple_Athena_C::MinNonPawnVelocity' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MaxNonPawnVelocity) == 0x000DA4, "Member 'ABGA_AppleSun_Apple_Athena_C::MaxNonPawnVelocity' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, LinkedActor) == 0x000DA8, "Member 'ABGA_AppleSun_Apple_Athena_C::LinkedActor' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, TrackedPlayers) == 0x000DB0, "Member 'ABGA_AppleSun_Apple_Athena_C::TrackedPlayers' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, TC_Crashpad_) == 0x000E00, "Member 'ABGA_AppleSun_Apple_Athena_C::TC_Crashpad_' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MinLaunch_Crashpad_) == 0x000E20, "Member 'ABGA_AppleSun_Apple_Athena_C::MinLaunch_Crashpad_' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MaxLaunch_Crashpad_) == 0x000E48, "Member 'ABGA_AppleSun_Apple_Athena_C::MaxLaunch_Crashpad_' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, HasLifespan) == 0x000E70, "Member 'ABGA_AppleSun_Apple_Athena_C::HasLifespan' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, IsWorldPlaced) == 0x000E71, "Member 'ABGA_AppleSun_Apple_Athena_C::IsWorldPlaced' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, UsesCollisionTimer) == 0x000E72, "Member 'ABGA_AppleSun_Apple_Athena_C::UsesCollisionTimer' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, DestroyByShark) == 0x000E73, "Member 'ABGA_AppleSun_Apple_Athena_C::DestroyByShark' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Tag_BuildingPhysics) == 0x000E74, "Member 'ABGA_AppleSun_Apple_Athena_C::Tag_BuildingPhysics' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Row_PhysicsObjectImpulseMult) == 0x000E78, "Member 'ABGA_AppleSun_Apple_Athena_C::Row_PhysicsObjectImpulseMult' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, PhysicsObjectMassMultiplier) == 0x000EA0, "Member 'ABGA_AppleSun_Apple_Athena_C::PhysicsObjectMassMultiplier' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, CollidingActor) == 0x000EA8, "Member 'ABGA_AppleSun_Apple_Athena_C::CollidingActor' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, FallImmunityGameplayEffect) == 0x000EB0, "Member 'ABGA_AppleSun_Apple_Athena_C::FallImmunityGameplayEffect' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Tag_EventUsedLaunchPad) == 0x000EB8, "Member 'ABGA_AppleSun_Apple_Athena_C::Tag_EventUsedLaunchPad' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Placed_Launch_Mod) == 0x000EBC, "Member 'ABGA_AppleSun_Apple_Athena_C::Placed_Launch_Mod' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, WebLaunchGameplayEffect) == 0x000EC0, "Member 'ABGA_AppleSun_Apple_Athena_C::WebLaunchGameplayEffect' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Death_Effect_Template) == 0x000EC8, "Member 'ABGA_AppleSun_Apple_Athena_C::Death_Effect_Template' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Death_Effect) == 0x000ED0, "Member 'ABGA_AppleSun_Apple_Athena_C::Death_Effect' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Death_Effect_At_Loction) == 0x000ED8, "Member 'ABGA_AppleSun_Apple_Athena_C::Death_Effect_At_Loction' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, ThreeP_BounceSound) == 0x000EE0, "Member 'ABGA_AppleSun_Apple_Athena_C::ThreeP_BounceSound' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, OneP_Bounce_Sound) == 0x000EE8, "Member 'ABGA_AppleSun_Apple_Athena_C::OneP_Bounce_Sound' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, DestroySound) == 0x000EF0, "Member 'ABGA_AppleSun_Apple_Athena_C::DestroySound' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, CachedUseNativeCollisionHandling) == 0x000EF8, "Member 'ABGA_AppleSun_Apple_Athena_C::CachedUseNativeCollisionHandling' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, HandleCollisionDynamicParams) == 0x000F00, "Member 'ABGA_AppleSun_Apple_Athena_C::HandleCollisionDynamicParams' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, CrashpadBounceScales) == 0x000F60, "Member 'ABGA_AppleSun_Apple_Athena_C::CrashpadBounceScales' has a wrong offset!");

}

