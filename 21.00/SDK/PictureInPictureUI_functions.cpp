#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PictureInPictureUI

#include "Basic.hpp"

#include "PictureInPictureUI_classes.hpp"
#include "PictureInPictureUI_parameters.hpp"


namespace SDK
{

// Function PictureInPictureUI.PictureInPictureBladeMenuButton.HandlePiPEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    Enabled                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureBladeMenuButton::HandlePiPEnabled(const bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPictureBladeMenuButton", "HandlePiPEnabled");

	Params::PictureInPictureBladeMenuButton_HandlePiPEnabled Parms{};

	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPictureBladeMenuButton.HandlePiPLoginSuccess
// (Final, Native, Public)

void UPictureInPictureBladeMenuButton::HandlePiPLoginSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPictureBladeMenuButton", "HandlePiPLoginSuccess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPictureBladeMenuButton.HandlePiPLogoutSuccess
// (Final, Native, Public)

void UPictureInPictureBladeMenuButton::HandlePiPLogoutSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPictureBladeMenuButton", "HandlePiPLogoutSuccess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPictureBladeMenuButton.OnPartnerListUpdated
// (Final, Native, Private)

void UPictureInPictureBladeMenuButton::OnPartnerListUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPictureBladeMenuButton", "OnPartnerListUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPictureBladeMenuButton.UpdatePiPStatusBP
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    LoggedIn                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Enabled                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ParentalControlsEnabled                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureBladeMenuButton::UpdatePiPStatusBP(const bool LoggedIn, const bool Enabled, const bool ParentalControlsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPictureBladeMenuButton", "UpdatePiPStatusBP");

	Params::PictureInPictureBladeMenuButton_UpdatePiPStatusBP Parms{};

	Parms.LoggedIn = LoggedIn;
	Parms.Enabled = Enabled;
	Parms.ParentalControlsEnabled = ParentalControlsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureUI.PictureInPictureMetadataOverlay.HandleOnPIPVideoResumed
// (Final, Native, Protected)

void UPictureInPictureMetadataOverlay::HandleOnPIPVideoResumed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPictureMetadataOverlay", "HandleOnPIPVideoResumed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPictureMetadataOverlay.HandleOnPIPVideoStarted
// (Final, Native, Protected)

void UPictureInPictureMetadataOverlay::HandleOnPIPVideoStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPictureMetadataOverlay", "HandleOnPIPVideoStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPictureMetadataOverlay.OnMediaStarted
// (Event, Protected, BlueprintEvent)

void UPictureInPictureMetadataOverlay::OnMediaStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPictureMetadataOverlay", "OnMediaStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.AutoEnableController
// (Final, Native, Private)

void UPictureInPicturePanelWidget::AutoEnableController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "AutoEnableController");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.DestroyPIPSoundComponent
// (Final, Native, Private, BlueprintCallable)

void UPictureInPicturePanelWidget::DestroyPIPSoundComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "DestroyPIPSoundComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.FlipPIPAudioSubmix
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bInDefault                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMediaEventsStreamAssets     InStreamAssets                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPicturePanelWidget::FlipPIPAudioSubmix(bool bInDefault, const struct FFortMediaEventsStreamAssets& InStreamAssets, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "FlipPIPAudioSubmix");

	Params::PictureInPicturePanelWidget_FlipPIPAudioSubmix Parms{};

	Parms.bInDefault = bInDefault;
	Parms.InStreamAssets = std::move(InStreamAssets);
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.HandleIsPictureInPictureEnabledChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsPiPEnabled                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPicturePanelWidget::HandleIsPictureInPictureEnabledChanged(bool bIsPiPEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "HandleIsPictureInPictureEnabledChanged");

	Params::PictureInPicturePanelWidget_HandleIsPictureInPictureEnabledChanged Parms{};

	Parms.bIsPiPEnabled = bIsPiPEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.HandleOnPartnerChanged
// (Final, Native, Protected)
// Parameters:
// class UPictureInPicturePartnerControls* NewPartnerControls                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPicturePanelWidget::HandleOnPartnerChanged(class UPictureInPicturePartnerControls* NewPartnerControls)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "HandleOnPartnerChanged");

	Params::PictureInPicturePanelWidget_HandleOnPartnerChanged Parms{};

	Parms.NewPartnerControls = NewPartnerControls;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.HandleOnPartnerListUpdated
// (Final, Native, Protected)

void UPictureInPicturePanelWidget::HandleOnPartnerListUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "HandleOnPartnerListUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.HandleOnPartnerSourceChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FPiPPartnerSource                InSelectedSource                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UPictureInPicturePanelWidget::HandleOnPartnerSourceChanged(const struct FPiPPartnerSource& InSelectedSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "HandleOnPartnerSourceChanged");

	Params::PictureInPicturePanelWidget_HandleOnPartnerSourceChanged Parms{};

	Parms.InSelectedSource = std::move(InSelectedSource);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.HandleToggleFullscreenMap
// (Final, Native, Protected)
// Parameters:
// bool                                    bFullscreenMapVisible                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPicturePanelWidget::HandleToggleFullscreenMap(bool bFullscreenMapVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "HandleToggleFullscreenMap");

	Params::PictureInPicturePanelWidget_HandleToggleFullscreenMap Parms{};

	Parms.bFullscreenMapVisible = bFullscreenMapVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.IntentionalDeactivate
// (Final, Native, Protected)

void UPictureInPicturePanelWidget::IntentionalDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "IntentionalDeactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.SetupPIPSoundComponent
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortMediaEventsStreamAssets     InStreamAssets                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPictureInPicturePanelWidget::SetupPIPSoundComponent(const struct FFortMediaEventsStreamAssets& InStreamAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "SetupPIPSoundComponent");

	Params::PictureInPicturePanelWidget_SetupPIPSoundComponent Parms{};

	Parms.InStreamAssets = std::move(InStreamAssets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.ShowDebugInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPicturePanelWidget::ShowDebugInfo(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "ShowDebugInfo");

	Params::PictureInPicturePanelWidget_ShowDebugInfo Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureUI.PictureInPicturePanelWidget.ToggleFullScreenPiP
// (Final, Native, Protected)

void UPictureInPicturePanelWidget::ToggleFullScreenPiP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPicturePanelWidget", "ToggleFullScreenPiP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPictureSourcePicker.HandleOnPartnerChanged
// (Final, Native, Private)
// Parameters:
// class UPictureInPicturePartnerControls* NewPartner                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureSourcePicker::HandleOnPartnerChanged(class UPictureInPicturePartnerControls* NewPartner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPictureSourcePicker", "HandleOnPartnerChanged");

	Params::PictureInPictureSourcePicker_HandleOnPartnerChanged Parms{};

	Parms.NewPartner = NewPartner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PictureInPictureUI.PictureInPictureSourcePicker.HandleOnPartnerSourceChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FPiPPartnerSource>        CurrentSources                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UPictureInPictureSourcePicker::HandleOnPartnerSourceChanged(const TArray<struct FPiPPartnerSource>& CurrentSources)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PictureInPictureSourcePicker", "HandleOnPartnerSourceChanged");

	Params::PictureInPictureSourcePicker_HandleOnPartnerSourceChanged Parms{};

	Parms.CurrentSources = std::move(CurrentSources);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

