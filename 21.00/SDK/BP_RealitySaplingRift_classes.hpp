#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RealitySaplingRift

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "B_HidingProp_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RealitySaplingRift.BP_RealitySaplingRift_C
// 0x00D8 (0x13A8 - 0x12D0)
class ABP_RealitySaplingRift_C final : public AB_HidingProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_RealitySaplingRift_C;            // 0x12D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_RealitySapling_RiftPortal;                      // 0x12D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PortalInner;                                       // 0x12E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PortalOutterRoot;                                  // 0x12E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x12F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PortalOutter;                                      // 0x12F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CollideSphereZP;                                   // 0x1300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HideActor;                                         // 0x1308(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1309[0x7];                                     // 0x1309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              LastHitPawn;                                       // 0x1310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         BallEntered;                                       // 0x1318(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayingEnterFX;                                    // 0x1320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRampingUp;                                       // 0x1321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1322[0x6];                                     // 0x1322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerPawn*>                FortPawnsInBall;                                   // 0x1328(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, RepNotify)
	TArray<class AFortPlayerPawn*>                LocalFortPawnsInBall;                              // 0x1338(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UCameraModifier*                        CameraModifierSpectator;                           // 0x1348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CamModPlayerPawn;                                  // 0x1350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawDebug;                                         // 0x1358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1359[0x7];                                     // 0x1359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         GE_VehicleKnock;                                   // 0x1360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 TargetSapling;                                     // 0x1370(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         LifespanAfterPlayerEnters;                         // 0x1378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldDestroyOnPlayerEnter;                        // 0x137C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_137D[0x3];                                     // 0x137D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GC_RiftSpawn;                                      // 0x1380(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_RiftDestroyed;                                  // 0x1384(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SaplingRiftSpawnLoc;                               // 0x1388(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_RiftPortal_Athena_C*               SaplingRift;                                       // 0x13A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CanPlayerEnter(class AActor* PlayerPawn, bool* CanEnter);
	void DisplayDirectionVFX();
	void EnterZPE(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_BP_RealitySaplingRift(int32 EntryPoint);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnRep_BallEntered();
	void OnRep_BallExited();
	void OnRep_FortPawnsInBall();
	void OnRep_HideActor();
	void ReceiveBeginPlay();
	void ShakeBall(bool IsGoingIn);
	void SpawnSaplingRift();
	void SpawnSkybeam(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RealitySaplingRift_C">();
	}
	static class ABP_RealitySaplingRift_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RealitySaplingRift_C>();
	}
};
static_assert(alignof(ABP_RealitySaplingRift_C) == 0x000008, "Wrong alignment on ABP_RealitySaplingRift_C");
static_assert(sizeof(ABP_RealitySaplingRift_C) == 0x0013A8, "Wrong size on ABP_RealitySaplingRift_C");
static_assert(offsetof(ABP_RealitySaplingRift_C, UberGraphFrame_BP_RealitySaplingRift_C) == 0x0012D0, "Member 'ABP_RealitySaplingRift_C::UberGraphFrame_BP_RealitySaplingRift_C' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, NS_RealitySapling_RiftPortal) == 0x0012D8, "Member 'ABP_RealitySaplingRift_C::NS_RealitySapling_RiftPortal' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, PortalInner) == 0x0012E0, "Member 'ABP_RealitySaplingRift_C::PortalInner' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, PortalOutterRoot) == 0x0012E8, "Member 'ABP_RealitySaplingRift_C::PortalOutterRoot' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, SpotLight) == 0x0012F0, "Member 'ABP_RealitySaplingRift_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, PortalOutter) == 0x0012F8, "Member 'ABP_RealitySaplingRift_C::PortalOutter' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, CollideSphereZP) == 0x001300, "Member 'ABP_RealitySaplingRift_C::CollideSphereZP' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, HideActor) == 0x001308, "Member 'ABP_RealitySaplingRift_C::HideActor' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, LastHitPawn) == 0x001310, "Member 'ABP_RealitySaplingRift_C::LastHitPawn' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, BallEntered) == 0x001318, "Member 'ABP_RealitySaplingRift_C::BallEntered' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, PlayingEnterFX) == 0x001320, "Member 'ABP_RealitySaplingRift_C::PlayingEnterFX' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, IsRampingUp) == 0x001321, "Member 'ABP_RealitySaplingRift_C::IsRampingUp' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, FortPawnsInBall) == 0x001328, "Member 'ABP_RealitySaplingRift_C::FortPawnsInBall' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, LocalFortPawnsInBall) == 0x001338, "Member 'ABP_RealitySaplingRift_C::LocalFortPawnsInBall' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, CameraModifierSpectator) == 0x001348, "Member 'ABP_RealitySaplingRift_C::CameraModifierSpectator' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, CamModPlayerPawn) == 0x001350, "Member 'ABP_RealitySaplingRift_C::CamModPlayerPawn' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, DrawDebug) == 0x001358, "Member 'ABP_RealitySaplingRift_C::DrawDebug' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, GE_VehicleKnock) == 0x001360, "Member 'ABP_RealitySaplingRift_C::GE_VehicleKnock' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, TargetSapling) == 0x001370, "Member 'ABP_RealitySaplingRift_C::TargetSapling' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, LifespanAfterPlayerEnters) == 0x001378, "Member 'ABP_RealitySaplingRift_C::LifespanAfterPlayerEnters' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, ShouldDestroyOnPlayerEnter) == 0x00137C, "Member 'ABP_RealitySaplingRift_C::ShouldDestroyOnPlayerEnter' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, GC_RiftSpawn) == 0x001380, "Member 'ABP_RealitySaplingRift_C::GC_RiftSpawn' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, GC_RiftDestroyed) == 0x001384, "Member 'ABP_RealitySaplingRift_C::GC_RiftDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, SaplingRiftSpawnLoc) == 0x001388, "Member 'ABP_RealitySaplingRift_C::SaplingRiftSpawnLoc' has a wrong offset!");
static_assert(offsetof(ABP_RealitySaplingRift_C, SaplingRift) == 0x0013A0, "Member 'ABP_RealitySaplingRift_C::SaplingRift' has a wrong offset!");

}

