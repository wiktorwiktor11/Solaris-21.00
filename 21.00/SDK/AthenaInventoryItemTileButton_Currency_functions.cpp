#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryItemTileButton_Currency

#include "Basic.hpp"

#include "AthenaInventoryItemTileButton_Currency_classes.hpp"
#include "AthenaInventoryItemTileButton_Currency_parameters.hpp"


namespace SDK
{

// Function AthenaInventoryItemTileButton_Currency.AthenaInventoryItemTileButton_Currency_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UAthenaInventoryItemTileButton_Currency_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryItemTileButton_Currency_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaInventoryItemTileButton_Currency.AthenaInventoryItemTileButton_Currency_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UAthenaInventoryItemTileButton_Currency_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryItemTileButton_Currency_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaInventoryItemTileButton_Currency.AthenaInventoryItemTileButton_Currency_C.ExecuteUbergraph_AthenaInventoryItemTileButton_Currency
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaInventoryItemTileButton_Currency_C::ExecuteUbergraph_AthenaInventoryItemTileButton_Currency(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryItemTileButton_Currency_C", "ExecuteUbergraph_AthenaInventoryItemTileButton_Currency");

	Params::AthenaInventoryItemTileButton_Currency_C_ExecuteUbergraph_AthenaInventoryItemTileButton_Currency Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaInventoryItemTileButton_Currency.AthenaInventoryItemTileButton_Currency_C.HandleIntro
// (Public, BlueprintCallable, BlueprintEvent)

void UAthenaInventoryItemTileButton_Currency_C::HandleIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryItemTileButton_Currency_C", "HandleIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaInventoryItemTileButton_Currency.AthenaInventoryItemTileButton_Currency_C.OnDragDetected
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation*               Operation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaInventoryItemTileButton_Currency_C::OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryItemTileButton_Currency_C", "OnDragDetected");

	Params::AthenaInventoryItemTileButton_Currency_C_OnDragDetected Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);

	UObject::ProcessEvent(Func, &Parms);

	if (Operation != nullptr)
		*Operation = Parms.Operation;
}


// Function AthenaInventoryItemTileButton_Currency.AthenaInventoryItemTileButton_Currency_C.OnDrop
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAthenaInventoryItemTileButton_Currency_C::OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryItemTileButton_Currency_C", "OnDrop");

	Params::AthenaInventoryItemTileButton_Currency_C_OnDrop Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AthenaInventoryItemTileButton_Currency.AthenaInventoryItemTileButton_Currency_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UAthenaInventoryItemTileButton_Currency_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryItemTileButton_Currency_C", "OnFocusReceived");

	Params::AthenaInventoryItemTileButton_Currency_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AthenaInventoryItemTileButton_Currency.AthenaInventoryItemTileButton_Currency_C.OnMouseButtonDown_Border
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UAthenaInventoryItemTileButton_Currency_C::OnMouseButtonDown_Border(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryItemTileButton_Currency_C", "OnMouseButtonDown_Border");

	Params::AthenaInventoryItemTileButton_Currency_C_OnMouseButtonDown_Border Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	MouseEvent = std::move(Parms.MouseEvent);

	return Parms.ReturnValue;
}


// Function AthenaInventoryItemTileButton_Currency.AthenaInventoryItemTileButton_Currency_C.UpdateInteractionWidgetVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UAthenaInventoryItemTileButton_Currency_C::UpdateInteractionWidgetVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryItemTileButton_Currency_C", "UpdateInteractionWidgetVisibility");

	UObject::ProcessEvent(Func, nullptr);
}

}

