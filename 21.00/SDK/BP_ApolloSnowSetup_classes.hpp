#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ApolloSnowSetup

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ApolloSnowSetup.BP_ApolloSnowSetup_C
// 0x00F0 (0x0360 - 0x0270)
class ABP_ApolloSnowSetup_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SnowAltitudeProxy;                                 // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SnowAmount;                                        // 0x0288(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve;                                             // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         SnowFont;                                          // 0x0298(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AFortGameStateAthena*                   BRGameState;                                       // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PendingMinimapRefresh;                             // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DidEverRepNotify;                                  // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x2];                                      // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FallingSnow;                                       // 0x02F4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         LerpB;                                             // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFallingSnow;                                    // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Snow_StartHeight;                                  // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Snow_EndHeight;                                    // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentSnowAltitude;                               // 0x0308(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDebug;                                         // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FallingSnow_Curve;                                 // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  GalileoPlaylist;                                   // 0x0318(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SnowFalling;                                       // 0x0338(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SnowOrigin;                                        // 0x0340(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SnowRadius;                                        // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SnowAltitudeOffset;                                // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ApolloSnowSetup(int32 EntryPoint);
	void MakeLocationVisibleInSnow(const struct FGameplayTag& LocationTag);
	void OnReady_7D09D013416BB73451694F9CEF910985();
	void OnReady_E426AA7F4F2319EA06FBA2B9905F0B24(class AGameStateBase* GameState);
	void OnRep_Snow_Amount();
	void OnRep_SnowFalling();
	void ProxyCalendarEventRatio(const struct FDateTime& Start_Time, const struct FDateTime& End_Time, const struct FDateTime& EventTime, float* Ratio, int32* EventHourLength, class FString* EventInfo, bool* EventActive);
	void ReceiveBeginPlay();
	void RefreshCalender__Authority_Only_();
	void RefreshMapLocations();
	void SetFallingSnow(float Intensity);
	void SetFullSnowEd();
	void SetGroundMPCValue();
	void SetSnow(float Intensity);
	void SetSnowAltitude(float SnowAmount_0);
	void SetSnowFall(float FallingSnow_0);
	void SetSnowFallMPCValue();
	void SetStartSnowEd();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ApolloSnowSetup_C">();
	}
	static class ABP_ApolloSnowSetup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ApolloSnowSetup_C>();
	}
};
static_assert(alignof(ABP_ApolloSnowSetup_C) == 0x000008, "Wrong alignment on ABP_ApolloSnowSetup_C");
static_assert(sizeof(ABP_ApolloSnowSetup_C) == 0x000360, "Wrong size on ABP_ApolloSnowSetup_C");
static_assert(offsetof(ABP_ApolloSnowSetup_C, UberGraphFrame) == 0x000270, "Member 'ABP_ApolloSnowSetup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, SnowAltitudeProxy) == 0x000278, "Member 'ABP_ApolloSnowSetup_C::SnowAltitudeProxy' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, DefaultSceneRoot) == 0x000280, "Member 'ABP_ApolloSnowSetup_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, SnowAmount) == 0x000288, "Member 'ABP_ApolloSnowSetup_C::SnowAmount' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, Curve) == 0x000290, "Member 'ABP_ApolloSnowSetup_C::Curve' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, SnowFont) == 0x000298, "Member 'ABP_ApolloSnowSetup_C::SnowFont' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, BRGameState) == 0x0002E8, "Member 'ABP_ApolloSnowSetup_C::BRGameState' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, PendingMinimapRefresh) == 0x0002F0, "Member 'ABP_ApolloSnowSetup_C::PendingMinimapRefresh' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, DidEverRepNotify) == 0x0002F1, "Member 'ABP_ApolloSnowSetup_C::DidEverRepNotify' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, FallingSnow) == 0x0002F4, "Member 'ABP_ApolloSnowSetup_C::FallingSnow' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, LerpB) == 0x0002F8, "Member 'ABP_ApolloSnowSetup_C::LerpB' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, MaxFallingSnow) == 0x0002FC, "Member 'ABP_ApolloSnowSetup_C::MaxFallingSnow' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, Snow_StartHeight) == 0x000300, "Member 'ABP_ApolloSnowSetup_C::Snow_StartHeight' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, Snow_EndHeight) == 0x000304, "Member 'ABP_ApolloSnowSetup_C::Snow_EndHeight' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, CurrentSnowAltitude) == 0x000308, "Member 'ABP_ApolloSnowSetup_C::CurrentSnowAltitude' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, ShowDebug) == 0x00030C, "Member 'ABP_ApolloSnowSetup_C::ShowDebug' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, FallingSnow_Curve) == 0x000310, "Member 'ABP_ApolloSnowSetup_C::FallingSnow_Curve' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, GalileoPlaylist) == 0x000318, "Member 'ABP_ApolloSnowSetup_C::GalileoPlaylist' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, SnowFalling) == 0x000338, "Member 'ABP_ApolloSnowSetup_C::SnowFalling' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, SnowOrigin) == 0x000340, "Member 'ABP_ApolloSnowSetup_C::SnowOrigin' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, SnowRadius) == 0x000358, "Member 'ABP_ApolloSnowSetup_C::SnowRadius' has a wrong offset!");
static_assert(offsetof(ABP_ApolloSnowSetup_C, SnowAltitudeOffset) == 0x00035C, "Member 'ABP_ApolloSnowSetup_C::SnowAltitudeOffset' has a wrong offset!");

}

