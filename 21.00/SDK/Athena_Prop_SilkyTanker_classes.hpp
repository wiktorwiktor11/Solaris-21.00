#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_Prop_SilkyTanker

#include "Basic.hpp"

#include "Athena_Prop_BurstReaction_Exploding_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Athena_Prop_SilkyTanker.Athena_Prop_SilkyTanker_C
// 0x00B0 (0x10B8 - 0x1008)
class AAthena_Prop_SilkyTanker_C final : public AAthena_Prop_BurstReaction_Exploding_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Athena_Prop_SilkyTanker_C;          // 0x1008(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        AmbientAudio;                                      // 0x1010(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        ExplosionLocation02;                               // 0x1018(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        ExplosionLocation01;                               // 0x1020(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Explosion_Radius;                                  // 0x1028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102C[0x4];                                     // 0x102C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      Overlap_Object_Types;                              // 0x1030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_HealingEffect;                                  // 0x1040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialInstanceOverride;                          // 0x1048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         AllHitActors;                                      // 0x1050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                Death_Decal_Size;                                  // 0x1060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Decal_Spawn_Offset;                                // 0x1078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          Random_Stream;                                     // 0x1090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)
	class AActor*                                 HitActor;                                          // 0x1098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LandscapeExtinguishRadius;                         // 0x10A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x10A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A5[0x3];                                     // 0x10A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            WaterInstigator;                                   // 0x10A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Automatically_Set_Material;                        // 0x10B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyWaterIfCurieEnabled(class AActor* Instigator_0, class AActor* Target);
	void ExecuteUbergraph_Athena_Prop_SilkyTanker(int32 EntryPoint);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveBeginPlay();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);

	class FName GetMarkerDetailsId() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Athena_Prop_SilkyTanker_C">();
	}
	static class AAthena_Prop_SilkyTanker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthena_Prop_SilkyTanker_C>();
	}
};
static_assert(alignof(AAthena_Prop_SilkyTanker_C) == 0x000008, "Wrong alignment on AAthena_Prop_SilkyTanker_C");
static_assert(sizeof(AAthena_Prop_SilkyTanker_C) == 0x0010B8, "Wrong size on AAthena_Prop_SilkyTanker_C");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, UberGraphFrame_Athena_Prop_SilkyTanker_C) == 0x001008, "Member 'AAthena_Prop_SilkyTanker_C::UberGraphFrame_Athena_Prop_SilkyTanker_C' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, AmbientAudio) == 0x001010, "Member 'AAthena_Prop_SilkyTanker_C::AmbientAudio' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, ExplosionLocation02) == 0x001018, "Member 'AAthena_Prop_SilkyTanker_C::ExplosionLocation02' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, ExplosionLocation01) == 0x001020, "Member 'AAthena_Prop_SilkyTanker_C::ExplosionLocation01' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, Explosion_Radius) == 0x001028, "Member 'AAthena_Prop_SilkyTanker_C::Explosion_Radius' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, Overlap_Object_Types) == 0x001030, "Member 'AAthena_Prop_SilkyTanker_C::Overlap_Object_Types' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, GE_HealingEffect) == 0x001040, "Member 'AAthena_Prop_SilkyTanker_C::GE_HealingEffect' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, MaterialInstanceOverride) == 0x001048, "Member 'AAthena_Prop_SilkyTanker_C::MaterialInstanceOverride' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, AllHitActors) == 0x001050, "Member 'AAthena_Prop_SilkyTanker_C::AllHitActors' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, Death_Decal_Size) == 0x001060, "Member 'AAthena_Prop_SilkyTanker_C::Death_Decal_Size' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, Decal_Spawn_Offset) == 0x001078, "Member 'AAthena_Prop_SilkyTanker_C::Decal_Spawn_Offset' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, Random_Stream) == 0x001090, "Member 'AAthena_Prop_SilkyTanker_C::Random_Stream' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, HitActor) == 0x001098, "Member 'AAthena_Prop_SilkyTanker_C::HitActor' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, LandscapeExtinguishRadius) == 0x0010A0, "Member 'AAthena_Prop_SilkyTanker_C::LandscapeExtinguishRadius' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, Debug) == 0x0010A4, "Member 'AAthena_Prop_SilkyTanker_C::Debug' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, WaterInstigator) == 0x0010A8, "Member 'AAthena_Prop_SilkyTanker_C::WaterInstigator' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SilkyTanker_C, Automatically_Set_Material) == 0x0010B0, "Member 'AAthena_Prop_SilkyTanker_C::Automatically_Set_Material' has a wrong offset!");

}

