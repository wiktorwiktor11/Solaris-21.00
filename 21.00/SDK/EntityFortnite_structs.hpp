#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EntityFortnite

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct EntityFortnite.EntityFortniteStormPhase
// 0x0050 (0x0050 - 0x0000)
struct FEntityFortniteStormPhase final
{
public:
	float                                         WaitTime;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShrinkTime;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndRadius;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndRadiusPercentage;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DamageIndex;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoves;                                            // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinMovementDistance;                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxMovementDistance;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinMovementDistancePercentage;                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxMovementDistancePercentage;                     // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               EndLocation;                                       // 0x0030(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEntityFortniteStormPhase) == 0x000010, "Wrong alignment on FEntityFortniteStormPhase");
static_assert(sizeof(FEntityFortniteStormPhase) == 0x000050, "Wrong size on FEntityFortniteStormPhase");
static_assert(offsetof(FEntityFortniteStormPhase, WaitTime) == 0x000000, "Member 'FEntityFortniteStormPhase::WaitTime' has a wrong offset!");
static_assert(offsetof(FEntityFortniteStormPhase, ShrinkTime) == 0x000004, "Member 'FEntityFortniteStormPhase::ShrinkTime' has a wrong offset!");
static_assert(offsetof(FEntityFortniteStormPhase, EndRadius) == 0x000008, "Member 'FEntityFortniteStormPhase::EndRadius' has a wrong offset!");
static_assert(offsetof(FEntityFortniteStormPhase, EndRadiusPercentage) == 0x00000C, "Member 'FEntityFortniteStormPhase::EndRadiusPercentage' has a wrong offset!");
static_assert(offsetof(FEntityFortniteStormPhase, DamageIndex) == 0x000010, "Member 'FEntityFortniteStormPhase::DamageIndex' has a wrong offset!");
static_assert(offsetof(FEntityFortniteStormPhase, bMoves) == 0x000014, "Member 'FEntityFortniteStormPhase::bMoves' has a wrong offset!");
static_assert(offsetof(FEntityFortniteStormPhase, MinMovementDistance) == 0x000018, "Member 'FEntityFortniteStormPhase::MinMovementDistance' has a wrong offset!");
static_assert(offsetof(FEntityFortniteStormPhase, MaxMovementDistance) == 0x00001C, "Member 'FEntityFortniteStormPhase::MaxMovementDistance' has a wrong offset!");
static_assert(offsetof(FEntityFortniteStormPhase, MinMovementDistancePercentage) == 0x000020, "Member 'FEntityFortniteStormPhase::MinMovementDistancePercentage' has a wrong offset!");
static_assert(offsetof(FEntityFortniteStormPhase, MaxMovementDistancePercentage) == 0x000024, "Member 'FEntityFortniteStormPhase::MaxMovementDistancePercentage' has a wrong offset!");
static_assert(offsetof(FEntityFortniteStormPhase, EndLocation) == 0x000030, "Member 'FEntityFortniteStormPhase::EndLocation' has a wrong offset!");

}

