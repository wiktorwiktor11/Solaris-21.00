#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioGameplay

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class AudioGameplay.AudioGameplayVolumeInteraction
// 0x0000 (0x0028 - 0x0028)
class IAudioGameplayVolumeInteraction final : public IInterface
{
public:
	void OnListenerEnter();
	void OnListenerExit();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioGameplayVolumeInteraction">();
	}
	static class IAudioGameplayVolumeInteraction* GetDefaultObj()
	{
		return GetDefaultObjImpl<IAudioGameplayVolumeInteraction>();
	}
};
static_assert(alignof(IAudioGameplayVolumeInteraction) == 0x000008, "Wrong alignment on IAudioGameplayVolumeInteraction");
static_assert(sizeof(IAudioGameplayVolumeInteraction) == 0x000028, "Wrong size on IAudioGameplayVolumeInteraction");

// Class AudioGameplay.AudioGameplayComponent
// 0x0008 (0x00A8 - 0x00A0)
class UAudioGameplayComponent : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioGameplayComponent">();
	}
	static class UAudioGameplayComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioGameplayComponent>();
	}
};
static_assert(alignof(UAudioGameplayComponent) == 0x000008, "Wrong alignment on UAudioGameplayComponent");
static_assert(sizeof(UAudioGameplayComponent) == 0x0000A8, "Wrong size on UAudioGameplayComponent");

// Class AudioGameplay.AudioRequirementPreset
// 0x0048 (0x0078 - 0x0030)
class UAudioRequirementPreset final : public UDataAsset
{
public:
	struct FGameplayTagQuery                      Query;                                             // 0x0030(0x0048)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioRequirementPreset">();
	}
	static class UAudioRequirementPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioRequirementPreset>();
	}
};
static_assert(alignof(UAudioRequirementPreset) == 0x000008, "Wrong alignment on UAudioRequirementPreset");
static_assert(sizeof(UAudioRequirementPreset) == 0x000078, "Wrong size on UAudioRequirementPreset");
static_assert(offsetof(UAudioRequirementPreset, Query) == 0x000030, "Member 'UAudioRequirementPreset::Query' has a wrong offset!");

// Class AudioGameplay.AudioGameplayCondition
// 0x0000 (0x0028 - 0x0028)
class IAudioGameplayCondition final : public IInterface
{
public:
	bool ConditionMet() const;
	bool ConditionMet_Position(const struct FVector& Position) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioGameplayCondition">();
	}
	static class IAudioGameplayCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<IAudioGameplayCondition>();
	}
};
static_assert(alignof(IAudioGameplayCondition) == 0x000008, "Wrong alignment on IAudioGameplayCondition");
static_assert(sizeof(IAudioGameplayCondition) == 0x000028, "Wrong size on IAudioGameplayCondition");

}

