#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuartzMusic_IOandSeven

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "QuartzMusicTrackComponent_DataTracker_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass QuartzMusic_IOandSeven.QuartzMusic_IOandSeven_C
// 0x0018 (0x01E8 - 0x01D0)
class UQuartzMusic_IOandSeven_C final : public UQuartzMusicTrackComponent_DataTracker_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_QuartzMusic_IOandSeven_C;           // 0x01D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         UnawareValue;                                      // 0x01D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BossLayer;                                         // 0x01DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BaseValue;                                         // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnDataTrackerUpdate();
	void MIx_State();
	float GetUnawareValue();
	float GetSevenValue();
	float GetIOValue();
	void GetDataTrackerParameter(int32 DataTrackerIndex, float* ReleaseSpeed);
	float GetBaseValue();
	float Get_Boss_Value();
	void ExecuteUbergraph_QuartzMusic_IOandSeven(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuartzMusic_IOandSeven_C">();
	}
	static class UQuartzMusic_IOandSeven_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuartzMusic_IOandSeven_C>();
	}
};
static_assert(alignof(UQuartzMusic_IOandSeven_C) == 0x000008, "Wrong alignment on UQuartzMusic_IOandSeven_C");
static_assert(sizeof(UQuartzMusic_IOandSeven_C) == 0x0001E8, "Wrong size on UQuartzMusic_IOandSeven_C");
static_assert(offsetof(UQuartzMusic_IOandSeven_C, UberGraphFrame_QuartzMusic_IOandSeven_C) == 0x0001D0, "Member 'UQuartzMusic_IOandSeven_C::UberGraphFrame_QuartzMusic_IOandSeven_C' has a wrong offset!");
static_assert(offsetof(UQuartzMusic_IOandSeven_C, UnawareValue) == 0x0001D8, "Member 'UQuartzMusic_IOandSeven_C::UnawareValue' has a wrong offset!");
static_assert(offsetof(UQuartzMusic_IOandSeven_C, BossLayer) == 0x0001DC, "Member 'UQuartzMusic_IOandSeven_C::BossLayer' has a wrong offset!");
static_assert(offsetof(UQuartzMusic_IOandSeven_C, BaseValue) == 0x0001E0, "Member 'UQuartzMusic_IOandSeven_C::BaseValue' has a wrong offset!");

}

