#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_ButterCakeFruitPlant

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.BlueprintOnInteract
// 0x0010 (0x0010 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_BlueprintOnInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_BlueprintOnInteract) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_BlueprintOnInteract");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_BlueprintOnInteract) == 0x000010, "Wrong size on BGA_ButterCakeFruitPlant_C_BlueprintOnInteract");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_BlueprintOnInteract, InteractingPawn) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_BlueprintOnInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_BlueprintOnInteract, InteractionBeingAttempted) == 0x000008, "Member 'BGA_ButterCakeFruitPlant_C_BlueprintOnInteract::InteractionBeingAttempted' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.ExecuteUbergraph_BGA_ButterCakeFruitPlant
// 0x03E8 (0x03E8 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   K2Node_CustomEvent_GameState;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    K2Node_CustomEvent_Playlist;                       // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_PlaylistContextTags;            // 0x0018(0x0020)(ConstParm)
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0038(0x0020)()
	class UFortPlaylist*                          Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGameStateAthena*                   Temp_object_Variable_1;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_CurrentPlaylistReady*  CallFunc_PlaylistDataReadyAsync_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWeaponItemDefinition*              K2Node_DynamicCast_AsFort_Weapon_Item_Definition;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_2;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPickup*>                    CallFunc_SpawnLootFromTable_ItemPickupsSpawned;    // 0x00E0(0x0010)(ReferenceParm)
	class UFortItemDefinition*                    CallFunc_GetItemToGrant_Item_Definition;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemToGrant_Count;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItemDefinition*               K2Node_DynamicCast_AsFort_World_Item_Definition;   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage_1;                             // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags_1;                         // 0x0120(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum_1;                           // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x0158(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy_1;                       // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext_1;                      // 0x0248(0x0018)()
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_GiveItemToInventoryOwner_InventoryOwner_CastInput; // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	const class UFortWorldItem*                   CallFunc_GiveItemToInventoryOwner_ReturnValue;     // 0x0280(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0290(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x02C8(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x03B8(0x0018)()
	const class AFortPawn*                        K2Node_Event_InteractingPawn;                      // 0x03D0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    K2Node_Event_InteractionBeingAttempted;            // 0x03D8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasOpenInventorySlot_ReturnValue;         // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RowToBool_ReturnValue;                    // 0x03DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x03DC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant) == 0x0003E8, "Wrong size on BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, EntryPoint) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::EntryPoint' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_IsLocallyViewed_ReturnValue) == 0x000004, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_CustomEvent_GameState) == 0x000008, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_CustomEvent_GameState' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_CustomEvent_Playlist) == 0x000010, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_CustomEvent_Playlist' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_CustomEvent_PlaylistContextTags) == 0x000018, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_CustomEvent_PlaylistContextTags' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, Temp_struct_Variable) == 0x000038, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, Temp_object_Variable) == 0x000058, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, Temp_object_Variable_1) == 0x000060, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_PlaylistDataReadyAsync_ReturnValue) == 0x000068, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_PlaylistDataReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_DynamicCast_AsFort_Weapon_Item_Definition) == 0x000078, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_DynamicCast_AsFort_Weapon_Item_Definition' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_CustomEvent_Loaded) == 0x000088, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000090, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000098, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_DynamicCast_AsSound_Base) == 0x0000A0, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, Temp_object_Variable_2) == 0x0000B0, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C8, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_SpawnLootFromTable_ItemPickupsSpawned) == 0x0000E0, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_SpawnLootFromTable_ItemPickupsSpawned' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_GetItemToGrant_Item_Definition) == 0x0000F0, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_GetItemToGrant_Item_Definition' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_GetItemToGrant_Count) == 0x0000F8, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_GetItemToGrant_Count' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_DynamicCast_AsFort_World_Item_Definition) == 0x000100, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_DynamicCast_AsFort_World_Item_Definition' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_GetController_ReturnValue) == 0x000110, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_Damage_1) == 0x000118, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_Damage_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_DamageTags_1) == 0x000120, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_DamageTags_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_Momentum_1) == 0x000140, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_Momentum_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_HitInfo_1) == 0x000158, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_InstigatedBy_1) == 0x000238, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_DamageCauser_1) == 0x000240, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_EffectContext_1) == 0x000248, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_EffectContext_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000260, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_DynamicCast_bSuccess_3) == 0x000268, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_GiveItemToInventoryOwner_InventoryOwner_CastInput) == 0x000270, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_GiveItemToInventoryOwner_InventoryOwner_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_GiveItemToInventoryOwner_ReturnValue) == 0x000280, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_GiveItemToInventoryOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_Damage) == 0x000288, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_DamageTags) == 0x000290, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_Momentum) == 0x0002B0, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_HitInfo) == 0x0002C8, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_InstigatedBy) == 0x0003A8, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_DamageCauser) == 0x0003B0, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_EffectContext) == 0x0003B8, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_InteractingPawn) == 0x0003D0, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_Event_InteractionBeingAttempted) == 0x0003D8, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_Event_InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_HasOpenInventorySlot_ReturnValue) == 0x0003D9, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_HasOpenInventorySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_IsServer_ReturnValue) == 0x0003DA, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, CallFunc_RowToBool_ReturnValue) == 0x0003DB, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::CallFunc_RowToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant, K2Node_CreateDelegate_OutputDelegate_1) == 0x0003DC, "Member 'BGA_ButterCakeFruitPlant_C_ExecuteUbergraph_BGA_ButterCakeFruitPlant::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.ForceSetMeshCollision
// 0x0058 (0x0058 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<ECollisionChannel>                     K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	ECollisionChannel                             CallFunc_Array_Get_Item;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECollisionChannel>                     K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm)
	ECollisionChannel                             CallFunc_Array_Get_Item_1;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision) == 0x000058, "Wrong size on BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, K2Node_MakeArray_Array) == 0x000010, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, CallFunc_Array_Get_Item) == 0x000020, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, K2Node_MakeArray_Array_1) == 0x000038, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'BGA_ButterCakeFruitPlant_C_ForceSetMeshCollision::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.GetItemToGrant
// 0x0028 (0x0028 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_GetItemToGrant final
{
public:
	class UFortItemDefinition*                    Item_Definition;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemEntry>                 CallFunc_PickLootDrops_OutLootToDrop;              // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_PickLootDrops_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_GetItemToGrant) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_GetItemToGrant");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_GetItemToGrant) == 0x000028, "Wrong size on BGA_ButterCakeFruitPlant_C_GetItemToGrant");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_GetItemToGrant, Item_Definition) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_GetItemToGrant::Item_Definition' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_GetItemToGrant, Count) == 0x000008, "Member 'BGA_ButterCakeFruitPlant_C_GetItemToGrant::Count' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_GetItemToGrant, CallFunc_PickLootDrops_OutLootToDrop) == 0x000010, "Member 'BGA_ButterCakeFruitPlant_C_GetItemToGrant::CallFunc_PickLootDrops_OutLootToDrop' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_GetItemToGrant, CallFunc_PickLootDrops_ReturnValue) == 0x000020, "Member 'BGA_ButterCakeFruitPlant_C_GetItemToGrant::CallFunc_PickLootDrops_ReturnValue' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.HasOpenInventorySlot
// 0x0040 (0x0040 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot final
{
public:
	class APawn*                                  Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISingleIndexSelectionModel> K2Node_DynamicCast_AsSingle_Index_Selection_Model; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot) == 0x000040, "Wrong size on BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot, Target) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot::Target' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot, ReturnValue) == 0x000008, "Member 'BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot, Temp_int_Variable) == 0x00000C, "Member 'BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000018, "Member 'BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot, K2Node_DynamicCast_AsSingle_Index_Selection_Model) == 0x000028, "Member 'BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot::K2Node_DynamicCast_AsSingle_Index_Selection_Model' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot, CallFunc_GetNumItems_ReturnValue) == 0x00003C, "Member 'BGA_ButterCakeFruitPlant_C_HasOpenInventorySlot::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.OnDeathPlayEffects
// 0x0148 (0x0148 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects) == 0x000148, "Wrong size on BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects, HitInfo) == 0x000040, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects, InstigatedBy) == 0x000120, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects, DamageCauser) == 0x000128, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects, EffectContext) == 0x000130, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.OnDeathServer
// 0x0148 (0x0148 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_OnDeathServer) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_OnDeathServer");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_OnDeathServer) == 0x000148, "Wrong size on BGA_ButterCakeFruitPlant_C_OnDeathServer");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathServer, Damage) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathServer, DamageTags) == 0x000008, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathServer, Momentum) == 0x000028, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathServer, HitInfo) == 0x000040, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathServer, InstigatedBy) == 0x000120, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathServer, DamageCauser) == 0x000128, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnDeathServer, EffectContext) == 0x000130, "Member 'BGA_ButterCakeFruitPlant_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.OnLoaded_2E92DEBB4C2CCF5CC25CF3946AD4E585
// 0x0008 (0x0008 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_OnLoaded_2E92DEBB4C2CCF5CC25CF3946AD4E585 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_OnLoaded_2E92DEBB4C2CCF5CC25CF3946AD4E585) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_OnLoaded_2E92DEBB4C2CCF5CC25CF3946AD4E585");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_OnLoaded_2E92DEBB4C2CCF5CC25CF3946AD4E585) == 0x000008, "Wrong size on BGA_ButterCakeFruitPlant_C_OnLoaded_2E92DEBB4C2CCF5CC25CF3946AD4E585");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnLoaded_2E92DEBB4C2CCF5CC25CF3946AD4E585, Loaded) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_OnLoaded_2E92DEBB4C2CCF5CC25CF3946AD4E585::Loaded' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.OnReady_7ED1D9354E813FE320993C990A7CA6FD
// 0x0030 (0x0030 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD) == 0x000030, "Wrong size on BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD, GameState) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD::GameState' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD, Playlist) == 0x000008, "Member 'BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD::Playlist' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD, PlaylistContextTags) == 0x000010, "Member 'BGA_ButterCakeFruitPlant_C_OnReady_7ED1D9354E813FE320993C990A7CA6FD::PlaylistContextTags' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.OnRep_hasLoot
// 0x00A0 (0x00A0 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_OnRep_hasLoot final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_OnRep_hasLoot");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot) == 0x0000A0, "Wrong size on BGA_ButterCakeFruitPlant_C_OnRep_hasLoot");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_OnRep_hasLoot::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot, CallFunc_GetTimeSeconds_ReturnValue) == 0x000018, "Member 'BGA_ButterCakeFruitPlant_C_OnRep_hasLoot::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BGA_ButterCakeFruitPlant_C_OnRep_hasLoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000020, "Member 'BGA_ButterCakeFruitPlant_C_OnRep_hasLoot::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot, CallFunc_IsServer_ReturnValue) == 0x000024, "Member 'BGA_ButterCakeFruitPlant_C_OnRep_hasLoot::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BGA_ButterCakeFruitPlant_C_OnRep_hasLoot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'BGA_ButterCakeFruitPlant_C_OnRep_hasLoot::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'BGA_ButterCakeFruitPlant_C_OnRep_hasLoot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot, CallFunc_Add_VectorVector_ReturnValue) == 0x000070, "Member 'BGA_ButterCakeFruitPlant_C_OnRep_hasLoot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_OnRep_hasLoot, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'BGA_ButterCakeFruitPlant_C_OnRep_hasLoot::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.BlueprintCanInteract
// 0x0010 (0x0010 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             InteractionType;                                   // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_BlueprintCanInteract) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_BlueprintCanInteract");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_BlueprintCanInteract) == 0x000010, "Wrong size on BGA_ButterCakeFruitPlant_C_BlueprintCanInteract");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_BlueprintCanInteract, InteractionBeingAttempted) == 0x000008, "Member 'BGA_ButterCakeFruitPlant_C_BlueprintCanInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_BlueprintCanInteract, InteractionType) == 0x000009, "Member 'BGA_ButterCakeFruitPlant_C_BlueprintCanInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_BlueprintCanInteract, ReturnValue) == 0x00000A, "Member 'BGA_ButterCakeFruitPlant_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");

// Function BGA_ButterCakeFruitPlant.BGA_ButterCakeFruitPlant_C.BlueprintGetInteractionString
// 0x0028 (0x0028 - 0x0000)
struct BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString) == 0x000008, "Wrong alignment on BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString");
static_assert(sizeof(BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString) == 0x000028, "Wrong size on BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString, InteractionBeingAttempted) == 0x000008, "Member 'BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString, ReturnValue) == 0x000010, "Member 'BGA_ButterCakeFruitPlant_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");

}

