#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RidingPlayerLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RidingPlayerLayerAnimBP.RidingPlayerLayerAnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct RidingPlayerLayerAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(RidingPlayerLayerAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on RidingPlayerLayerAnimBP_C_AnimGraph");
static_assert(sizeof(RidingPlayerLayerAnimBP_C_AnimGraph) == 0x000010, "Wrong size on RidingPlayerLayerAnimBP_C_AnimGraph");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'RidingPlayerLayerAnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function RidingPlayerLayerAnimBP.RidingPlayerLayerAnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct RidingPlayerLayerAnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RidingPlayerLayerAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on RidingPlayerLayerAnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(RidingPlayerLayerAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on RidingPlayerLayerAnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'RidingPlayerLayerAnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function RidingPlayerLayerAnimBP.RidingPlayerLayerAnimBP_C.ExecuteUbergraph_RidingPlayerLayerAnimBP
// 0x01B0 (0x01B0 - 0x0000)
struct RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URiderComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreatureBaseRidableComponent_C*        K2Node_DynamicCast_AsCreature_Base_Ridable_Component; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANPC_Pawn_Wildlife_Parent_C*            K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue_1;         // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCurrentMontage_ReturnValue;            // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00E0(0x0060)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue;            // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPC_Pawn_Irwin_Simple_Smackie_C*       K2Node_DynamicCast_AsNPC_Pawn_Irwin_Simple_Smackie; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPC_Pawn_Irwin_Prey_Nug_C*             K2Node_DynamicCast_AsNPC_Pawn_Irwin_Prey_Nug;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP) == 0x000010, "Wrong alignment on RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP");
static_assert(sizeof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP) == 0x0001B0, "Wrong size on RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, EntryPoint) == 0x000000, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_GetVelocity_ReturnValue) == 0x000010, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_DynamicCast_AsCreature_Base_Ridable_Component) == 0x000028, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_DynamicCast_AsCreature_Base_Ridable_Component' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_VSize_ReturnValue) == 0x000034, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent) == 0x000040, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_Event_DeltaTimeX) == 0x00004C, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_GetOwningActor_ReturnValue) == 0x000050, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000060, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00006C, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000070, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000075, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_GetBaseAimRotation_ReturnValue) == 0x000078, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BreakRotator_Roll) == 0x000094, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BreakRotator_Pitch) == 0x000098, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BreakRotator_Yaw) == 0x00009C, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_SelectFloat_ReturnValue) == 0x0000A0, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_GetBaseAimRotation_ReturnValue_1) == 0x0000A8, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_GetBaseAimRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BreakRotator_Roll_1) == 0x0000C0, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BreakRotator_Pitch_1) == 0x0000C4, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BreakRotator_Yaw_1) == 0x0000C8, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000CC, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_NormalizeAxis_ReturnValue) == 0x0000D0, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_HasCurrentMontage_ReturnValue) == 0x0000D4, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_HasCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BooleanOR_ReturnValue) == 0x0000D5, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x0000D6, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D7, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BooleanOR_ReturnValue_2) == 0x0000D9, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_GetSocketTransform_ReturnValue) == 0x0000E0, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_TransformRotation_ReturnValue) == 0x000140, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BreakRotator_Roll_2) == 0x000158, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BreakRotator_Pitch_2) == 0x00015C, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BreakRotator_Yaw_2) == 0x000160, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000164, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000168, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_MakeRotator_ReturnValue) == 0x000170, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000188, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000189, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00018A, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BooleanOR_ReturnValue_3) == 0x00018B, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_DynamicCast_AsNPC_Pawn_Irwin_Simple_Smackie) == 0x000190, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_DynamicCast_AsNPC_Pawn_Irwin_Simple_Smackie' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_DynamicCast_bSuccess_3) == 0x000198, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_DynamicCast_AsNPC_Pawn_Irwin_Prey_Nug) == 0x0001A0, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_DynamicCast_AsNPC_Pawn_Irwin_Prey_Nug' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, K2Node_DynamicCast_bSuccess_4) == 0x0001A8, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_IsValid_ReturnValue_2) == 0x0001A9, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_IsValid_ReturnValue_3) == 0x0001AA, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_IsValid_ReturnValue_4) == 0x0001AB, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_IsValid_ReturnValue_5) == 0x0001AC, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP, CallFunc_BooleanAND_ReturnValue_1) == 0x0001AD, "Member 'RidingPlayerLayerAnimBP_C_ExecuteUbergraph_RidingPlayerLayerAnimBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function RidingPlayerLayerAnimBP.RidingPlayerLayerAnimBP_C.VehicleFullBodyOverride
// 0x0030 (0x0030 - 0x0000)
struct RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride final
{
public:
	struct FPoseLink                              InPoseFullBody;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              InPoseUpperAndLowerCachePose;                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              VehicleFullBodyOverride_0;                         // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride) == 0x000008, "Wrong alignment on RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride");
static_assert(sizeof(RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride) == 0x000030, "Wrong size on RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride, InPoseFullBody) == 0x000000, "Member 'RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride::InPoseFullBody' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride, InPoseUpperAndLowerCachePose) == 0x000010, "Member 'RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride::InPoseUpperAndLowerCachePose' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride, VehicleFullBodyOverride_0) == 0x000020, "Member 'RidingPlayerLayerAnimBP_C_VehicleFullBodyOverride::VehicleFullBodyOverride_0' has a wrong offset!");

// Function RidingPlayerLayerAnimBP.RidingPlayerLayerAnimBP_C.VehicleLowerBodyOverride
// 0x0030 (0x0030 - 0x0000)
struct RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride final
{
public:
	struct FPoseLink                              InPoseLowerBodyDefault;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              InPoseUpperBody;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              VehicleLowerBodyOverride_0;                        // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride) == 0x000008, "Wrong alignment on RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride");
static_assert(sizeof(RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride) == 0x000030, "Wrong size on RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride, InPoseLowerBodyDefault) == 0x000000, "Member 'RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride::InPoseLowerBodyDefault' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride, InPoseUpperBody) == 0x000010, "Member 'RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride::InPoseUpperBody' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride, VehicleLowerBodyOverride_0) == 0x000020, "Member 'RidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride::VehicleLowerBodyOverride_0' has a wrong offset!");

// Function RidingPlayerLayerAnimBP.RidingPlayerLayerAnimBP_C.VehicleSplitBodyOverride
// 0x00B8 (0x00B8 - 0x0000)
struct RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride final
{
public:
	struct FPoseLink                              InPoseSplitBody;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              InPoseUpperAndLowerBody;                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FFortAnimInput_TurnInPlace             TurnInPlace;                                       // 0x0020(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FPoseLink                              InPoseUpperAndLowerBodyRemoveRoot;                 // 0x0098(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              VehicleSplitBodyOverride_0;                        // 0x00A8(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride) == 0x000008, "Wrong alignment on RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride");
static_assert(sizeof(RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride) == 0x0000B8, "Wrong size on RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride, InPoseSplitBody) == 0x000000, "Member 'RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride::InPoseSplitBody' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride, InPoseUpperAndLowerBody) == 0x000010, "Member 'RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride::InPoseUpperAndLowerBody' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride, TurnInPlace) == 0x000020, "Member 'RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride::TurnInPlace' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride, InPoseUpperAndLowerBodyRemoveRoot) == 0x000098, "Member 'RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride::InPoseUpperAndLowerBodyRemoveRoot' has a wrong offset!");
static_assert(offsetof(RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride, VehicleSplitBodyOverride_0) == 0x0000A8, "Member 'RidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride::VehicleSplitBodyOverride_0' has a wrong offset!");

}

