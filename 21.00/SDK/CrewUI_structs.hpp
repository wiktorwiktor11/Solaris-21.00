#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrewUI

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// Enum CrewUI.EBattlePassCrewContentState
// NumValues: 0x0004
enum class EBattlePassCrewContentState : uint8
{
	BattlePass                               = 0,
	Crew                                     = 1,
	CrewSubscribed                           = 2,
	EBattlePassCrewContentState_MAX          = 3,
};

// Enum CrewUI.EBattlePassPurchaseButtonCurrencyType
// NumValues: 0x0004
enum class EBattlePassPurchaseButtonCurrencyType : uint8
{
	None                                     = 0,
	Mtx                                      = 1,
	RealMoney                                = 2,
	EBattlePassPurchaseButtonCurrencyType_MAX = 3,
};

// Enum CrewUI.EBattlePassPurchaseState
// NumValues: 0x0003
enum class EBattlePassPurchaseState : uint8
{
	Purchase                                 = 0,
	Confirm                                  = 1,
	EBattlePassPurchaseState_MAX             = 2,
};

// Enum CrewUI.ECrewPurchaseButtonState
// NumValues: 0x0004
enum class ECrewPurchaseButtonState : uint8
{
	None                                     = 0,
	Purchase                                 = 1,
	Rejoin                                   = 2,
	ECrewPurchaseButtonState_MAX             = 3,
};

// Enum CrewUI.EFortProgressiveContentInterfaceCloseReason
// NumValues: 0x0003
enum class EFortProgressiveContentInterfaceCloseReason : uint8
{
	Normal                                   = 0,
	SubscriptionPurchased                    = 1,
	EFortProgressiveContentInterfaceCloseReason_MAX = 2,
};

// Enum CrewUI.EFortProgressiveContentType
// NumValues: 0x0003
enum class EFortProgressiveContentType : uint8
{
	ProgressiveTableOfContentsScreen         = 0,
	ProgressiveItemScreen                    = 1,
	EFortProgressiveContentType_MAX          = 2,
};

// ScriptStruct CrewUI.CrewSubscriptionContentTabData
// 0x0020 (0x0020 - 0x0000)
struct FCrewSubscriptionContentTabData final
{
public:
	class FText                                   TabName;                                           // 0x0000(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	ESubscriptionContentTab                       TabType;                                           // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCrewSubscriptionContentTabData) == 0x000008, "Wrong alignment on FCrewSubscriptionContentTabData");
static_assert(sizeof(FCrewSubscriptionContentTabData) == 0x000020, "Wrong size on FCrewSubscriptionContentTabData");
static_assert(offsetof(FCrewSubscriptionContentTabData, TabName) == 0x000000, "Member 'FCrewSubscriptionContentTabData::TabName' has a wrong offset!");
static_assert(offsetof(FCrewSubscriptionContentTabData, TabType) == 0x000018, "Member 'FCrewSubscriptionContentTabData::TabType' has a wrong offset!");

// ScriptStruct CrewUI.FortProgressiveVariant
// 0x0068 (0x0068 - 0x0000)
struct FFortProgressiveVariant final
{
public:
	TArray<struct FCosmeticVariantInfo>           DefaultVariantPreviewOverrides;                    // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                 TileMaterial;                                      // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHidden;                                           // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowPreviewStyles;                               // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFortVariantTokenType>   VariantToken;                                      // 0x0040(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FFortProgressiveVariant) == 0x000008, "Wrong alignment on FFortProgressiveVariant");
static_assert(sizeof(FFortProgressiveVariant) == 0x000068, "Wrong size on FFortProgressiveVariant");
static_assert(offsetof(FFortProgressiveVariant, DefaultVariantPreviewOverrides) == 0x000000, "Member 'FFortProgressiveVariant::DefaultVariantPreviewOverrides' has a wrong offset!");
static_assert(offsetof(FFortProgressiveVariant, TileMaterial) == 0x000010, "Member 'FFortProgressiveVariant::TileMaterial' has a wrong offset!");
static_assert(offsetof(FFortProgressiveVariant, bHidden) == 0x000038, "Member 'FFortProgressiveVariant::bHidden' has a wrong offset!");
static_assert(offsetof(FFortProgressiveVariant, bAllowPreviewStyles) == 0x000039, "Member 'FFortProgressiveVariant::bAllowPreviewStyles' has a wrong offset!");
static_assert(offsetof(FFortProgressiveVariant, VariantToken) == 0x000040, "Member 'FFortProgressiveVariant::VariantToken' has a wrong offset!");

// ScriptStruct CrewUI.FortProgressiveStageOverrideDisplayData
// 0x0058 (0x0058 - 0x0000)
struct FFortProgressiveStageOverrideDisplayData final
{
public:
	TArray<struct FCosmeticVariantInfo>           DefaultVariantPreviewOverrides;                    // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0010(0x0018)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                 TileMaterial;                                      // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowPreviewStyles;                               // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FFortProgressiveStageOverrideDisplayData) == 0x000008, "Wrong alignment on FFortProgressiveStageOverrideDisplayData");
static_assert(sizeof(FFortProgressiveStageOverrideDisplayData) == 0x000058, "Wrong size on FFortProgressiveStageOverrideDisplayData");
static_assert(offsetof(FFortProgressiveStageOverrideDisplayData, DefaultVariantPreviewOverrides) == 0x000000, "Member 'FFortProgressiveStageOverrideDisplayData::DefaultVariantPreviewOverrides' has a wrong offset!");
static_assert(offsetof(FFortProgressiveStageOverrideDisplayData, DisplayName) == 0x000010, "Member 'FFortProgressiveStageOverrideDisplayData::DisplayName' has a wrong offset!");
static_assert(offsetof(FFortProgressiveStageOverrideDisplayData, TileMaterial) == 0x000028, "Member 'FFortProgressiveStageOverrideDisplayData::TileMaterial' has a wrong offset!");
static_assert(offsetof(FFortProgressiveStageOverrideDisplayData, bAllowPreviewStyles) == 0x000050, "Member 'FFortProgressiveStageOverrideDisplayData::bAllowPreviewStyles' has a wrong offset!");

// ScriptStruct CrewUI.FortProgressiveUIStage
// 0x0070 (0x0070 - 0x0000)
struct FFortProgressiveUIStage final
{
public:
	TArray<struct FFortProgressiveVariant>        Variants;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseOverrideDisplayData;                           // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortProgressiveStageOverrideDisplayData OverrideDisplayData;                               // 0x0018(0x0058)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortProgressiveUIStage) == 0x000008, "Wrong alignment on FFortProgressiveUIStage");
static_assert(sizeof(FFortProgressiveUIStage) == 0x000070, "Wrong size on FFortProgressiveUIStage");
static_assert(offsetof(FFortProgressiveUIStage, Variants) == 0x000000, "Member 'FFortProgressiveUIStage::Variants' has a wrong offset!");
static_assert(offsetof(FFortProgressiveUIStage, bUseOverrideDisplayData) == 0x000010, "Member 'FFortProgressiveUIStage::bUseOverrideDisplayData' has a wrong offset!");
static_assert(offsetof(FFortProgressiveUIStage, OverrideDisplayData) == 0x000018, "Member 'FFortProgressiveUIStage::OverrideDisplayData' has a wrong offset!");

// ScriptStruct CrewUI.FortProgressiveSet
// 0x0060 (0x0060 - 0x0000)
struct FFortProgressiveSet final
{
public:
	class FString                                 FulfillmentId;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   SetName;                                           // 0x0010(0x0018)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                 TileMaterial;                                      // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortProgressiveUIStage>        Stages;                                            // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortProgressiveSet) == 0x000008, "Wrong alignment on FFortProgressiveSet");
static_assert(sizeof(FFortProgressiveSet) == 0x000060, "Wrong size on FFortProgressiveSet");
static_assert(offsetof(FFortProgressiveSet, FulfillmentId) == 0x000000, "Member 'FFortProgressiveSet::FulfillmentId' has a wrong offset!");
static_assert(offsetof(FFortProgressiveSet, SetName) == 0x000010, "Member 'FFortProgressiveSet::SetName' has a wrong offset!");
static_assert(offsetof(FFortProgressiveSet, TileMaterial) == 0x000028, "Member 'FFortProgressiveSet::TileMaterial' has a wrong offset!");
static_assert(offsetof(FFortProgressiveSet, Stages) == 0x000050, "Member 'FFortProgressiveSet::Stages' has a wrong offset!");

// ScriptStruct CrewUI.FortProgressiveSetVariantData
// 0x0018 (0x0018 - 0x0000)
struct FFortProgressiveSetVariantData final
{
public:
	class UFortVariantTokenType*                  VariantToken;                                      // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FFortProgressiveSetVariantData) == 0x000008, "Wrong alignment on FFortProgressiveSetVariantData");
static_assert(sizeof(FFortProgressiveSetVariantData) == 0x000018, "Wrong size on FFortProgressiveSetVariantData");
static_assert(offsetof(FFortProgressiveSetVariantData, VariantToken) == 0x000000, "Member 'FFortProgressiveSetVariantData::VariantToken' has a wrong offset!");

}

