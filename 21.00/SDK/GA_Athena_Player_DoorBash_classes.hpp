#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Player_DoorBash

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Player_DoorBash.GA_Athena_Player_DoorBash_C
// 0x0138 (0x0C48 - 0x0B10)
class UGA_Athena_Player_DoorBash_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      PawnObjectTypes;                                   // 0x0B20(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      DoorTypes;                                         // 0x0B30(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           TCheckDoor;                                        // 0x0B40(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Door_Location;                                     // 0x0B48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingWall*                          HitWall;                                           // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_;                                            // 0x0B68(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B69[0x3];                                      // 0x0B69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GC_DoorImpact;                                     // 0x0B6C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Wall_Location;                                     // 0x0B70(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitDoor_;                                          // 0x0B88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B89[0x3];                                      // 0x0B89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GC_LaunchPlayer;                                   // 0x0B8C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         HF_DoorBashEnabled;                                // 0x0B90(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         HF_ForwardDoorCheckMult;                           // 0x0BB8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         HF_LaunchPawnImpulseMult;                          // 0x0BE0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         HF_PawnVelocityMinThreshold;                       // 0x0C08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           DoorBashMale;                                      // 0x0C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           DoorBashFemale;                                    // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         End_Ability_Grace_Period_Const;                    // 0x0C40(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoorBashingWhileSprinting;                        // 0x0C44(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasDisabledAutoOpenSwingingDoors;                 // 0x0C45(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void StartEndTrace(struct FVector* Start, struct FVector* End);
	void SetAutoOpenSwingingDoors(bool Open_Swinging_Doors_Automatically);
	void RestartTimer(const struct FHitResult& Hit);
	void ResetDoorBash();
	void Removed_B31495304CF5C421D4474FBD1185D542();
	void Removed_5D7272044815CA361E3AE8A278EEAA82();
	void PauseDoorBashChecks();
	void OnNotifyEnd_155AF8ED474BC0B05C504AA683044E19(const struct FGameplayTag& NotifyTag);
	void OnNotifyBegin_155AF8ED474BC0B05C504AA683044E19(const struct FGameplayTag& NotifyTag);
	void OnInterrupted_155AF8ED474BC0B05C504AA683044E19(const struct FGameplayTag& NotifyTag);
	void OnCompleted_155AF8ED474BC0B05C504AA683044E19(const struct FGameplayTag& NotifyTag);
	void OnCancelled_155AF8ED474BC0B05C504AA683044E19(const struct FGameplayTag& NotifyTag);
	void OnBlendOut_155AF8ED474BC0B05C504AA683044E19(const struct FGameplayTag& NotifyTag);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	bool IsStillSprintingOrSlidingAsAbilityBegan();
	bool IsSprintingOrSliding();
	bool HasSwitchedToDifferentDoorBashingState();
	bool HasActiveDoorBashAbility();
	void ExecuteUbergraph_GA_Athena_Player_DoorBash(int32 EntryPoint);
	bool CheckVelocityThreshold();
	void CheckForPawnsAndLaunchThem();
	void CheckForDoor(const struct FVector& Start, const struct FVector& End, bool* HitDoor, struct FVector* HitLocation);
	void CheckDoorTimer();

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Player_DoorBash_C">();
	}
	static class UGA_Athena_Player_DoorBash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Player_DoorBash_C>();
	}
};
static_assert(alignof(UGA_Athena_Player_DoorBash_C) == 0x000008, "Wrong alignment on UGA_Athena_Player_DoorBash_C");
static_assert(sizeof(UGA_Athena_Player_DoorBash_C) == 0x000C48, "Wrong size on UGA_Athena_Player_DoorBash_C");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, UberGraphFrame) == 0x000B10, "Member 'UGA_Athena_Player_DoorBash_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, FortPlayerPawn) == 0x000B18, "Member 'UGA_Athena_Player_DoorBash_C::FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, PawnObjectTypes) == 0x000B20, "Member 'UGA_Athena_Player_DoorBash_C::PawnObjectTypes' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, DoorTypes) == 0x000B30, "Member 'UGA_Athena_Player_DoorBash_C::DoorTypes' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, TCheckDoor) == 0x000B40, "Member 'UGA_Athena_Player_DoorBash_C::TCheckDoor' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, Door_Location) == 0x000B48, "Member 'UGA_Athena_Player_DoorBash_C::Door_Location' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, HitWall) == 0x000B60, "Member 'UGA_Athena_Player_DoorBash_C::HitWall' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, Debug_) == 0x000B68, "Member 'UGA_Athena_Player_DoorBash_C::Debug_' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, GC_DoorImpact) == 0x000B6C, "Member 'UGA_Athena_Player_DoorBash_C::GC_DoorImpact' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, Wall_Location) == 0x000B70, "Member 'UGA_Athena_Player_DoorBash_C::Wall_Location' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, HitDoor_) == 0x000B88, "Member 'UGA_Athena_Player_DoorBash_C::HitDoor_' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, GC_LaunchPlayer) == 0x000B8C, "Member 'UGA_Athena_Player_DoorBash_C::GC_LaunchPlayer' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, HF_DoorBashEnabled) == 0x000B90, "Member 'UGA_Athena_Player_DoorBash_C::HF_DoorBashEnabled' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, HF_ForwardDoorCheckMult) == 0x000BB8, "Member 'UGA_Athena_Player_DoorBash_C::HF_ForwardDoorCheckMult' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, HF_LaunchPawnImpulseMult) == 0x000BE0, "Member 'UGA_Athena_Player_DoorBash_C::HF_LaunchPawnImpulseMult' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, HF_PawnVelocityMinThreshold) == 0x000C08, "Member 'UGA_Athena_Player_DoorBash_C::HF_PawnVelocityMinThreshold' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, DoorBashMale) == 0x000C30, "Member 'UGA_Athena_Player_DoorBash_C::DoorBashMale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, DoorBashFemale) == 0x000C38, "Member 'UGA_Athena_Player_DoorBash_C::DoorBashFemale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, End_Ability_Grace_Period_Const) == 0x000C40, "Member 'UGA_Athena_Player_DoorBash_C::End_Ability_Grace_Period_Const' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, bDoorBashingWhileSprinting) == 0x000C44, "Member 'UGA_Athena_Player_DoorBash_C::bDoorBashingWhileSprinting' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_DoorBash_C, bHasDisabledAutoOpenSwingingDoors) == 0x000C45, "Member 'UGA_Athena_Player_DoorBash_C::bHasDisabledAutoOpenSwingingDoors' has a wrong offset!");

}

