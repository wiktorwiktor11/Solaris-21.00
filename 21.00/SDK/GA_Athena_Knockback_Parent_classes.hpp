#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Knockback_Parent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Athena_Knockback_Parent_Type_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Knockback_Parent.GA_Athena_Knockback_Parent_C
// 0x02A8 (0x0DB8 - 0x0B10)
class UGA_Athena_Knockback_Parent_C : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 Launcher;                                          // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_TagsToIgnore;                                   // 0x0B28(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_XYKnockMag;                                    // 0x0B48(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_ZKnockMag;                                     // 0x0B70(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_ZAdd;                                          // 0x0B98(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ZAlwayzPositive;                                   // 0x0BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KnockTowardsLauncher;                              // 0x0BC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC2[0x6];                                      // 0x0BC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_ZVelPercentMaintained;                         // 0x0BC8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_XYVelPercentMaintained;                        // 0x0BF0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_PhysicsObjectImpulseMultiplier;                // 0x0C18(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  DefaultTags;                                       // 0x0C40(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, AdvancedDisplay)
	struct FVector                                FinalLaunchVel;                                    // 0x0C60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DistanceMagMult;                                   // 0x0C78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0C7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         LaunchDuration;                                    // 0x0C80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          XYMagUsesInstigatorDistanceMod;                    // 0x0C84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ZMagUsesInstigatorDistanceMod;                     // 0x0C85(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C86[0x2];                                      // 0x0C86(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_MinDistance;                                   // 0x0C88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_MaxDistance;                                   // 0x0CB0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ResetFallHeight;                                   // 0x0CD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ImpulseMustBePositiveForReset;                     // 0x0CD9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthena_Knockback_Parent_Type                 LaunchType;                                        // 0x0CDA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KnocksVehicles;                                    // 0x0CDB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CDC[0x4];                                      // 0x0CDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_VehicleXYMult;                                 // 0x0CE0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_VehicleZMult;                                  // 0x0D08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	ERootMotionFinishVelocityMode                 VelocityOnFinish;                                  // 0x0D30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D31[0x7];                                      // 0x0D31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SetVelocityOnFinish;                               // 0x0D38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClampVelocityOnFinish;                             // 0x0D50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsesGravity;                                       // 0x0D54(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          AccountsForGravityZScale;                          // 0x0D55(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D56[0x2];                                      // 0x0D56(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LowZGravityDampenerIntensity;                      // 0x0D58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighZGravityMultiplierIntensity;                   // 0x0D5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve_StrengthOverTime;                            // 0x0D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           Curve_PathOffset;                                  // 0x0D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_Knockback_Status;                               // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldApplyKnockbackStatus;                        // 0x0D78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetKnockbackDurationEqualToLaunchDuration;         // 0x0D79(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7A[0x6];                                      // 0x0D7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_KnockbackDuration;                             // 0x0D80(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         LocalGravityScale;                                 // 0x0DA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_BuildingPhysics;                               // 0x0DAC(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         FailsafeDelay;                                     // 0x0DB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           KnockbackTypeTag;                                  // 0x0DB4(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)

public:
	void OnFinish_78B7A0C144DB79535B9890B75AE5F853();
	void LaunchFinished();
	void LaunchBuldingActors(class AActor* Actor);
	void K2_ActivateAbility();
	struct FVector GetTargetLocation();
	struct FVector GetKnockbackOrigin(class AActor* OriginActor);
	void Get_Initial_Knock_Mag(const struct FVector& Direction, struct FVector* LaunchMag);
	void Find_Launcher(class AActor* DefaultLauncher, class AActor** LauncherOut);
	void FailsafeEndAbility();
	void ExecuteUbergraph_GA_Athena_Knockback_Parent(int32 EntryPoint);
	void DoLaunch(const struct FVector& Vel);
	float CheckGravityScale(const struct FGameplayAttribute& Attribute_Gravity_Scale);
	struct FVector CalcVehicleMult(const struct FVector& InVec);
	void CalculateVelocityMaintained(class AActor* LaunchTarget, const struct FVector& LaunchMagIn, struct FVector* ModifiedLaunchSpeed);
	void CalculateDistanceMod(const struct FVector& TargetLocation, const struct FVector& KnockOrigin, float* ModAmount, bool* AboveMax);
	void OnTimedOut_C8C9B5D948887DE06B469CAFC5621C02();
	void OnTimedOutAndDestinationReached_C8C9B5D948887DE06B469CAFC5621C02();
	void OwningPawnDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Knockback_Parent_C">();
	}
	static class UGA_Athena_Knockback_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Knockback_Parent_C>();
	}
};
static_assert(alignof(UGA_Athena_Knockback_Parent_C) == 0x000008, "Wrong alignment on UGA_Athena_Knockback_Parent_C");
static_assert(sizeof(UGA_Athena_Knockback_Parent_C) == 0x000DB8, "Wrong size on UGA_Athena_Knockback_Parent_C");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, UberGraphFrame) == 0x000B10, "Member 'UGA_Athena_Knockback_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Launcher) == 0x000B18, "Member 'UGA_Athena_Knockback_Parent_C::Launcher' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Target) == 0x000B20, "Member 'UGA_Athena_Knockback_Parent_C::Target' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, TC_TagsToIgnore) == 0x000B28, "Member 'UGA_Athena_Knockback_Parent_C::TC_TagsToIgnore' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_XYKnockMag) == 0x000B48, "Member 'UGA_Athena_Knockback_Parent_C::Row_XYKnockMag' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_ZKnockMag) == 0x000B70, "Member 'UGA_Athena_Knockback_Parent_C::Row_ZKnockMag' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_ZAdd) == 0x000B98, "Member 'UGA_Athena_Knockback_Parent_C::Row_ZAdd' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, ZAlwayzPositive) == 0x000BC0, "Member 'UGA_Athena_Knockback_Parent_C::ZAlwayzPositive' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, KnockTowardsLauncher) == 0x000BC1, "Member 'UGA_Athena_Knockback_Parent_C::KnockTowardsLauncher' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_ZVelPercentMaintained) == 0x000BC8, "Member 'UGA_Athena_Knockback_Parent_C::Row_ZVelPercentMaintained' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_XYVelPercentMaintained) == 0x000BF0, "Member 'UGA_Athena_Knockback_Parent_C::Row_XYVelPercentMaintained' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_PhysicsObjectImpulseMultiplier) == 0x000C18, "Member 'UGA_Athena_Knockback_Parent_C::Row_PhysicsObjectImpulseMultiplier' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, DefaultTags) == 0x000C40, "Member 'UGA_Athena_Knockback_Parent_C::DefaultTags' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, FinalLaunchVel) == 0x000C60, "Member 'UGA_Athena_Knockback_Parent_C::FinalLaunchVel' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, DistanceMagMult) == 0x000C78, "Member 'UGA_Athena_Knockback_Parent_C::DistanceMagMult' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Distance) == 0x000C7C, "Member 'UGA_Athena_Knockback_Parent_C::Distance' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, LaunchDuration) == 0x000C80, "Member 'UGA_Athena_Knockback_Parent_C::LaunchDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, XYMagUsesInstigatorDistanceMod) == 0x000C84, "Member 'UGA_Athena_Knockback_Parent_C::XYMagUsesInstigatorDistanceMod' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, ZMagUsesInstigatorDistanceMod) == 0x000C85, "Member 'UGA_Athena_Knockback_Parent_C::ZMagUsesInstigatorDistanceMod' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_MinDistance) == 0x000C88, "Member 'UGA_Athena_Knockback_Parent_C::Row_MinDistance' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_MaxDistance) == 0x000CB0, "Member 'UGA_Athena_Knockback_Parent_C::Row_MaxDistance' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, ResetFallHeight) == 0x000CD8, "Member 'UGA_Athena_Knockback_Parent_C::ResetFallHeight' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, ImpulseMustBePositiveForReset) == 0x000CD9, "Member 'UGA_Athena_Knockback_Parent_C::ImpulseMustBePositiveForReset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, LaunchType) == 0x000CDA, "Member 'UGA_Athena_Knockback_Parent_C::LaunchType' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, KnocksVehicles) == 0x000CDB, "Member 'UGA_Athena_Knockback_Parent_C::KnocksVehicles' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_VehicleXYMult) == 0x000CE0, "Member 'UGA_Athena_Knockback_Parent_C::Row_VehicleXYMult' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_VehicleZMult) == 0x000D08, "Member 'UGA_Athena_Knockback_Parent_C::Row_VehicleZMult' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, VelocityOnFinish) == 0x000D30, "Member 'UGA_Athena_Knockback_Parent_C::VelocityOnFinish' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, SetVelocityOnFinish) == 0x000D38, "Member 'UGA_Athena_Knockback_Parent_C::SetVelocityOnFinish' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, ClampVelocityOnFinish) == 0x000D50, "Member 'UGA_Athena_Knockback_Parent_C::ClampVelocityOnFinish' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, UsesGravity) == 0x000D54, "Member 'UGA_Athena_Knockback_Parent_C::UsesGravity' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, AccountsForGravityZScale) == 0x000D55, "Member 'UGA_Athena_Knockback_Parent_C::AccountsForGravityZScale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, LowZGravityDampenerIntensity) == 0x000D58, "Member 'UGA_Athena_Knockback_Parent_C::LowZGravityDampenerIntensity' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, HighZGravityMultiplierIntensity) == 0x000D5C, "Member 'UGA_Athena_Knockback_Parent_C::HighZGravityMultiplierIntensity' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Curve_StrengthOverTime) == 0x000D60, "Member 'UGA_Athena_Knockback_Parent_C::Curve_StrengthOverTime' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Curve_PathOffset) == 0x000D68, "Member 'UGA_Athena_Knockback_Parent_C::Curve_PathOffset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, GE_Knockback_Status) == 0x000D70, "Member 'UGA_Athena_Knockback_Parent_C::GE_Knockback_Status' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, ShouldApplyKnockbackStatus) == 0x000D78, "Member 'UGA_Athena_Knockback_Parent_C::ShouldApplyKnockbackStatus' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, SetKnockbackDurationEqualToLaunchDuration) == 0x000D79, "Member 'UGA_Athena_Knockback_Parent_C::SetKnockbackDurationEqualToLaunchDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Row_KnockbackDuration) == 0x000D80, "Member 'UGA_Athena_Knockback_Parent_C::Row_KnockbackDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, LocalGravityScale) == 0x000DA8, "Member 'UGA_Athena_Knockback_Parent_C::LocalGravityScale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, Tag_BuildingPhysics) == 0x000DAC, "Member 'UGA_Athena_Knockback_Parent_C::Tag_BuildingPhysics' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, FailsafeDelay) == 0x000DB0, "Member 'UGA_Athena_Knockback_Parent_C::FailsafeDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Knockback_Parent_C, KnockbackTypeTag) == 0x000DB4, "Member 'UGA_Athena_Knockback_Parent_C::KnockbackTypeTag' has a wrong offset!");

}

