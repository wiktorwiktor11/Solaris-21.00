#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_Zipline_Ascender

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "AscenderCodeRuntime_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Athena_Zipline_Ascender.B_Athena_Zipline_Ascender_C
// 0x0170 (0x1078 - 0x0F08)
class AB_Athena_Zipline_Ascender_C final : public AFortAscenderZipline
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0F08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x0F10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortSoundIndicatorComponent*           FortSoundIndicator;                                // 0x0F18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ascender_End_Cap;                                  // 0x0F20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        PoleMotorSFX;                                      // 0x0F28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      HandleVFX;                                         // 0x0F30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      PoleMotorVFX;                                      // 0x0F38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        HandleAscendingSFX;                                // 0x0F40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        HandleDescendingSFX;                               // 0x0F48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       HandleInteractVolume;                              // 0x0F50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Handle;                                            // 0x0F58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Top;                                               // 0x0F60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Hotfix;                                            // 0x0F68(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             StartHandleSound;                                  // 0x0F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             StopHandleSound;                                   // 0x0F98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             StopPoleMotorSoundSkid;                            // 0x0FA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     SplineMeshMaterialOverride;                        // 0x0FA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         AscendingHandleVFX;                                // 0x0FB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         DescendingHandleVFX;                               // 0x0FB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     SplineThickenMeshMaterialOverride;                 // 0x0FC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxWobbleAnimationLength;                          // 0x0FC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastWobbleActivationTime;                          // 0x0FCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TilingDivisor;                                     // 0x0FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD4[0x4];                                      // 0x0FD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HandleAnimOffset;                                  // 0x0FD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SlideAnimOffset;                                   // 0x0FF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             PlayerGrabBeginDecentSound;                        // 0x1008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        HandleStart;                                       // 0x1010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndCapRelativeScale;                               // 0x1018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 StructureDamageGE;                                 // 0x1030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AudioVisualizerHandle;                             // 0x1038(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPlayerPawn*>                PlayersOnAscender;                                 // 0x1040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class USoundBase*                             TravelSound;                                       // 0x1050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayWhoosh;                                  // 0x1058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1059[0x7];                                     // 0x1059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             AscendWhooshSound;                                 // 0x1060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x1068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           WhooshHandle;                                      // 0x1070(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ShouldPlayWhooshTimer();
	void SetCableTilingBySplineLength();
	void ReceiveBeginPlay();
	void PlayerDescendingStarted(class AFortPlayerPawn* Sliding_Player);
	void OnZipliningStopped(class AFortPlayerPawn* InteractingPawn, class UPrimitiveComponent* InteractComponent, float ZiplineUsageDuration);
	void OnZipliningStarted(class AFortPlayerPawn* InteractingPawn, class UPrimitiveComponent* InteractComponent);
	void OnReady_93837FC44A18F6AE57D3478CC43A98AB(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void HotfixEnabled();
	int32 GetLastSplinePointIndex();
	void ExecuteUbergraph_B_Athena_Zipline_Ascender(int32 EntryPoint);
	void DeactivateCableWobble();
	void CalculateLaunchVelocity(class AActor* PlayerPawn_0, struct FVector* LaunchVelocity);
	void BP_HandleUpdatedLoweringCable();
	void BP_HandleStoppedLoweringHandle();
	void BP_HandleStoppedLoweringCable();
	void BP_HandleStartedLoweringHandle();
	void BP_HandleStartedLoweringCable();
	void BP_HandlePlayerStoppedUsingHandle(class AFortPlayerPawn* Player);
	void BP_HandlePlayerStartedUsingHandle(class AFortPlayerPawn* Player);
	void AttachCapToEndOfSplineMesh();
	void ActivateCableWobble();

	bool PawnIsInHandleRange(class AFortPawn* Pawn) const;
	void LocalOnFailedInteract(const class AFortPlayerPawn* InteractingPawn) const;
	class UPrimitiveComponent* GetTopComponent() const;
	class UPrimitiveComponent* GetInteractComponentOverride(class AFortPlayerPawn* InteractingPawn, class UPrimitiveComponent* InteractComponent) const;
	class UPrimitiveComponent* GetHandleComponent() const;
	void GetBoundsComponents(const class AActor* SelfActor, TArray<class USceneComponent*>* OutComponents) const;
	bool CanBeginZiplining(class AFortPlayerPawn* InteractingPawn, class UPrimitiveComponent* InteractComponent) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;
	bool AttemptOverrideZiplineSocketOffset(class AFortPlayerPawn* InteractingPawn, class UPrimitiveComponent* InteractComponent, const struct FVector& BaseSocketOffset, struct FVector* OutSocketOffset) const;
	void ApplyStructureDamage(class ABuildingSMActor* BuildingActor, class AActor* DamageSource) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Athena_Zipline_Ascender_C">();
	}
	static class AB_Athena_Zipline_Ascender_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Athena_Zipline_Ascender_C>();
	}
};
static_assert(alignof(AB_Athena_Zipline_Ascender_C) == 0x000008, "Wrong alignment on AB_Athena_Zipline_Ascender_C");
static_assert(sizeof(AB_Athena_Zipline_Ascender_C) == 0x001078, "Wrong size on AB_Athena_Zipline_Ascender_C");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, UberGraphFrame) == 0x000F08, "Member 'AB_Athena_Zipline_Ascender_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, Capsule) == 0x000F10, "Member 'AB_Athena_Zipline_Ascender_C::Capsule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, FortSoundIndicator) == 0x000F18, "Member 'AB_Athena_Zipline_Ascender_C::FortSoundIndicator' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, Ascender_End_Cap) == 0x000F20, "Member 'AB_Athena_Zipline_Ascender_C::Ascender_End_Cap' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, PoleMotorSFX) == 0x000F28, "Member 'AB_Athena_Zipline_Ascender_C::PoleMotorSFX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, HandleVFX) == 0x000F30, "Member 'AB_Athena_Zipline_Ascender_C::HandleVFX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, PoleMotorVFX) == 0x000F38, "Member 'AB_Athena_Zipline_Ascender_C::PoleMotorVFX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, HandleAscendingSFX) == 0x000F40, "Member 'AB_Athena_Zipline_Ascender_C::HandleAscendingSFX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, HandleDescendingSFX) == 0x000F48, "Member 'AB_Athena_Zipline_Ascender_C::HandleDescendingSFX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, HandleInteractVolume) == 0x000F50, "Member 'AB_Athena_Zipline_Ascender_C::HandleInteractVolume' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, Handle) == 0x000F58, "Member 'AB_Athena_Zipline_Ascender_C::Handle' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, Top) == 0x000F60, "Member 'AB_Athena_Zipline_Ascender_C::Top' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, Hotfix) == 0x000F68, "Member 'AB_Athena_Zipline_Ascender_C::Hotfix' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, StartHandleSound) == 0x000F90, "Member 'AB_Athena_Zipline_Ascender_C::StartHandleSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, StopHandleSound) == 0x000F98, "Member 'AB_Athena_Zipline_Ascender_C::StopHandleSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, StopPoleMotorSoundSkid) == 0x000FA0, "Member 'AB_Athena_Zipline_Ascender_C::StopPoleMotorSoundSkid' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, SplineMeshMaterialOverride) == 0x000FA8, "Member 'AB_Athena_Zipline_Ascender_C::SplineMeshMaterialOverride' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, AscendingHandleVFX) == 0x000FB0, "Member 'AB_Athena_Zipline_Ascender_C::AscendingHandleVFX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, DescendingHandleVFX) == 0x000FB8, "Member 'AB_Athena_Zipline_Ascender_C::DescendingHandleVFX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, SplineThickenMeshMaterialOverride) == 0x000FC0, "Member 'AB_Athena_Zipline_Ascender_C::SplineThickenMeshMaterialOverride' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, MaxWobbleAnimationLength) == 0x000FC8, "Member 'AB_Athena_Zipline_Ascender_C::MaxWobbleAnimationLength' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, LastWobbleActivationTime) == 0x000FCC, "Member 'AB_Athena_Zipline_Ascender_C::LastWobbleActivationTime' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, TilingDivisor) == 0x000FD0, "Member 'AB_Athena_Zipline_Ascender_C::TilingDivisor' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, HandleAnimOffset) == 0x000FD8, "Member 'AB_Athena_Zipline_Ascender_C::HandleAnimOffset' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, SlideAnimOffset) == 0x000FF0, "Member 'AB_Athena_Zipline_Ascender_C::SlideAnimOffset' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, PlayerGrabBeginDecentSound) == 0x001008, "Member 'AB_Athena_Zipline_Ascender_C::PlayerGrabBeginDecentSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, HandleStart) == 0x001010, "Member 'AB_Athena_Zipline_Ascender_C::HandleStart' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, EndCapRelativeScale) == 0x001018, "Member 'AB_Athena_Zipline_Ascender_C::EndCapRelativeScale' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, StructureDamageGE) == 0x001030, "Member 'AB_Athena_Zipline_Ascender_C::StructureDamageGE' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, AudioVisualizerHandle) == 0x001038, "Member 'AB_Athena_Zipline_Ascender_C::AudioVisualizerHandle' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, PlayersOnAscender) == 0x001040, "Member 'AB_Athena_Zipline_Ascender_C::PlayersOnAscender' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, TravelSound) == 0x001050, "Member 'AB_Athena_Zipline_Ascender_C::TravelSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, ShouldPlayWhoosh) == 0x001058, "Member 'AB_Athena_Zipline_Ascender_C::ShouldPlayWhoosh' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, AscendWhooshSound) == 0x001060, "Member 'AB_Athena_Zipline_Ascender_C::AscendWhooshSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, PlayerPawn) == 0x001068, "Member 'AB_Athena_Zipline_Ascender_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AB_Athena_Zipline_Ascender_C, WhooshHandle) == 0x001070, "Member 'AB_Athena_Zipline_Ascender_C::WhooshHandle' has a wrong offset!");

}

