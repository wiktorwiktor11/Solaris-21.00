#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RE_WestSausage_Targeting

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RE_WestSausage_Targeting.RE_WestSausage_Targeting_C
// 0x0078 (0x0358 - 0x02E0)
class URE_WestSausage_Targeting_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_134;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_LockedOn;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Reticle;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULockedOnReticleWidget_C*               Reticle_LockedOn;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               WrapBox_1;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector                                TargetPosition;                                    // 0x0310(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Locked_On;                                         // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attached;                                          // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A[0x6];                                      // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Player;                                            // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cached_AboverOverloadThreshold;                    // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PosInViewport;                                     // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Hit_Something;                                // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbleToUse;                                         // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateChargeCircle(float Scale_X);
	void ExecuteUbergraph_RE_WestSausage_Targeting(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RE_WestSausage_Targeting_C">();
	}
	static class URE_WestSausage_Targeting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URE_WestSausage_Targeting_C>();
	}
};
static_assert(alignof(URE_WestSausage_Targeting_C) == 0x000008, "Wrong alignment on URE_WestSausage_Targeting_C");
static_assert(sizeof(URE_WestSausage_Targeting_C) == 0x000358, "Wrong size on URE_WestSausage_Targeting_C");
static_assert(offsetof(URE_WestSausage_Targeting_C, UberGraphFrame) == 0x0002E0, "Member 'URE_WestSausage_Targeting_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, Image_134) == 0x0002E8, "Member 'URE_WestSausage_Targeting_C::Image_134' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, Overlay_LockedOn) == 0x0002F0, "Member 'URE_WestSausage_Targeting_C::Overlay_LockedOn' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, Reticle) == 0x0002F8, "Member 'URE_WestSausage_Targeting_C::Reticle' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, Reticle_LockedOn) == 0x000300, "Member 'URE_WestSausage_Targeting_C::Reticle_LockedOn' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, WrapBox_1) == 0x000308, "Member 'URE_WestSausage_Targeting_C::WrapBox_1' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, TargetPosition) == 0x000310, "Member 'URE_WestSausage_Targeting_C::TargetPosition' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, Locked_On) == 0x000328, "Member 'URE_WestSausage_Targeting_C::Locked_On' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, Attached) == 0x000329, "Member 'URE_WestSausage_Targeting_C::Attached' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, Player) == 0x000330, "Member 'URE_WestSausage_Targeting_C::Player' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, Cached_AboverOverloadThreshold) == 0x000338, "Member 'URE_WestSausage_Targeting_C::Cached_AboverOverloadThreshold' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, PosInViewport) == 0x000340, "Member 'URE_WestSausage_Targeting_C::PosInViewport' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, Cast_Hit_Something) == 0x000350, "Member 'URE_WestSausage_Targeting_C::Cast_Hit_Something' has a wrong offset!");
static_assert(offsetof(URE_WestSausage_Targeting_C, AbleToUse) == 0x000351, "Member 'URE_WestSausage_Targeting_C::AbleToUse' has a wrong offset!");

}

