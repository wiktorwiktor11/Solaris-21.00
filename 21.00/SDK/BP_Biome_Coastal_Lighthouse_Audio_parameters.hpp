#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Biome_Coastal_Lighthouse_Audio

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function BP_Biome_Coastal_Lighthouse_Audio.BP_Biome_Coastal_Lighthouse_Audio_C.ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio
// 0x0048 (0x0048 - 0x0000)
struct BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortSafeZoneInterface> K2Node_CustomEvent_SafeZoneInterface;              // 0x0010(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EAthenaGamePhaseStep                          K2Node_CustomEvent_GamePhaseStep;                  // 0x0020(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAthena_GameState_C*                    K2Node_DynamicCast_AsAthena_Game_State;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TScriptInterface<class IFortSafeZoneInterface>& SafeZoneInterface, EAthenaGamePhaseStep GamePhaseStep)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio) == 0x000008, "Wrong alignment on BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio");
static_assert(sizeof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio) == 0x000048, "Wrong size on BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, EntryPoint) == 0x000000, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, K2Node_CustomEvent_SafeZoneInterface) == 0x000010, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::K2Node_CustomEvent_SafeZoneInterface' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, K2Node_CustomEvent_GamePhaseStep) == 0x000020, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::K2Node_CustomEvent_GamePhaseStep' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, K2Node_DynamicCast_AsAthena_Game_State) == 0x000028, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::K2Node_DynamicCast_AsAthena_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio, CallFunc_IsPlaying_ReturnValue) == 0x000040, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_ExecuteUbergraph_BP_Biome_Coastal_Lighthouse_Audio::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_Biome_Coastal_Lighthouse_Audio.BP_Biome_Coastal_Lighthouse_Audio_C.On Game Phase Step Changed
// 0x0018 (0x0018 - 0x0000)
struct BP_Biome_Coastal_Lighthouse_Audio_C_On_Game_Phase_Step_Changed final
{
public:
	TScriptInterface<class IFortSafeZoneInterface> SafeZoneInterface;                                 // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EAthenaGamePhaseStep                          GamePhaseStep;                                     // 0x0010(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Biome_Coastal_Lighthouse_Audio_C_On_Game_Phase_Step_Changed) == 0x000008, "Wrong alignment on BP_Biome_Coastal_Lighthouse_Audio_C_On_Game_Phase_Step_Changed");
static_assert(sizeof(BP_Biome_Coastal_Lighthouse_Audio_C_On_Game_Phase_Step_Changed) == 0x000018, "Wrong size on BP_Biome_Coastal_Lighthouse_Audio_C_On_Game_Phase_Step_Changed");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_On_Game_Phase_Step_Changed, SafeZoneInterface) == 0x000000, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_On_Game_Phase_Step_Changed::SafeZoneInterface' has a wrong offset!");
static_assert(offsetof(BP_Biome_Coastal_Lighthouse_Audio_C_On_Game_Phase_Step_Changed, GamePhaseStep) == 0x000010, "Member 'BP_Biome_Coastal_Lighthouse_Audio_C_On_Game_Phase_Step_Changed::GamePhaseStep' has a wrong offset!");

}

