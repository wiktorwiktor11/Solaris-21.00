#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DataAssetDirectory

#include "Basic.hpp"


namespace SDK
{

// Enum DataAssetDirectory.EDataAssetDirectoryUpdateStatus
// NumValues: 0x0004
enum class EDataAssetDirectoryUpdateStatus : uint8
{
	Failed                                   = 0,
	Success                                  = 1,
	SuccessNoChange                          = 2,
	EDataAssetDirectoryUpdateStatus_MAX      = 3,
};

// Enum DataAssetDirectory.EDataAssetDirectoryTestEnum
// NumValues: 0x0005
enum class EDataAssetDirectoryTestEnum : uint8
{
	A                                        = 0,
	B                                        = 1,
	C                                        = 2,
	D                                        = 3,
	EDataAssetDirectoryTestEnum_MAX          = 4,
};

// ScriptStruct DataAssetDirectory.DataAssetDirectoryTestPODStruct
// 0x0040 (0x0040 - 0x0000)
struct FDataAssetDirectoryTestPODStruct final
{
public:
	EDataAssetDirectoryTestEnum                   EnumProperty;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IntProperty;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatProperty;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BoolProperty;                                      // 0x000C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StringProperty;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NameProperty;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextProperty;                                      // 0x0028(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDataAssetDirectoryTestPODStruct) == 0x000008, "Wrong alignment on FDataAssetDirectoryTestPODStruct");
static_assert(sizeof(FDataAssetDirectoryTestPODStruct) == 0x000040, "Wrong size on FDataAssetDirectoryTestPODStruct");
static_assert(offsetof(FDataAssetDirectoryTestPODStruct, EnumProperty) == 0x000000, "Member 'FDataAssetDirectoryTestPODStruct::EnumProperty' has a wrong offset!");
static_assert(offsetof(FDataAssetDirectoryTestPODStruct, IntProperty) == 0x000004, "Member 'FDataAssetDirectoryTestPODStruct::IntProperty' has a wrong offset!");
static_assert(offsetof(FDataAssetDirectoryTestPODStruct, FloatProperty) == 0x000008, "Member 'FDataAssetDirectoryTestPODStruct::FloatProperty' has a wrong offset!");
static_assert(offsetof(FDataAssetDirectoryTestPODStruct, BoolProperty) == 0x00000C, "Member 'FDataAssetDirectoryTestPODStruct::BoolProperty' has a wrong offset!");
static_assert(offsetof(FDataAssetDirectoryTestPODStruct, StringProperty) == 0x000010, "Member 'FDataAssetDirectoryTestPODStruct::StringProperty' has a wrong offset!");
static_assert(offsetof(FDataAssetDirectoryTestPODStruct, NameProperty) == 0x000020, "Member 'FDataAssetDirectoryTestPODStruct::NameProperty' has a wrong offset!");
static_assert(offsetof(FDataAssetDirectoryTestPODStruct, TextProperty) == 0x000028, "Member 'FDataAssetDirectoryTestPODStruct::TextProperty' has a wrong offset!");

// ScriptStruct DataAssetDirectory.DataAssetDirectoryTestSimpleStruct
// 0x0004 (0x0004 - 0x0000)
struct FDataAssetDirectoryTestSimpleStruct final
{
public:
	int32                                         IntProperty;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDataAssetDirectoryTestSimpleStruct) == 0x000004, "Wrong alignment on FDataAssetDirectoryTestSimpleStruct");
static_assert(sizeof(FDataAssetDirectoryTestSimpleStruct) == 0x000004, "Wrong size on FDataAssetDirectoryTestSimpleStruct");
static_assert(offsetof(FDataAssetDirectoryTestSimpleStruct, IntProperty) == 0x000000, "Member 'FDataAssetDirectoryTestSimpleStruct::IntProperty' has a wrong offset!");

}

