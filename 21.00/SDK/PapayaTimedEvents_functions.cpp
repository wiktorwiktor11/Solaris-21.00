#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PapayaTimedEvents

#include "Basic.hpp"

#include "PapayaTimedEvents_classes.hpp"
#include "PapayaTimedEvents_parameters.hpp"


namespace SDK
{

// Function PapayaTimedEvents.PapayaTimedEvents.AddTimedEvent_Native
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EventParam                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APapayaTimedEvents::AddTimedEvent_Native(const class FString& EventName, int64 Time, const class FString& EventParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PapayaTimedEvents", "AddTimedEvent_Native");

	Params::PapayaTimedEvents_AddTimedEvent_Native Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Time = Time;
	Parms.EventParam = std::move(EventParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PapayaTimedEvents.PapayaTimedEvents.OnRep_ScreenName
// (Final, Native, Private)
// Parameters:
// class FString                           PreviousValue                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APapayaTimedEvents::OnRep_ScreenName(const class FString& PreviousValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PapayaTimedEvents", "OnRep_ScreenName");

	Params::PapayaTimedEvents_OnRep_ScreenName Parms{};

	Parms.PreviousValue = std::move(PreviousValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PapayaTimedEvents.PapayaTimedEvents.OnRep_TimedEventsArray
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FMediaTimeEventArray             PreviousValue                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void APapayaTimedEvents::OnRep_TimedEventsArray(const struct FMediaTimeEventArray& PreviousValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PapayaTimedEvents", "OnRep_TimedEventsArray");

	Params::PapayaTimedEvents_OnRep_TimedEventsArray Parms{};

	Parms.PreviousValue = std::move(PreviousValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PapayaTimedEvents.PapayaTimedEvents.ResetTimedEvents_Native
// (Final, Native, Public, BlueprintCallable)

void APapayaTimedEvents::ResetTimedEvents_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PapayaTimedEvents", "ResetTimedEvents_Native");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PapayaTimedEvents.PapayaTimedEvents.SetupTimedEvents_Native
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ScreenName_0                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APapayaTimedEvents::SetupTimedEvents_Native(const class FString& ScreenName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PapayaTimedEvents", "SetupTimedEvents_Native");

	Params::PapayaTimedEvents_SetupTimedEvents_Native Parms{};

	Parms.ScreenName_0 = std::move(ScreenName_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PapayaTimedEvents.PapayaTimedEvents.ShutdownTimedEvents_Native
// (Final, Native, Public, BlueprintCallable)

void APapayaTimedEvents::ShutdownTimedEvents_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PapayaTimedEvents", "ShutdownTimedEvents_Native");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

