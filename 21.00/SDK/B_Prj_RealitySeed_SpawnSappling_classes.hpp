#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_RealitySeed_SpawnSappling

#include "Basic.hpp"

#include "RealitySeedGameplayRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "B_Prj_Athena_BGASpawner_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_RealitySeed_SpawnSappling.B_Prj_RealitySeed_SpawnSappling_C
// 0x04E8 (0x0F70 - 0x0A88)
class AB_Prj_RealitySeed_SpawnSappling_C final : public AB_Prj_Athena_BGASpawner_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Prj_RealitySeed_SpawnSappling_C;  // 0x0A88(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_RealitySeed_Trail_Projectile;                   // 0x0A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamHasBeenSet;                                    // 0x0AA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0AA1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bindToSurfaceOnStart_;                             // 0x0AA2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA3[0x1];                                      // 0x0AA3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Max_Bounces;                                       // 0x0AA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               PickupWID;                                         // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MaxFriendlyCampsiteExclusionRange;                 // 0x0AB0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxEnemyCampsiteExclusionRange;                    // 0x0AD8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Hit;                                               // 0x0B00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnDoOnce;                                       // 0x0B01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnteredWater;                                      // 0x0B02(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B03[0x1];                                      // 0x0B03(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BounceCount;                                       // 0x0B04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MinSaplingDeploymentDistanceFromObstacles;         // 0x0B08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TooCloseToAnotherSaplingFailed;                    // 0x0B30(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           GC_Revert_To_Pickup;                               // 0x0B50(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Water_Splash;                                   // 0x0B54(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Invalid_Surface_Failed_Reason;                     // 0x0B58(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortItemEntry                         ItemEntry;                                         // 0x0B78(0x01A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         PickupSpawnZOffset;                                // 0x0D18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1C[0x4];                                      // 0x0D1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 BGA_Rift;                                          // 0x0D20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DefaultSpawnOffset;                                // 0x0D28(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RiftSpawnOffset;                                   // 0x0D40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MinRiftDeploymentDistanceFromObstacles;            // 0x0D58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAbilitySystemComponent*                PlayerAbilitySystemComponent;                      // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            PreventThrowHandle;                                // 0x0D88(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PrjHasStopped;                                     // 0x0D90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D91[0x7];                                      // 0x0D91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRealitySaplingPersistentData          Persistent_Sapling_Data;                           // 0x0DA0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SeedSpinSpeed;                                     // 0x0E00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpinMultiplierPerBounce;                           // 0x0E04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  NotEnoughSpace;                                    // 0x0E08(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UPrimitiveComponent*                    CachedHit_MyComp;                                  // 0x0E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CachedHit_Other;                                   // 0x0E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CachedHit_OtherComp;                               // 0x0E38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CachedHit_SelfMoved;                               // 0x0E40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E41[0x7];                                      // 0x0E41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CachedHit_HitLocation;                             // 0x0E48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CachedHit_HitNormal;                               // 0x0E60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CachedHit_NormalImpulse;                           // 0x0E78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CachedHit_Hit;                                     // 0x0E90(0x00E0)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)

public:
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody);
	void Cache_Hit_Data();
	void DeployFailedFeedback(int32 FailReason);
	void ExecuteUbergraph_B_Prj_RealitySeed_SpawnSappling(int32 EntryPoint);
	void HasEnteredWater();
	void InitialSpinSpeed();
	void IsSlopeValid(const struct FHitResult& Hit_0, bool* Valid);
	void OnStop(const struct FHitResult& Hit_0);
	void ParentHit();
	void ReceiveBeginPlay();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit_0);
	void RevertToPickupAndDestroyProj();
	void SaplingDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	class AActor* SpawnBGA_(const struct FVector& Normal, class AActor* HitActor, class UPrimitiveComponent* HitComp, const struct FVector& Pos, bool FromWater, const struct FHitResult& Hit_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_RealitySeed_SpawnSappling_C">();
	}
	static class AB_Prj_RealitySeed_SpawnSappling_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_RealitySeed_SpawnSappling_C>();
	}
};
static_assert(alignof(AB_Prj_RealitySeed_SpawnSappling_C) == 0x000008, "Wrong alignment on AB_Prj_RealitySeed_SpawnSappling_C");
static_assert(sizeof(AB_Prj_RealitySeed_SpawnSappling_C) == 0x000F70, "Wrong size on AB_Prj_RealitySeed_SpawnSappling_C");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, UberGraphFrame_B_Prj_RealitySeed_SpawnSappling_C) == 0x000A88, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::UberGraphFrame_B_Prj_RealitySeed_SpawnSappling_C' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, NS_RealitySeed_Trail_Projectile) == 0x000A90, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::NS_RealitySeed_Trail_Projectile' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, StaticMesh) == 0x000A98, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, TeamHasBeenSet) == 0x000AA0, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::TeamHasBeenSet' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, Debug) == 0x000AA1, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::Debug' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, bindToSurfaceOnStart_) == 0x000AA2, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::bindToSurfaceOnStart_' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, Max_Bounces) == 0x000AA4, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::Max_Bounces' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, PickupWID) == 0x000AA8, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::PickupWID' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, MaxFriendlyCampsiteExclusionRange) == 0x000AB0, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::MaxFriendlyCampsiteExclusionRange' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, MaxEnemyCampsiteExclusionRange) == 0x000AD8, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::MaxEnemyCampsiteExclusionRange' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, Hit) == 0x000B00, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::Hit' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, SpawnDoOnce) == 0x000B01, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::SpawnDoOnce' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, EnteredWater) == 0x000B02, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::EnteredWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, BounceCount) == 0x000B04, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::BounceCount' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, MinSaplingDeploymentDistanceFromObstacles) == 0x000B08, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::MinSaplingDeploymentDistanceFromObstacles' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, TooCloseToAnotherSaplingFailed) == 0x000B30, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::TooCloseToAnotherSaplingFailed' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, GC_Revert_To_Pickup) == 0x000B50, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::GC_Revert_To_Pickup' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, GC_Water_Splash) == 0x000B54, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::GC_Water_Splash' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, Invalid_Surface_Failed_Reason) == 0x000B58, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::Invalid_Surface_Failed_Reason' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, ItemEntry) == 0x000B78, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::ItemEntry' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, PickupSpawnZOffset) == 0x000D18, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::PickupSpawnZOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, BGA_Rift) == 0x000D20, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::BGA_Rift' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, DefaultSpawnOffset) == 0x000D28, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::DefaultSpawnOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, RiftSpawnOffset) == 0x000D40, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::RiftSpawnOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, MinRiftDeploymentDistanceFromObstacles) == 0x000D58, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::MinRiftDeploymentDistanceFromObstacles' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, PlayerAbilitySystemComponent) == 0x000D80, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::PlayerAbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, PreventThrowHandle) == 0x000D88, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::PreventThrowHandle' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, PrjHasStopped) == 0x000D90, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::PrjHasStopped' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, PlayerPawn) == 0x000D98, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, Persistent_Sapling_Data) == 0x000DA0, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::Persistent_Sapling_Data' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, SeedSpinSpeed) == 0x000E00, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::SeedSpinSpeed' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, SpinMultiplierPerBounce) == 0x000E04, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::SpinMultiplierPerBounce' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, NotEnoughSpace) == 0x000E08, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::NotEnoughSpace' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, CachedHit_MyComp) == 0x000E28, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::CachedHit_MyComp' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, CachedHit_Other) == 0x000E30, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::CachedHit_Other' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, CachedHit_OtherComp) == 0x000E38, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::CachedHit_OtherComp' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, CachedHit_SelfMoved) == 0x000E40, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::CachedHit_SelfMoved' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, CachedHit_HitLocation) == 0x000E48, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::CachedHit_HitLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, CachedHit_HitNormal) == 0x000E60, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::CachedHit_HitNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, CachedHit_NormalImpulse) == 0x000E78, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::CachedHit_NormalImpulse' has a wrong offset!");
static_assert(offsetof(AB_Prj_RealitySeed_SpawnSappling_C, CachedHit_Hit) == 0x000E90, "Member 'AB_Prj_RealitySeed_SpawnSappling_C::CachedHit_Hit' has a wrong offset!");

}

