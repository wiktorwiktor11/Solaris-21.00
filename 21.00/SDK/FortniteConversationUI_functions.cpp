#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteConversationUI

#include "Basic.hpp"

#include "FortniteConversationUI_classes.hpp"
#include "FortniteConversationUI_parameters.hpp"


namespace SDK
{

// Function FortniteConversationUI.FortConversationMessageWidget.OnMainMessageSet
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             NPCName                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             MessageBody                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortConversationMessageWidget::OnMainMessageSet(const class FText& NPCName, const class FText& MessageBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMessageWidget", "OnMainMessageSet");

	Params::FortConversationMessageWidget_OnMainMessageSet Parms{};

	Parms.NPCName = std::move(NPCName);
	Parms.MessageBody = std::move(MessageBody);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMessageWidget.OnMessageHidden
// (Event, Protected, BlueprintEvent)

void UFortConversationMessageWidget::OnMessageHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMessageWidget", "OnMessageHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortConversationMessageWidget.OnMessageShown
// (Event, Protected, BlueprintEvent)

void UFortConversationMessageWidget::OnMessageShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMessageWidget", "OnMessageShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortConversationMessageWidget.OnPreviewMessageSet
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             PreviewText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortConversationMessageWidget::OnPreviewMessageSet(const class FText& PreviewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMessageWidget", "OnPreviewMessageSet");

	Params::FortConversationMessageWidget_OnPreviewMessageSet Parms{};

	Parms.PreviewText = std::move(PreviewText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMessageWidget.SetPreviewMessage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             MessageToSet                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortConversationMessageWidget::SetPreviewMessage(const class FText& MessageToSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMessageWidget", "SetPreviewMessage");

	Params::FortConversationMessageWidget_SetPreviewMessage Parms{};

	Parms.MessageToSet = std::move(MessageToSet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteConversationUI.FortItemTransactionBrief.OnTransactionInfoReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemTransactionBrief::OnTransactionInfoReceived(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTransactionBrief", "OnTransactionInfoReceived");

	Params::FortItemTransactionBrief_OnTransactionInfoReceived Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortApplyAbilityBrief.OnAbleToPurchase
// (Event, Protected, BlueprintEvent)

void UFortApplyAbilityBrief::OnAbleToPurchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortApplyAbilityBrief", "OnAbleToPurchase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortApplyAbilityBrief.OnUnableToPurchase
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPreventAbilityUseReason                Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortApplyAbilityBrief::OnUnableToPurchase(EPreventAbilityUseReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortApplyAbilityBrief", "OnUnableToPurchase");

	Params::FortApplyAbilityBrief_OnUnableToPurchase Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortBasicBrief.OnChoiceTextReceived
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBasicBrief::OnChoiceTextReceived(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBasicBrief", "OnChoiceTextReceived");

	Params::FortBasicBrief_OnChoiceTextReceived Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortBasicItemBrief.OnAbleToUse
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowWarningMessage                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBasicItemBrief::OnAbleToUse(const bool bShowWarningMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBasicItemBrief", "OnAbleToUse");

	Params::FortBasicItemBrief_OnAbleToUse Parms{};

	Parms.bShowWarningMessage = bShowWarningMessage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortBasicItemBrief.OnItemInfoReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StackSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBasicItemBrief::OnItemInfoReceived(class UFortItem* Item, int32 StackSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBasicItemBrief", "OnItemInfoReceived");

	Params::FortBasicItemBrief_OnItemInfoReceived Parms{};

	Parms.Item = Item;
	Parms.StackSize = StackSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortBasicItemBrief.OnUnableToUse
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Reason                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBasicItemBrief::OnUnableToUse(const class FText& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBasicItemBrief", "OnUnableToUse");

	Params::FortBasicItemBrief_OnUnableToUse Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortBasicItemBrief.OnUpdateDescriptionText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             DescriptionText                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBasicItemBrief::OnUpdateDescriptionText(const class FText& DescriptionText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBasicItemBrief", "OnUpdateDescriptionText");

	Params::FortBasicItemBrief_OnUpdateDescriptionText Parms{};

	Parms.DescriptionText = std::move(DescriptionText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortBuyBrief.OnDisplayUnavailability
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECannotBuyReason                        CannotBuyReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuyBrief::OnDisplayUnavailability(ECannotBuyReason CannotBuyReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuyBrief", "OnDisplayUnavailability");

	Params::FortBuyBrief_OnDisplayUnavailability Parms{};

	Parms.CannotBuyReason = CannotBuyReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortBuyBrief.OnPurchaseDataReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   StackSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RemainingForSale                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuyBrief::OnPurchaseDataReceived(int32 StackSize, int32 RemainingForSale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuyBrief", "OnPurchaseDataReceived");

	Params::FortBuyBrief_OnPurchaseDataReceived Parms{};

	Parms.StackSize = StackSize;
	Parms.RemainingForSale = RemainingForSale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMarker.OnCanInteract
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanInteract                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationMarker::OnCanInteract(bool bCanInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMarker", "OnCanInteract");

	Params::FortConversationMarker_OnCanInteract Parms{};

	Parms.bCanInteract = bCanInteract;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMarker.OnConversationActorProximityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EInteractionRange                       TargetInteractionRange                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortNonPlayerConversationParticipantComponent*ConversationComponent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationMarker::OnConversationActorProximityChanged(EInteractionRange TargetInteractionRange, class UFortNonPlayerConversationParticipantComponent* ConversationComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMarker", "OnConversationActorProximityChanged");

	Params::FortConversationMarker_OnConversationActorProximityChanged Parms{};

	Parms.TargetInteractionRange = TargetInteractionRange;
	Parms.ConversationComponent = ConversationComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMarker.OnInteractionRangeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EInteractionRange                       TargetInteractionRange                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationMarker::OnInteractionRangeChanged(EInteractionRange TargetInteractionRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMarker", "OnInteractionRangeChanged");

	Params::FortConversationMarker_OnInteractionRangeChanged Parms{};

	Parms.TargetInteractionRange = TargetInteractionRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMarker.OnMessageShownOverActor
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           OverActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationMarker::OnMessageShownOverActor(class AActor* OverActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMarker", "OnMessageShownOverActor");

	Params::FortConversationMarker_OnMessageShownOverActor Parms{};

	Parms.OverActor = OverActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationMarker.OnSetIndicatedActor
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           NewIndicatorActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationMarker::OnSetIndicatedActor(class AActor* NewIndicatorActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationMarker", "OnSetIndicatedActor");

	Params::FortConversationMarker_OnSetIndicatedActor Parms{};

	Parms.NewIndicatorActor = NewIndicatorActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationOption.OnOptionConfirmed
// (Event, Public, BlueprintEvent)

void UFortConversationOption::OnOptionConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOption", "OnOptionConfirmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortConversationOption.OnSetupFromDisplayAsset
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          DisplayAsset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationOption::OnSetupFromDisplayAsset(class UObject* DisplayAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOption", "OnSetupFromDisplayAsset");

	Params::FortConversationOption_OnSetupFromDisplayAsset Parms{};

	Parms.DisplayAsset = DisplayAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationOption.OnSetupFromItemDef
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationOption::OnSetupFromItemDef(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOption", "OnSetupFromItemDef");

	Params::FortConversationOption_OnSetupFromItemDef Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationOption.OnSetupPivotFromRadialInformation
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumElements                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationOption::OnSetupPivotFromRadialInformation(int32 NumElements, int32 ItemIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOption", "OnSetupPivotFromRadialInformation");

	Params::FortConversationOption_OnSetupPivotFromRadialInformation Parms{};

	Parms.NumElements = NumElements;
	Parms.ItemIndex = ItemIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationOption.IsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConversationOption::IsAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOption", "IsAvailable");

	Params::FortConversationOption_IsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteConversationUI.FortConversationOptionsPanel.AddChildToDynamicPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Content                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelSlot* UFortConversationOptionsPanel::AddChildToDynamicPanel(class UWidget* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationOptionsPanel", "AddChildToDynamicPanel");

	Params::FortConversationOptionsPanel_AddChildToDynamicPanel Parms{};

	Parms.Content = Content;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteConversationUI.FortConversationScreen.EndConversation
// (Final, Native, Protected)

void UFortConversationScreen::EndConversation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "EndConversation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteConversationUI.FortConversationScreen.OnConversationOptionUnavailable
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortRadialSlot*                  SelectedEntry                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationScreen::OnConversationOptionUnavailable(class UFortRadialSlot* SelectedEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "OnConversationOptionUnavailable");

	Params::FortConversationScreen_OnConversationOptionUnavailable Parms{};

	Parms.SelectedEntry = SelectedEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationScreen.OnConversationStarted
// (Event, Protected, BlueprintEvent)

void UFortConversationScreen::OnConversationStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "OnConversationStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortConversationScreen.OnItemSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   OriginalIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationScreen::OnItemSelected(int32 OriginalIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "OnItemSelected");

	Params::FortConversationScreen_OnItemSelected Parms{};

	Parms.OriginalIndex = OriginalIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationScreen.OnOptionsPopulated
// (Event, Protected, BlueprintEvent)

void UFortConversationScreen::OnOptionsPopulated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "OnOptionsPopulated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortConversationScreen.OnSelectedItemAvailabilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsAvailable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortConversationScreen::OnSelectedItemAvailabilityChanged(bool bIsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "OnSelectedItemAvailabilityChanged");

	Params::FortConversationScreen_OnSelectedItemAvailabilityChanged Parms{};

	Parms.bIsAvailable = bIsAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortConversationScreen.ShouldBlockOptionIntroAnim
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConversationScreen::ShouldBlockOptionIntroAnim() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversationScreen", "ShouldBlockOptionIntroAnim");

	Params::FortConversationScreen_ShouldBlockOptionIntroAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteConversationUI.FortDataDrivenServiceBrief.OnAbleToPurchase
// (Event, Protected, BlueprintEvent)

void UFortDataDrivenServiceBrief::OnAbleToPurchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDataDrivenServiceBrief", "OnAbleToPurchase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortDataDrivenServiceBrief.OnTransactionInfoReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDataDrivenServiceBrief::OnTransactionInfoReceived(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDataDrivenServiceBrief", "OnTransactionInfoReceived");

	Params::FortDataDrivenServiceBrief_OnTransactionInfoReceived Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortDataDrivenServiceBrief.OnUnableToPurchase
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Reason                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDataDrivenServiceBrief::OnUnableToPurchase(const class FText& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDataDrivenServiceBrief", "OnUnableToPurchase");

	Params::FortDataDrivenServiceBrief_OnUnableToPurchase Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortDuelBrief.DisplayLootItems
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UFortItem*>                Items                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDuelBrief::DisplayLootItems(const TArray<class UFortItem*>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDuelBrief", "DisplayLootItems");

	Params::FortDuelBrief_DisplayLootItems Parms{};

	Parms.Items = std::move(Items);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortItemFundBrief.InitializeFromContext
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FConversationContext             ConversationContext                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortItemFundBrief::InitializeFromContext(const struct FConversationContext& ConversationContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemFundBrief", "InitializeFromContext");

	Params::FortItemFundBrief_InitializeFromContext Parms{};

	Parms.ConversationContext = std::move(ConversationContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortItemFundBrief.OnProgressUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   CurrentFundingFraction                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemFundBrief::OnProgressUpdated(const float CurrentFundingFraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemFundBrief", "OnProgressUpdated");

	Params::FortItemFundBrief_OnProgressUpdated Parms{};

	Parms.CurrentFundingFraction = CurrentFundingFraction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortMultiItemFundBrief.UpdateSelectedVisuals
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   SelectedIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiItemFundBrief::UpdateSelectedVisuals(int32 SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiItemFundBrief", "UpdateSelectedVisuals");

	Params::FortMultiItemFundBrief_UpdateSelectedVisuals Parms{};

	Parms.SelectedIndex = SelectedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortNPCTextDisplay.OnItemNameUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           ItemName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortNPCTextDisplay::OnItemNameUpdated(const class FString& ItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNPCTextDisplay", "OnItemNameUpdated");

	Params::FortNPCTextDisplay_OnItemNameUpdated Parms{};

	Parms.ItemName = std::move(ItemName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortNPCTextDisplay.OnTextUpdated
// (Event, Protected, BlueprintEvent)

void UFortNPCTextDisplay::OnTextUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNPCTextDisplay", "OnTextUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortQuestBrief.OnQuestExpirationTimeSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplayExpirationTime                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestBrief::OnQuestExpirationTimeSet(const bool bDisplayExpirationTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestBrief", "OnQuestExpirationTimeSet");

	Params::FortQuestBrief_OnQuestExpirationTimeSet Parms{};

	Parms.bDisplayExpirationTime = bDisplayExpirationTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortQuestBrief.OnQuestInformationRecieved
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Objective                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortRarityItemData              RarityData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                     CategoryTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   XPReward                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MoneyReward                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestBrief::OnQuestInformationRecieved(const class FText& Objective, const struct FFortRarityItemData& RarityData, const struct FGameplayTag& CategoryTag, int32 XPReward, int32 MoneyReward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestBrief", "OnQuestInformationRecieved");

	Params::FortQuestBrief_OnQuestInformationRecieved Parms{};

	Parms.Objective = std::move(Objective);
	Parms.RarityData = std::move(RarityData);
	Parms.CategoryTag = std::move(CategoryTag);
	Parms.XPReward = XPReward;
	Parms.MoneyReward = MoneyReward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortShowFutureStormCircleBrief.OnAbleToPurchase
// (Event, Protected, BlueprintEvent)

void UFortShowFutureStormCircleBrief::OnAbleToPurchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowFutureStormCircleBrief", "OnAbleToPurchase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteConversationUI.FortShowFutureStormCircleBrief.OnUnableToPurchase
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPreventUseStormCircleServiceReason     Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortShowFutureStormCircleBrief::OnUnableToPurchase(EPreventUseStormCircleServiceReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowFutureStormCircleBrief", "OnUnableToPurchase");

	Params::FortShowFutureStormCircleBrief_OnUnableToPurchase Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortTransactionStrip.HandleOnItemCountChanged
// (Final, Native, Private)
// Parameters:
// TScriptInterface<class IFortInventoryOwnerInterface>InventoryOwner                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemDefinition*              Definition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTransactionStrip::HandleOnItemCountChanged(TScriptInterface<class IFortInventoryOwnerInterface> InventoryOwner, class UFortItemDefinition* Definition, int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTransactionStrip", "HandleOnItemCountChanged");

	Params::FortTransactionStrip_HandleOnItemCountChanged Parms{};

	Parms.InventoryOwner = InventoryOwner;
	Parms.Definition = Definition;
	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteConversationUI.FortTransactionStrip.OnSetTransactionCostVisibility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTransactionStrip::OnSetTransactionCostVisibility(const bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTransactionStrip", "OnSetTransactionCostVisibility");

	Params::FortTransactionStrip_OnSetTransactionCostVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortTransactionStrip.OnTransactionInfoReceived
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortServiceTransactionInfo      TransactionInfo                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortTransactionStrip::OnTransactionInfoReceived(const struct FFortServiceTransactionInfo& TransactionInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTransactionStrip", "OnTransactionInfoReceived");

	Params::FortTransactionStrip_OnTransactionInfoReceived Parms{};

	Parms.TransactionInfo = std::move(TransactionInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortUpgradeBrief.OnUnableToUpgrade
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortWeaponUpgradeInteractionResult     CannotUpgradeCause                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeBrief::OnUnableToUpgrade(EFortWeaponUpgradeInteractionResult CannotUpgradeCause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeBrief", "OnUnableToUpgrade");

	Params::FortUpgradeBrief_OnUnableToUpgrade Parms{};

	Parms.CannotUpgradeCause = CannotUpgradeCause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.FortUpgradeBrief.OnUpgradeInfoReceived
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        CurrentWeapon                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeBrief::OnUpgradeInfoReceived(class UFortItem* CurrentWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeBrief", "OnUpgradeInfoReceived");

	Params::FortUpgradeBrief_OnUpgradeInfoReceived Parms{};

	Parms.CurrentWeapon = CurrentWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteConversationUI.MobileConversationScreen.OnHandleConfirmClicked
// (Final, Native, Protected)

void UMobileConversationScreen::OnHandleConfirmClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobileConversationScreen", "OnHandleConfirmClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

