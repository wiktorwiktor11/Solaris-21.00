#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EpicCMS

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct EpicCMS.DownloadCacheEntry
// 0x0028 (0x0028 - 0x0000)
struct FDownloadCacheEntry final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SourceUrl;                                         // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              LastAccessTime;                                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDownloadCacheEntry) == 0x000008, "Wrong alignment on FDownloadCacheEntry");
static_assert(sizeof(FDownloadCacheEntry) == 0x000028, "Wrong size on FDownloadCacheEntry");
static_assert(offsetof(FDownloadCacheEntry, FilePath) == 0x000000, "Member 'FDownloadCacheEntry::FilePath' has a wrong offset!");
static_assert(offsetof(FDownloadCacheEntry, SourceUrl) == 0x000010, "Member 'FDownloadCacheEntry::SourceUrl' has a wrong offset!");
static_assert(offsetof(FDownloadCacheEntry, LastAccessTime) == 0x000020, "Member 'FDownloadCacheEntry::LastAccessTime' has a wrong offset!");

// ScriptStruct EpicCMS.DownloadCache
// 0x0058 (0x0058 - 0x0000)
struct FDownloadCache final
{
public:
	uint8                                         Pad_0[0x4];                                        // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Version;                                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, struct FDownloadCacheEntry> Cache;                                             // 0x0008(0x0050)(NativeAccessSpecifierPrivate)
};
static_assert(alignof(FDownloadCache) == 0x000008, "Wrong alignment on FDownloadCache");
static_assert(sizeof(FDownloadCache) == 0x000058, "Wrong size on FDownloadCache");
static_assert(offsetof(FDownloadCache, Version) == 0x000004, "Member 'FDownloadCache::Version' has a wrong offset!");
static_assert(offsetof(FDownloadCache, Cache) == 0x000008, "Member 'FDownloadCache::Cache' has a wrong offset!");

}

