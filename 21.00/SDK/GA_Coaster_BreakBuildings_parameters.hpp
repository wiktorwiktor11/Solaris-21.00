#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Coaster_BreakBuildings

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Coaster_BreakBuildings.GA_Coaster_BreakBuildings_C.BallerEventHit
// 0x0040 (0x0040 - 0x0000)
struct GA_Coaster_BreakBuildings_C_BallerEventHit final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Force;                                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Hit_Actor;                                         // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Coaster_BreakBuildings_C_BallerEventHit) == 0x000008, "Wrong alignment on GA_Coaster_BreakBuildings_C_BallerEventHit");
static_assert(sizeof(GA_Coaster_BreakBuildings_C_BallerEventHit) == 0x000040, "Wrong size on GA_Coaster_BreakBuildings_C_BallerEventHit");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_BallerEventHit, Location) == 0x000000, "Member 'GA_Coaster_BreakBuildings_C_BallerEventHit::Location' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_BallerEventHit, Normal) == 0x000018, "Member 'GA_Coaster_BreakBuildings_C_BallerEventHit::Normal' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_BallerEventHit, Force) == 0x000030, "Member 'GA_Coaster_BreakBuildings_C_BallerEventHit::Force' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_BallerEventHit, Hit_Actor) == 0x000038, "Member 'GA_Coaster_BreakBuildings_C_BallerEventHit::Hit_Actor' has a wrong offset!");

// Function GA_Coaster_BreakBuildings.GA_Coaster_BreakBuildings_C.ExecuteUbergraph_GA_Coaster_BreakBuildings
// 0x00C8 (0x00C8 - 0x0000)
struct GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Force;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Hit_Actor;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOctopusVehicle_V2_C*                   K2Node_DynamicCast_AsOctopus_Vehicle_V2;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x0088(0x0018)()
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x00A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FVector& Location, const struct FVector& Normal, float Force, class AActor* Hit_Actor)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector& Location, const struct FVector& Normal, float Force, class AActor* Hit_Actor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00BC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings) == 0x000008, "Wrong alignment on GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings");
static_assert(sizeof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings) == 0x0000C8, "Wrong size on GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, EntryPoint) == 0x000000, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_CustomEvent_Location) == 0x000008, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_CustomEvent_Normal) == 0x000020, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_CustomEvent_Force) == 0x000038, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_CustomEvent_Force' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_CustomEvent_Hit_Actor) == 0x000040, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_CustomEvent_Hit_Actor' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000048, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_DynamicCast_AsBuilding_Actor) == 0x000050, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_DynamicCast_AsOctopus_Vehicle_V2) == 0x000060, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_DynamicCast_AsOctopus_Vehicle_V2' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, CallFunc_ActorHasTag_ReturnValue) == 0x000069, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000070, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_Event_bWasCancelled) == 0x000078, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, CallFunc_IsServer_ReturnValue) == 0x000079, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, CallFunc_IsValid_ReturnValue) == 0x00007A, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000080, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, CallFunc_MakeEffectContext_ReturnValue) == 0x000088, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, CallFunc_IsServer_ReturnValue_1) == 0x0000A0, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0000A4, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, CallFunc_IsValid_ReturnValue_1) == 0x0000AC, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_CreateDelegate_OutputDelegate) == 0x0000B0, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000BC, "Member 'GA_Coaster_BreakBuildings_C_ExecuteUbergraph_GA_Coaster_BreakBuildings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function GA_Coaster_BreakBuildings.GA_Coaster_BreakBuildings_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Coaster_BreakBuildings_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Coaster_BreakBuildings_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Coaster_BreakBuildings_C_K2_OnEndAbility");
static_assert(sizeof(GA_Coaster_BreakBuildings_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Coaster_BreakBuildings_C_K2_OnEndAbility");
static_assert(offsetof(GA_Coaster_BreakBuildings_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Coaster_BreakBuildings_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

