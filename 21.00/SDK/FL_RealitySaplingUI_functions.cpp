#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_RealitySaplingUI

#include "Basic.hpp"

#include "FL_RealitySaplingUI_classes.hpp"
#include "FL_RealitySaplingUI_parameters.hpp"


namespace SDK
{

// Function FL_RealitySaplingUI.FL_RealitySaplingUI_C.ConvertToFruitVariantByteArray
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FServerSpawnedFruitSlot>  FruitSlotArray                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<uint8>                           OutByteArray                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_RealitySaplingUI_C::ConvertToFruitVariantByteArray(TArray<struct FServerSpawnedFruitSlot>& FruitSlotArray, TArray<uint8>& OutByteArray, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_RealitySaplingUI_C", "ConvertToFruitVariantByteArray");

	Params::FL_RealitySaplingUI_C_ConvertToFruitVariantByteArray Parms{};

	Parms.FruitSlotArray = std::move(FruitSlotArray);
	Parms.OutByteArray = std::move(OutByteArray);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	FruitSlotArray = std::move(Parms.FruitSlotArray);
	OutByteArray = std::move(Parms.OutByteArray);
}


// Function FL_RealitySaplingUI.FL_RealitySaplingUI_C.Get Reality Sapling Rarity Data
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<uint8>                           FruitStates                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// uint8                                   NurtureLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFruitGrowing                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             RarityName                                             (Parm, OutParm)
// struct FLinearColor                     RarityColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_RealitySaplingUI_C::Get_Reality_Sapling_Rarity_Data(TArray<uint8>& FruitStates, uint8 NurtureLevel, class UObject* __WorldContext, bool* IsFruitGrowing, class FText* RarityName, struct FLinearColor* RarityColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_RealitySaplingUI_C", "Get Reality Sapling Rarity Data");

	Params::FL_RealitySaplingUI_C_Get_Reality_Sapling_Rarity_Data Parms{};

	Parms.FruitStates = std::move(FruitStates);
	Parms.NurtureLevel = NurtureLevel;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	FruitStates = std::move(Parms.FruitStates);

	if (IsFruitGrowing != nullptr)
		*IsFruitGrowing = Parms.IsFruitGrowing;

	if (RarityName != nullptr)
		*RarityName = std::move(Parms.RarityName);

	if (RarityColor != nullptr)
		*RarityColor = std::move(Parms.RarityColor);
}

}

