#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_RealitySaplings_Spawner

#include "Basic.hpp"

#include "RealitySeedGameplayRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "SaplingAgeVariants_structs.hpp"
#include "B_ActorSpawner_Parent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_RealitySaplings_Spawner.B_RealitySaplings_Spawner_C
// 0x00B0 (0x04E0 - 0x0430)
class AB_RealitySaplings_Spawner_C final : public AB_ActorSpawner_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_RealitySaplings_Spawner_C;        // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        LootDropDirection;                                 // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ESaplingAgeVariants                           Sapling_Age;                                       // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* Actor)> Event_ServerActorSpawned;                          // 0x0448(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Overrride_SaplingPersistence;                      // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          OverrideIsLocalPlayerSapling;                      // 0x0459(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_45A[0x2];                                      // 0x045A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Num_Times_Weeded;                                  // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Fruit_1State;                                      // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Fruit_2State;                                      // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Fruit_3State;                                      // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Needs_Weeding;                                     // 0x046C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Day_Offset;                                        // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRealitySaplingPersistentData          MovedSaplingPersistentData;                        // 0x0478(0x0060)(Edit, BlueprintVisible, ExposeOnSpawn)
	class AFortPlayerController*                  PlanterPlayerController;                           // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Event_ServerActorSpawned_Event(class AActor* SpawnedActor);
	void ExecuteUbergraph_B_RealitySaplings_Spawner(int32 EntryPoint);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo);
	void ReceiveRadialDamage(float DamageReceived, const class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser);
	void SpawnActor(const struct FTransform& New_Transform);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_RealitySaplings_Spawner_C">();
	}
	static class AB_RealitySaplings_Spawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_RealitySaplings_Spawner_C>();
	}
};
static_assert(alignof(AB_RealitySaplings_Spawner_C) == 0x000008, "Wrong alignment on AB_RealitySaplings_Spawner_C");
static_assert(sizeof(AB_RealitySaplings_Spawner_C) == 0x0004E0, "Wrong size on AB_RealitySaplings_Spawner_C");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, UberGraphFrame_B_RealitySaplings_Spawner_C) == 0x000430, "Member 'AB_RealitySaplings_Spawner_C::UberGraphFrame_B_RealitySaplings_Spawner_C' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, LootDropDirection) == 0x000438, "Member 'AB_RealitySaplings_Spawner_C::LootDropDirection' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, Sapling_Age) == 0x000440, "Member 'AB_RealitySaplings_Spawner_C::Sapling_Age' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, Event_ServerActorSpawned) == 0x000448, "Member 'AB_RealitySaplings_Spawner_C::Event_ServerActorSpawned' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, Overrride_SaplingPersistence) == 0x000458, "Member 'AB_RealitySaplings_Spawner_C::Overrride_SaplingPersistence' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, OverrideIsLocalPlayerSapling) == 0x000459, "Member 'AB_RealitySaplings_Spawner_C::OverrideIsLocalPlayerSapling' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, Num_Times_Weeded) == 0x00045C, "Member 'AB_RealitySaplings_Spawner_C::Num_Times_Weeded' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, Fruit_1State) == 0x000460, "Member 'AB_RealitySaplings_Spawner_C::Fruit_1State' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, Fruit_2State) == 0x000464, "Member 'AB_RealitySaplings_Spawner_C::Fruit_2State' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, Fruit_3State) == 0x000468, "Member 'AB_RealitySaplings_Spawner_C::Fruit_3State' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, Needs_Weeding) == 0x00046C, "Member 'AB_RealitySaplings_Spawner_C::Needs_Weeding' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, Day_Offset) == 0x000470, "Member 'AB_RealitySaplings_Spawner_C::Day_Offset' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, MovedSaplingPersistentData) == 0x000478, "Member 'AB_RealitySaplings_Spawner_C::MovedSaplingPersistentData' has a wrong offset!");
static_assert(offsetof(AB_RealitySaplings_Spawner_C, PlanterPlayerController) == 0x0004D8, "Member 'AB_RealitySaplings_Spawner_C::PlanterPlayerController' has a wrong offset!");

}

