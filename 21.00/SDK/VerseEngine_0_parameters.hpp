#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseEngine_0

#include "Basic.hpp"

#include "VerseEngine_0_structs.hpp"
#include "Verse_0_structs.hpp"


namespace SDK::Params
{

// Function VerseEngine.Asset._L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RAsync__Load
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RAsync__Load final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RAsync__Load) == 0x000008, "Wrong alignment on Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RAsync__Load");
static_assert(sizeof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RAsync__Load) == 0x000010, "Wrong size on Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RAsync__Load");
static_assert(offsetof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RAsync__Load, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RAsync__Load::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RAsync__Load, RetVal) == 0x000008, "Member 'Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RAsync__Load::RetVal' has a wrong offset!");

// Function VerseEngine.Asset._L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAssetType
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAssetType final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAssetType) == 0x000008, "Wrong alignment on Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAssetType");
static_assert(sizeof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAssetType) == 0x000010, "Wrong size on Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAssetType");
static_assert(offsetof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAssetType, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAssetType::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAssetType, RetVal) == 0x000008, "Member 'Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAssetType::RetVal' has a wrong offset!");

// Function VerseEngine.Asset._L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAsyncLoadEvent
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAsyncLoadEvent final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAsyncLoadEvent) == 0x000008, "Wrong alignment on Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAsyncLoadEvent");
static_assert(sizeof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAsyncLoadEvent) == 0x000010, "Wrong size on Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAsyncLoadEvent");
static_assert(offsetof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAsyncLoadEvent, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAsyncLoadEvent::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAsyncLoadEvent, RetVal) == 0x000008, "Member 'Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RGetAsyncLoadEvent::RetVal' has a wrong offset!");

// Function VerseEngine.Asset._L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RSyncLoad
// 0x0002 (0x0002 - 0x0000)
struct Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RSyncLoad final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0001(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RSyncLoad) == 0x000001, "Wrong alignment on Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RSyncLoad");
static_assert(sizeof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RSyncLoad) == 0x000002, "Wrong size on Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RSyncLoad");
static_assert(offsetof(Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RSyncLoad, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Asset__L_2fVerse_2eorg_2fVerseEngine_2fAssets_2fasset_N_RSyncLoad::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Utils._L_2fVerse_2eorg_2fVerseEngine_2fUtils_N_RGetServerTime
// 0x0010 (0x0010 - 0x0000)
struct Utils__L_2fVerse_2eorg_2fVerseEngine_2fUtils_N_RGetServerTime final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils__L_2fVerse_2eorg_2fVerseEngine_2fUtils_N_RGetServerTime) == 0x000008, "Wrong alignment on Utils__L_2fVerse_2eorg_2fVerseEngine_2fUtils_N_RGetServerTime");
static_assert(sizeof(Utils__L_2fVerse_2eorg_2fVerseEngine_2fUtils_N_RGetServerTime) == 0x000010, "Wrong size on Utils__L_2fVerse_2eorg_2fVerseEngine_2fUtils_N_RGetServerTime");
static_assert(offsetof(Utils__L_2fVerse_2eorg_2fVerseEngine_2fUtils_N_RGetServerTime, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Utils__L_2fVerse_2eorg_2fVerseEngine_2fUtils_N_RGetServerTime::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Utils__L_2fVerse_2eorg_2fVerseEngine_2fUtils_N_RGetServerTime, RetVal) == 0x000008, "Member 'Utils__L_2fVerse_2eorg_2fVerseEngine_2fUtils_N_RGetServerTime::RetVal' has a wrong offset!");

// Function VerseEngine.Utils.Wait_L_Nfloat_R
// 0x0028 (0x0028 - 0x0000)
struct Utils_Wait_L_Nfloat_R final
{
public:
	class Utask*                                  __verse_0xC1E81372_CallingTask;                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0xA3A00DDB_CallerResumeState;              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x2AC0E4D8_CallerCancelState;              // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Utask*                                  RetVal;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_Wait_L_Nfloat_R) == 0x000008, "Wrong alignment on Utils_Wait_L_Nfloat_R");
static_assert(sizeof(Utils_Wait_L_Nfloat_R) == 0x000028, "Wrong size on Utils_Wait_L_Nfloat_R");
static_assert(offsetof(Utils_Wait_L_Nfloat_R, __verse_0xC1E81372_CallingTask) == 0x000000, "Member 'Utils_Wait_L_Nfloat_R::__verse_0xC1E81372_CallingTask' has a wrong offset!");
static_assert(offsetof(Utils_Wait_L_Nfloat_R, __verse_0xA3A00DDB_CallerResumeState) == 0x000008, "Member 'Utils_Wait_L_Nfloat_R::__verse_0xA3A00DDB_CallerResumeState' has a wrong offset!");
static_assert(offsetof(Utils_Wait_L_Nfloat_R, __verse_0x2AC0E4D8_CallerCancelState) == 0x000010, "Member 'Utils_Wait_L_Nfloat_R::__verse_0x2AC0E4D8_CallerCancelState' has a wrong offset!");
static_assert(offsetof(Utils_Wait_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000018, "Member 'Utils_Wait_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Utils_Wait_L_Nfloat_R, RetVal) == 0x000020, "Member 'Utils_Wait_L_Nfloat_R::RetVal' has a wrong offset!");

// Function VerseEngine.Utils.WaitForever
// 0x0028 (0x0028 - 0x0000)
struct Utils_WaitForever final
{
public:
	class Utask*                                  __verse_0xC1E81372_CallingTask;                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0xA3A00DDB_CallerResumeState;              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x2AC0E4D8_CallerCancelState;              // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0018(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class Utask*                                  RetVal;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_WaitForever) == 0x000008, "Wrong alignment on Utils_WaitForever");
static_assert(sizeof(Utils_WaitForever) == 0x000028, "Wrong size on Utils_WaitForever");
static_assert(offsetof(Utils_WaitForever, __verse_0xC1E81372_CallingTask) == 0x000000, "Member 'Utils_WaitForever::__verse_0xC1E81372_CallingTask' has a wrong offset!");
static_assert(offsetof(Utils_WaitForever, __verse_0xA3A00DDB_CallerResumeState) == 0x000008, "Member 'Utils_WaitForever::__verse_0xA3A00DDB_CallerResumeState' has a wrong offset!");
static_assert(offsetof(Utils_WaitForever, __verse_0x2AC0E4D8_CallerCancelState) == 0x000010, "Member 'Utils_WaitForever::__verse_0x2AC0E4D8_CallerCancelState' has a wrong offset!");
static_assert(offsetof(Utils_WaitForever, __verse_0xB2CDDD72_Argument) == 0x000018, "Member 'Utils_WaitForever::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Utils_WaitForever, RetVal) == 0x000020, "Member 'Utils_WaitForever::RetVal' has a wrong offset!");

// Function VerseEngine.Utils.WaitNext
// 0x0028 (0x0028 - 0x0000)
struct Utils_WaitNext final
{
public:
	class Utask*                                  __verse_0xC1E81372_CallingTask;                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0xA3A00DDB_CallerResumeState;              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x2AC0E4D8_CallerCancelState;              // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0018(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class Utask*                                  RetVal;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Utils_WaitNext) == 0x000008, "Wrong alignment on Utils_WaitNext");
static_assert(sizeof(Utils_WaitNext) == 0x000028, "Wrong size on Utils_WaitNext");
static_assert(offsetof(Utils_WaitNext, __verse_0xC1E81372_CallingTask) == 0x000000, "Member 'Utils_WaitNext::__verse_0xC1E81372_CallingTask' has a wrong offset!");
static_assert(offsetof(Utils_WaitNext, __verse_0xA3A00DDB_CallerResumeState) == 0x000008, "Member 'Utils_WaitNext::__verse_0xA3A00DDB_CallerResumeState' has a wrong offset!");
static_assert(offsetof(Utils_WaitNext, __verse_0x2AC0E4D8_CallerCancelState) == 0x000010, "Member 'Utils_WaitNext::__verse_0x2AC0E4D8_CallerCancelState' has a wrong offset!");
static_assert(offsetof(Utils_WaitNext, __verse_0xB2CDDD72_Argument) == 0x000018, "Member 'Utils_WaitNext::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Utils_WaitNext, RetVal) == 0x000020, "Member 'Utils_WaitNext::RetVal' has a wrong offset!");

// Function VerseEngine.Context_Utils$Wait_L_Nfloat_R.Update
// 0x0008 (0x0008 - 0x0000)
struct Context_Utils_Wait_L_Nfloat_R_Update final
{
public:
	int64                                         RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Context_Utils_Wait_L_Nfloat_R_Update) == 0x000008, "Wrong alignment on Context_Utils_Wait_L_Nfloat_R_Update");
static_assert(sizeof(Context_Utils_Wait_L_Nfloat_R_Update) == 0x000008, "Wrong size on Context_Utils_Wait_L_Nfloat_R_Update");
static_assert(offsetof(Context_Utils_Wait_L_Nfloat_R_Update, RetVal) == 0x000000, "Member 'Context_Utils_Wait_L_Nfloat_R_Update::RetVal' has a wrong offset!");

// Function VerseEngine.Context_Utils$WaitForever.Update
// 0x0008 (0x0008 - 0x0000)
struct Context_Utils_WaitForever_Update final
{
public:
	int64                                         RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Context_Utils_WaitForever_Update) == 0x000008, "Wrong alignment on Context_Utils_WaitForever_Update");
static_assert(sizeof(Context_Utils_WaitForever_Update) == 0x000008, "Wrong size on Context_Utils_WaitForever_Update");
static_assert(offsetof(Context_Utils_WaitForever_Update, RetVal) == 0x000000, "Member 'Context_Utils_WaitForever_Update::RetVal' has a wrong offset!");

// Function VerseEngine.Context_Utils$WaitNext.Update
// 0x0008 (0x0008 - 0x0000)
struct Context_Utils_WaitNext_Update final
{
public:
	int64                                         RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Context_Utils_WaitNext_Update) == 0x000008, "Wrong alignment on Context_Utils_WaitNext_Update");
static_assert(sizeof(Context_Utils_WaitNext_Update) == 0x000008, "Wrong size on Context_Utils_WaitNext_Update");
static_assert(offsetof(Context_Utils_WaitNext_Update, RetVal) == 0x000000, "Member 'Context_Utils_WaitNext_Update::RetVal' has a wrong offset!");

// Function VerseEngine.curve_float._L_2fVerse_2eorg_2fVerseEngine_2fUtils_2fcurve__float_N_RGetValueAtTime_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct curve_float__L_2fVerse_2eorg_2fVerseEngine_2fUtils_2fcurve__float_N_RGetValueAtTime_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(curve_float__L_2fVerse_2eorg_2fVerseEngine_2fUtils_2fcurve__float_N_RGetValueAtTime_L_Nfloat_R) == 0x000008, "Wrong alignment on curve_float__L_2fVerse_2eorg_2fVerseEngine_2fUtils_2fcurve__float_N_RGetValueAtTime_L_Nfloat_R");
static_assert(sizeof(curve_float__L_2fVerse_2eorg_2fVerseEngine_2fUtils_2fcurve__float_N_RGetValueAtTime_L_Nfloat_R) == 0x000010, "Wrong size on curve_float__L_2fVerse_2eorg_2fVerseEngine_2fUtils_2fcurve__float_N_RGetValueAtTime_L_Nfloat_R");
static_assert(offsetof(curve_float__L_2fVerse_2eorg_2fVerseEngine_2fUtils_2fcurve__float_N_RGetValueAtTime_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'curve_float__L_2fVerse_2eorg_2fVerseEngine_2fUtils_2fcurve__float_N_RGetValueAtTime_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(curve_float__L_2fVerse_2eorg_2fVerseEngine_2fUtils_2fcurve__float_N_RGetValueAtTime_L_Nfloat_R, RetVal) == 0x000008, "Member 'curve_float__L_2fVerse_2eorg_2fVerseEngine_2fUtils_2fcurve__float_N_RGetValueAtTime_L_Nfloat_R::RetVal' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugArrow_L_Nvector3_M_Nvector3_M_Narrow__draw__params_R
// 0x0078 (0x0078 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugArrow_L_Nvector3_M_Nvector3_M_Narrow__draw__params_R final
{
public:
	struct Ftuple_Lvector3_Mvector3_Marrow__draw__params_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0078)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugArrow_L_Nvector3_M_Nvector3_M_Narrow__draw__params_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugArrow_L_Nvector3_M_Nvector3_M_Narrow__draw__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugArrow_L_Nvector3_M_Nvector3_M_Narrow__draw__params_R) == 0x000078, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugArrow_L_Nvector3_M_Nvector3_M_Narrow__draw__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugArrow_L_Nvector3_M_Nvector3_M_Narrow__draw__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugArrow_L_Nvector3_M_Nvector3_M_Narrow__draw__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugBox_L_Nvector3_M_Nrotation_M_Nbox__draw__params_R
// 0x00A0 (0x00A0 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugBox_L_Nvector3_M_Nrotation_M_Nbox__draw__params_R final
{
public:
	struct Ftuple_Lvector3_Mrotation_Mbox__draw__params_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x00A0)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugBox_L_Nvector3_M_Nrotation_M_Nbox__draw__params_R) == 0x000010, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugBox_L_Nvector3_M_Nrotation_M_Nbox__draw__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugBox_L_Nvector3_M_Nrotation_M_Nbox__draw__params_R) == 0x0000A0, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugBox_L_Nvector3_M_Nrotation_M_Nbox__draw__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugBox_L_Nvector3_M_Nrotation_M_Nbox__draw__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugBox_L_Nvector3_M_Nrotation_M_Nbox__draw__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCapsule_L_Nvector3_M_Nrotation_M_Ncapsule__draw__params_R
// 0x0090 (0x0090 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCapsule_L_Nvector3_M_Nrotation_M_Ncapsule__draw__params_R final
{
public:
	struct Ftuple_Lvector3_Mrotation_Mcapsule__draw__params_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0090)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCapsule_L_Nvector3_M_Nrotation_M_Ncapsule__draw__params_R) == 0x000010, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCapsule_L_Nvector3_M_Nrotation_M_Ncapsule__draw__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCapsule_L_Nvector3_M_Nrotation_M_Ncapsule__draw__params_R) == 0x000090, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCapsule_L_Nvector3_M_Nrotation_M_Ncapsule__draw__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCapsule_L_Nvector3_M_Nrotation_M_Ncapsule__draw__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCapsule_L_Nvector3_M_Nrotation_M_Ncapsule__draw__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCone_L_Nvector3_M_Nvector3_M_Ncone__draw__params_R
// 0x0090 (0x0090 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCone_L_Nvector3_M_Nvector3_M_Ncone__draw__params_R final
{
public:
	struct Ftuple_Lvector3_Mvector3_Mcone__draw__params_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0090)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCone_L_Nvector3_M_Nvector3_M_Ncone__draw__params_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCone_L_Nvector3_M_Nvector3_M_Ncone__draw__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCone_L_Nvector3_M_Nvector3_M_Ncone__draw__params_R) == 0x000090, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCone_L_Nvector3_M_Nvector3_M_Ncone__draw__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCone_L_Nvector3_M_Nvector3_M_Ncone__draw__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCone_L_Nvector3_M_Nvector3_M_Ncone__draw__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCylinder_L_Nvector3_M_Nvector3_M_Ncylinder__draw__params_R
// 0x0090 (0x0090 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCylinder_L_Nvector3_M_Nvector3_M_Ncylinder__draw__params_R final
{
public:
	struct Ftuple_Lvector3_Mvector3_Mcylinder__draw__params_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0090)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCylinder_L_Nvector3_M_Nvector3_M_Ncylinder__draw__params_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCylinder_L_Nvector3_M_Nvector3_M_Ncylinder__draw__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCylinder_L_Nvector3_M_Nvector3_M_Ncylinder__draw__params_R) == 0x000090, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCylinder_L_Nvector3_M_Nvector3_M_Ncylinder__draw__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCylinder_L_Nvector3_M_Nvector3_M_Ncylinder__draw__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugCylinder_L_Nvector3_M_Nvector3_M_Ncylinder__draw__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugLine_L_Nvector3_M_Nvector3_M_Nline__draw__params_R
// 0x0070 (0x0070 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugLine_L_Nvector3_M_Nvector3_M_Nline__draw__params_R final
{
public:
	struct Ftuple_Lvector3_Mvector3_Mline__draw__params_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0070)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugLine_L_Nvector3_M_Nvector3_M_Nline__draw__params_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugLine_L_Nvector3_M_Nvector3_M_Nline__draw__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugLine_L_Nvector3_M_Nvector3_M_Nline__draw__params_R) == 0x000070, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugLine_L_Nvector3_M_Nvector3_M_Nline__draw__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugLine_L_Nvector3_M_Nvector3_M_Nline__draw__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugLine_L_Nvector3_M_Nvector3_M_Nline__draw__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugPoint_L_Nvector3_M_Npoint__draw__params_R
// 0x0058 (0x0058 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugPoint_L_Nvector3_M_Npoint__draw__params_R final
{
public:
	struct Ftuple_Lvector3_Mpoint__draw__params_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0058)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugPoint_L_Nvector3_M_Npoint__draw__params_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugPoint_L_Nvector3_M_Npoint__draw__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugPoint_L_Nvector3_M_Npoint__draw__params_R) == 0x000058, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugPoint_L_Nvector3_M_Npoint__draw__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugPoint_L_Nvector3_M_Npoint__draw__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugPoint_L_Nvector3_M_Npoint__draw__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugSphere_L_Nvector3_M_Nsphere__draw__params_R
// 0x0068 (0x0068 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugSphere_L_Nvector3_M_Nsphere__draw__params_R final
{
public:
	struct Ftuple_Lvector3_Msphere__draw__params_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0068)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugSphere_L_Nvector3_M_Nsphere__draw__params_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugSphere_L_Nvector3_M_Nsphere__draw__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugSphere_L_Nvector3_M_Nsphere__draw__params_R) == 0x000068, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugSphere_L_Nvector3_M_Nsphere__draw__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugSphere_L_Nvector3_M_Nsphere__draw__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RDrawDebugSphere_L_Nvector3_M_Nsphere__draw__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_Rlog__channel__handle_L_N_Kchar_R
// 0x0020 (0x0020 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_Rlog__channel__handle_L_N_Kchar_R final
{
public:
	FVerseStringProperty_                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	struct Flog_channel_handle                    RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_Rlog__channel__handle_L_N_Kchar_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_Rlog__channel__handle_L_N_Kchar_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_Rlog__channel__handle_L_N_Kchar_R) == 0x000020, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_Rlog__channel__handle_L_N_Kchar_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_Rlog__channel__handle_L_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_Rlog__channel__handle_L_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_Rlog__channel__handle_L_N_Kchar_R, RetVal) == 0x000010, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_Rlog__channel__handle_L_N_Kchar_R::RetVal' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__params_R
// 0x0028 (0x0028 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__params_R final
{
public:
	struct Ftuple_L_Kchar_Mlog__params_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0028)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__params_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__params_R) == 0x000028, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__screen__params_R
// 0x0050 (0x0050 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__screen__params_R final
{
public:
	struct Ftuple_L_Kchar_Mlog__screen__params_R  __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0050)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__screen__params_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__screen__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__screen__params_R) == 0x000050, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__screen__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__screen__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_M_Nlog__screen__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R
// 0x0060 (0x0060 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R final
{
public:
	FVerseStringProperty_                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	TDelegate<void(const struct Ftuple_L_Kchar_Mlog__params_R& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0010(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_L_Kchar_Mlog__params_R          _TEMP_1;                                           // 0x0020(0x0028)(HasGetValueTypeHash)
	struct Flog_params                            _TEMP_2;                                           // 0x0048(0x0018)()
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R) == 0x000060, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R, _TEMP_0) == 0x000010, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R, _TEMP_1) == 0x000020, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R::_TEMP_1' has a wrong offset!");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R, _TEMP_2) == 0x000048, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLog_L_N_Kchar_R::_TEMP_2' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack
// 0x0028 (0x0028 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct Flog_params& __verse_0xB2CDDD72_Argument)> _TEMP_0;                                           // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct Flog_params                            _TEMP_1;                                           // 0x0010(0x0018)()
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack) == 0x000028, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack, _TEMP_0) == 0x000004, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack, _TEMP_1) == 0x000010, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack::_TEMP_1' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__params_R
// 0x0018 (0x0018 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__params_R final
{
public:
	struct Flog_params                            __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__params_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__params_R) == 0x000018, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics._L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__screen__params_R
// 0x0040 (0x0040 - 0x0000)
struct Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__screen__params_R final
{
public:
	struct Flog_screen_params                     __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0040)(Parm)
};
static_assert(alignof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__screen__params_R) == 0x000008, "Wrong alignment on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__screen__params_R");
static_assert(sizeof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__screen__params_R) == 0x000040, "Wrong size on Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__screen__params_R");
static_assert(offsetof(Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__screen__params_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Diagnostics__L_2fVerse_2eorg_2fVerseEngine_2fDiagnostics_N_RLogCallstack_L_Nlog__screen__params_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.Diagnostics.arrow_draw_params$Factory
// 0x0078 (0x0078 - 0x0000)
struct Diagnostics_arrow_draw_params_Factory final
{
public:
	struct Farrow_draw_params                     RetVal;                                            // 0x0000(0x0048)(Parm, OutParm, ReturnParm)
	struct Fcolor_v                               _TEMP_0;                                           // 0x0048(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0068(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_arrow_draw_params_Factory) == 0x000008, "Wrong alignment on Diagnostics_arrow_draw_params_Factory");
static_assert(sizeof(Diagnostics_arrow_draw_params_Factory) == 0x000078, "Wrong size on Diagnostics_arrow_draw_params_Factory");
static_assert(offsetof(Diagnostics_arrow_draw_params_Factory, RetVal) == 0x000000, "Member 'Diagnostics_arrow_draw_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(Diagnostics_arrow_draw_params_Factory, _TEMP_0) == 0x000048, "Member 'Diagnostics_arrow_draw_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics_arrow_draw_params_Factory, _TEMP_1) == 0x000068, "Member 'Diagnostics_arrow_draw_params_Factory::_TEMP_1' has a wrong offset!");

// Function VerseEngine.Diagnostics.box_draw_params$Factory
// 0x00A0 (0x00A0 - 0x0000)
struct Diagnostics_box_draw_params_Factory final
{
public:
	struct Fbox_draw_params                       RetVal;                                            // 0x0000(0x0058)(Parm, OutParm, ReturnParm)
	struct Fvector3                               _TEMP_0;                                           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Fcolor_v                               _TEMP_1;                                           // 0x0070(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_2;                                           // 0x0090(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_box_draw_params_Factory) == 0x000008, "Wrong alignment on Diagnostics_box_draw_params_Factory");
static_assert(sizeof(Diagnostics_box_draw_params_Factory) == 0x0000A0, "Wrong size on Diagnostics_box_draw_params_Factory");
static_assert(offsetof(Diagnostics_box_draw_params_Factory, RetVal) == 0x000000, "Member 'Diagnostics_box_draw_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(Diagnostics_box_draw_params_Factory, _TEMP_0) == 0x000058, "Member 'Diagnostics_box_draw_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics_box_draw_params_Factory, _TEMP_1) == 0x000070, "Member 'Diagnostics_box_draw_params_Factory::_TEMP_1' has a wrong offset!");
static_assert(offsetof(Diagnostics_box_draw_params_Factory, _TEMP_2) == 0x000090, "Member 'Diagnostics_box_draw_params_Factory::_TEMP_2' has a wrong offset!");

// Function VerseEngine.Diagnostics.capsule_draw_params$Factory
// 0x0080 (0x0080 - 0x0000)
struct Diagnostics_capsule_draw_params_Factory final
{
public:
	struct Fcapsule_draw_params                   RetVal;                                            // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
	struct Fcolor_v                               _TEMP_0;                                           // 0x0050(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0070(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_capsule_draw_params_Factory) == 0x000008, "Wrong alignment on Diagnostics_capsule_draw_params_Factory");
static_assert(sizeof(Diagnostics_capsule_draw_params_Factory) == 0x000080, "Wrong size on Diagnostics_capsule_draw_params_Factory");
static_assert(offsetof(Diagnostics_capsule_draw_params_Factory, RetVal) == 0x000000, "Member 'Diagnostics_capsule_draw_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(Diagnostics_capsule_draw_params_Factory, _TEMP_0) == 0x000050, "Member 'Diagnostics_capsule_draw_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics_capsule_draw_params_Factory, _TEMP_1) == 0x000070, "Member 'Diagnostics_capsule_draw_params_Factory::_TEMP_1' has a wrong offset!");

// Function VerseEngine.Diagnostics.cone_draw_params$Factory
// 0x0090 (0x0090 - 0x0000)
struct Diagnostics_cone_draw_params_Factory final
{
public:
	struct Fcone_draw_params                      RetVal;                                            // 0x0000(0x0060)(Parm, OutParm, ReturnParm)
	struct Fcolor_v                               _TEMP_0;                                           // 0x0060(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0080(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_cone_draw_params_Factory) == 0x000008, "Wrong alignment on Diagnostics_cone_draw_params_Factory");
static_assert(sizeof(Diagnostics_cone_draw_params_Factory) == 0x000090, "Wrong size on Diagnostics_cone_draw_params_Factory");
static_assert(offsetof(Diagnostics_cone_draw_params_Factory, RetVal) == 0x000000, "Member 'Diagnostics_cone_draw_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(Diagnostics_cone_draw_params_Factory, _TEMP_0) == 0x000060, "Member 'Diagnostics_cone_draw_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics_cone_draw_params_Factory, _TEMP_1) == 0x000080, "Member 'Diagnostics_cone_draw_params_Factory::_TEMP_1' has a wrong offset!");

// Function VerseEngine.Diagnostics.cylinder_draw_params$Factory
// 0x0090 (0x0090 - 0x0000)
struct Diagnostics_cylinder_draw_params_Factory final
{
public:
	struct Fcylinder_draw_params                  RetVal;                                            // 0x0000(0x0060)(Parm, OutParm, ReturnParm)
	struct Fcolor_v                               _TEMP_0;                                           // 0x0060(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0080(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_cylinder_draw_params_Factory) == 0x000008, "Wrong alignment on Diagnostics_cylinder_draw_params_Factory");
static_assert(sizeof(Diagnostics_cylinder_draw_params_Factory) == 0x000090, "Wrong size on Diagnostics_cylinder_draw_params_Factory");
static_assert(offsetof(Diagnostics_cylinder_draw_params_Factory, RetVal) == 0x000000, "Member 'Diagnostics_cylinder_draw_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(Diagnostics_cylinder_draw_params_Factory, _TEMP_0) == 0x000060, "Member 'Diagnostics_cylinder_draw_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics_cylinder_draw_params_Factory, _TEMP_1) == 0x000080, "Member 'Diagnostics_cylinder_draw_params_Factory::_TEMP_1' has a wrong offset!");

// Function VerseEngine.Diagnostics.line_draw_params$Factory
// 0x0070 (0x0070 - 0x0000)
struct Diagnostics_line_draw_params_Factory final
{
public:
	struct Fline_draw_params                      RetVal;                                            // 0x0000(0x0040)(Parm, OutParm, ReturnParm)
	struct Fcolor_v                               _TEMP_0;                                           // 0x0040(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0060(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_line_draw_params_Factory) == 0x000008, "Wrong alignment on Diagnostics_line_draw_params_Factory");
static_assert(sizeof(Diagnostics_line_draw_params_Factory) == 0x000070, "Wrong size on Diagnostics_line_draw_params_Factory");
static_assert(offsetof(Diagnostics_line_draw_params_Factory, RetVal) == 0x000000, "Member 'Diagnostics_line_draw_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(Diagnostics_line_draw_params_Factory, _TEMP_0) == 0x000040, "Member 'Diagnostics_line_draw_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics_line_draw_params_Factory, _TEMP_1) == 0x000060, "Member 'Diagnostics_line_draw_params_Factory::_TEMP_1' has a wrong offset!");

// Function VerseEngine.Diagnostics.log_channel_handle$Factory
// 0x0010 (0x0010 - 0x0000)
struct Diagnostics_log_channel_handle_Factory final
{
public:
	struct Flog_channel_handle                    RetVal;                                            // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(Diagnostics_log_channel_handle_Factory) == 0x000008, "Wrong alignment on Diagnostics_log_channel_handle_Factory");
static_assert(sizeof(Diagnostics_log_channel_handle_Factory) == 0x000010, "Wrong size on Diagnostics_log_channel_handle_Factory");
static_assert(offsetof(Diagnostics_log_channel_handle_Factory, RetVal) == 0x000000, "Member 'Diagnostics_log_channel_handle_Factory::RetVal' has a wrong offset!");

// Function VerseEngine.Diagnostics.log_params$Factory
// 0x0050 (0x0050 - 0x0000)
struct Diagnostics_log_params_Factory final
{
public:
	struct Flog_params                            RetVal;                                            // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct Flog_channel_handle                    _TEMP_0;                                           // 0x0018(0x0010)()
	TDelegate<void(FVerseStringProperty_ __verse_0xB2CDDD72_Argument)> _TEMP_1;                                           // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         _TEMP_2;                                           // 0x0038(0x0010)(HasGetValueTypeHash)
	struct VerseEngine_0::Ftuple_L_R              __verse_0x00000000__1;                             // 0x0048(0x0001)(HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_log_params_Factory) == 0x000008, "Wrong alignment on Diagnostics_log_params_Factory");
static_assert(sizeof(Diagnostics_log_params_Factory) == 0x000050, "Wrong size on Diagnostics_log_params_Factory");
static_assert(offsetof(Diagnostics_log_params_Factory, RetVal) == 0x000000, "Member 'Diagnostics_log_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(Diagnostics_log_params_Factory, _TEMP_0) == 0x000018, "Member 'Diagnostics_log_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics_log_params_Factory, _TEMP_1) == 0x000028, "Member 'Diagnostics_log_params_Factory::_TEMP_1' has a wrong offset!");
static_assert(offsetof(Diagnostics_log_params_Factory, _TEMP_2) == 0x000038, "Member 'Diagnostics_log_params_Factory::_TEMP_2' has a wrong offset!");
static_assert(offsetof(Diagnostics_log_params_Factory, __verse_0x00000000__1) == 0x000048, "Member 'Diagnostics_log_params_Factory::__verse_0x00000000__1' has a wrong offset!");

// Function VerseEngine.Diagnostics.log_screen_params$Factory
// 0x0098 (0x0098 - 0x0000)
struct Diagnostics_log_screen_params_Factory final
{
public:
	struct Flog_screen_params                     RetVal;                                            // 0x0000(0x0040)(Parm, OutParm, ReturnParm)
	struct Flog_channel_handle                    _TEMP_0;                                           // 0x0040(0x0010)()
	TDelegate<void(FVerseStringProperty_ __verse_0xB2CDDD72_Argument)> _TEMP_1;                                           // 0x0050(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         _TEMP_2;                                           // 0x0060(0x0010)(HasGetValueTypeHash)
	struct VerseEngine_0::Ftuple_L_R              __verse_0x00000000__1;                             // 0x0070(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fcolor_v                               _TEMP_3;                                           // 0x0078(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Diagnostics_log_screen_params_Factory) == 0x000008, "Wrong alignment on Diagnostics_log_screen_params_Factory");
static_assert(sizeof(Diagnostics_log_screen_params_Factory) == 0x000098, "Wrong size on Diagnostics_log_screen_params_Factory");
static_assert(offsetof(Diagnostics_log_screen_params_Factory, RetVal) == 0x000000, "Member 'Diagnostics_log_screen_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(Diagnostics_log_screen_params_Factory, _TEMP_0) == 0x000040, "Member 'Diagnostics_log_screen_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics_log_screen_params_Factory, _TEMP_1) == 0x000050, "Member 'Diagnostics_log_screen_params_Factory::_TEMP_1' has a wrong offset!");
static_assert(offsetof(Diagnostics_log_screen_params_Factory, _TEMP_2) == 0x000060, "Member 'Diagnostics_log_screen_params_Factory::_TEMP_2' has a wrong offset!");
static_assert(offsetof(Diagnostics_log_screen_params_Factory, __verse_0x00000000__1) == 0x000070, "Member 'Diagnostics_log_screen_params_Factory::__verse_0x00000000__1' has a wrong offset!");
static_assert(offsetof(Diagnostics_log_screen_params_Factory, _TEMP_3) == 0x000078, "Member 'Diagnostics_log_screen_params_Factory::_TEMP_3' has a wrong offset!");

// Function VerseEngine.Diagnostics.point_draw_params$Factory
// 0x0070 (0x0070 - 0x0000)
struct Diagnostics_point_draw_params_Factory final
{
public:
	struct Fpoint_draw_params                     RetVal;                                            // 0x0000(0x0040)(Parm, OutParm, ReturnParm)
	struct Fcolor_v                               _TEMP_0;                                           // 0x0040(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0060(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_point_draw_params_Factory) == 0x000008, "Wrong alignment on Diagnostics_point_draw_params_Factory");
static_assert(sizeof(Diagnostics_point_draw_params_Factory) == 0x000070, "Wrong size on Diagnostics_point_draw_params_Factory");
static_assert(offsetof(Diagnostics_point_draw_params_Factory, RetVal) == 0x000000, "Member 'Diagnostics_point_draw_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(Diagnostics_point_draw_params_Factory, _TEMP_0) == 0x000040, "Member 'Diagnostics_point_draw_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics_point_draw_params_Factory, _TEMP_1) == 0x000060, "Member 'Diagnostics_point_draw_params_Factory::_TEMP_1' has a wrong offset!");

// Function VerseEngine.Diagnostics.sphere_draw_params$Factory
// 0x0080 (0x0080 - 0x0000)
struct Diagnostics_sphere_draw_params_Factory final
{
public:
	struct Fsphere_draw_params                    RetVal;                                            // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
	struct Fcolor_v                               _TEMP_0;                                           // 0x0050(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FOptionProperty_                              _TEMP_1;                                           // 0x0070(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Diagnostics_sphere_draw_params_Factory) == 0x000008, "Wrong alignment on Diagnostics_sphere_draw_params_Factory");
static_assert(sizeof(Diagnostics_sphere_draw_params_Factory) == 0x000080, "Wrong size on Diagnostics_sphere_draw_params_Factory");
static_assert(offsetof(Diagnostics_sphere_draw_params_Factory, RetVal) == 0x000000, "Member 'Diagnostics_sphere_draw_params_Factory::RetVal' has a wrong offset!");
static_assert(offsetof(Diagnostics_sphere_draw_params_Factory, _TEMP_0) == 0x000050, "Member 'Diagnostics_sphere_draw_params_Factory::_TEMP_0' has a wrong offset!");
static_assert(offsetof(Diagnostics_sphere_draw_params_Factory, _TEMP_1) == 0x000070, "Member 'Diagnostics_sphere_draw_params_Factory::_TEMP_1' has a wrong offset!");

// Function VerseEngine.entity_v._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RAddComponent_L_Ntype_R
// 0x0010 (0x0010 - 0x0000)
struct entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RAddComponent_L_Ntype_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RAddComponent_L_Ntype_R) == 0x000008, "Wrong alignment on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RAddComponent_L_Ntype_R");
static_assert(sizeof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RAddComponent_L_Ntype_R) == 0x000010, "Wrong size on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RAddComponent_L_Ntype_R");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RAddComponent_L_Ntype_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RAddComponent_L_Ntype_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RAddComponent_L_Ntype_R, RetVal) == 0x000008, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RAddComponent_L_Ntype_R::RetVal' has a wrong offset!");

// Function VerseEngine.entity_v._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RDestroy
// 0x0002 (0x0002 - 0x0000)
struct entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RDestroy final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0001(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RDestroy) == 0x000001, "Wrong alignment on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RDestroy");
static_assert(sizeof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RDestroy) == 0x000002, "Wrong size on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RDestroy");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RDestroy, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RDestroy::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.entity_v._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R
// 0x0038 (0x0038 - 0x0000)
struct entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R final
{
public:
	TArray<class UClass*>                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm)
	int64                                         _TEMP_0;                                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _TEMP_1;                                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 __verse_0xF655308E_ComponentClass_4;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UClass* __verse_0xB2CDDD72_Argument)> _TEMP_2;                                           // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R) == 0x000008, "Wrong alignment on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R");
static_assert(sizeof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R) == 0x000038, "Wrong size on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R, _TEMP_0) == 0x000010, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R::_TEMP_0' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R, _TEMP_1) == 0x000018, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R::_TEMP_1' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R, __verse_0xF655308E_ComponentClass_4) == 0x000020, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R::__verse_0xF655308E_ComponentClass_4' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R, _TEMP_2) == 0x000028, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_REnsureComponents_L_N_Ksubtype_Lcomponent_R_R::_TEMP_2' has a wrong offset!");

// Function VerseEngine.entity_v._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetAllComponentsOfType_L_Ntype_R
// 0x0018 (0x0018 - 0x0000)
struct entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetAllComponentsOfType_L_Ntype_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UEntityComponent*>               RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetAllComponentsOfType_L_Ntype_R) == 0x000008, "Wrong alignment on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetAllComponentsOfType_L_Ntype_R");
static_assert(sizeof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetAllComponentsOfType_L_Ntype_R) == 0x000018, "Wrong size on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetAllComponentsOfType_L_Ntype_R");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetAllComponentsOfType_L_Ntype_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetAllComponentsOfType_L_Ntype_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetAllComponentsOfType_L_Ntype_R, RetVal) == 0x000008, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetAllComponentsOfType_L_Ntype_R::RetVal' has a wrong offset!");

// Function VerseEngine.entity_v._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetComponentOfType_L_Ntype_R
// 0x0010 (0x0010 - 0x0000)
struct entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetComponentOfType_L_Ntype_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetComponentOfType_L_Ntype_R) == 0x000008, "Wrong alignment on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetComponentOfType_L_Ntype_R");
static_assert(sizeof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetComponentOfType_L_Ntype_R) == 0x000010, "Wrong size on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetComponentOfType_L_Ntype_R");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetComponentOfType_L_Ntype_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetComponentOfType_L_Ntype_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetComponentOfType_L_Ntype_R, RetVal) == 0x000008, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetComponentOfType_L_Ntype_R::RetVal' has a wrong offset!");

// Function VerseEngine.entity_v._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetFullname
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetFullname final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetFullname) == 0x000008, "Wrong alignment on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetFullname");
static_assert(sizeof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetFullname) == 0x000018, "Wrong size on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetFullname");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetFullname, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetFullname::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetFullname, RetVal) == 0x000008, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetFullname::RetVal' has a wrong offset!");

// Function VerseEngine.entity_v._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetName
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetName final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetName) == 0x000008, "Wrong alignment on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetName");
static_assert(sizeof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetName) == 0x000018, "Wrong size on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetName");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetName, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetName::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetName, RetVal) == 0x000008, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetName::RetVal' has a wrong offset!");

// Function VerseEngine.entity_v._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetOrCreateComponentOfType_L_Ntype_R
// 0x0010 (0x0010 - 0x0000)
struct entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetOrCreateComponentOfType_L_Ntype_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetOrCreateComponentOfType_L_Ntype_R) == 0x000008, "Wrong alignment on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetOrCreateComponentOfType_L_Ntype_R");
static_assert(sizeof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetOrCreateComponentOfType_L_Ntype_R) == 0x000010, "Wrong size on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetOrCreateComponentOfType_L_Ntype_R");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetOrCreateComponentOfType_L_Ntype_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetOrCreateComponentOfType_L_Ntype_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetOrCreateComponentOfType_L_Ntype_R, RetVal) == 0x000008, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RGetOrCreateComponentOfType_L_Ntype_R::RetVal' has a wrong offset!");

// Function VerseEngine.entity_v._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R
// 0x0048 (0x0048 - 0x0000)
struct entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R final
{
public:
	TArray<class UClass*>                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _TEMP_0 : 1;                                       // 0x0012(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _TEMP_1;                                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _TEMP_2;                                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 __verse_0xF655308E_ComponentClass_4;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _TEMP_3;                                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UClass* __verse_0xB2CDDD72_Argument)> _TEMP_4;                                           // 0x0038(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _TEMP_5;                                           // 0x0044(0x0002)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R) == 0x000008, "Wrong alignment on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R");
static_assert(sizeof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R) == 0x000048, "Wrong size on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R, RetVal) == 0x000010, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R::RetVal' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R, _TEMP_1) == 0x000018, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R::_TEMP_1' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R, _TEMP_2) == 0x000020, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R::_TEMP_2' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R, __verse_0xF655308E_ComponentClass_4) == 0x000028, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R::__verse_0xF655308E_ComponentClass_4' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R, _TEMP_3) == 0x000030, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R::_TEMP_3' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R, _TEMP_4) == 0x000038, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R::_TEMP_4' has a wrong offset!");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R, _TEMP_5) == 0x000044, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RHasComponents_L_N_Ksubtype_Lcomponent_R_R::_TEMP_5' has a wrong offset!");

// Function VerseEngine.entity_v._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RRemoveComponent_L_Ncomponent_R
// 0x0010 (0x0010 - 0x0000)
struct entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RRemoveComponent_L_Ncomponent_R final
{
public:
	class UEntityComponent*                       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RRemoveComponent_L_Ncomponent_R) == 0x000008, "Wrong alignment on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RRemoveComponent_L_Ncomponent_R");
static_assert(sizeof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RRemoveComponent_L_Ncomponent_R) == 0x000010, "Wrong size on entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RRemoveComponent_L_Ncomponent_R");
static_assert(offsetof(entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RRemoveComponent_L_Ncomponent_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'entity_v__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fentity__v_N_RRemoveComponent_L_Ncomponent_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.EntityHelpers._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RDestroyObject_L_Ncomponent_R
// 0x0010 (0x0010 - 0x0000)
struct EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RDestroyObject_L_Ncomponent_R final
{
public:
	class UEntityComponent*                       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RDestroyObject_L_Ncomponent_R) == 0x000008, "Wrong alignment on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RDestroyObject_L_Ncomponent_R");
static_assert(sizeof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RDestroyObject_L_Ncomponent_R) == 0x000010, "Wrong size on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RDestroyObject_L_Ncomponent_R");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RDestroyObject_L_Ncomponent_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RDestroyObject_L_Ncomponent_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.EntityHelpers._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetComponentOfTypeC_L_Ncomponent_M_Ntype_R
// 0x0018 (0x0018 - 0x0000)
struct EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetComponentOfTypeC_L_Ncomponent_M_Ntype_R final
{
public:
	struct VerseEngine_0::Ftuple_Lcomponent_Mtype_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetComponentOfTypeC_L_Ncomponent_M_Ntype_R) == 0x000008, "Wrong alignment on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetComponentOfTypeC_L_Ncomponent_M_Ntype_R");
static_assert(sizeof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetComponentOfTypeC_L_Ncomponent_M_Ntype_R) == 0x000018, "Wrong size on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetComponentOfTypeC_L_Ncomponent_M_Ntype_R");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetComponentOfTypeC_L_Ncomponent_M_Ntype_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetComponentOfTypeC_L_Ncomponent_M_Ntype_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetComponentOfTypeC_L_Ncomponent_M_Ntype_R, RetVal) == 0x000010, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetComponentOfTypeC_L_Ncomponent_M_Ntype_R::RetVal' has a wrong offset!");

// Function VerseEngine.EntityHelpers._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetEntityFromComponent_L_Ncomponent_R
// 0x0010 (0x0010 - 0x0000)
struct EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetEntityFromComponent_L_Ncomponent_R final
{
public:
	class UEntityComponent*                       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetEntityFromComponent_L_Ncomponent_R) == 0x000008, "Wrong alignment on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetEntityFromComponent_L_Ncomponent_R");
static_assert(sizeof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetEntityFromComponent_L_Ncomponent_R) == 0x000010, "Wrong size on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetEntityFromComponent_L_Ncomponent_R");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetEntityFromComponent_L_Ncomponent_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetEntityFromComponent_L_Ncomponent_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetEntityFromComponent_L_Ncomponent_R, RetVal) == 0x000008, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RGetEntityFromComponent_L_Ncomponent_R::RetVal' has a wrong offset!");

// Function VerseEngine.EntityHelpers._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Ntransform__v_M_N_Kchar_R
// 0x0070 (0x0070 - 0x0000)
struct EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Ntransform__v_M_N_Kchar_R final
{
public:
	struct VerseEngine_0::Ftuple_Ltransform__v_M_Kchar_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0060)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Ntransform__v_M_N_Kchar_R) == 0x000010, "Wrong alignment on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Ntransform__v_M_N_Kchar_R");
static_assert(sizeof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Ntransform__v_M_N_Kchar_R) == 0x000070, "Wrong size on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Ntransform__v_M_N_Kchar_R");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Ntransform__v_M_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Ntransform__v_M_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Ntransform__v_M_N_Kchar_R, RetVal) == 0x000060, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Ntransform__v_M_N_Kchar_R::RetVal' has a wrong offset!");

// Function VerseEngine.EntityHelpers._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_N_Kchar_R
// 0x0030 (0x0030 - 0x0000)
struct EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_N_Kchar_R final
{
public:
	struct VerseEngine_0::Ftuple_Lvector3_M_Kchar_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0028)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_N_Kchar_R) == 0x000008, "Wrong alignment on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_N_Kchar_R");
static_assert(sizeof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_N_Kchar_R) == 0x000030, "Wrong size on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_N_Kchar_R");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_N_Kchar_R, RetVal) == 0x000028, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_N_Kchar_R::RetVal' has a wrong offset!");

// Function VerseEngine.EntityHelpers._L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_Nvector3_M_Nvector3_M_N_Kchar_R
// 0x0060 (0x0060 - 0x0000)
struct EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_Nvector3_M_Nvector3_M_N_Kchar_R final
{
public:
	struct Ftuple_Lvector3_Mvector3_Mvector3_M_Kchar_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0058)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_Nvector3_M_Nvector3_M_N_Kchar_R) == 0x000008, "Wrong alignment on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_Nvector3_M_Nvector3_M_N_Kchar_R");
static_assert(sizeof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_Nvector3_M_Nvector3_M_N_Kchar_R) == 0x000060, "Wrong size on EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_Nvector3_M_Nvector3_M_N_Kchar_R");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_Nvector3_M_Nvector3_M_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_Nvector3_M_Nvector3_M_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_Nvector3_M_Nvector3_M_N_Kchar_R, RetVal) == 0x000058, "Member 'EntityHelpers__L_2fVerse_2eorg_2fVerseEngine_2fEntity__V_2fEntityHelpers_N_RSpawnEntity_L_Nvector3_M_Nvector3_M_Nvector3_M_N_Kchar_R::RetVal' has a wrong offset!");

// Function VerseEngine.VerseEngine._L_2fVerse_2eorg_2fVerseEngine_N_RInvalidDelegateHandle
// 0x0018 (0x0018 - 0x0000)
struct VerseEngine__L_2fVerse_2eorg_2fVerseEngine_N_RInvalidDelegateHandle final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdelegate_handle                       RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseEngine__L_2fVerse_2eorg_2fVerseEngine_N_RInvalidDelegateHandle) == 0x000008, "Wrong alignment on VerseEngine__L_2fVerse_2eorg_2fVerseEngine_N_RInvalidDelegateHandle");
static_assert(sizeof(VerseEngine__L_2fVerse_2eorg_2fVerseEngine_N_RInvalidDelegateHandle) == 0x000018, "Wrong size on VerseEngine__L_2fVerse_2eorg_2fVerseEngine_N_RInvalidDelegateHandle");
static_assert(offsetof(VerseEngine__L_2fVerse_2eorg_2fVerseEngine_N_RInvalidDelegateHandle, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'VerseEngine__L_2fVerse_2eorg_2fVerseEngine_N_RInvalidDelegateHandle::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(VerseEngine__L_2fVerse_2eorg_2fVerseEngine_N_RInvalidDelegateHandle, RetVal) == 0x000008, "Member 'VerseEngine__L_2fVerse_2eorg_2fVerseEngine_N_RInvalidDelegateHandle::RetVal' has a wrong offset!");

// Function VerseEngine.VerseEngine.delegate_handle$Factory
// 0x0010 (0x0010 - 0x0000)
struct VerseEngine_delegate_handle_Factory final
{
public:
	struct Fdelegate_handle                       RetVal;                                            // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(VerseEngine_delegate_handle_Factory) == 0x000008, "Wrong alignment on VerseEngine_delegate_handle_Factory");
static_assert(sizeof(VerseEngine_delegate_handle_Factory) == 0x000010, "Wrong size on VerseEngine_delegate_handle_Factory");
static_assert(offsetof(VerseEngine_delegate_handle_Factory, RetVal) == 0x000000, "Member 'VerseEngine_delegate_handle_Factory::RetVal' has a wrong offset!");

// Function VerseEngine.float_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RBroadcast_L_Nfloat_R
// 0x0008 (0x0008 - 0x0000)
struct float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RBroadcast_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RBroadcast_L_Nfloat_R) == 0x000008, "Wrong alignment on float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RBroadcast_L_Nfloat_R");
static_assert(sizeof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RBroadcast_L_Nfloat_R) == 0x000008, "Wrong size on float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RBroadcast_L_Nfloat_R");
static_assert(offsetof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RBroadcast_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RBroadcast_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.float_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_REmpty
// 0x0001 (0x0001 - 0x0000)
struct float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_REmpty final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_REmpty) == 0x000001, "Wrong alignment on float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_REmpty");
static_assert(sizeof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_REmpty) == 0x000001, "Wrong size on float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_REmpty");
static_assert(offsetof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_REmpty, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_REmpty::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.float_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RSubscribe_L_Nfloat_Tvoid_R
// 0x0020 (0x0020 - 0x0000)
struct float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RSubscribe_L_Nfloat_Tvoid_R final
{
public:
	TDelegate<void(double __verse_0xB2CDDD72_Argument)> __verse_0xB2CDDD72_Argument;                       // 0x0000(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdelegate_handle                       RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RSubscribe_L_Nfloat_Tvoid_R) == 0x000008, "Wrong alignment on float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RSubscribe_L_Nfloat_Tvoid_R");
static_assert(sizeof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RSubscribe_L_Nfloat_Tvoid_R) == 0x000020, "Wrong size on float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RSubscribe_L_Nfloat_Tvoid_R");
static_assert(offsetof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RSubscribe_L_Nfloat_Tvoid_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RSubscribe_L_Nfloat_Tvoid_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RSubscribe_L_Nfloat_Tvoid_R, RetVal) == 0x000010, "Member 'float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RSubscribe_L_Nfloat_Tvoid_R::RetVal' has a wrong offset!");

// Function VerseEngine.float_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R
// 0x0018 (0x0018 - 0x0000)
struct float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R final
{
public:
	struct Fdelegate_handle                       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R) == 0x000008, "Wrong alignment on float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R");
static_assert(sizeof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R) == 0x000018, "Wrong size on float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R");
static_assert(offsetof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R, RetVal) == 0x000010, "Member 'float_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2ffloat__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R::RetVal' has a wrong offset!");

// Function VerseEngine.int_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RBroadcast_L_Nint_R
// 0x0008 (0x0008 - 0x0000)
struct int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RBroadcast_L_Nint_R final
{
public:
	int64                                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RBroadcast_L_Nint_R) == 0x000008, "Wrong alignment on int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RBroadcast_L_Nint_R");
static_assert(sizeof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RBroadcast_L_Nint_R) == 0x000008, "Wrong size on int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RBroadcast_L_Nint_R");
static_assert(offsetof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RBroadcast_L_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RBroadcast_L_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.int_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_REmpty
// 0x0001 (0x0001 - 0x0000)
struct int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_REmpty final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_REmpty) == 0x000001, "Wrong alignment on int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_REmpty");
static_assert(sizeof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_REmpty) == 0x000001, "Wrong size on int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_REmpty");
static_assert(offsetof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_REmpty, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_REmpty::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.int_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RSubscribe_L_Nint_Tvoid_R
// 0x0020 (0x0020 - 0x0000)
struct int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RSubscribe_L_Nint_Tvoid_R final
{
public:
	TDelegate<void(int64 __verse_0xB2CDDD72_Argument)> __verse_0xB2CDDD72_Argument;                       // 0x0000(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdelegate_handle                       RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RSubscribe_L_Nint_Tvoid_R) == 0x000008, "Wrong alignment on int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RSubscribe_L_Nint_Tvoid_R");
static_assert(sizeof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RSubscribe_L_Nint_Tvoid_R) == 0x000020, "Wrong size on int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RSubscribe_L_Nint_Tvoid_R");
static_assert(offsetof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RSubscribe_L_Nint_Tvoid_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RSubscribe_L_Nint_Tvoid_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RSubscribe_L_Nint_Tvoid_R, RetVal) == 0x000010, "Member 'int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RSubscribe_L_Nint_Tvoid_R::RetVal' has a wrong offset!");

// Function VerseEngine.int_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R
// 0x0018 (0x0018 - 0x0000)
struct int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R final
{
public:
	struct Fdelegate_handle                       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R) == 0x000008, "Wrong alignment on int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R");
static_assert(sizeof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R) == 0x000018, "Wrong size on int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R");
static_assert(offsetof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R, RetVal) == 0x000010, "Member 'int_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fint__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R::RetVal' has a wrong offset!");

// Function VerseEngine.logic_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RBroadcast_L_Nlogic_R
// 0x0001 (0x0001 - 0x0000)
struct logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RBroadcast_L_Nlogic_R final
{
public:
	uint8                                         __verse_0xB2CDDD72_Argument : 1;                   // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RBroadcast_L_Nlogic_R) == 0x000001, "Wrong alignment on logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RBroadcast_L_Nlogic_R");
static_assert(sizeof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RBroadcast_L_Nlogic_R) == 0x000001, "Wrong size on logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RBroadcast_L_Nlogic_R");

// Function VerseEngine.logic_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_REmpty
// 0x0001 (0x0001 - 0x0000)
struct logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_REmpty final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_REmpty) == 0x000001, "Wrong alignment on logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_REmpty");
static_assert(sizeof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_REmpty) == 0x000001, "Wrong size on logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_REmpty");
static_assert(offsetof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_REmpty, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_REmpty::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.logic_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RSubscribe_L_Nlogic_Tvoid_R
// 0x0020 (0x0020 - 0x0000)
struct logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RSubscribe_L_Nlogic_Tvoid_R final
{
public:
	TDelegate<void(uint8 __verse_0xB2CDDD72_Argument)> __verse_0xB2CDDD72_Argument;                       // 0x0000(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdelegate_handle                       RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RSubscribe_L_Nlogic_Tvoid_R) == 0x000008, "Wrong alignment on logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RSubscribe_L_Nlogic_Tvoid_R");
static_assert(sizeof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RSubscribe_L_Nlogic_Tvoid_R) == 0x000020, "Wrong size on logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RSubscribe_L_Nlogic_Tvoid_R");
static_assert(offsetof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RSubscribe_L_Nlogic_Tvoid_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RSubscribe_L_Nlogic_Tvoid_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RSubscribe_L_Nlogic_Tvoid_R, RetVal) == 0x000010, "Member 'logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RSubscribe_L_Nlogic_Tvoid_R::RetVal' has a wrong offset!");

// Function VerseEngine.logic_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R
// 0x0018 (0x0018 - 0x0000)
struct logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R final
{
public:
	struct Fdelegate_handle                       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R) == 0x000008, "Wrong alignment on logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R");
static_assert(sizeof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R) == 0x000018, "Wrong size on logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R");
static_assert(offsetof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R, RetVal) == 0x000010, "Member 'logic_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2flogic__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R::RetVal' has a wrong offset!");

// Function VerseEngine.no_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RBroadcast
// 0x0001 (0x0001 - 0x0000)
struct no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RBroadcast final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RBroadcast) == 0x000001, "Wrong alignment on no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RBroadcast");
static_assert(sizeof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RBroadcast) == 0x000001, "Wrong size on no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RBroadcast");
static_assert(offsetof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RBroadcast, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RBroadcast::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.no_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_REmpty
// 0x0001 (0x0001 - 0x0000)
struct no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_REmpty final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_REmpty) == 0x000001, "Wrong alignment on no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_REmpty");
static_assert(sizeof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_REmpty) == 0x000001, "Wrong size on no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_REmpty");
static_assert(offsetof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_REmpty, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_REmpty::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.no_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RSubscribe_L_Ntuple_L_R_Tvoid_R
// 0x0020 (0x0020 - 0x0000)
struct no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RSubscribe_L_Ntuple_L_R_Tvoid_R final
{
public:
	TDelegate<void(const struct VerseEngine_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument)> __verse_0xB2CDDD72_Argument;                       // 0x0000(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdelegate_handle                       RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RSubscribe_L_Ntuple_L_R_Tvoid_R) == 0x000008, "Wrong alignment on no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RSubscribe_L_Ntuple_L_R_Tvoid_R");
static_assert(sizeof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RSubscribe_L_Ntuple_L_R_Tvoid_R) == 0x000020, "Wrong size on no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RSubscribe_L_Ntuple_L_R_Tvoid_R");
static_assert(offsetof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RSubscribe_L_Ntuple_L_R_Tvoid_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RSubscribe_L_Ntuple_L_R_Tvoid_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RSubscribe_L_Ntuple_L_R_Tvoid_R, RetVal) == 0x000010, "Member 'no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RSubscribe_L_Ntuple_L_R_Tvoid_R::RetVal' has a wrong offset!");

// Function VerseEngine.no_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R
// 0x0018 (0x0018 - 0x0000)
struct no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R final
{
public:
	struct Fdelegate_handle                       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R) == 0x000008, "Wrong alignment on no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R");
static_assert(sizeof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R) == 0x000018, "Wrong size on no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R");
static_assert(offsetof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R, RetVal) == 0x000010, "Member 'no_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fno__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R::RetVal' has a wrong offset!");

// Function VerseEngine.string_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RBroadcast_L_N_Kchar_R
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RBroadcast_L_N_Kchar_R final
{
public:
	FVerseStringProperty_                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RBroadcast_L_N_Kchar_R) == 0x000008, "Wrong alignment on string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RBroadcast_L_N_Kchar_R");
static_assert(sizeof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RBroadcast_L_N_Kchar_R) == 0x000010, "Wrong size on string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RBroadcast_L_N_Kchar_R");
static_assert(offsetof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RBroadcast_L_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RBroadcast_L_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.string_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_REmpty
// 0x0001 (0x0001 - 0x0000)
struct string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_REmpty final
{
public:
	struct VerseEngine_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_REmpty) == 0x000001, "Wrong alignment on string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_REmpty");
static_assert(sizeof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_REmpty) == 0x000001, "Wrong size on string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_REmpty");
static_assert(offsetof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_REmpty, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_REmpty::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function VerseEngine.string_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RSubscribe_L_N_Kchar_Tvoid_R
// 0x0020 (0x0020 - 0x0000)
struct string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RSubscribe_L_N_Kchar_Tvoid_R final
{
public:
	TDelegate<void(FVerseStringProperty_ __verse_0xB2CDDD72_Argument)> __verse_0xB2CDDD72_Argument;                       // 0x0000(0x000C)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct Fdelegate_handle                       RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RSubscribe_L_N_Kchar_Tvoid_R) == 0x000008, "Wrong alignment on string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RSubscribe_L_N_Kchar_Tvoid_R");
static_assert(sizeof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RSubscribe_L_N_Kchar_Tvoid_R) == 0x000020, "Wrong size on string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RSubscribe_L_N_Kchar_Tvoid_R");
static_assert(offsetof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RSubscribe_L_N_Kchar_Tvoid_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RSubscribe_L_N_Kchar_Tvoid_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RSubscribe_L_N_Kchar_Tvoid_R, RetVal) == 0x000010, "Member 'string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RSubscribe_L_N_Kchar_Tvoid_R::RetVal' has a wrong offset!");

// Function VerseEngine.string_param_multicast_delegate._L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R
// 0x0018 (0x0018 - 0x0000)
struct string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R final
{
public:
	struct Fdelegate_handle                       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, NoDestructor)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R) == 0x000008, "Wrong alignment on string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R");
static_assert(sizeof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R) == 0x000018, "Wrong size on string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R");
static_assert(offsetof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R, RetVal) == 0x000010, "Member 'string_param_multicast_delegate__L_2fVerse_2eorg_2fVerseEngine_2fstring__param__multicast__delegate_N_RUnsubscribe_L_Ndelegate__handle_R::RetVal' has a wrong offset!");

}

