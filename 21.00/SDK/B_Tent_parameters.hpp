#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Tent

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function B_Tent.B_Tent_C.Squad Colors
// 0x0050 (0x0050 - 0x0000)
struct B_Tent_C_Squad_Colors final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SquadId;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SquadmateColor;                                    // 0x000C(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SemiPersistentRandoValue;                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerStateAthena*                 K2Node_DynamicCast_AsFort_Player_State_Athena;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSquadMemberIndex_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetSquadId_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetPinColorBySquadMemberIndex_ReturnValue; // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_Squad_Colors) == 0x000008, "Wrong alignment on B_Tent_C_Squad_Colors");
static_assert(sizeof(B_Tent_C_Squad_Colors) == 0x000050, "Wrong size on B_Tent_C_Squad_Colors");
static_assert(offsetof(B_Tent_C_Squad_Colors, PlayerState) == 0x000000, "Member 'B_Tent_C_Squad_Colors::PlayerState' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, SquadId) == 0x000008, "Member 'B_Tent_C_Squad_Colors::SquadId' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, SquadmateColor) == 0x00000C, "Member 'B_Tent_C_Squad_Colors::SquadmateColor' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, SemiPersistentRandoValue) == 0x00001C, "Member 'B_Tent_C_Squad_Colors::SemiPersistentRandoValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, K2Node_DynamicCast_AsFort_Player_State_Athena) == 0x000020, "Member 'B_Tent_C_Squad_Colors::K2Node_DynamicCast_AsFort_Player_State_Athena' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_Tent_C_Squad_Colors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, CallFunc_GetSquadMemberIndex_ReturnValue) == 0x00002C, "Member 'B_Tent_C_Squad_Colors::CallFunc_GetSquadMemberIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, CallFunc_GetSquadId_ReturnValue) == 0x000030, "Member 'B_Tent_C_Squad_Colors::CallFunc_GetSquadId_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, CallFunc_GetPinColorBySquadMemberIndex_ReturnValue) == 0x000034, "Member 'B_Tent_C_Squad_Colors::CallFunc_GetPinColorBySquadMemberIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000044, "Member 'B_Tent_C_Squad_Colors::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'B_Tent_C_Squad_Colors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_Squad_Colors, CallFunc_Percent_IntInt_ReturnValue) == 0x00004C, "Member 'B_Tent_C_Squad_Colors::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function B_Tent.B_Tent_C.SetupTentColors
// 0x0008 (0x0008 - 0x0000)
struct B_Tent_C_SetupTentColors final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_SetupTentColors) == 0x000008, "Wrong alignment on B_Tent_C_SetupTentColors");
static_assert(sizeof(B_Tent_C_SetupTentColors) == 0x000008, "Wrong size on B_Tent_C_SetupTentColors");
static_assert(offsetof(B_Tent_C_SetupTentColors, PlayerState) == 0x000000, "Member 'B_Tent_C_SetupTentColors::PlayerState' has a wrong offset!");

// Function B_Tent.B_Tent_C.ReceiveHit
// 0x0148 (0x0148 - 0x0000)
struct B_Tent_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Tent_C_ReceiveHit) == 0x000008, "Wrong alignment on B_Tent_C_ReceiveHit");
static_assert(sizeof(B_Tent_C_ReceiveHit) == 0x000148, "Wrong size on B_Tent_C_ReceiveHit");
static_assert(offsetof(B_Tent_C_ReceiveHit, MyComp) == 0x000000, "Member 'B_Tent_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ReceiveHit, Other) == 0x000008, "Member 'B_Tent_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ReceiveHit, OtherComp) == 0x000010, "Member 'B_Tent_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'B_Tent_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ReceiveHit, HitLocation) == 0x000020, "Member 'B_Tent_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ReceiveHit, HitNormal) == 0x000038, "Member 'B_Tent_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'B_Tent_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ReceiveHit, Hit) == 0x000068, "Member 'B_Tent_C_ReceiveHit::Hit' has a wrong offset!");

// Function B_Tent.B_Tent_C.Play Vertex Animation
// 0x0004 (0x0004 - 0x0000)
struct B_Tent_C_Play_Vertex_Animation final
{
public:
	int32                                         DataIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_Play_Vertex_Animation) == 0x000004, "Wrong alignment on B_Tent_C_Play_Vertex_Animation");
static_assert(sizeof(B_Tent_C_Play_Vertex_Animation) == 0x000004, "Wrong size on B_Tent_C_Play_Vertex_Animation");
static_assert(offsetof(B_Tent_C_Play_Vertex_Animation, DataIndex) == 0x000000, "Member 'B_Tent_C_Play_Vertex_Animation::DataIndex' has a wrong offset!");

// Function B_Tent.B_Tent_C.PackupTent
// 0x0010 (0x0010 - 0x0000)
struct B_Tent_C_PackupTent final
{
public:
	class AFortPawn*                              PickupTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyTent;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_PackupTent) == 0x000008, "Wrong alignment on B_Tent_C_PackupTent");
static_assert(sizeof(B_Tent_C_PackupTent) == 0x000010, "Wrong size on B_Tent_C_PackupTent");
static_assert(offsetof(B_Tent_C_PackupTent, PickupTarget) == 0x000000, "Member 'B_Tent_C_PackupTent::PickupTarget' has a wrong offset!");
static_assert(offsetof(B_Tent_C_PackupTent, DestroyTent) == 0x000008, "Member 'B_Tent_C_PackupTent::DestroyTent' has a wrong offset!");

// Function B_Tent.B_Tent_C.OnDetachFromBuilding
// 0x0010 (0x0010 - 0x0000)
struct B_Tent_C_OnDetachFromBuilding final
{
public:
	class ABuildingActor*                         AttachedToBuilding;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBeingDestroyed;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_OnDetachFromBuilding) == 0x000008, "Wrong alignment on B_Tent_C_OnDetachFromBuilding");
static_assert(sizeof(B_Tent_C_OnDetachFromBuilding) == 0x000010, "Wrong size on B_Tent_C_OnDetachFromBuilding");
static_assert(offsetof(B_Tent_C_OnDetachFromBuilding, AttachedToBuilding) == 0x000000, "Member 'B_Tent_C_OnDetachFromBuilding::AttachedToBuilding' has a wrong offset!");
static_assert(offsetof(B_Tent_C_OnDetachFromBuilding, bBeingDestroyed) == 0x000008, "Member 'B_Tent_C_OnDetachFromBuilding::bBeingDestroyed' has a wrong offset!");

// Function B_Tent.B_Tent_C.OnDeathServer
// 0x0148 (0x0148 - 0x0000)
struct B_Tent_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(B_Tent_C_OnDeathServer) == 0x000008, "Wrong alignment on B_Tent_C_OnDeathServer");
static_assert(sizeof(B_Tent_C_OnDeathServer) == 0x000148, "Wrong size on B_Tent_C_OnDeathServer");
static_assert(offsetof(B_Tent_C_OnDeathServer, Damage) == 0x000000, "Member 'B_Tent_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(B_Tent_C_OnDeathServer, DamageTags) == 0x000008, "Member 'B_Tent_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(B_Tent_C_OnDeathServer, Momentum) == 0x000028, "Member 'B_Tent_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(B_Tent_C_OnDeathServer, HitInfo) == 0x000040, "Member 'B_Tent_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(B_Tent_C_OnDeathServer, InstigatedBy) == 0x000120, "Member 'B_Tent_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_Tent_C_OnDeathServer, DamageCauser) == 0x000128, "Member 'B_Tent_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(B_Tent_C_OnDeathServer, EffectContext) == 0x000130, "Member 'B_Tent_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function B_Tent.B_Tent_C.FireTentTutorial
// 0x0004 (0x0004 - 0x0000)
struct B_Tent_C_FireTentTutorial final
{
public:
	struct FGameplayTag                           Event_Tag;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_FireTentTutorial) == 0x000004, "Wrong alignment on B_Tent_C_FireTentTutorial");
static_assert(sizeof(B_Tent_C_FireTentTutorial) == 0x000004, "Wrong size on B_Tent_C_FireTentTutorial");
static_assert(offsetof(B_Tent_C_FireTentTutorial, Event_Tag) == 0x000000, "Member 'B_Tent_C_FireTentTutorial::Event_Tag' has a wrong offset!");

// Function B_Tent.B_Tent_C.ExecuteUbergraph_B_Tent
// 0x06A0 (0x06A0 - 0x0000)
struct B_Tent_C_ExecuteUbergraph_B_Tent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0010(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0048(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0138(0x0018)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_playerState;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Squad_Colors_squadID;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Squad_Colors_SquadmateColor;              // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Squad_Colors_SemiPersistentRandoValue;    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AFortPawn*                        K2Node_Event_InteractingPawn;                      // 0x0180(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    K2Node_Event_InteractionBeingAttempted;            // 0x0188(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0190(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_X;                           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y;                           // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z;                           // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W;                           // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0xF];                                      // 0x01C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue_1;                // 0x01D0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_CustomEvent_PickupTarget;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DestroyTent;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPickup*                            CallFunc_K2_SpawnPickupInWorld_ReturnValue;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Event_Tag;                      // 0x0278(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0280(0x00B0)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DataIndex;                      // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPlayerController*>          CallFunc_GetLocalFortPlayerControllers_ReturnValue; // 0x0348(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_Array_Get_Item;                           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerStateAthena*                 K2Node_DynamicCast_AsFort_Player_State_Athena;     // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetSquadId_ReturnValue;                   // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373[0xD];                                      // 0x0373(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue_2;                // 0x0380(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_X_1;                         // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y_1;                         // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z_1;                         // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W_1;                         // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue_3;                // 0x03B0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D3[0x5];                                      // 0x03D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerController*>          CallFunc_GetLocalFortPlayerControllers_ReturnValue_1; // 0x03D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_Select_Default;                             // 0x03F0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_X_2;                         // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y_2;                         // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z_2;                         // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W_2;                         // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0420(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationInSafeZone_ReturnValue;         // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x3];                                      // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue; // 0x0464(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_1;             // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0470(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0530(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_TentBouncePlayerOnHit_Launched_Pawn;      // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0631(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0632(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_633[0x1];                                      // 0x0633(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_2;             // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63A[0x6];                                      // 0x063A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0658(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0664(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0670(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0678(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABuildingActor*                         K2Node_Event_AttachedToBuilding;                   // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bBeingDestroyed;                      // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68A[0x2];                                      // 0x068A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_ExecuteUbergraph_B_Tent) == 0x000010, "Wrong alignment on B_Tent_C_ExecuteUbergraph_B_Tent");
static_assert(sizeof(B_Tent_C_ExecuteUbergraph_B_Tent) == 0x0006A0, "Wrong size on B_Tent_C_ExecuteUbergraph_B_Tent");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, EntryPoint) == 0x000000, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, Temp_int_Array_Index_Variable) == 0x000004, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_Damage) == 0x00000C, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_DamageTags) == 0x000010, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_Momentum) == 0x000030, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_HitInfo) == 0x000048, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_InstigatedBy) == 0x000128, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_DamageCauser) == 0x000130, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_EffectContext) == 0x000138, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_HasTag_ReturnValue) == 0x000150, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_CustomEvent_playerState) == 0x000158, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_CustomEvent_playerState' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Squad_Colors_squadID) == 0x000160, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Squad_Colors_squadID' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Squad_Colors_SquadmateColor) == 0x000164, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Squad_Colors_SquadmateColor' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Squad_Colors_SemiPersistentRandoValue) == 0x000174, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Squad_Colors_SemiPersistentRandoValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000178, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00017C, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_InteractingPawn) == 0x000180, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_InteractionBeingAttempted) == 0x000188, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_MakeVector4_ReturnValue) == 0x000190, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_X) == 0x0001B0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_Y) == 0x0001B4, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_Z) == 0x0001B8, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_W) == 0x0001BC, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_SwitchEnum_CmpSuccess) == 0x0001C0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_MakeVector4_ReturnValue_1) == 0x0001D0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_MakeVector4_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetController_ReturnValue) == 0x0001F0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_DynamicCast_AsFort_Player_Controller) == 0x0001F8, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000201, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_CustomEvent_PickupTarget) == 0x000208, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_CustomEvent_PickupTarget' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_CustomEvent_DestroyTent) == 0x000210, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_CustomEvent_DestroyTent' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsValid_ReturnValue_1) == 0x000211, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000218, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector_X) == 0x000230, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector_Y) == 0x000234, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector_Z) == 0x000238, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Add_FloatFloat_ReturnValue) == 0x00023C, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_MakeVector_ReturnValue) == 0x000240, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_K2_SpawnPickupInWorld_ReturnValue) == 0x000258, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_K2_SpawnPickupInWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsValid_ReturnValue_2) == 0x000260, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000268, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetPawn_ReturnValue) == 0x000270, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_CustomEvent_Event_Tag) == 0x000278, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_CustomEvent_Event_Tag' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_MakeStruct_GameplayEventData) == 0x000280, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, Temp_int_Loop_Counter_Variable) == 0x000330, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000334, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Add_IntInt_ReturnValue) == 0x000338, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_CustomEvent_DataIndex) == 0x00033C, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_CustomEvent_DataIndex' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, Temp_int_Loop_Counter_Variable_1) == 0x000340, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Add_IntInt_ReturnValue_1) == 0x000344, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetLocalFortPlayerControllers_ReturnValue) == 0x000348, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetLocalFortPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, Temp_int_Array_Index_Variable_1) == 0x000358, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Get_Item) == 0x000360, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_DynamicCast_AsFort_Player_State_Athena) == 0x000368, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_DynamicCast_AsFort_Player_State_Athena' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_DynamicCast_bSuccess_1) == 0x000370, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetSquadId_ReturnValue) == 0x000371, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetSquadId_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000372, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_MakeVector4_ReturnValue_2) == 0x000380, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_MakeVector4_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_X_1) == 0x0003A0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_X_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_Y_1) == 0x0003A4, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_Y_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_Z_1) == 0x0003A8, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_Z_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_W_1) == 0x0003AC, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_W_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_MakeVector4_ReturnValue_3) == 0x0003B0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_MakeVector4_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0003D0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetValueAsBool_ReturnValue) == 0x0003D1, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, Temp_bool_Variable) == 0x0003D2, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetLocalFortPlayerControllers_ReturnValue_1) == 0x0003D8, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetLocalFortPlayerControllers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Contains_ReturnValue) == 0x0003E8, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Select_Default) == 0x0003F0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_X_2) == 0x000410, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_X_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_Y_2) == 0x000414, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_Y_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_Z_2) == 0x000418, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_Z_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_BreakVector4_W_2) == 0x00041C, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_BreakVector4_W_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_MakeStruct_LinearColor) == 0x000420, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsValid_ReturnValue_3) == 0x000430, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, Temp_int_Array_Index_Variable_2) == 0x000434, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetInstigator_ReturnValue) == 0x000438, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsServer_ReturnValue) == 0x000440, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000448, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsLocationInSafeZone_ReturnValue) == 0x000460, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsLocationInSafeZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue) == 0x000464, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetValueAsBool_ReturnValue_1) == 0x00046C, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetValueAsBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetMaterials_ReturnValue) == 0x000470, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Get_Item_1) == 0x000480, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Length_ReturnValue) == 0x000488, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000490, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Less_IntInt_ReturnValue) == 0x000498, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Add_ReturnValue) == 0x00049C, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Get_Item_2) == 0x0004A0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Length_ReturnValue_1) == 0x0004A8, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, Temp_int_Loop_Counter_Variable_2) == 0x0004AC, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Get_Item_3) == 0x0004B0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004B8, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Add_IntInt_ReturnValue_2) == 0x0004BC, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Length_ReturnValue_2) == 0x0004C0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_MyComp) == 0x0004C8, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_Other) == 0x0004D0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_OtherComp) == 0x0004D8, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_bSelfMoved) == 0x0004E0, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_HitLocation) == 0x0004E8, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_HitNormal) == 0x000500, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_NormalImpulse) == 0x000518, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_Hit) == 0x000530, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Less_IntInt_ReturnValue_2) == 0x000610, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000618, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_DynamicCast_bSuccess_2) == 0x000620, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_TentBouncePlayerOnHit_Launched_Pawn) == 0x000628, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_TentBouncePlayerOnHit_Launched_Pawn' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Contains_ReturnValue_1) == 0x000630, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsValid_ReturnValue_4) == 0x000631, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_RemoveItem_ReturnValue) == 0x000632, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Array_Add_ReturnValue_1) == 0x000634, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000638, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetValueAsBool_ReturnValue_2) == 0x000639, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetValueAsBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000640, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_CreateDelegate_OutputDelegate) == 0x000658, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000664, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000670, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000678, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_AttachedToBuilding) == 0x000680, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_AttachedToBuilding' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, K2Node_Event_bBeingDestroyed) == 0x000688, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::K2Node_Event_bBeingDestroyed' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000689, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_GetHealth_ReturnValue) == 0x00068C, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ExecuteUbergraph_B_Tent, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000690, "Member 'B_Tent_C_ExecuteUbergraph_B_Tent::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function B_Tent.B_Tent_C.BlueprintOnInteract
// 0x0010 (0x0010 - 0x0000)
struct B_Tent_C_BlueprintOnInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_BlueprintOnInteract) == 0x000008, "Wrong alignment on B_Tent_C_BlueprintOnInteract");
static_assert(sizeof(B_Tent_C_BlueprintOnInteract) == 0x000010, "Wrong size on B_Tent_C_BlueprintOnInteract");
static_assert(offsetof(B_Tent_C_BlueprintOnInteract, InteractingPawn) == 0x000000, "Member 'B_Tent_C_BlueprintOnInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintOnInteract, InteractionBeingAttempted) == 0x000008, "Member 'B_Tent_C_BlueprintOnInteract::InteractionBeingAttempted' has a wrong offset!");

// Function B_Tent.B_Tent_C.ShouldShowSoundIndicator
// 0x0010 (0x0010 - 0x0000)
struct B_Tent_C_ShouldShowSoundIndicator final
{
public:
	class AFortPlayerController*                  PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue_1;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_ShouldShowSoundIndicator) == 0x000008, "Wrong alignment on B_Tent_C_ShouldShowSoundIndicator");
static_assert(sizeof(B_Tent_C_ShouldShowSoundIndicator) == 0x000010, "Wrong size on B_Tent_C_ShouldShowSoundIndicator");
static_assert(offsetof(B_Tent_C_ShouldShowSoundIndicator, PlayerController) == 0x000000, "Member 'B_Tent_C_ShouldShowSoundIndicator::PlayerController' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldShowSoundIndicator, ReturnValue) == 0x000008, "Member 'B_Tent_C_ShouldShowSoundIndicator::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldShowSoundIndicator, CallFunc_GetActorTeam_ReturnValue) == 0x000009, "Member 'B_Tent_C_ShouldShowSoundIndicator::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldShowSoundIndicator, CallFunc_GetActorTeam_ReturnValue_1) == 0x00000A, "Member 'B_Tent_C_ShouldShowSoundIndicator::CallFunc_GetActorTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldShowSoundIndicator, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000B, "Member 'B_Tent_C_ShouldShowSoundIndicator::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function B_Tent.B_Tent_C.ShouldDisplaySecondInteractPrompt
// 0x0018 (0x0018 - 0x0000)
struct B_Tent_C_ShouldDisplaySecondInteractPrompt final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             InteractionType;                                   // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue_1;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_ShouldDisplaySecondInteractPrompt) == 0x000008, "Wrong alignment on B_Tent_C_ShouldDisplaySecondInteractPrompt");
static_assert(sizeof(B_Tent_C_ShouldDisplaySecondInteractPrompt) == 0x000018, "Wrong size on B_Tent_C_ShouldDisplaySecondInteractPrompt");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, InteractingPawn) == 0x000000, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, InteractionType) == 0x000008, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::InteractionType' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, ReturnValue) == 0x000009, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, CallFunc_GetActorTeam_ReturnValue) == 0x00000A, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, CallFunc_GetValueAsBool_ReturnValue) == 0x00000B, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, CallFunc_GetActorTeam_ReturnValue_1) == 0x00000C, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::CallFunc_GetActorTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, CallFunc_IsValid_ReturnValue) == 0x00000E, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_ShouldDisplaySecondInteractPrompt, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'B_Tent_C_ShouldDisplaySecondInteractPrompt::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function B_Tent.B_Tent_C.GetMarkerDetailsId
// 0x0004 (0x0004 - 0x0000)
struct B_Tent_C_GetMarkerDetailsId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_GetMarkerDetailsId) == 0x000004, "Wrong alignment on B_Tent_C_GetMarkerDetailsId");
static_assert(sizeof(B_Tent_C_GetMarkerDetailsId) == 0x000004, "Wrong size on B_Tent_C_GetMarkerDetailsId");
static_assert(offsetof(B_Tent_C_GetMarkerDetailsId, ReturnValue) == 0x000000, "Member 'B_Tent_C_GetMarkerDetailsId::ReturnValue' has a wrong offset!");

// Function B_Tent.B_Tent_C.GetAffiliationsToShowFor
// 0x0020 (0x0020 - 0x0000)
struct B_Tent_C_GetAffiliationsToShowFor final
{
public:
	TArray<EFortTeamAffiliation>                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<EFortTeamAffiliation>                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(B_Tent_C_GetAffiliationsToShowFor) == 0x000008, "Wrong alignment on B_Tent_C_GetAffiliationsToShowFor");
static_assert(sizeof(B_Tent_C_GetAffiliationsToShowFor) == 0x000020, "Wrong size on B_Tent_C_GetAffiliationsToShowFor");
static_assert(offsetof(B_Tent_C_GetAffiliationsToShowFor, ReturnValue) == 0x000000, "Member 'B_Tent_C_GetAffiliationsToShowFor::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_GetAffiliationsToShowFor, K2Node_MakeArray_Array) == 0x000010, "Member 'B_Tent_C_GetAffiliationsToShowFor::K2Node_MakeArray_Array' has a wrong offset!");

// Function B_Tent.B_Tent_C.BlueprintGetInteractionTime
// 0x0010 (0x0010 - 0x0000)
struct B_Tent_C_BlueprintGetInteractionTime final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutInteractionTime;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x000C(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_BlueprintGetInteractionTime) == 0x000008, "Wrong alignment on B_Tent_C_BlueprintGetInteractionTime");
static_assert(sizeof(B_Tent_C_BlueprintGetInteractionTime) == 0x000010, "Wrong size on B_Tent_C_BlueprintGetInteractionTime");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionTime, InteractingPawn) == 0x000000, "Member 'B_Tent_C_BlueprintGetInteractionTime::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionTime, OutInteractionTime) == 0x000008, "Member 'B_Tent_C_BlueprintGetInteractionTime::OutInteractionTime' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionTime, InteractionBeingAttempted) == 0x00000C, "Member 'B_Tent_C_BlueprintGetInteractionTime::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionTime, ReturnValue) == 0x00000D, "Member 'B_Tent_C_BlueprintGetInteractionTime::ReturnValue' has a wrong offset!");

// Function B_Tent.B_Tent_C.BlueprintGetInteractionString
// 0x0080 (0x0080 - 0x0000)
struct B_Tent_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0050(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)()
};
static_assert(alignof(B_Tent_C_BlueprintGetInteractionString) == 0x000008, "Wrong alignment on B_Tent_C_BlueprintGetInteractionString");
static_assert(sizeof(B_Tent_C_BlueprintGetInteractionString) == 0x000080, "Wrong size on B_Tent_C_BlueprintGetInteractionString");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'B_Tent_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, InteractionBeingAttempted) == 0x000008, "Member 'B_Tent_C_BlueprintGetInteractionString::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, ReturnValue) == 0x000010, "Member 'B_Tent_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'B_Tent_C_BlueprintGetInteractionString::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'B_Tent_C_BlueprintGetInteractionString::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002A, "Member 'B_Tent_C_BlueprintGetInteractionString::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, CallFunc_IsValid_ReturnValue_1) == 0x00002B, "Member 'B_Tent_C_BlueprintGetInteractionString::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'B_Tent_C_BlueprintGetInteractionString::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, CallFunc_Array_Find_ReturnValue) == 0x000048, "Member 'B_Tent_C_BlueprintGetInteractionString::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'B_Tent_C_BlueprintGetInteractionString::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, Temp_bool_Variable) == 0x00004D, "Member 'B_Tent_C_BlueprintGetInteractionString::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000050, "Member 'B_Tent_C_BlueprintGetInteractionString::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintGetInteractionString, K2Node_Select_Default) == 0x000068, "Member 'B_Tent_C_BlueprintGetInteractionString::K2Node_Select_Default' has a wrong offset!");

// Function B_Tent.B_Tent_C.BlueprintCanInteract
// 0x0120 (0x0120 - 0x0000)
struct B_Tent_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             InteractionType;                                   // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlueprintCanInteract_ReturnValue;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlueprintCanInteract_ReturnValue_1;       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue_1;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue_2;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0050(0x0020)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue_3;               // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_1;             // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_2;             // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_3;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_4;             // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_5;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x00F8(0x0020)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesContainerMatchTagQuery_ReturnValue;   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Tent_C_BlueprintCanInteract) == 0x000008, "Wrong alignment on B_Tent_C_BlueprintCanInteract");
static_assert(sizeof(B_Tent_C_BlueprintCanInteract) == 0x000120, "Wrong size on B_Tent_C_BlueprintCanInteract");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'B_Tent_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, InteractionBeingAttempted) == 0x000008, "Member 'B_Tent_C_BlueprintCanInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, InteractionType) == 0x000009, "Member 'B_Tent_C_BlueprintCanInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, ReturnValue) == 0x00000A, "Member 'B_Tent_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_BlueprintCanInteract_ReturnValue) == 0x00000B, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_BlueprintCanInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetValueAsBool_ReturnValue) == 0x00000C, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_BlueprintCanInteract_ReturnValue_1) == 0x00000D, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_BlueprintCanInteract_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, K2Node_SwitchEnum_CmpSuccess) == 0x00000E, "Member 'B_Tent_C_BlueprintCanInteract::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetActorTeam_ReturnValue) == 0x00000F, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetActorTeam_ReturnValue_1) == 0x000010, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetActorTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000030, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000038, "Member 'B_Tent_C_BlueprintCanInteract::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_Tent_C_BlueprintCanInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetActorTeam_ReturnValue_2) == 0x000049, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetActorTeam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000050, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_Array_Contains_ReturnValue) == 0x000072, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetActorTeam_ReturnValue_3) == 0x000073, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetActorTeam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000074, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000075, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetValueAsBool_ReturnValue_1) == 0x000076, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetValueAsBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetValueAsBool_ReturnValue_2) == 0x000077, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetValueAsBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_BooleanOR_ReturnValue) == 0x000078, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetValueAsBool_ReturnValue_3) == 0x000079, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetValueAsBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_BooleanOR_ReturnValue_1) == 0x00007A, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetValueAsBool_ReturnValue_4) == 0x00007B, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetValueAsBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_BooleanAND_ReturnValue_1) == 0x00007C, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000080, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_FindLookAtRotation_ReturnValue) == 0x000098, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetForwardVector_ReturnValue) == 0x0000B0, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetValueAsBool_ReturnValue_5) == 0x0000C8, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetValueAsBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000CA, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_BooleanOR_ReturnValue_2) == 0x0000CB, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000CC, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue_1) == 0x0000CD, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000D0, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000E8, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_Array_Contains_ReturnValue_1) == 0x0000EC, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_DegAcos_ReturnValue) == 0x0000F0, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F4, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F5, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_BooleanOR_ReturnValue_3) == 0x0000F6, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_BooleanOR_ReturnValue_4) == 0x0000F7, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, Temp_struct_Variable) == 0x0000F8, "Member 'B_Tent_C_BlueprintCanInteract::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_Not_PreBool_ReturnValue_2) == 0x000118, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Tent_C_BlueprintCanInteract, CallFunc_DoesContainerMatchTagQuery_ReturnValue) == 0x000119, "Member 'B_Tent_C_BlueprintCanInteract::CallFunc_DoesContainerMatchTagQuery_ReturnValue' has a wrong offset!");

}

