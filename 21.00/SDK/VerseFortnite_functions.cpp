#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortnite

#include "Basic.hpp"

#include "VerseFortnite_classes.hpp"
#include "VerseFortnite_parameters.hpp"


namespace SDK
{

// Function VerseFortnite.HUDComponentBase.OnRep_WidgetClass
// (Final, Native, Private)

void UHUDComponentBase::OnRep_WidgetClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDComponentBase", "OnRep_WidgetClass");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDCountDownComponentBase.OnRep_CountDownEndTime
// (Final, Native, Private)

void UHUDCountDownComponentBase::OnRep_CountDownEndTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDCountDownComponentBase", "OnRep_CountDownEndTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.FortBuildingSettingsComponentBase.OnRep_Settings
// (Final, Native, Private)

void UFortBuildingSettingsComponentBase::OnRep_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingSettingsComponentBase", "OnRep_Settings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.FortControllerStateHandlerComponent.NotifyOfStateChange
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FString                           State                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Active                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerStateHandlerComponent::NotifyOfStateChange(class FString* State, bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerStateHandlerComponent", "NotifyOfStateChange");

	Params::FortControllerStateHandlerComponent_NotifyOfStateChange Parms{};

	Parms.Active = Active;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (State != nullptr)
		*State = std::move(Parms.State);
}


// Function VerseFortnite.FortPlayspaceComponentHelper.HandlePlayerDied
// (Final, Native, Public)
// Parameters:
// class AFortPlayerPawnAthena*            FortPlayerPawnAthena                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayspaceComponentHelper::HandlePlayerDied(class AFortPlayerPawnAthena* FortPlayerPawnAthena)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayspaceComponentHelper", "HandlePlayerDied");

	Params::FortPlayspaceComponentHelper_HandlePlayerDied Parms{};

	Parms.FortPlayerPawnAthena = FortPlayerPawnAthena;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.FortPlayspaceComponentHelper.HandlePlayerPawnPossessed
// (Final, Native, Public)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayspaceComponentHelper::HandlePlayerPawnPossessed(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayspaceComponentHelper", "HandlePlayerPawnPossessed");

	Params::FortPlayspaceComponentHelper_HandlePlayerPawnPossessed Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.ClientCreateScene
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           SceneName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDDynamicDirectorBase::ClientCreateScene(const class FString& SceneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "ClientCreateScene");

	Params::HUDDynamicDirectorBase_ClientCreateScene Parms{};

	Parms.SceneName = std::move(SceneName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.ClientSetHUDCameraMode
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                                    bCameraMode                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDDynamicDirectorBase::ClientSetHUDCameraMode(const bool bCameraMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "ClientSetHUDCameraMode");

	Params::HUDDynamicDirectorBase_ClientSetHUDCameraMode Parms{};

	Parms.bCameraMode = bCameraMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.ClientSetSceneWidgetAlignment
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           SceneName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           WidgetUniqueID                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   HorizontalAlignment                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VerticalAlignment                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Anchor                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDDynamicDirectorBase::ClientSetSceneWidgetAlignment(const class FString& SceneName, const class FString& WidgetUniqueID, const int32 HorizontalAlignment, const int32 VerticalAlignment, const int32 Anchor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "ClientSetSceneWidgetAlignment");

	Params::HUDDynamicDirectorBase_ClientSetSceneWidgetAlignment Parms{};

	Parms.SceneName = std::move(SceneName);
	Parms.WidgetUniqueID = std::move(WidgetUniqueID);
	Parms.HorizontalAlignment = HorizontalAlignment;
	Parms.VerticalAlignment = VerticalAlignment;
	Parms.Anchor = Anchor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.ClientSetSceneWidgetAttachment
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           SceneName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           WidgetUniqueID                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WidgetAnchor                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetUniqueID                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetClassName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetAnchor                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDDynamicDirectorBase::ClientSetSceneWidgetAttachment(const class FString& SceneName, const class FString& WidgetUniqueID, const int32 WidgetAnchor, const class FString& TargetUniqueID, const class FString& TargetClassName, const int32 TargetAnchor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "ClientSetSceneWidgetAttachment");

	Params::HUDDynamicDirectorBase_ClientSetSceneWidgetAttachment Parms{};

	Parms.SceneName = std::move(SceneName);
	Parms.WidgetUniqueID = std::move(WidgetUniqueID);
	Parms.WidgetAnchor = WidgetAnchor;
	Parms.TargetUniqueID = std::move(TargetUniqueID);
	Parms.TargetClassName = std::move(TargetClassName);
	Parms.TargetAnchor = TargetAnchor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.ClientSetSceneWidgetClassAndUniqueID
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           SceneName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           WidgetUniqueID                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           WidgetClassName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDDynamicDirectorBase::ClientSetSceneWidgetClassAndUniqueID(const class FString& SceneName, const class FString& WidgetUniqueID, const class FString& WidgetClassName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "ClientSetSceneWidgetClassAndUniqueID");

	Params::HUDDynamicDirectorBase_ClientSetSceneWidgetClassAndUniqueID Parms{};

	Parms.SceneName = std::move(SceneName);
	Parms.WidgetUniqueID = std::move(WidgetUniqueID);
	Parms.WidgetClassName = std::move(WidgetClassName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.ClientSetSceneWidgetPosition
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           SceneName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           WidgetUniqueID                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   X                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Y                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDDynamicDirectorBase::ClientSetSceneWidgetPosition(const class FString& SceneName, const class FString& WidgetUniqueID, const int32 X, const int32 Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "ClientSetSceneWidgetPosition");

	Params::HUDDynamicDirectorBase_ClientSetSceneWidgetPosition Parms{};

	Parms.SceneName = std::move(SceneName);
	Parms.WidgetUniqueID = std::move(WidgetUniqueID);
	Parms.X = X;
	Parms.Y = Y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.OnRep_ActiveSceneNames
// (Final, Native, Private)

void UHUDDynamicDirectorBase::OnRep_ActiveSceneNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "OnRep_ActiveSceneNames");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.OnRep_BindDataStore
// (Final, Native, Private)

void UHUDDynamicDirectorBase::OnRep_BindDataStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "OnRep_BindDataStore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.OnRep_LoadSceneCatalog
// (Final, Native, Private)

void UHUDDynamicDirectorBase::OnRep_LoadSceneCatalog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "OnRep_LoadSceneCatalog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.OnRep_LoadWidgetCatalog
// (Final, Native, Private)

void UHUDDynamicDirectorBase::OnRep_LoadWidgetCatalog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "OnRep_LoadWidgetCatalog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDDynamicDirectorBase.ServerWidgetMessage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           MessageID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MessageData                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDDynamicDirectorBase::ServerWidgetMessage(const class FString& MessageID, const class FString& MessageData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDDynamicDirectorBase", "ServerWidgetMessage");

	Params::HUDDynamicDirectorBase_ServerWidgetMessage Parms{};

	Parms.MessageID = std::move(MessageID);
	Parms.MessageData = std::move(MessageData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDGameOverComponentBase.GetIsDraw
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDGameOverComponentBase::GetIsDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDGameOverComponentBase", "GetIsDraw");

	Params::HUDGameOverComponentBase_GetIsDraw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VerseFortnite.HUDGameOverComponentBase.GetWinningTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHUDGameOverComponentBase::GetWinningTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDGameOverComponentBase", "GetWinningTeam");

	Params::HUDGameOverComponentBase_GetWinningTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VerseFortnite.HUDGameOverComponentBase.OnRep_IsDraw
// (Final, Native, Private)

void UHUDGameOverComponentBase::OnRep_IsDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDGameOverComponentBase", "OnRep_IsDraw");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDGameOverComponentBase.OnRep_WinningTeam
// (Final, Native, Private)

void UHUDGameOverComponentBase::OnRep_WinningTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDGameOverComponentBase", "OnRep_WinningTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDMapComponentBase.HandleMapBoundsChanged
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FBox                             newBounds                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UHUDMapComponentBase::HandleMapBoundsChanged(const struct FBox& newBounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMapComponentBase", "HandleMapBoundsChanged");

	Params::HUDMapComponentBase_HandleMapBoundsChanged Parms{};

	Parms.newBounds = std::move(newBounds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDMapComponentBase.OnRep_MapBounds
// (Final, Native, Private)

void UHUDMapComponentBase::OnRep_MapBounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMapComponentBase", "OnRep_MapBounds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDMessageComponentBase.Client_DirectorTestScene
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           SceneName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDMessageComponentBase::Client_DirectorTestScene(const class FString& SceneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMessageComponentBase", "Client_DirectorTestScene");

	Params::HUDMessageComponentBase_Client_DirectorTestScene Parms{};

	Parms.SceneName = std::move(SceneName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDMessageComponentBase.OnRep_Message
// (Final, Native, Private)

void UHUDMessageComponentBase::OnRep_Message()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMessageComponentBase", "OnRep_Message");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDScoreboardComponentBase.OnRep_RoundInfo
// (Final, Native, Public)

void UHUDScoreboardComponentBase::OnRep_RoundInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDScoreboardComponentBase", "OnRep_RoundInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortnite.HUDScoreboardComponentBase.OnRep_ScoresUpdated
// (Final, Native, Public)

void UHUDScoreboardComponentBase::OnRep_ScoresUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDScoreboardComponentBase", "OnRep_ScoresUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

