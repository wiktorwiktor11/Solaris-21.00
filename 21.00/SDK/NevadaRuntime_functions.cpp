#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NevadaRuntime

#include "Basic.hpp"

#include "NevadaRuntime_classes.hpp"
#include "NevadaRuntime_parameters.hpp"


namespace SDK
{

// Function NevadaRuntime.FortNevadaAudioController.BP_Init
// (Event, Public, BlueprintEvent)

void AFortNevadaAudioController::BP_Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaAudioController", "BP_Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaAudioController.BP_Update
// (Event, Public, BlueprintEvent)

void AFortNevadaAudioController::BP_Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaAudioController", "BP_Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaAudioController.CacheReferences
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortLayeredAudioComponent*       InLayeredAudioComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaAudioController::CacheReferences(class UFortLayeredAudioComponent* InLayeredAudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaAudioController", "CacheReferences");

	Params::FortNevadaAudioController_CacheReferences Parms{};

	Parms.InLayeredAudioComponent = InLayeredAudioComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaAudioController.Init
// (Final, Native, Public)
// Parameters:
// class AFortNevadaVehicle*               InVehicle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaAudioController::Init(class AFortNevadaVehicle* InVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaAudioController", "Init");

	Params::FortNevadaAudioController_Init Parms{};

	Parms.InVehicle = InVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaAudioController.Update
// (Final, Native, Public)

void AFortNevadaAudioController::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaAudioController", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaAudioController.GetVehicleActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortNevadaVehicle*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortNevadaVehicle* AFortNevadaAudioController::GetVehicleActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaAudioController", "GetVehicleActor");

	Params::FortNevadaAudioController_GetVehicleActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.AddPhysicsImpulseToTractorBeamAttachedActor
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Impulse                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVelChange                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::AddPhysicsImpulseToTractorBeamAttachedActor(const struct FVector& Impulse, class FName BoneName, bool bVelChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "AddPhysicsImpulseToTractorBeamAttachedActor");

	Params::FortNevadaVehicle_AddPhysicsImpulseToTractorBeamAttachedActor Parms{};

	Parms.Impulse = std::move(Impulse);
	Parms.BoneName = BoneName;
	Parms.bVelChange = bVelChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.DisruptTractorBeam
// (Final, Native, Protected, BlueprintCallable)

void AFortNevadaVehicle::DisruptTractorBeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "DisruptTractorBeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.EnablePilotBubbleCollisionOnServer
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bNewCollisionEnabled                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::EnablePilotBubbleCollisionOnServer(bool bNewCollisionEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "EnablePilotBubbleCollisionOnServer");

	Params::FortNevadaVehicle_EnablePilotBubbleCollisionOnServer Parms{};

	Parms.bNewCollisionEnabled = bNewCollisionEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.GetDriverSeatRotationAnimParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   OutLeftRight                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutForwardBack                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::GetDriverSeatRotationAnimParams(float* OutLeftRight, float* OutForwardBack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "GetDriverSeatRotationAnimParams");

	Params::FortNevadaVehicle_GetDriverSeatRotationAnimParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLeftRight != nullptr)
		*OutLeftRight = Parms.OutLeftRight;

	if (OutForwardBack != nullptr)
		*OutForwardBack = Parms.OutForwardBack;
}


// Function NevadaRuntime.FortNevadaVehicle.NativeToggleCockpit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::NativeToggleCockpit(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "NativeToggleCockpit");

	Params::FortNevadaVehicle_NativeToggleCockpit Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.OnAttachedActorDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                           DestroyedActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::OnAttachedActorDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnAttachedActorDestroyed");

	Params::FortNevadaVehicle_OnAttachedActorDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.OnAttachedActorDied
// (Final, Native, Public, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              FHitComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::OnAttachedActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnAttachedActorDied");

	Params::FortNevadaVehicle_OnAttachedActorDied Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.OnBatteryRegen
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Newcharge                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::OnBatteryRegen(float Newcharge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnBatteryRegen");

	Params::FortNevadaVehicle_OnBatteryRegen Parms{};

	Parms.Newcharge = Newcharge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NevadaRuntime.FortNevadaVehicle.OnBoostChargeRefilled
// (Event, Public, BlueprintEvent)

void AFortNevadaVehicle::OnBoostChargeRefilled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnBoostChargeRefilled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnBoostFinished
// (Event, Public, BlueprintEvent)

void AFortNevadaVehicle::OnBoostFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnBoostFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnBoostStarted
// (Event, Public, BlueprintEvent)

void AFortNevadaVehicle::OnBoostStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnBoostStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnCrashedImpact
// (Event, Public, BlueprintEvent)

void AFortNevadaVehicle::OnCrashedImpact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnCrashedImpact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnCrashingStarted
// (Event, Public, BlueprintEvent)

void AFortNevadaVehicle::OnCrashingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnCrashingStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnNewVehicleState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ENevadaFlightStates                     NewVehicleState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::OnNewVehicleState(ENevadaFlightStates NewVehicleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnNewVehicleState");

	Params::FortNevadaVehicle_OnNewVehicleState Parms{};

	Parms.NewVehicleState = NewVehicleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NevadaRuntime.FortNevadaVehicle.OnOutOfBattery
// (Event, Public, BlueprintEvent)

void AFortNevadaVehicle::OnOutOfBattery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnOutOfBattery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnRebootFinished
// (Event, Public, BlueprintEvent)

void AFortNevadaVehicle::OnRebootFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnRebootFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnRebootStarted
// (Event, Public, BlueprintEvent)

void AFortNevadaVehicle::OnRebootStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnRebootStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnRep_NevadaState
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FNevadaState                     PrevState                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::OnRep_NevadaState(const struct FNevadaState& PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnRep_NevadaState");

	Params::FortNevadaVehicle_OnRep_NevadaState Parms{};

	Parms.PrevState = std::move(PrevState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.OnRep_ReplicatedTargetedActors
// (Final, Native, Public)

void AFortNevadaVehicle::OnRep_ReplicatedTargetedActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnRep_ReplicatedTargetedActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.OnRep_TargetedActorChanged
// (Final, Native, Public)

void AFortNevadaVehicle::OnRep_TargetedActorChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnRep_TargetedActorChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.OnRep_TractorBeamAttached
// (Final, Native, Protected)

void AFortNevadaVehicle::OnRep_TractorBeamAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnRep_TractorBeamAttached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.OnRep_TractorBeamChargeStarted
// (Final, Native, Public)

void AFortNevadaVehicle::OnRep_TractorBeamChargeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnRep_TractorBeamChargeStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.OnRep_TractorBeamState
// (Final, Native, Protected)
// Parameters:
// ETractorBeamState                       PreviousState                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::OnRep_TractorBeamState(const ETractorBeamState PreviousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnRep_TractorBeamState");

	Params::FortNevadaVehicle_OnRep_TractorBeamState Parms{};

	Parms.PreviousState = PreviousState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.OnStartAscend
// (Event, Protected, BlueprintEvent)

void AFortNevadaVehicle::OnStartAscend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnStartAscend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnStartDescend
// (Event, Protected, BlueprintEvent)

void AFortNevadaVehicle::OnStartDescend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnStartDescend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnTargetedActorChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           NewTargetedActor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::OnTargetedActorChanged(class AActor* NewTargetedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnTargetedActorChanged");

	Params::FortNevadaVehicle_OnTargetedActorChanged Parms{};

	Parms.NewTargetedActor = NewTargetedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NevadaRuntime.FortNevadaVehicle.OnTractorBeamActivated
// (Event, Protected, BlueprintEvent)

void AFortNevadaVehicle::OnTractorBeamActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnTractorBeamActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnTractorBeamAttached
// (Event, Protected, BlueprintEvent)

void AFortNevadaVehicle::OnTractorBeamAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnTractorBeamAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnTractorBeamChargeStarted
// (Event, Protected, BlueprintEvent)

void AFortNevadaVehicle::OnTractorBeamChargeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnTractorBeamChargeStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NevadaRuntime.FortNevadaVehicle.OnTractorBeamDeactivated
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          LastBeamPosition                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::OnTractorBeamDeactivated(const struct FVector& LastBeamPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnTractorBeamDeactivated");

	Params::FortNevadaVehicle_OnTractorBeamDeactivated Parms{};

	Parms.LastBeamPosition = std::move(LastBeamPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NevadaRuntime.FortNevadaVehicle.OnTractorBeamDetached
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                           DetachedActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LastBeamPosition                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::OnTractorBeamDetached(class AActor* DetachedActor, const struct FVector& LastBeamPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "OnTractorBeamDetached");

	Params::FortNevadaVehicle_OnTractorBeamDetached Parms{};

	Parms.DetachedActor = DetachedActor;
	Parms.LastBeamPosition = std::move(LastBeamPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NevadaRuntime.FortNevadaVehicle.SetAttachedPawnAddedVelocity
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          AddedVelocity                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::SetAttachedPawnAddedVelocity(const struct FVector& AddedVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "SetAttachedPawnAddedVelocity");

	Params::FortNevadaVehicle_SetAttachedPawnAddedVelocity Parms{};

	Parms.AddedVelocity = std::move(AddedVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.SetCannonEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::SetCannonEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "SetCannonEnabled");

	Params::FortNevadaVehicle_SetCannonEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.SetTractorBeamEnabled
// (Final, RequiredAPI, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortNevadaVehicle::SetTractorBeamEnabled(const bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "SetTractorBeamEnabled");

	Params::FortNevadaVehicle_SetTractorBeamEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.SetTractorBeamInactive
// (Final, Native, Protected, BlueprintCallable)

void AFortNevadaVehicle::SetTractorBeamInactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "SetTractorBeamInactive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NevadaRuntime.FortNevadaVehicle.GetAudioController
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortNevadaAudioController*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortNevadaAudioController* AFortNevadaVehicle::GetAudioController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "GetAudioController");

	Params::FortNevadaVehicle_GetAudioController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.GetBatteryCharge
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortNevadaVehicle::GetBatteryCharge() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "GetBatteryCharge");

	Params::FortNevadaVehicle_GetBatteryCharge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.GetBoostChargeProgress
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortNevadaVehicle::GetBoostChargeProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "GetBoostChargeProgress");

	Params::FortNevadaVehicle_GetBoostChargeProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.GetBoostChargesAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortNevadaVehicle::GetBoostChargesAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "GetBoostChargesAvailable");

	Params::FortNevadaVehicle_GetBoostChargesAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.GetBoostChargeTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortNevadaVehicle::GetBoostChargeTimeRemaining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "GetBoostChargeTimeRemaining");

	Params::FortNevadaVehicle_GetBoostChargeTimeRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.GetCurrentVehicleState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ENevadaFlightStates                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ENevadaFlightStates AFortNevadaVehicle::GetCurrentVehicleState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "GetCurrentVehicleState");

	Params::FortNevadaVehicle_GetCurrentVehicleState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.GetEnergyCanonChargePercent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortNevadaVehicle::GetEnergyCanonChargePercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "GetEnergyCanonChargePercent");

	Params::FortNevadaVehicle_GetEnergyCanonChargePercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.GetNumRebootsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortNevadaVehicle::GetNumRebootsAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "GetNumRebootsAvailable");

	Params::FortNevadaVehicle_GetNumRebootsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.GetTractorBeamAttachLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortNevadaVehicle::GetTractorBeamAttachLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "GetTractorBeamAttachLocation");

	Params::FortNevadaVehicle_GetTractorBeamAttachLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.IsTractorBeamActive
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortNevadaVehicle::IsTractorBeamActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "IsTractorBeamActive");

	Params::FortNevadaVehicle_IsTractorBeamActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.IsTractorBeamAttached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortNevadaVehicle::IsTractorBeamAttached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "IsTractorBeamAttached");

	Params::FortNevadaVehicle_IsTractorBeamAttached Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NevadaRuntime.FortNevadaVehicle.IsTractorBeamDisrupted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortNevadaVehicle::IsTractorBeamDisrupted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNevadaVehicle", "IsTractorBeamDisrupted");

	Params::FortNevadaVehicle_IsTractorBeamDisrupted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

