#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SafeZoneIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SafeZoneIndicator.SafeZoneIndicator_C
// 0x0150 (0x06F0 - 0x05A0)
class ASafeZoneIndicator_C final : public AFortSafeZoneIndicator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   AGV_Storm;                                         // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_StormMeshRotator;                               // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         VolumetricStormFadeTimeline_StormFadeIn_5D8CED344AED096A33ABDAA94E2E18CD; // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            VolumetricStormFadeTimeline__Direction_5D8CED344AED096A33ABDAA94E2E18CD; // 0x05BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BD[0x3];                                      // 0x05BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     VolumetricStormFadeTimeline;                       // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StormFadeTimeline_StormFadeIn_6FB75EFB416FB419D85F8797DEDD058C; // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            StormFadeTimeline__Direction_6FB75EFB416FB419D85F8797DEDD058C; // 0x05CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CD[0x3];                                      // 0x05CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     StormFadeTimeline;                                 // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pre_Damage_Audio_Ramp_Intensity_05A077AD4FED08F2426E5CA16BD41D7C; // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Pre_Damage_Audio_Ramp__Direction_05A077AD4FED08F2426E5CA16BD41D7C; // 0x05DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DD[0x3];                                      // 0x05DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Pre_Damage_Audio_Ramp;                             // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ShieldBoundaryLoopSound;                           // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HoldingLoopSound;                                  // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoldingStartTime_0;                                // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             HoldingLoopTickSound;                              // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SafeZoneMID;                                       // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           MegaStormDamageTimer;                              // 0x0610(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         MegastormAudioDuration;                            // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EFortSafeZoneState SafeZoneState)> OnSafeZoneStateChangeDispatcher;                   // 0x0620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EFortSafeZoneState                            SafeZoneState;                                     // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EFortSafeZoneState, struct FVector2D>    SafeZoneStateThunderFreqs;                         // 0x0638(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EFortSafeZoneState, float>               SafeZoneStateThunderDuration;                      // 0x0688(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          OceanEnabled;                                      // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x3];                                      // 0x06D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberofImpactEffects;                             // 0x06DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImapctFX_MaxHeight;                                // 0x06E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImapctFX_MinHeight;                                // 0x06E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void VolumetricStormFadeTimeline__UpdateFunc();
	void VolumetricStormFadeTimeline__FinishedFunc();
	void UserConstructionScript();
	void Trigger_Distant_Storm_Oneshot();
	void stormy(float NewParam);
	void StormFadeTimeline__UpdateFunc();
	void StormFadeTimeline__FinishedFunc();
	void Stop_Distant_Storm_Oneshots();
	void Start_Megastorm_Audio();
	void ResetSafeZoneScale();
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void Pre_Damage_Audio_Ramp__UpdateFunc();
	void Pre_Damage_Audio_Ramp__FinishedFunc();
	void Play_Storm_Grow_Audio();
	void OnSafeZoneStateChange(EFortSafeZoneState NewState, bool bInitial);
	void OnForceStopStormFadeTimer();
	void OnForceResetCloudStartingBias();
	void OnBeginStartingStateEffectsEvent();
	void Megastorm_Pre_Damage_Tell();
	void InitClosestPointAudio();
	void HandleInsideOutsideMix();
	void GetSafeZoneIndicatorMID(class UMaterialInstanceDynamic** Mid);
	void GetRandomPointOnBoundary(struct FVector* Position);
	void GetRandomPointInPlayerDir(struct FVector* Position);
	void GetAthenaGameState(class AAthena_GameState_C** AthenaGS);
	void ExecuteUbergraph_SafeZoneIndicator(int32 EntryPoint);
	void DestroySafeZone();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SafeZoneIndicator_C">();
	}
	static class ASafeZoneIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASafeZoneIndicator_C>();
	}
};
static_assert(alignof(ASafeZoneIndicator_C) == 0x000010, "Wrong alignment on ASafeZoneIndicator_C");
static_assert(sizeof(ASafeZoneIndicator_C) == 0x0006F0, "Wrong size on ASafeZoneIndicator_C");
static_assert(offsetof(ASafeZoneIndicator_C, UberGraphFrame) == 0x0005A0, "Member 'ASafeZoneIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, AGV_Storm) == 0x0005A8, "Member 'ASafeZoneIndicator_C::AGV_Storm' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, BP_StormMeshRotator) == 0x0005B0, "Member 'ASafeZoneIndicator_C::BP_StormMeshRotator' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, VolumetricStormFadeTimeline_StormFadeIn_5D8CED344AED096A33ABDAA94E2E18CD) == 0x0005B8, "Member 'ASafeZoneIndicator_C::VolumetricStormFadeTimeline_StormFadeIn_5D8CED344AED096A33ABDAA94E2E18CD' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, VolumetricStormFadeTimeline__Direction_5D8CED344AED096A33ABDAA94E2E18CD) == 0x0005BC, "Member 'ASafeZoneIndicator_C::VolumetricStormFadeTimeline__Direction_5D8CED344AED096A33ABDAA94E2E18CD' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, VolumetricStormFadeTimeline) == 0x0005C0, "Member 'ASafeZoneIndicator_C::VolumetricStormFadeTimeline' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, StormFadeTimeline_StormFadeIn_6FB75EFB416FB419D85F8797DEDD058C) == 0x0005C8, "Member 'ASafeZoneIndicator_C::StormFadeTimeline_StormFadeIn_6FB75EFB416FB419D85F8797DEDD058C' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, StormFadeTimeline__Direction_6FB75EFB416FB419D85F8797DEDD058C) == 0x0005CC, "Member 'ASafeZoneIndicator_C::StormFadeTimeline__Direction_6FB75EFB416FB419D85F8797DEDD058C' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, StormFadeTimeline) == 0x0005D0, "Member 'ASafeZoneIndicator_C::StormFadeTimeline' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, Pre_Damage_Audio_Ramp_Intensity_05A077AD4FED08F2426E5CA16BD41D7C) == 0x0005D8, "Member 'ASafeZoneIndicator_C::Pre_Damage_Audio_Ramp_Intensity_05A077AD4FED08F2426E5CA16BD41D7C' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, Pre_Damage_Audio_Ramp__Direction_05A077AD4FED08F2426E5CA16BD41D7C) == 0x0005DC, "Member 'ASafeZoneIndicator_C::Pre_Damage_Audio_Ramp__Direction_05A077AD4FED08F2426E5CA16BD41D7C' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, Pre_Damage_Audio_Ramp) == 0x0005E0, "Member 'ASafeZoneIndicator_C::Pre_Damage_Audio_Ramp' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, ShieldBoundaryLoopSound) == 0x0005E8, "Member 'ASafeZoneIndicator_C::ShieldBoundaryLoopSound' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, HoldingLoopSound) == 0x0005F0, "Member 'ASafeZoneIndicator_C::HoldingLoopSound' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, HoldingStartTime_0) == 0x0005F8, "Member 'ASafeZoneIndicator_C::HoldingStartTime_0' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, HoldingLoopTickSound) == 0x000600, "Member 'ASafeZoneIndicator_C::HoldingLoopTickSound' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneMID) == 0x000608, "Member 'ASafeZoneIndicator_C::SafeZoneMID' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, MegaStormDamageTimer) == 0x000610, "Member 'ASafeZoneIndicator_C::MegaStormDamageTimer' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, MegastormAudioDuration) == 0x000618, "Member 'ASafeZoneIndicator_C::MegastormAudioDuration' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, OnSafeZoneStateChangeDispatcher) == 0x000620, "Member 'ASafeZoneIndicator_C::OnSafeZoneStateChangeDispatcher' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneState) == 0x000630, "Member 'ASafeZoneIndicator_C::SafeZoneState' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneStateThunderFreqs) == 0x000638, "Member 'ASafeZoneIndicator_C::SafeZoneStateThunderFreqs' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneStateThunderDuration) == 0x000688, "Member 'ASafeZoneIndicator_C::SafeZoneStateThunderDuration' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, OceanEnabled) == 0x0006D8, "Member 'ASafeZoneIndicator_C::OceanEnabled' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, NumberofImpactEffects) == 0x0006DC, "Member 'ASafeZoneIndicator_C::NumberofImpactEffects' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, ImapctFX_MaxHeight) == 0x0006E0, "Member 'ASafeZoneIndicator_C::ImapctFX_MaxHeight' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, ImapctFX_MinHeight) == 0x0006E4, "Member 'ASafeZoneIndicator_C::ImapctFX_MinHeight' has a wrong offset!");

}

