#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CowboyPistol_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CowboyPistol_AnimBP.CowboyPistol_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct CowboyPistol_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(CowboyPistol_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on CowboyPistol_AnimBP_C_AnimGraph");
static_assert(sizeof(CowboyPistol_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on CowboyPistol_AnimBP_C_AnimGraph");
static_assert(offsetof(CowboyPistol_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'CowboyPistol_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function CowboyPistol_AnimBP.CowboyPistol_AnimBP_C.ExecuteUbergraph_CowboyPistol_AnimBP
// 0x0010 (0x0010 - 0x0000)
struct CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP) == 0x000004, "Wrong alignment on CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP");
static_assert(sizeof(CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP) == 0x000010, "Wrong size on CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP");
static_assert(offsetof(CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP, EntryPoint) == 0x000000, "Member 'CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP, Temp_int_Variable) == 0x000004, "Member 'CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP, K2Node_SwitchInteger_CmpSuccess) == 0x000008, "Member 'CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'CowboyPistol_AnimBP_C_ExecuteUbergraph_CowboyPistol_AnimBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

