#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Vault_Door

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Vault_Door.Vault_Door_C
// 0x0110 (0x0A80 - 0x0970)
class AVault_Door_C : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0970(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortSoundIndicatorComponent*           FortSoundIndicator;                                // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Prim_Prism;                                      // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      UpperBolt;                                         // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      LowerBolt;                                         // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      UpperBolt2_Door;                                   // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      UpperBolt1_Door;                                   // 0x09A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VaultDoorFX;                                       // 0x09A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    VaultLightInside;                                  // 0x09B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    VaultLightOutside;                                 // 0x09B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VaultDoor;                                         // 0x09C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Frame;                                             // 0x09C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Open_ShaderAnim_Normalized_B888903B464902A65CC3929C6A64E5F6; // 0x09D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Open_Lerp_B888903B464902A65CC3929C6A64E5F6;        // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Open__Direction_B888903B464902A65CC3929C6A64E5F6;  // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D9[0x7];                                      // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Open;                                              // 0x09E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DoorSpawnRotation;                                 // 0x09E8(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DoorRotationAmount;                                // 0x0A00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A04[0x4];                                      // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MID_VaultDoor;                                     // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_OpenDoor;                                       // 0x0A10(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          GreenLight;                                        // 0x0A14(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A15[0x3];                                      // 0x0A15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitLockTime;                                      // 0x0A18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BigCShapeLockTime;                                 // 0x0A1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0A20(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0A38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartRotation;                                     // 0x0A50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               EndRotation;                                       // 0x0A68(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void VaultOpen();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void ReceiveBeginPlay();
	void OpeningTimeline();
	void Open__UpdateFunc();
	void Open__Trigger_Light__EventFunc();
	void Open__FinishedFunc();
	void OnRep_HasBeenOpening();
	void ExecuteUbergraph_Vault_Door(int32 EntryPoint);

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Vault_Door_C">();
	}
	static class AVault_Door_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVault_Door_C>();
	}
};
static_assert(alignof(AVault_Door_C) == 0x000008, "Wrong alignment on AVault_Door_C");
static_assert(sizeof(AVault_Door_C) == 0x000A80, "Wrong size on AVault_Door_C");
static_assert(offsetof(AVault_Door_C, UberGraphFrame) == 0x000970, "Member 'AVault_Door_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, FortSoundIndicator) == 0x000978, "Member 'AVault_Door_C::FortSoundIndicator' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, S_Prim_Prism) == 0x000980, "Member 'AVault_Door_C::S_Prim_Prism' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, UpperBolt) == 0x000988, "Member 'AVault_Door_C::UpperBolt' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, LowerBolt) == 0x000990, "Member 'AVault_Door_C::LowerBolt' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, UpperBolt2_Door) == 0x000998, "Member 'AVault_Door_C::UpperBolt2_Door' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, UpperBolt1_Door) == 0x0009A0, "Member 'AVault_Door_C::UpperBolt1_Door' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, VaultDoorFX) == 0x0009A8, "Member 'AVault_Door_C::VaultDoorFX' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, VaultLightInside) == 0x0009B0, "Member 'AVault_Door_C::VaultLightInside' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, VaultLightOutside) == 0x0009B8, "Member 'AVault_Door_C::VaultLightOutside' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, VaultDoor) == 0x0009C0, "Member 'AVault_Door_C::VaultDoor' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, Frame) == 0x0009C8, "Member 'AVault_Door_C::Frame' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, Open_ShaderAnim_Normalized_B888903B464902A65CC3929C6A64E5F6) == 0x0009D0, "Member 'AVault_Door_C::Open_ShaderAnim_Normalized_B888903B464902A65CC3929C6A64E5F6' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, Open_Lerp_B888903B464902A65CC3929C6A64E5F6) == 0x0009D4, "Member 'AVault_Door_C::Open_Lerp_B888903B464902A65CC3929C6A64E5F6' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, Open__Direction_B888903B464902A65CC3929C6A64E5F6) == 0x0009D8, "Member 'AVault_Door_C::Open__Direction_B888903B464902A65CC3929C6A64E5F6' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, Open) == 0x0009E0, "Member 'AVault_Door_C::Open' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, DoorSpawnRotation) == 0x0009E8, "Member 'AVault_Door_C::DoorSpawnRotation' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, DoorRotationAmount) == 0x000A00, "Member 'AVault_Door_C::DoorRotationAmount' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, MID_VaultDoor) == 0x000A08, "Member 'AVault_Door_C::MID_VaultDoor' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, GC_OpenDoor) == 0x000A10, "Member 'AVault_Door_C::GC_OpenDoor' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, GreenLight) == 0x000A14, "Member 'AVault_Door_C::GreenLight' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, WaitLockTime) == 0x000A18, "Member 'AVault_Door_C::WaitLockTime' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, BigCShapeLockTime) == 0x000A1C, "Member 'AVault_Door_C::BigCShapeLockTime' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, StartLocation) == 0x000A20, "Member 'AVault_Door_C::StartLocation' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, EndLocation) == 0x000A38, "Member 'AVault_Door_C::EndLocation' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, StartRotation) == 0x000A50, "Member 'AVault_Door_C::StartRotation' has a wrong offset!");
static_assert(offsetof(AVault_Door_C, EndRotation) == 0x000A68, "Member 'AVault_Door_C::EndRotation' has a wrong offset!");

}

