#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DefaultMapInfo

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DefaultMapInfo.DefaultMapInfo_C.TryDynamicStormCircleModification
// 0x0098 (0x0098 - 0x0000)
struct DefaultMapInfo_C_TryDynamicStormCircleModification final
{
public:
	struct FSafeZoneRoundData                     RoundData;                                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         NewSafeZoneWaitTime;                               // 0x0030(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewSafeZoneShrinkTime;                             // 0x0034(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewSafeZoneRadius;                                 // 0x0038(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutWaitTime;                                       // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutShrinkTime;                                     // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutRadius;                                         // 0x0044(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LivingPlayersFloat;                                // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PhaseIndexFloat;                                   // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlaylistAthena*                    K2Node_DynamicCast_AsFort_Playlist_Athena;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleLabModePlaylist_ReturnValue;      // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyCreativePlaylist_ReturnValue;        // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_1;        // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_1;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_2;        // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_2;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_3;        // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_3;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DefaultMapInfo_C_TryDynamicStormCircleModification) == 0x000008, "Wrong alignment on DefaultMapInfo_C_TryDynamicStormCircleModification");
static_assert(sizeof(DefaultMapInfo_C_TryDynamicStormCircleModification) == 0x000098, "Wrong size on DefaultMapInfo_C_TryDynamicStormCircleModification");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, RoundData) == 0x000000, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::RoundData' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, NewSafeZoneWaitTime) == 0x000030, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::NewSafeZoneWaitTime' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, NewSafeZoneShrinkTime) == 0x000034, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::NewSafeZoneShrinkTime' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, NewSafeZoneRadius) == 0x000038, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::NewSafeZoneRadius' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, OutWaitTime) == 0x00003C, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::OutWaitTime' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, OutShrinkTime) == 0x000040, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::OutShrinkTime' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, OutRadius) == 0x000044, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::OutRadius' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, LivingPlayersFloat) == 0x000048, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::LivingPlayersFloat' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, PhaseIndexFloat) == 0x00004C, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::PhaseIndexFloat' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000050, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000054, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000058, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, K2Node_SwitchEnum_CmpSuccess) == 0x00005C, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000060, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000068, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, K2Node_DynamicCast_AsFort_Playlist_Athena) == 0x000070, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::K2Node_DynamicCast_AsFort_Playlist_Athena' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000079, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_IsBattleLabModePlaylist_ReturnValue) == 0x00007A, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_IsBattleLabModePlaylist_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_IsAnyCreativePlaylist_ReturnValue) == 0x00007B, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_IsAnyCreativePlaylist_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_BooleanOR_ReturnValue) == 0x00007C, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_EvaluateCurveTableRow_OutResult_1) == 0x00007D, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_EvaluateCurveTableRow_OutResult_1' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_EvaluateCurveTableRow_OutXY_1) == 0x000080, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_EvaluateCurveTableRow_OutXY_1' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_Less_FloatFloat_ReturnValue) == 0x000084, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_EvaluateCurveTableRow_OutResult_2) == 0x000085, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_EvaluateCurveTableRow_OutResult_2' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_EvaluateCurveTableRow_OutXY_2) == 0x000088, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_EvaluateCurveTableRow_OutXY_2' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, K2Node_SwitchEnum_CmpSuccess_1) == 0x00008C, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00008D, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, K2Node_SwitchEnum_CmpSuccess_2) == 0x00008E, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_EvaluateCurveTableRow_OutResult_3) == 0x00008F, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_EvaluateCurveTableRow_OutResult_3' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, CallFunc_EvaluateCurveTableRow_OutXY_3) == 0x000090, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::CallFunc_EvaluateCurveTableRow_OutXY_3' has a wrong offset!");
static_assert(offsetof(DefaultMapInfo_C_TryDynamicStormCircleModification, K2Node_SwitchEnum_CmpSuccess_3) == 0x000094, "Member 'DefaultMapInfo_C_TryDynamicStormCircleModification::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");

}

