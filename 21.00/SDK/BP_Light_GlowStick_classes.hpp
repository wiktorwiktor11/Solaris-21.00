#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Light_GlowStick

#include "Basic.hpp"

#include "Enum_LightColorsGlobal_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_LightBrightness_structs.hpp"
#include "Struct_LightColorsGlobal_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Light_GlowStick.BP_Light_GlowStick_C
// 0x00C0 (0x0F30 - 0x0E70)
class ABP_Light_GlowStick_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0E78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_GlowStick;                                       // 0x0E80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GlowTorch;                                       // 0x0E88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0E90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Destroy;                                           // 0x0E98(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E99[0x7];                                      // 0x0E99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               GlowStick_Mat;                                     // 0x0EA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_LightColorsGlobal                        LightColorOptions;                                 // 0x0EA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_LightBrightness                          LightBrightnessOptions;                            // 0x0EA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EAA[0x2];                                      // 0x0EAA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_LightColorsGlobal              StructLightColorsGlobal;                           // 0x0EAC(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Light_GlowStick(int32 EntryPoint);
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnRep_Destroy();
	void SetLightBrightness();
	void SetLightColor(const struct FLinearColor& Color);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Light_GlowStick_C">();
	}
	static class ABP_Light_GlowStick_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Light_GlowStick_C>();
	}
};
static_assert(alignof(ABP_Light_GlowStick_C) == 0x000008, "Wrong alignment on ABP_Light_GlowStick_C");
static_assert(sizeof(ABP_Light_GlowStick_C) == 0x000F30, "Wrong size on ABP_Light_GlowStick_C");
static_assert(offsetof(ABP_Light_GlowStick_C, UberGraphFrame) == 0x000E70, "Member 'ABP_Light_GlowStick_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Light_GlowStick_C, Box) == 0x000E78, "Member 'ABP_Light_GlowStick_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Light_GlowStick_C, S_GlowStick) == 0x000E80, "Member 'ABP_Light_GlowStick_C::S_GlowStick' has a wrong offset!");
static_assert(offsetof(ABP_Light_GlowStick_C, P_GlowTorch) == 0x000E88, "Member 'ABP_Light_GlowStick_C::P_GlowTorch' has a wrong offset!");
static_assert(offsetof(ABP_Light_GlowStick_C, PointLight) == 0x000E90, "Member 'ABP_Light_GlowStick_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Light_GlowStick_C, Destroy) == 0x000E98, "Member 'ABP_Light_GlowStick_C::Destroy' has a wrong offset!");
static_assert(offsetof(ABP_Light_GlowStick_C, GlowStick_Mat) == 0x000EA0, "Member 'ABP_Light_GlowStick_C::GlowStick_Mat' has a wrong offset!");
static_assert(offsetof(ABP_Light_GlowStick_C, LightColorOptions) == 0x000EA8, "Member 'ABP_Light_GlowStick_C::LightColorOptions' has a wrong offset!");
static_assert(offsetof(ABP_Light_GlowStick_C, LightBrightnessOptions) == 0x000EA9, "Member 'ABP_Light_GlowStick_C::LightBrightnessOptions' has a wrong offset!");
static_assert(offsetof(ABP_Light_GlowStick_C, StructLightColorsGlobal) == 0x000EAC, "Member 'ABP_Light_GlowStick_C::StructLightColorsGlobal' has a wrong offset!");

}

