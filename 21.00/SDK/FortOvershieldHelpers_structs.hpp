#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortOvershieldHelpers

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// ScriptStruct FortOvershieldHelpers.FortOvershieldDelegateContainer
// 0x0048 (0x0048 - 0x0000)
struct FFortOvershieldDelegateContainer final
{
public:
	TDelegate<void()>                             OnOvershieldChanged;                               // 0x0000(0x000C)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnShieldedDamage;                                  // 0x000C(0x000C)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             OnOvershieldedDamage;                              // 0x0018(0x000C)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class AActor* Instigator)>     OnShieldDestroyed;                                 // 0x0024(0x000C)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class AActor* Instigator)>     OnOvershieldDestroyed;                             // 0x0030(0x000C)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGameplayEventData& Payload)> OnDamageReceived;                                  // 0x003C(0x000C)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortOvershieldDelegateContainer) == 0x000004, "Wrong alignment on FFortOvershieldDelegateContainer");
static_assert(sizeof(FFortOvershieldDelegateContainer) == 0x000048, "Wrong size on FFortOvershieldDelegateContainer");
static_assert(offsetof(FFortOvershieldDelegateContainer, OnOvershieldChanged) == 0x000000, "Member 'FFortOvershieldDelegateContainer::OnOvershieldChanged' has a wrong offset!");
static_assert(offsetof(FFortOvershieldDelegateContainer, OnShieldedDamage) == 0x00000C, "Member 'FFortOvershieldDelegateContainer::OnShieldedDamage' has a wrong offset!");
static_assert(offsetof(FFortOvershieldDelegateContainer, OnOvershieldedDamage) == 0x000018, "Member 'FFortOvershieldDelegateContainer::OnOvershieldedDamage' has a wrong offset!");
static_assert(offsetof(FFortOvershieldDelegateContainer, OnShieldDestroyed) == 0x000024, "Member 'FFortOvershieldDelegateContainer::OnShieldDestroyed' has a wrong offset!");
static_assert(offsetof(FFortOvershieldDelegateContainer, OnOvershieldDestroyed) == 0x000030, "Member 'FFortOvershieldDelegateContainer::OnOvershieldDestroyed' has a wrong offset!");
static_assert(offsetof(FFortOvershieldDelegateContainer, OnDamageReceived) == 0x00003C, "Member 'FFortOvershieldDelegateContainer::OnDamageReceived' has a wrong offset!");

}

