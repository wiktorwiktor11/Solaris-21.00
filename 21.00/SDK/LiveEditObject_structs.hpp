#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LiveEditObject

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct LiveEditObject.LiveEditObjectTestStruct
// 0x0148 (0x0148 - 0x0000)
struct FLiveEditObjectTestStruct final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          Int8;                                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         Int16;                                             // 0x0002(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Int32;                                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Int64;                                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Float;                                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Double;                                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 String;                                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Text;                                              // 0x0030(0x0018)(NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                RawObjectPtr;                                      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ObjectPtr;                                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        SoftObjectPath;                                    // 0x0060(0x0018)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Struct;                                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FixedArray[0x4];                                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 DynamicArray;                                      // 0x0098(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<int32>                                   Set;                                               // 0x00A8(0x0050)(NativeAccessSpecifierPublic)
	TMap<int32, int32>                            Map;                                               // 0x00F8(0x0050)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FLiveEditObjectTestStruct) == 0x000008, "Wrong alignment on FLiveEditObjectTestStruct");
static_assert(sizeof(FLiveEditObjectTestStruct) == 0x000148, "Wrong size on FLiveEditObjectTestStruct");
static_assert(offsetof(FLiveEditObjectTestStruct, Bool) == 0x000000, "Member 'FLiveEditObjectTestStruct::Bool' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Int8) == 0x000001, "Member 'FLiveEditObjectTestStruct::Int8' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Int16) == 0x000002, "Member 'FLiveEditObjectTestStruct::Int16' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Int32) == 0x000004, "Member 'FLiveEditObjectTestStruct::Int32' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Int64) == 0x000008, "Member 'FLiveEditObjectTestStruct::Int64' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Float) == 0x000010, "Member 'FLiveEditObjectTestStruct::Float' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Double) == 0x000018, "Member 'FLiveEditObjectTestStruct::Double' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, String) == 0x000020, "Member 'FLiveEditObjectTestStruct::String' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Text) == 0x000030, "Member 'FLiveEditObjectTestStruct::Text' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Name) == 0x000048, "Member 'FLiveEditObjectTestStruct::Name' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, RawObjectPtr) == 0x000050, "Member 'FLiveEditObjectTestStruct::RawObjectPtr' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, ObjectPtr) == 0x000058, "Member 'FLiveEditObjectTestStruct::ObjectPtr' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, SoftObjectPath) == 0x000060, "Member 'FLiveEditObjectTestStruct::SoftObjectPath' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Struct) == 0x000078, "Member 'FLiveEditObjectTestStruct::Struct' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, FixedArray) == 0x000088, "Member 'FLiveEditObjectTestStruct::FixedArray' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, DynamicArray) == 0x000098, "Member 'FLiveEditObjectTestStruct::DynamicArray' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Set) == 0x0000A8, "Member 'FLiveEditObjectTestStruct::Set' has a wrong offset!");
static_assert(offsetof(FLiveEditObjectTestStruct, Map) == 0x0000F8, "Member 'FLiveEditObjectTestStruct::Map' has a wrong offset!");

}

