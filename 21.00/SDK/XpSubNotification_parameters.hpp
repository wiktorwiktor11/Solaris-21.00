#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XpSubNotification

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function XpSubNotification.XpSubNotification_C.ExecuteUbergraph_XpSubNotification
// 0x0188 (0x0188 - 0x0000)
struct XpSubNotification_C_ExecuteUbergraph_XpSubNotification final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortEarnedSubRewardType                      Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortEarnedSubRewardType                      Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortEarnedSubRewardType                      Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortEarnedSubRewardType                      Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RewardValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortEarnedSubRewardType                      K2Node_Event_RewardType;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0150(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0168(0x0018)()
	class UWidget*                                K2Node_Select_Default_3;                           // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification) == 0x000008, "Wrong alignment on XpSubNotification_C_ExecuteUbergraph_XpSubNotification");
static_assert(sizeof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification) == 0x000188, "Wrong size on XpSubNotification_C_ExecuteUbergraph_XpSubNotification");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, EntryPoint) == 0x000000, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::EntryPoint' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, Temp_byte_Variable) == 0x000004, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, Temp_byte_Variable_1) == 0x000005, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, Temp_byte_Variable_2) == 0x000006, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, Temp_byte_Variable_3) == 0x000007, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_Event_IsDesignTime) == 0x000008, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000028, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_Event_RewardValue) == 0x00003C, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_Event_RewardValue' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_Event_RewardType) == 0x000040, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_Event_RewardType' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_Select_Default) == 0x000048, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_Select_Default_1) == 0x000050, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, CallFunc_Conv_IntToText_ReturnValue) == 0x000060, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_MakeArray_Array) == 0x000118, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_MakeArray_Array_1) == 0x000128, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, CallFunc_Format_ReturnValue) == 0x000138, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, CallFunc_Format_ReturnValue_1) == 0x000150, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_Select_Default_2) == 0x000168, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_ExecuteUbergraph_XpSubNotification, K2Node_Select_Default_3) == 0x000180, "Member 'XpSubNotification_C_ExecuteUbergraph_XpSubNotification::K2Node_Select_Default_3' has a wrong offset!");

// Function XpSubNotification.XpSubNotification_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct XpSubNotification_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpSubNotification_C_PreConstruct) == 0x000001, "Wrong alignment on XpSubNotification_C_PreConstruct");
static_assert(sizeof(XpSubNotification_C_PreConstruct) == 0x000001, "Wrong size on XpSubNotification_C_PreConstruct");
static_assert(offsetof(XpSubNotification_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'XpSubNotification_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function XpSubNotification.XpSubNotification_C.SetRewardValue
// 0x0008 (0x0008 - 0x0000)
struct XpSubNotification_C_SetRewardValue final
{
public:
	int32                                         RewardValue;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortEarnedSubRewardType                      RewardType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpSubNotification_C_SetRewardValue) == 0x000004, "Wrong alignment on XpSubNotification_C_SetRewardValue");
static_assert(sizeof(XpSubNotification_C_SetRewardValue) == 0x000008, "Wrong size on XpSubNotification_C_SetRewardValue");
static_assert(offsetof(XpSubNotification_C_SetRewardValue, RewardValue) == 0x000000, "Member 'XpSubNotification_C_SetRewardValue::RewardValue' has a wrong offset!");
static_assert(offsetof(XpSubNotification_C_SetRewardValue, RewardType) == 0x000004, "Member 'XpSubNotification_C_SetRewardValue::RewardType' has a wrong offset!");

}

