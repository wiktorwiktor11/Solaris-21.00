#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_BouncePad_Parallel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.Add Spline Deformed Collision Component Box
// 0x01F0 (0x01F0 - 0x0000)
struct BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box final
{
public:
	TArray<class USplineMeshComponent*>           TargetArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                StartPos;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartTangent;                                      // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPos;                                            // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndTangent;                                        // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              StartScale_0;                                      // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              EndScale;                                          // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartRoll;                                         // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndRoll;                                           // 0x0094(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0060)(IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0110(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box) == 0x000010, "Wrong alignment on BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box");
static_assert(sizeof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box) == 0x0001F0, "Wrong size on BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, TargetArray) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::TargetArray' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, StartPos) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::StartPos' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, StartTangent) == 0x000028, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::StartTangent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, EndPos) == 0x000040, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::EndPos' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, EndTangent) == 0x000058, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::EndTangent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, StartScale_0) == 0x000070, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::StartScale_0' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, EndScale) == 0x000080, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::EndScale' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, StartRoll) == 0x000090, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::StartRoll' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, EndRoll) == 0x000094, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::EndRoll' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, CallFunc_AddComponent_ReturnValue) == 0x000100, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, CallFunc_Array_Add_ReturnValue) == 0x00010C, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000110, "Member 'BGA_BouncePad_Parallel_C_Add_Spline_Deformed_Collision_Component_Box::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.AddSplineDeformedCollisionComponent
// 0x01F0 (0x01F0 - 0x0000)
struct BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent final
{
public:
	TArray<class USplineMeshComponent*>           TargetArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                StartPos;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartTangent;                                      // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPos;                                            // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndTangent;                                        // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              StartScale_0;                                      // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              EndScale;                                          // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartRoll;                                         // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndRoll;                                           // 0x0094(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0060)(IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0110(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent) == 0x000010, "Wrong alignment on BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent");
static_assert(sizeof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent) == 0x0001F0, "Wrong size on BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, TargetArray) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::TargetArray' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, StartPos) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::StartPos' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, StartTangent) == 0x000028, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::StartTangent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, EndPos) == 0x000040, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::EndPos' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, EndTangent) == 0x000058, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::EndTangent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, StartScale_0) == 0x000070, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::StartScale_0' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, EndScale) == 0x000080, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::EndScale' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, StartRoll) == 0x000090, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::StartRoll' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, EndRoll) == 0x000094, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::EndRoll' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, CallFunc_AddComponent_ReturnValue) == 0x000100, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, CallFunc_Array_Add_ReturnValue) == 0x00010C, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000110, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.AddSplineDeformedCollisionComponent_PlayerDetector
// 0x01F0 (0x01F0 - 0x0000)
struct BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector final
{
public:
	TArray<class USplineMeshComponent*>           TargetArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                StartPos;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartTangent;                                      // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPos;                                            // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndTangent;                                        // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              StartScale_0;                                      // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              EndScale;                                          // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartRoll;                                         // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndRoll;                                           // 0x0094(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0060)(IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0110(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector) == 0x000010, "Wrong alignment on BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector");
static_assert(sizeof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector) == 0x0001F0, "Wrong size on BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, TargetArray) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::TargetArray' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, StartPos) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::StartPos' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, StartTangent) == 0x000028, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::StartTangent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, EndPos) == 0x000040, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::EndPos' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, EndTangent) == 0x000058, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::EndTangent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, StartScale_0) == 0x000070, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::StartScale_0' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, EndScale) == 0x000080, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::EndScale' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, StartRoll) == 0x000090, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::StartRoll' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, EndRoll) == 0x000094, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::EndRoll' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, CallFunc_AddComponent_ReturnValue) == 0x000100, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, CallFunc_Array_Add_ReturnValue) == 0x00010C, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000110, "Member 'BGA_BouncePad_Parallel_C_AddSplineDeformedCollisionComponent_PlayerDetector::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.BounceMulticast
// 0x0028 (0x0028 - 0x0000)
struct BGA_BouncePad_Parallel_C_BounceMulticast final
{
public:
	struct FVector                                Position;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceIntensity;                                   // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_BounceMulticast) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_BounceMulticast");
static_assert(sizeof(BGA_BouncePad_Parallel_C_BounceMulticast) == 0x000028, "Wrong size on BGA_BouncePad_Parallel_C_BounceMulticast");
static_assert(offsetof(BGA_BouncePad_Parallel_C_BounceMulticast, Position) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_BounceMulticast::Position' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_BounceMulticast, BounceIntensity) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_BounceMulticast::BounceIntensity' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_BounceMulticast, Actor) == 0x000020, "Member 'BGA_BouncePad_Parallel_C_BounceMulticast::Actor' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.CheckMaxDistanceForBounceShader
// 0x00D0 (0x00D0 - 0x0000)
struct BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader final
{
public:
	TArray<float>                                 DistanceList;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_BouncePad_Rope_Parallel_C*         CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader");
static_assert(sizeof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader) == 0x0000D0, "Wrong size on BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, DistanceList) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::DistanceList' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Array_Get_Item) == 0x000024, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_GetActorBounds_Origin) == 0x000030, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_GetActorBounds_BoxExtent) == 0x000048, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_VSize_ReturnValue) == 0x000060, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_FMin_ReturnValue) == 0x000088, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Array_Length_ReturnValue_2) == 0x000098, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B0, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Vector_Distance_ReturnValue) == 0x0000C8, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'BGA_BouncePad_Parallel_C_CheckMaxDistanceForBounceShader::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.ExecuteUbergraph_BGA_BouncePad_Parallel
// 0x0718 (0x0718 - 0x0000)
struct BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_2;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_2;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_2;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_2;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep_1;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult_1;                  // 0x0040(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_3;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_3;                    // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0158(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_BouncePad_Rope_Parallel_C*         CallFunc_Array_Get_Item;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0258(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0290(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0370(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_1;                  // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x2];                                      // 0x03BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x03C8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x03D4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_2;                         // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Position;                             // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BounceIntensity;                      // 0x0420(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_BouncePad_Rope_Parallel_C*         CallFunc_Array_Get_Item_3;                         // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0440(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0460(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0498(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0588(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0608(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x06E8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F4[0x4];                                      // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_BouncePad_Rope_Parallel_C*         CallFunc_Array_Get_Item_4;                         // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_701[0x3];                                      // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x3];                                      // 0x0709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x070C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel");
static_assert(sizeof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel) == 0x000718, "Wrong size on BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, EntryPoint) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::EntryPoint' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_DestroyedActor) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OverlappedComponent_2) == 0x000020, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherActor_2) == 0x000028, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherComp_2) == 0x000030, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherBodyIndex_2) == 0x000038, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_bFromSweep_1) == 0x00003C, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_SweepResult_1) == 0x000040, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_IsDedicatedServer_ReturnValue) == 0x000124, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_HitComponent) == 0x000128, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherActor_3) == 0x000130, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherComp_3) == 0x000138, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_NormalImpulse) == 0x000140, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_Hit) == 0x000158, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Array_Index_Variable) == 0x000238, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Get_Item) == 0x000240, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Length_ReturnValue_2) == 0x000248, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_IsValid_ReturnValue_1) == 0x00024C, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Array_Index_Variable_1) == 0x000250, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Loop_Counter_Variable) == 0x000254, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CreateDelegate_OutputDelegate_1) == 0x000258, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Add_IntInt_ReturnValue) == 0x000264, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Array_Index_Variable_2) == 0x000268, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Subtract_IntInt_ReturnValue) == 0x00026C, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OverlappedComponent_1) == 0x000270, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherActor_1) == 0x000278, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherComp_1) == 0x000280, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000288, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_bFromSweep) == 0x00028C, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_SweepResult) == 0x000290, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Get_Item_1) == 0x000370, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_DynamicCast_AsFort_Pawn) == 0x000378, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_DynamicCast_bSuccess) == 0x000380, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Length_ReturnValue_3) == 0x000384, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_VSize_ReturnValue) == 0x000388, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OverlappedComponent) == 0x000390, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherActor) == 0x000398, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherComp) == 0x0003A0, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_OtherBodyIndex) == 0x0003A8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_DynamicCast_AsFort_Pawn_1) == 0x0003B0, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_DynamicCast_AsFort_Pawn_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_DynamicCast_bSuccess_1) == 0x0003B8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Map_Remove_ReturnValue) == 0x0003B9, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Loop_Counter_Variable_1) == 0x0003BC, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Less_IntInt_ReturnValue) == 0x0003C0, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003C4, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CreateDelegate_OutputDelegate_2) == 0x0003C8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003D4, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Loop_Counter_Variable_2) == 0x0003E0, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003E4, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Array_Index_Variable_3) == 0x0003E8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Loop_Counter_Variable_3) == 0x0003EC, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Array_Index_Variable_4) == 0x0003F0, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Get_Item_2) == 0x0003F8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Less_IntInt_ReturnValue_1) == 0x000400, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Add_IntInt_ReturnValue_3) == 0x000404, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_Event_Position) == 0x000408, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_Event_Position' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_Event_BounceIntensity) == 0x000420, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_Event_BounceIntensity' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_Event_Actor) == 0x000428, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Get_Item_3) == 0x000430, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Length_ReturnValue_4) == 0x000438, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000440, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Less_IntInt_ReturnValue_2) == 0x000448, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Variable) == 0x00044C, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000450, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000454, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, Temp_int_Loop_Counter_Variable_4) == 0x000458, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_Event_Damage) == 0x00045C, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_Event_DamageTags) == 0x000460, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_Event_Momentum) == 0x000480, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_Event_HitInfo) == 0x000498, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_Event_InstigatedBy) == 0x000578, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_Event_DamageCauser) == 0x000580, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_Event_EffectContext) == 0x000588, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Less_IntInt_ReturnValue_3) == 0x0005A0, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Add_IntInt_ReturnValue_4) == 0x0005A4, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_DamagedActor) == 0x0005A8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_Damage) == 0x0005B0, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_InstigatedBy) == 0x0005B8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_DamageCauser) == 0x0005C0, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_HitLocation) == 0x0005C8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_FHitComponent) == 0x0005E0, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_BoneName) == 0x0005E8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CustomEvent_Momentum) == 0x0005F0, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CustomEvent_Momentum' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000608, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CreateDelegate_OutputDelegate_4) == 0x0006E8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Get_Item_4) == 0x0006F8, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_IsValid_ReturnValue_2) == 0x000700, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Array_Length_ReturnValue_5) == 0x000704, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, CallFunc_Less_IntInt_ReturnValue_4) == 0x000708, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel, K2Node_CreateDelegate_OutputDelegate_5) == 0x00070C, "Member 'BGA_BouncePad_Parallel_C_ExecuteUbergraph_BGA_BouncePad_Parallel::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.MakeConnectorCollision
// 0x0670 (0x0670 - 0x0000)
struct BGA_BouncePad_Parallel_C_MakeConnectorCollision final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0060)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_BouncePad_Rope_Parallel_C*         CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetConnectedSocketLocation_Left;          // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetConnectedSocketLocation_Center;        // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetConnectedSocketLocation_Right;         // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetConnectedSocketLocation_Center_Socket; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetConnectedSocketLocation_Left_Socket;   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetConnectedSocketLocation_Right_Socket;  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0xC];                                      // 0x0174(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0180(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0200(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue_1;     // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_4;               // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_2;         // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_5;               // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_5;      // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_6;      // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_; // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_7;      // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_8;      // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_9;      // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_10;     // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x05B8(0x0018)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_6;               // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_605[0x3];                                      // 0x0605(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0610(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0628(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0640(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue;             // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0658(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_MakeConnectorCollision) == 0x000010, "Wrong alignment on BGA_BouncePad_Parallel_C_MakeConnectorCollision");
static_assert(sizeof(BGA_BouncePad_Parallel_C_MakeConnectorCollision) == 0x000670, "Wrong size on BGA_BouncePad_Parallel_C_MakeConnectorCollision");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000030, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, Temp_bool_Variable) == 0x000048, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x0000B8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000D8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Array_Length_ReturnValue) == 0x0000F4, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000108, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_GetConnectedSocketLocation_Left) == 0x000120, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_GetConnectedSocketLocation_Left' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_GetConnectedSocketLocation_Center) == 0x000138, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_GetConnectedSocketLocation_Center' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_GetConnectedSocketLocation_Right) == 0x000150, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_GetConnectedSocketLocation_Right' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_GetConnectedSocketLocation_Center_Socket) == 0x000168, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_GetConnectedSocketLocation_Center_Socket' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_GetConnectedSocketLocation_Left_Socket) == 0x00016C, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_GetConnectedSocketLocation_Left_Socket' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_GetConnectedSocketLocation_Right_Socket) == 0x000170, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_GetConnectedSocketLocation_Right_Socket' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_MakeTransform_ReturnValue) == 0x000180, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001E0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000200, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Normal_ReturnValue) == 0x000260, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_AddComponent_ReturnValue) == 0x000278, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Vector_Distance_ReturnValue) == 0x000280, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000288, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Vector_Distance_ReturnValue_1) == 0x0002A0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Normal_ReturnValue_1) == 0x0002A8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002C0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x0002C8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_SelectVector_ReturnValue) == 0x0002E0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_SelectVector_ReturnValue_1) == 0x0002F8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_SelectVector_ReturnValue_2) == 0x000310, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000328, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Normal_ReturnValue_2) == 0x000340, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_GetDirectionUnitVector_ReturnValue_1) == 0x000358, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_GetDirectionUnitVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Dot_VectorVector_ReturnValue) == 0x000370, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000374, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_SelectVector_ReturnValue_3) == 0x000378, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_SelectVector_ReturnValue_4) == 0x000390, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_SelectVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_BreakVector_X) == 0x0003A8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_BreakVector_Y) == 0x0003AC, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_BreakVector_Z) == 0x0003B0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0003B8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x0003D0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_VSize_ReturnValue) == 0x0003E8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_VSize_ReturnValue_1) == 0x0003EC, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0003F0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0003F4, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_FClamp_ReturnValue) == 0x0003F8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Conv_FloatToVector_ReturnValue_2) == 0x000400, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Conv_FloatToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000418, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000420, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_SelectVector_ReturnValue_5) == 0x000438, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_SelectVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000450, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue_5) == 0x000468, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Add_VectorVector_ReturnValue) == 0x000480, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000498, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue_6) == 0x0004B0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_) == 0x0004C8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Divide_VectorVector_ReturnValue) == 0x0004D0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0004E8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue_7) == 0x0004F0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Cross_VectorVector_ReturnValue) == 0x000508, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue_8) == 0x000520, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue_9) == 0x000538, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000550, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Subtract_VectorVector_ReturnValue_10) == 0x000558, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Subtract_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000570, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000578, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Not_PreBool_ReturnValue) == 0x000590, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_NegateVector_ReturnValue) == 0x000598, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x0005B0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Conv_BoolToText_ReturnValue) == 0x0005B8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x0005D0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_SelectVector_ReturnValue_6) == 0x0005D8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_SelectVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_VSize_ReturnValue_2) == 0x0005F0, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_BreakVector_X_1) == 0x0005F4, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_BreakVector_Y_1) == 0x0005F8, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_BreakVector_Z_1) == 0x0005FC, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000600, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x000604, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000608, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_MakeVector2D_ReturnValue) == 0x000610, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, K2Node_Select_Default) == 0x000620, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_MakeVector2D_ReturnValue_1) == 0x000628, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_SelectFloat_ReturnValue) == 0x000638, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_MakeVector2D_ReturnValue_2) == 0x000640, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_DegreesToRadians_ReturnValue) == 0x000650, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_MakeConnectorCollision, CallFunc_MakeVector2D_ReturnValue_3) == 0x000658, "Member 'BGA_BouncePad_Parallel_C_MakeConnectorCollision::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.OnComponentBeginOverlap_Event_0
// 0x0100 (0x0100 - 0x0000)
struct BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0");
static_assert(sizeof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0) == 0x000100, "Wrong size on BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0, OverlappedComponent) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0, OtherActor) == 0x000008, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0, OtherComp) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0, OtherBodyIndex) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0, bFromSweep) == 0x00001C, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0::bFromSweep' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0, SweepResult) == 0x000020, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_0::SweepResult' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.OnComponentBeginOverlap_Event_1
// 0x0100 (0x0100 - 0x0000)
struct BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1");
static_assert(sizeof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1) == 0x000100, "Wrong size on BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1, OverlappedComponent) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1, OtherActor) == 0x000008, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1, OtherComp) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1, OtherBodyIndex) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1, bFromSweep) == 0x00001C, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1::bFromSweep' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1, SweepResult) == 0x000020, "Member 'BGA_BouncePad_Parallel_C_OnComponentBeginOverlap_Event_1::SweepResult' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.OnComponentEndOverlap_Event_0
// 0x0020 (0x0020 - 0x0000)
struct BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0");
static_assert(sizeof(BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0) == 0x000020, "Wrong size on BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0, OverlappedComponent) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0, OtherActor) == 0x000008, "Member 'BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0, OtherComp) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0, OtherBodyIndex) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_OnComponentEndOverlap_Event_0::OtherBodyIndex' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.OnComponentHit_Event_0
// 0x0110 (0x0110 - 0x0000)
struct BGA_BouncePad_Parallel_C_OnComponentHit_Event_0 final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_OnComponentHit_Event_0) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_OnComponentHit_Event_0");
static_assert(sizeof(BGA_BouncePad_Parallel_C_OnComponentHit_Event_0) == 0x000110, "Wrong size on BGA_BouncePad_Parallel_C_OnComponentHit_Event_0");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentHit_Event_0, HitComponent) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_OnComponentHit_Event_0::HitComponent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentHit_Event_0, OtherActor) == 0x000008, "Member 'BGA_BouncePad_Parallel_C_OnComponentHit_Event_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentHit_Event_0, OtherComp) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_OnComponentHit_Event_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentHit_Event_0, NormalImpulse) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_OnComponentHit_Event_0::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnComponentHit_Event_0, Hit) == 0x000030, "Member 'BGA_BouncePad_Parallel_C_OnComponentHit_Event_0::Hit' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.OnDeathPlayEffects
// 0x0148 (0x0148 - 0x0000)
struct BGA_BouncePad_Parallel_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_OnDeathPlayEffects");
static_assert(sizeof(BGA_BouncePad_Parallel_C_OnDeathPlayEffects) == 0x000148, "Wrong size on BGA_BouncePad_Parallel_C_OnDeathPlayEffects");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'BGA_BouncePad_Parallel_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'BGA_BouncePad_Parallel_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDeathPlayEffects, HitInfo) == 0x000040, "Member 'BGA_BouncePad_Parallel_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDeathPlayEffects, InstigatedBy) == 0x000120, "Member 'BGA_BouncePad_Parallel_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDeathPlayEffects, DamageCauser) == 0x000128, "Member 'BGA_BouncePad_Parallel_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDeathPlayEffects, EffectContext) == 0x000130, "Member 'BGA_BouncePad_Parallel_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.OnDied_Event
// 0x0060 (0x0060 - 0x0000)
struct BGA_BouncePad_Parallel_C_OnDied_Event final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Momentum;                                          // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_OnDied_Event) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_OnDied_Event");
static_assert(sizeof(BGA_BouncePad_Parallel_C_OnDied_Event) == 0x000060, "Wrong size on BGA_BouncePad_Parallel_C_OnDied_Event");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDied_Event, DamagedActor) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_OnDied_Event::DamagedActor' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDied_Event, Damage) == 0x000008, "Member 'BGA_BouncePad_Parallel_C_OnDied_Event::Damage' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDied_Event, InstigatedBy) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_OnDied_Event::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDied_Event, DamageCauser) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_OnDied_Event::DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDied_Event, HitLocation) == 0x000020, "Member 'BGA_BouncePad_Parallel_C_OnDied_Event::HitLocation' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDied_Event, FHitComponent) == 0x000038, "Member 'BGA_BouncePad_Parallel_C_OnDied_Event::FHitComponent' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDied_Event, BoneName) == 0x000040, "Member 'BGA_BouncePad_Parallel_C_OnDied_Event::BoneName' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_OnDied_Event, Momentum) == 0x000048, "Member 'BGA_BouncePad_Parallel_C_OnDied_Event::Momentum' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.Rope Destroyed
// 0x0008 (0x0008 - 0x0000)
struct BGA_BouncePad_Parallel_C_Rope_Destroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_Rope_Destroyed) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_Rope_Destroyed");
static_assert(sizeof(BGA_BouncePad_Parallel_C_Rope_Destroyed) == 0x000008, "Wrong size on BGA_BouncePad_Parallel_C_Rope_Destroyed");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Rope_Destroyed, DestroyedActor) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_Rope_Destroyed::DestroyedActor' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.SetMaxRadiusForShader
// 0x00C8 (0x00C8 - 0x0000)
struct BGA_BouncePad_Parallel_C_SetMaxRadiusForShader final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_BouncePad_Rope_Parallel_C*         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_SetMaxRadiusForShader");
static_assert(sizeof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader) == 0x0000C8, "Wrong size on BGA_BouncePad_Parallel_C_SetMaxRadiusForShader");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_Array_Get_Item) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_GetUpVector_ReturnValue) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000040, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_BreakVector_X) == 0x000058, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_BreakVector_Y) == 0x00005C, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_BreakVector_Z) == 0x000060, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000068, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_GetRightVector_ReturnValue) == 0x000080, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_GetForwardVector_ReturnValue) == 0x000098, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_SetMaxRadiusForShader, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'BGA_BouncePad_Parallel_C_SetMaxRadiusForShader::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.Update
// 0x0058 (0x0058 - 0x0000)
struct BGA_BouncePad_Parallel_C_Update final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_2;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_Update) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_Update");
static_assert(sizeof(BGA_BouncePad_Parallel_C_Update) == 0x000058, "Wrong size on BGA_BouncePad_Parallel_C_Update");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BGA_BouncePad_Parallel_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BGA_BouncePad_Parallel_C_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_Update::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'BGA_BouncePad_Parallel_C_Update::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Array_Get_Item) == 0x000028, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Array_Get_Item_2) == 0x000048, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Array_Length_ReturnValue_2) == 0x000050, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_Update, CallFunc_Less_IntInt_ReturnValue_2) == 0x000054, "Member 'BGA_BouncePad_Parallel_C_Update::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BGA_BouncePad_Parallel_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_BouncePad_Rope_Parallel_C*         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_BouncePad_Parallel_C_UserConstructionScript) == 0x000008, "Wrong alignment on BGA_BouncePad_Parallel_C_UserConstructionScript");
static_assert(sizeof(BGA_BouncePad_Parallel_C_UserConstructionScript) == 0x000020, "Wrong size on BGA_BouncePad_Parallel_C_UserConstructionScript");
static_assert(offsetof(BGA_BouncePad_Parallel_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BGA_BouncePad_Parallel_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BGA_BouncePad_Parallel_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BGA_BouncePad_Parallel_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000010, "Member 'BGA_BouncePad_Parallel_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BGA_BouncePad_Parallel_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BGA_BouncePad_Parallel_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_BouncePad_Parallel_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BGA_BouncePad_Parallel_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

