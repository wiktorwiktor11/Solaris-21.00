#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchXPRecap

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function MatchXPRecap.MatchXPRecap_C.BP_HandleExtensionWidgetCreated
// 0x0010 (0x0010 - 0x0000)
struct MatchXPRecap_C_BP_HandleExtensionWidgetCreated final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIExtensionSlot                              SlotType;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecap_C_BP_HandleExtensionWidgetCreated) == 0x000008, "Wrong alignment on MatchXPRecap_C_BP_HandleExtensionWidgetCreated");
static_assert(sizeof(MatchXPRecap_C_BP_HandleExtensionWidgetCreated) == 0x000010, "Wrong size on MatchXPRecap_C_BP_HandleExtensionWidgetCreated");
static_assert(offsetof(MatchXPRecap_C_BP_HandleExtensionWidgetCreated, Widget) == 0x000000, "Member 'MatchXPRecap_C_BP_HandleExtensionWidgetCreated::Widget' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_BP_HandleExtensionWidgetCreated, SlotType) == 0x000008, "Member 'MatchXPRecap_C_BP_HandleExtensionWidgetCreated::SlotType' has a wrong offset!");

// Function MatchXPRecap.MatchXPRecap_C.ExecuteUbergraph_MatchXPRecap
// 0x00D0 (0x00D0 - 0x0000)
struct MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMatchXPTotalEntry_C*                   K2Node_DynamicCast_AsMatch_XPTotal_Entry;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetXPTarget_ReturnValue;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active;                         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_Event_Widget;                               // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIExtensionSlot                              K2Node_Event_SlotType;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatchXPTotalEntry_C*                   K2Node_DynamicCast_AsMatch_XPTotal_Entry_1;        // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap) == 0x000008, "Wrong alignment on MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap");
static_assert(sizeof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap) == 0x0000D0, "Wrong size on MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, EntryPoint) == 0x000000, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::EntryPoint' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000010, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000015, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, Temp_int_Array_Index_Variable) == 0x000018, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, Temp_int_Variable) == 0x00001C, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, K2Node_CustomEvent_InVisibility) == 0x00003C, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000040, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000044, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Max_ReturnValue) == 0x000048, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Array_Get_Item) == 0x000050, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, K2Node_DynamicCast_AsMatch_XPTotal_Entry) == 0x000058, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::K2Node_DynamicCast_AsMatch_XPTotal_Entry' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_GetXPTarget_ReturnValue) == 0x000064, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_GetXPTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, K2Node_CustomEvent_Active) == 0x000070, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, K2Node_Event_Widget) == 0x000078, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::K2Node_Event_Widget' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, K2Node_Event_SlotType) == 0x000080, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::K2Node_Event_SlotType' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_GetAllChildren_ReturnValue_1) == 0x000088, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, K2Node_SwitchEnum_CmpSuccess) == 0x000098, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, K2Node_DynamicCast_AsMatch_XPTotal_Entry_1) == 0x0000B0, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::K2Node_DynamicCast_AsMatch_XPTotal_Entry_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000BC, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_Max_ReturnValue_1) == 0x0000C0, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap, CallFunc_AddChildToOverlay_ReturnValue) == 0x0000C8, "Member 'MatchXPRecap_C_ExecuteUbergraph_MatchXPRecap::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");

// Function MatchXPRecap.MatchXPRecap_C.NavigateToKeepPlayingTogetherOptions
// 0x0028 (0x0028 - 0x0000)
struct MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetDisplayedEntryWidgets_ReturnValue;     // 0x0010(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions) == 0x000008, "Wrong alignment on MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions");
static_assert(sizeof(MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions) == 0x000028, "Wrong size on MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions");
static_assert(offsetof(MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions, Navigation_0) == 0x000000, "Member 'MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions::Navigation_0' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions, ReturnValue) == 0x000008, "Member 'MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions::ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions, CallFunc_GetDisplayedEntryWidgets_ReturnValue) == 0x000010, "Member 'MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions::CallFunc_GetDisplayedEntryWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'MatchXPRecap_C_NavigateToKeepPlayingTogetherOptions::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function MatchXPRecap.MatchXPRecap_C.NavigateToPostGameOptions
// 0x0018 (0x0018 - 0x0000)
struct MatchXPRecap_C_NavigateToPostGameOptions final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPostGameMenuEntry*                 CallFunc_GetFirstEntry_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecap_C_NavigateToPostGameOptions) == 0x000008, "Wrong alignment on MatchXPRecap_C_NavigateToPostGameOptions");
static_assert(sizeof(MatchXPRecap_C_NavigateToPostGameOptions) == 0x000018, "Wrong size on MatchXPRecap_C_NavigateToPostGameOptions");
static_assert(offsetof(MatchXPRecap_C_NavigateToPostGameOptions, Navigation_0) == 0x000000, "Member 'MatchXPRecap_C_NavigateToPostGameOptions::Navigation_0' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_NavigateToPostGameOptions, ReturnValue) == 0x000008, "Member 'MatchXPRecap_C_NavigateToPostGameOptions::ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecap_C_NavigateToPostGameOptions, CallFunc_GetFirstEntry_ReturnValue) == 0x000010, "Member 'MatchXPRecap_C_NavigateToPostGameOptions::CallFunc_GetFirstEntry_ReturnValue' has a wrong offset!");

// Function MatchXPRecap.MatchXPRecap_C.SetNavigationOptionsVisibility
// 0x0001 (0x0001 - 0x0000)
struct MatchXPRecap_C_SetNavigationOptionsVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecap_C_SetNavigationOptionsVisibility) == 0x000001, "Wrong alignment on MatchXPRecap_C_SetNavigationOptionsVisibility");
static_assert(sizeof(MatchXPRecap_C_SetNavigationOptionsVisibility) == 0x000001, "Wrong size on MatchXPRecap_C_SetNavigationOptionsVisibility");
static_assert(offsetof(MatchXPRecap_C_SetNavigationOptionsVisibility, InVisibility) == 0x000000, "Member 'MatchXPRecap_C_SetNavigationOptionsVisibility::InVisibility' has a wrong offset!");

// Function MatchXPRecap.MatchXPRecap_C.SetXPRecapActive
// 0x0001 (0x0001 - 0x0000)
struct MatchXPRecap_C_SetXPRecapActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecap_C_SetXPRecapActive) == 0x000001, "Wrong alignment on MatchXPRecap_C_SetXPRecapActive");
static_assert(sizeof(MatchXPRecap_C_SetXPRecapActive) == 0x000001, "Wrong size on MatchXPRecap_C_SetXPRecapActive");
static_assert(offsetof(MatchXPRecap_C_SetXPRecapActive, Active) == 0x000000, "Member 'MatchXPRecap_C_SetXPRecapActive::Active' has a wrong offset!");

}

