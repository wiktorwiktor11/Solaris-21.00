#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RaceTrack_Checkpoint

#include "Basic.hpp"

#include "BP_RaceTrack_Checkpoint_classes.hpp"
#include "BP_RaceTrack_Checkpoint_parameters.hpp"


namespace SDK
{

// Function BP_RaceTrack_Checkpoint.BP_RaceTrack_Checkpoint_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_RaceTrack_Checkpoint_C::BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RaceTrack_Checkpoint_C", "BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_RaceTrack_Checkpoint_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RaceTrack_Checkpoint.BP_RaceTrack_Checkpoint_C.ExecuteUbergraph_BP_RaceTrack_Checkpoint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RaceTrack_Checkpoint_C::ExecuteUbergraph_BP_RaceTrack_Checkpoint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RaceTrack_Checkpoint_C", "ExecuteUbergraph_BP_RaceTrack_Checkpoint");

	Params::BP_RaceTrack_Checkpoint_C_ExecuteUbergraph_BP_RaceTrack_Checkpoint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RaceTrack_Checkpoint.BP_RaceTrack_Checkpoint_C.ResetCheckpoint
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableCollision                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RaceTrack_Checkpoint_C::ResetCheckpoint(bool EnableCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RaceTrack_Checkpoint_C", "ResetCheckpoint");

	Params::BP_RaceTrack_Checkpoint_C_ResetCheckpoint Parms{};

	Parms.EnableCollision = EnableCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RaceTrack_Checkpoint.BP_RaceTrack_Checkpoint_C.UpdateCheckpointFX
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FX_Visibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerPawn*                  FPP_01                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RaceTrack_Checkpoint_C::UpdateCheckpointFX(bool FX_Visibility, class AFortPlayerPawn* FPP_01)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RaceTrack_Checkpoint_C", "UpdateCheckpointFX");

	Params::BP_RaceTrack_Checkpoint_C_UpdateCheckpointFX Parms{};

	Parms.FX_Visibility = FX_Visibility;
	Parms.FPP_01 = FPP_01;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RaceTrack_Checkpoint.BP_RaceTrack_Checkpoint_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RaceTrack_Checkpoint_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RaceTrack_Checkpoint_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

