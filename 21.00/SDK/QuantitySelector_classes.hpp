#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuantitySelector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuantitySelector.QuantitySelector_C
// 0x0E90 (0x1430 - 0x05A0)
class UQuantitySelector_C final : public UFortQuantitySelector
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       AdditionalInfo;                                    // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                CurrentAmount;                                     // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortMultiSizeItemCard*                 ItemCard;                                          // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULightbox_C*                            Lightbox;                                          // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                MaxAmount;                                         // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      MaxButton;                                         // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      MinButton;                                         // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAnalogSlider*                          ValueSlider;                                       // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       WindowTitle;                                       // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         MaxValue;                                          // 0x05F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 ChosenValue, class UFortItem* FortItem)> OnButtonClickedDispatcher;                         // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int32 NewValue, class UFortItem* FortItem)> OnStackValueChangedDispatcher;                     // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	uint8                                         Pad_618[0x8];                                      // 0x0618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSliderStyle                           SliderStyle_MouseKeyboard;                         // 0x0620(0x04A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bShowConfirmButton;                                // 0x0AC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bShowCancelButton;                                 // 0x0AC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bAllowZeroQuantity;                                // 0x0AC2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_AC3[0xD];                                      // 0x0AC3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSliderStyle                           SliderStyle_Touch;                                 // 0x0AD0(0x04A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             ConfirmButtonSound;                                // 0x0F70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USoundBase*                             StorageCancelSound;                                // 0x0F78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSliderStyle                           SliderStyle_Generic;                               // 0x0F80(0x04A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MinimumValue;                                      // 0x1420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__AnalogSlider_0_K2Node_ComponentBoundEvent_434_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_166_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__IconTextButton_K2Node_ComponentBoundEvent_86_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__MaxButton_K2Node_ComponentBoundEvent_343_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__MinButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BP_OnActivated();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_QuantitySelector(int32 EntryPoint);
	void GetCurrentValue(int32* CurrentValue);
	void GetMinValue(int32* MinValue);
	void HandleChangeInputMode(ECommonInputType bNewInputType);
	void HandleMaxPressed(bool* Passthrough);
	void HandleMinPressed(bool* Passthrough);
	void OnQuantitySelectorInitialized(class UFortItem* InItem, const class FText& TitleText, const class FText& ConfirmButtonText, const class FText& AdditionalInfoText, const int32 InitialQuantity, const int32 MaximumQuantity);
	void SetAdditionalText(const class FText& AdditionalInfoText);
	void SetCurrentValue(int32 NewValue);
	void SetupForInputMode(bool IsUsingGamepad);
	void SliderValueChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuantitySelector_C">();
	}
	static class UQuantitySelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuantitySelector_C>();
	}
};
static_assert(alignof(UQuantitySelector_C) == 0x000010, "Wrong alignment on UQuantitySelector_C");
static_assert(sizeof(UQuantitySelector_C) == 0x001430, "Wrong size on UQuantitySelector_C");
static_assert(offsetof(UQuantitySelector_C, UberGraphFrame) == 0x0005A0, "Member 'UQuantitySelector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, AdditionalInfo) == 0x0005A8, "Member 'UQuantitySelector_C::AdditionalInfo' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, CurrentAmount) == 0x0005B0, "Member 'UQuantitySelector_C::CurrentAmount' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, ItemCard) == 0x0005B8, "Member 'UQuantitySelector_C::ItemCard' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, Lightbox) == 0x0005C0, "Member 'UQuantitySelector_C::Lightbox' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, MaxAmount) == 0x0005C8, "Member 'UQuantitySelector_C::MaxAmount' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, MaxButton) == 0x0005D0, "Member 'UQuantitySelector_C::MaxButton' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, MinButton) == 0x0005D8, "Member 'UQuantitySelector_C::MinButton' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, ValueSlider) == 0x0005E0, "Member 'UQuantitySelector_C::ValueSlider' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, WindowTitle) == 0x0005E8, "Member 'UQuantitySelector_C::WindowTitle' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, MaxValue) == 0x0005F0, "Member 'UQuantitySelector_C::MaxValue' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, OnButtonClickedDispatcher) == 0x0005F8, "Member 'UQuantitySelector_C::OnButtonClickedDispatcher' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, OnStackValueChangedDispatcher) == 0x000608, "Member 'UQuantitySelector_C::OnStackValueChangedDispatcher' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, SliderStyle_MouseKeyboard) == 0x000620, "Member 'UQuantitySelector_C::SliderStyle_MouseKeyboard' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, bShowConfirmButton) == 0x000AC0, "Member 'UQuantitySelector_C::bShowConfirmButton' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, bShowCancelButton) == 0x000AC1, "Member 'UQuantitySelector_C::bShowCancelButton' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, bAllowZeroQuantity) == 0x000AC2, "Member 'UQuantitySelector_C::bAllowZeroQuantity' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, SliderStyle_Touch) == 0x000AD0, "Member 'UQuantitySelector_C::SliderStyle_Touch' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, ConfirmButtonSound) == 0x000F70, "Member 'UQuantitySelector_C::ConfirmButtonSound' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, StorageCancelSound) == 0x000F78, "Member 'UQuantitySelector_C::StorageCancelSound' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, SliderStyle_Generic) == 0x000F80, "Member 'UQuantitySelector_C::SliderStyle_Generic' has a wrong offset!");
static_assert(offsetof(UQuantitySelector_C, MinimumValue) == 0x001420, "Member 'UQuantitySelector_C::MinimumValue' has a wrong offset!");

}

