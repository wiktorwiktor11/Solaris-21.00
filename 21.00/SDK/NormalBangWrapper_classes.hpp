#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NormalBangWrapper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass NormalBangWrapper.NormalBangWrapper_C
// 0x0088 (0x0380 - 0x02F8)
class UNormalBangWrapper_C final : public UFortBangWrapper_NUI
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       IntroSuperBang;                                    // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TutorialGlow;                                      // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               BangBox;                                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               BigBang;                                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               BigBangCount;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_0;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Content;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CountText;                                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ModeSwitcher;                                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SmallBang;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SmallBangCount;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SuperBang;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          TutorialBorder;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          UseSmallVersion;                                   // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseSuperBangNoCount;                              // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldSuppressBang;                                // 0x0379(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Adjust_Bang_Image_Translation(const struct FVector2D& Translation);
	void ExecuteUbergraph_NormalBangWrapper(int32 EntryPoint);
	void InitialReset();
	void OnBangStateChanged(bool bEnabled, int32 Count_0);
	void OnStartCallout(class FName TutorialObjectiveName, ETutorialType TutorialType);
	void OnStopCallout();
	void PreConstruct(bool IsDesignTime);
	void SetShouldSuppressBang(bool ShouldSuppressBang_0);
	void SetTutorialBorderStyle(class UClass* BorderStyle);
	void TriggerIntro();
	void TriggerReset();
	void Update_Bang_Icon_Version(int32 InCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NormalBangWrapper_C">();
	}
	static class UNormalBangWrapper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNormalBangWrapper_C>();
	}
};
static_assert(alignof(UNormalBangWrapper_C) == 0x000008, "Wrong alignment on UNormalBangWrapper_C");
static_assert(sizeof(UNormalBangWrapper_C) == 0x000380, "Wrong size on UNormalBangWrapper_C");
static_assert(offsetof(UNormalBangWrapper_C, UberGraphFrame) == 0x0002F8, "Member 'UNormalBangWrapper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, IntroSuperBang) == 0x000300, "Member 'UNormalBangWrapper_C::IntroSuperBang' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, Intro) == 0x000308, "Member 'UNormalBangWrapper_C::Intro' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, TutorialGlow) == 0x000310, "Member 'UNormalBangWrapper_C::TutorialGlow' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, BangBox) == 0x000318, "Member 'UNormalBangWrapper_C::BangBox' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, BigBang) == 0x000320, "Member 'UNormalBangWrapper_C::BigBang' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, BigBangCount) == 0x000328, "Member 'UNormalBangWrapper_C::BigBangCount' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, CommonTextBlock_0) == 0x000330, "Member 'UNormalBangWrapper_C::CommonTextBlock_0' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, Content) == 0x000338, "Member 'UNormalBangWrapper_C::Content' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, CountText) == 0x000340, "Member 'UNormalBangWrapper_C::CountText' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, ModeSwitcher) == 0x000348, "Member 'UNormalBangWrapper_C::ModeSwitcher' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, SmallBang) == 0x000350, "Member 'UNormalBangWrapper_C::SmallBang' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, SmallBangCount) == 0x000358, "Member 'UNormalBangWrapper_C::SmallBangCount' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, SuperBang) == 0x000360, "Member 'UNormalBangWrapper_C::SuperBang' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, TutorialBorder) == 0x000368, "Member 'UNormalBangWrapper_C::TutorialBorder' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, UseSmallVersion) == 0x000370, "Member 'UNormalBangWrapper_C::UseSmallVersion' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, Count) == 0x000374, "Member 'UNormalBangWrapper_C::Count' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, bUseSuperBangNoCount) == 0x000378, "Member 'UNormalBangWrapper_C::bUseSuperBangNoCount' has a wrong offset!");
static_assert(offsetof(UNormalBangWrapper_C, ShouldSuppressBang) == 0x000379, "Member 'UNormalBangWrapper_C::ShouldSuppressBang' has a wrong offset!");

}

