#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrewUI

#include "Basic.hpp"

#include "CrewUI_classes.hpp"
#include "CrewUI_parameters.hpp"


namespace SDK
{

// Function CrewUI.CrewPurchaseScreen.BeginProgress
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ProgressLabel                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::BeginProgress(const class FText& ProgressLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "BeginProgress");

	Params::CrewPurchaseScreen_BeginProgress Parms{};

	Parms.ProgressLabel = std::move(ProgressLabel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.EndProgress
// (Event, Protected, BlueprintEvent)

void UCrewPurchaseScreen::EndProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "EndProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.CrewPurchaseScreen.OnContainerTabVisibilityUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bTabsVisible                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpacingAdjustmentForTabs                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "OnContainerTabVisibilityUpdated");

	Params::CrewPurchaseScreen_OnContainerTabVisibilityUpdated Parms{};

	Parms.bTabsVisible = bTabsVisible;
	Parms.SpacingAdjustmentForTabs = SpacingAdjustmentForTabs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.OnSetNavButtonNotificationText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             NotificationText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::OnSetNavButtonNotificationText(const class FText& NotificationText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "OnSetNavButtonNotificationText");

	Params::CrewPurchaseScreen_OnSetNavButtonNotificationText Parms{};

	Parms.NotificationText = std::move(NotificationText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.OnShowNavButtonNotification
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowNotification                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::OnShowNavButtonNotification(const bool bShowNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "OnShowNavButtonNotification");

	Params::CrewPurchaseScreen_OnShowNavButtonNotification Parms{};

	Parms.bShowNotification = bShowNotification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.OnUpdatePurchaseButtonState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECrewPurchaseButtonState                ButtonState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::OnUpdatePurchaseButtonState(ECrewPurchaseButtonState ButtonState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "OnUpdatePurchaseButtonState");

	Params::CrewPurchaseScreen_OnUpdatePurchaseButtonState Parms{};

	Parms.ButtonState = ButtonState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.OnUpdateVBuckRefundVisibility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::OnUpdateVBuckRefundVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "OnUpdateVBuckRefundVisibility");

	Params::CrewPurchaseScreen_OnUpdateVBuckRefundVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPurchaseScreen.OnUserInformationTextsUpdated
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             UserInformationText1                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             UserInformationText2                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EMcpSubscriptionState                   SubscriptionState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewPurchaseScreen::OnUserInformationTextsUpdated(const class FText& UserInformationText1, const class FText& UserInformationText2, EMcpSubscriptionState SubscriptionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchaseScreen", "OnUserInformationTextsUpdated");

	Params::CrewPurchaseScreen_OnUserInformationTextsUpdated Parms{};

	Parms.UserInformationText1 = std::move(UserInformationText1);
	Parms.UserInformationText2 = std::move(UserInformationText2);
	Parms.SubscriptionState = SubscriptionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassCrewPurchaseButton.OnCurrencyUpdated
// (Event, Protected, BlueprintEvent)

void UBattlePassCrewPurchaseButton::OnCurrencyUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassCrewPurchaseButton", "OnCurrencyUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.BattlePassCrewPurchaseContainer.OnContentStateUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBattlePassCrewContentState             InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInScreenOpened                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassCrewPurchaseContainer::OnContentStateUpdated(EBattlePassCrewContentState InState, bool bInScreenOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassCrewPurchaseContainer", "OnContentStateUpdated");

	Params::BattlePassCrewPurchaseContainer_OnContentStateUpdated Parms{};

	Parms.InState = InState;
	Parms.bInScreenOpened = bInScreenOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassCrewPurchaseContainer.OnTriggerIntroAnimation
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanClaimRewards                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassCrewPurchaseContainer::OnTriggerIntroAnimation(bool bCanClaimRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassCrewPurchaseContainer", "OnTriggerIntroAnimation");

	Params::BattlePassCrewPurchaseContainer_OnTriggerIntroAnimation Parms{};

	Parms.bCanClaimRewards = bCanClaimRewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassPurchaseScreen.OnPurchaseConfirmed
// (Event, Protected, BlueprintEvent)

void UBattlePassPurchaseScreen::OnPurchaseConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "OnPurchaseConfirmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.BattlePassPurchaseScreen.OnPurchaseStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBattlePassPurchaseState                InCurrentState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassPurchaseScreen::OnPurchaseStateChanged(EBattlePassPurchaseState InCurrentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "OnPurchaseStateChanged");

	Params::BattlePassPurchaseScreen_OnPurchaseStateChanged Parms{};

	Parms.InCurrentState = InCurrentState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassPurchaseScreen.OnSetNavButtonNotificationText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             NotificationText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassPurchaseScreen::OnSetNavButtonNotificationText(const class FText& NotificationText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "OnSetNavButtonNotificationText");

	Params::BattlePassPurchaseScreen_OnSetNavButtonNotificationText Parms{};

	Parms.NotificationText = std::move(NotificationText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassPurchaseScreen.OnSetScreenInteractable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInteractable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassPurchaseScreen::OnSetScreenInteractable(bool bInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "OnSetScreenInteractable");

	Params::BattlePassPurchaseScreen_OnSetScreenInteractable Parms{};

	Parms.bInteractable = bInteractable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.BattlePassPurchaseScreen.OnShowNavButtonNotification
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowNotification                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassPurchaseScreen::OnShowNavButtonNotification(const bool bShowNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassPurchaseScreen", "OnShowNavButtonNotification");

	Params::BattlePassPurchaseScreen_OnShowNavButtonNotification Parms{};

	Parms.bShowNotification = bShowNotification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewMultiSubscriptionAlertModal.OnSetHowToCancelURL
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           MoreInfoUrl                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewMultiSubscriptionAlertModal::OnSetHowToCancelURL(const class FString& MoreInfoUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewMultiSubscriptionAlertModal", "OnSetHowToCancelURL");

	Params::CrewMultiSubscriptionAlertModal_OnSetHowToCancelURL Parms{};

	Parms.MoreInfoUrl = std::move(MoreInfoUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPriceChangeAcknowledgeModal.ExitModal
// (Final, Native, Protected, BlueprintCallable)

void UCrewPriceChangeAcknowledgeModal::ExitModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPriceChangeAcknowledgeModal", "ExitModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CrewUI.CrewPriceChangeAcknowledgeModal.OnModalBackout
// (Event, Protected, BlueprintEvent)

void UCrewPriceChangeAcknowledgeModal::OnModalBackout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPriceChangeAcknowledgeModal", "OnModalBackout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.CrewPriceChangeAcknowledgeModal.OnSetPriceChangeAcknowledgeBodyTable
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FCrewTableRow>            PriceChangeByRegionRows                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPriceChangeAcknowledgeModal::OnSetPriceChangeAcknowledgeBodyTable(const TArray<struct FCrewTableRow>& PriceChangeByRegionRows)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPriceChangeAcknowledgeModal", "OnSetPriceChangeAcknowledgeBodyTable");

	Params::CrewPriceChangeAcknowledgeModal_OnSetPriceChangeAcknowledgeBodyTable Parms{};

	Parms.PriceChangeByRegionRows = std::move(PriceChangeByRegionRows);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPriceChangeAcknowledgeModal.OnSetPriceChangeAcknowledgeBodyText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             BodyText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPriceChangeAcknowledgeModal::OnSetPriceChangeAcknowledgeBodyText(const class FText& BodyText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPriceChangeAcknowledgeModal", "OnSetPriceChangeAcknowledgeBodyText");

	Params::CrewPriceChangeAcknowledgeModal_OnSetPriceChangeAcknowledgeBodyText Parms{};

	Parms.BodyText = std::move(BodyText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPriceChangeAcknowledgeModal.OnSetPriceChangeAcknowledgeCancelSubscriptionButtonText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             CancelSubscriptionButtonText                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPriceChangeAcknowledgeModal::OnSetPriceChangeAcknowledgeCancelSubscriptionButtonText(const class FText& CancelSubscriptionButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPriceChangeAcknowledgeModal", "OnSetPriceChangeAcknowledgeCancelSubscriptionButtonText");

	Params::CrewPriceChangeAcknowledgeModal_OnSetPriceChangeAcknowledgeCancelSubscriptionButtonText Parms{};

	Parms.CancelSubscriptionButtonText = std::move(CancelSubscriptionButtonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPriceChangeAcknowledgeModal.OnSetPriceChangeAcknowledgeCheckboxText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             CheckboxText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPriceChangeAcknowledgeModal::OnSetPriceChangeAcknowledgeCheckboxText(const class FText& CheckboxText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPriceChangeAcknowledgeModal", "OnSetPriceChangeAcknowledgeCheckboxText");

	Params::CrewPriceChangeAcknowledgeModal_OnSetPriceChangeAcknowledgeCheckboxText Parms{};

	Parms.CheckboxText = std::move(CheckboxText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPriceChangeAcknowledgeModal.OnSetPriceChangeAcknowledgeConfirmButtonText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ConfirmButtonText                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPriceChangeAcknowledgeModal::OnSetPriceChangeAcknowledgeConfirmButtonText(const class FText& ConfirmButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPriceChangeAcknowledgeModal", "OnSetPriceChangeAcknowledgeConfirmButtonText");

	Params::CrewPriceChangeAcknowledgeModal_OnSetPriceChangeAcknowledgeConfirmButtonText Parms{};

	Parms.ConfirmButtonText = std::move(ConfirmButtonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPriceChangeAcknowledgeModal.OnSetPriceChangeAcknowledgeMoreInfoText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ConfirmButtonText                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPriceChangeAcknowledgeModal::OnSetPriceChangeAcknowledgeMoreInfoText(const class FText& ConfirmButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPriceChangeAcknowledgeModal", "OnSetPriceChangeAcknowledgeMoreInfoText");

	Params::CrewPriceChangeAcknowledgeModal_OnSetPriceChangeAcknowledgeMoreInfoText Parms{};

	Parms.ConfirmButtonText = std::move(ConfirmButtonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPriceChangeAcknowledgeModal.OnSetPriceChangeAcknowledgeMoreInfoUrl
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             MoreInfoUrl                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPriceChangeAcknowledgeModal::OnSetPriceChangeAcknowledgeMoreInfoUrl(const class FText& MoreInfoUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPriceChangeAcknowledgeModal", "OnSetPriceChangeAcknowledgeMoreInfoUrl");

	Params::CrewPriceChangeAcknowledgeModal_OnSetPriceChangeAcknowledgeMoreInfoUrl Parms{};

	Parms.MoreInfoUrl = std::move(MoreInfoUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewPriceChangeAcknowledgeModal.OnSetPriceChangeAcknowledgeTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCrewPriceChangeAcknowledgeModal::OnSetPriceChangeAcknowledgeTitle(const class FText& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPriceChangeAcknowledgeModal", "OnSetPriceChangeAcknowledgeTitle");

	Params::CrewPriceChangeAcknowledgeModal_OnSetPriceChangeAcknowledgeTitle Parms{};

	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewRewardTile.OnDownloadTileImageComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewRewardTile::OnDownloadTileImageComplete(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewRewardTile", "OnDownloadTileImageComplete");

	Params::CrewRewardTile_OnDownloadTileImageComplete Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewRewardTile.OnStartingDownloadTileImage
// (Event, Protected, BlueprintEvent)

void UCrewRewardTile::OnStartingDownloadTileImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewRewardTile", "OnStartingDownloadTileImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.CrewRewardTile.OnUpdateOwnedState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bOwned                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewRewardTile::OnUpdateOwnedState(bool bOwned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewRewardTile", "OnUpdateOwnedState");

	Params::CrewRewardTile_OnUpdateOwnedState Parms{};

	Parms.bOwned = bOwned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewRewardTile.IsMonthlyBenefit
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCrewRewardTile::IsMonthlyBenefit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewRewardTile", "IsMonthlyBenefit");

	Params::CrewRewardTile_IsMonthlyBenefit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CrewUI.CrewSubscriptionContentContainer.OnTabSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TabIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewSubscriptionContentContainer::OnTabSelected(int32 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewSubscriptionContentContainer", "OnTabSelected");

	Params::CrewSubscriptionContentContainer_OnTabSelected Parms{};

	Parms.TabIndex = TabIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.CrewTileDetailsTag.OnTagSetup
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECrewDetailsTag                         RewardTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsOwnedTag                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCrewTileDetailsTag::OnTagSetup(ECrewDetailsTag RewardTag, bool bIsOwnedTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewTileDetailsTag", "OnTagSetup");

	Params::CrewTileDetailsTag_OnTagSetup Parms{};

	Parms.RewardTag = RewardTag;
	Parms.bIsOwnedTag = bIsOwnedTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveItemScreen.OnContainerTabVisibilityUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bTabsVisible                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpacingAdjustmentForTabs                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveItemScreen::OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemScreen", "OnContainerTabVisibilityUpdated");

	Params::FortProgressiveItemScreen_OnContainerTabVisibilityUpdated Parms{};

	Parms.bTabsVisible = bTabsVisible;
	Parms.SpacingAdjustmentForTabs = SpacingAdjustmentForTabs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveItemScreen.OnErrorStateTextUpdated
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ErrorStateText                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortProgressiveItemScreen::OnErrorStateTextUpdated(const class FText& ErrorStateText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemScreen", "OnErrorStateTextUpdated");

	Params::FortProgressiveItemScreen_OnErrorStateTextUpdated Parms{};

	Parms.ErrorStateText = std::move(ErrorStateText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveItemScreen.OnItemSelected
// (Event, Protected, BlueprintEvent)

void UFortProgressiveItemScreen::OnItemSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemScreen", "OnItemSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.FortProgressiveItemScreen.OnSetIsSoloScreen
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsSoloScreen                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveItemScreen::OnSetIsSoloScreen(const bool bInIsSoloScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemScreen", "OnSetIsSoloScreen");

	Params::FortProgressiveItemScreen_OnSetIsSoloScreen Parms{};

	Parms.bInIsSoloScreen = bInIsSoloScreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveItemScreen.OnUpdateSubscriptionState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSubscribed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveItemScreen::OnUpdateSubscriptionState(const bool bSubscribed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemScreen", "OnUpdateSubscriptionState");

	Params::FortProgressiveItemScreen_OnUpdateSubscriptionState Parms{};

	Parms.bSubscribed = bSubscribed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveItemStateTitleWidget.BP_OnSetHeaderInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Subheading                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSubscribed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UnlockedStages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxStages                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveItemStateTitleWidget::BP_OnSetHeaderInfo(const class FText& Subheading, const bool bSubscribed, const int32 UnlockedStages, const int32 MaxStages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemStateTitleWidget", "BP_OnSetHeaderInfo");

	Params::FortProgressiveItemStateTitleWidget_BP_OnSetHeaderInfo Parms{};

	Parms.Subheading = std::move(Subheading);
	Parms.bSubscribed = bSubscribed;
	Parms.UnlockedStages = UnlockedStages;
	Parms.MaxStages = MaxStages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveItemWidget.OnHighlighted
// (Event, Protected, BlueprintEvent)

void UFortProgressiveItemWidget::OnHighlighted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemWidget", "OnHighlighted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.FortProgressiveItemWidget.OnPeekStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsInPeekState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveItemWidget::OnPeekStateChanged(bool bIsInPeekState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemWidget", "OnPeekStateChanged");

	Params::FortProgressiveItemWidget_OnPeekStateChanged Parms{};

	Parms.bIsInPeekState = bIsInPeekState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveItemWidget.OnStageItemChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FProgressiveStageItemInfo        InStageItemInfo                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortProgressiveItemWidget::OnStageItemChanged(const struct FProgressiveStageItemInfo& InStageItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemWidget", "OnStageItemChanged");

	Params::FortProgressiveItemWidget_OnStageItemChanged Parms{};

	Parms.InStageItemInfo = std::move(InStageItemInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveItemWidget.OnUnhighlighted
// (Event, Protected, BlueprintEvent)

void UFortProgressiveItemWidget::OnUnhighlighted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveItemWidget", "OnUnhighlighted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.FortProgressiveSetDetailsWidget.BP_OnUpdateSetDetails
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             SetName                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ExpiringText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bCompleted                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveSetDetailsWidget::BP_OnUpdateSetDetails(const class FText& SetName, const class FText& ExpiringText, const bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveSetDetailsWidget", "BP_OnUpdateSetDetails");

	Params::FortProgressiveSetDetailsWidget_BP_OnUpdateSetDetails Parms{};

	Parms.SetName = std::move(SetName);
	Parms.ExpiringText = std::move(ExpiringText);
	Parms.bCompleted = bCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveSetList.AddSetTile
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortProgressiveSetTile*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortProgressiveSetTile* UFortProgressiveSetList::AddSetTile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveSetList", "AddSetTile");

	Params::FortProgressiveSetList_AddSetTile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CrewUI.FortProgressiveSetList.ClearSetTiles
// (Event, Protected, BlueprintEvent)

void UFortProgressiveSetList::ClearSetTiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveSetList", "ClearSetTiles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.FortProgressiveSetTile.BP_OnInitializeSetInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FProgressiveSetInfo              InSetInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             BottomText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             BottomSubtext                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bSubscribed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveSetTile::BP_OnInitializeSetInfo(const struct FProgressiveSetInfo& InSetInfo, const class FText& BottomText, const class FText& BottomSubtext, const bool bSubscribed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveSetTile", "BP_OnInitializeSetInfo");

	Params::FortProgressiveSetTile_BP_OnInitializeSetInfo Parms{};

	Parms.InSetInfo = std::move(InSetInfo);
	Parms.BottomText = std::move(BottomText);
	Parms.BottomSubtext = std::move(BottomSubtext);
	Parms.bSubscribed = bSubscribed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveStageList.AddStageWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortProgressiveStageWidget*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortProgressiveStageWidget* UFortProgressiveStageList::AddStageWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveStageList", "AddStageWidget");

	Params::FortProgressiveStageList_AddStageWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CrewUI.FortProgressiveStageList.ClearStageWidgets
// (Event, Protected, BlueprintEvent)

void UFortProgressiveStageList::ClearStageWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveStageList", "ClearStageWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.FortProgressiveStageWidget.AddStageItemWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortProgressiveItemWidget*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortProgressiveItemWidget* UFortProgressiveStageWidget::AddStageItemWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveStageWidget", "AddStageItemWidget");

	Params::FortProgressiveStageWidget_AddStageItemWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CrewUI.FortProgressiveStageWidget.ClearStageItemWidgets
// (Event, Protected, BlueprintEvent)

void UFortProgressiveStageWidget::ClearStageItemWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveStageWidget", "ClearStageItemWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CrewUI.FortProgressiveStageWidget.OnPeekStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsInPeekState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveStageWidget::OnPeekStateChanged(bool bIsInPeekState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveStageWidget", "OnPeekStateChanged");

	Params::FortProgressiveStageWidget_OnPeekStateChanged Parms{};

	Parms.bIsInPeekState = bIsInPeekState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveStageWidget.OnSetTooltipText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InToolTipText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortProgressiveStageWidget::OnSetTooltipText(const class FText& InToolTipText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveStageWidget", "OnSetTooltipText");

	Params::FortProgressiveStageWidget_OnSetTooltipText Parms{};

	Parms.InToolTipText = std::move(InToolTipText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveStageWidget.OnSetTooltipVisible
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveStageWidget::OnSetTooltipVisible(const bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveStageWidget", "OnSetTooltipVisible");

	Params::FortProgressiveStageWidget_OnSetTooltipVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveTableOfContentsScreen.BP_OnContainerTabVisibilityUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bTabsVisible                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpacingAdjustmentForTabs                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveTableOfContentsScreen::BP_OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveTableOfContentsScreen", "BP_OnContainerTabVisibilityUpdated");

	Params::FortProgressiveTableOfContentsScreen_BP_OnContainerTabVisibilityUpdated Parms{};

	Parms.bTabsVisible = bTabsVisible;
	Parms.SpacingAdjustmentForTabs = SpacingAdjustmentForTabs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveTableOfContentsScreen.BP_OnSetDescriptionText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ProductDescription                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortProgressiveTableOfContentsScreen::BP_OnSetDescriptionText(const class FText& ProductDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveTableOfContentsScreen", "BP_OnSetDescriptionText");

	Params::FortProgressiveTableOfContentsScreen_BP_OnSetDescriptionText Parms{};

	Parms.ProductDescription = std::move(ProductDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveTableOfContentsScreen.BP_OnUpdateBanner
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             BannerText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bAllSetsCompleted                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSubscribed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveTableOfContentsScreen::BP_OnUpdateBanner(const class FText& BannerText, const bool bAllSetsCompleted, const bool bSubscribed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveTableOfContentsScreen", "BP_OnUpdateBanner");

	Params::FortProgressiveTableOfContentsScreen_BP_OnUpdateBanner Parms{};

	Parms.BannerText = std::move(BannerText);
	Parms.bAllSetsCompleted = bAllSetsCompleted;
	Parms.bSubscribed = bSubscribed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveTableOfContentsScreen.BP_OnUpdateErrorStateText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ErrorStateText                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortProgressiveTableOfContentsScreen::BP_OnUpdateErrorStateText(const class FText& ErrorStateText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveTableOfContentsScreen", "BP_OnUpdateErrorStateText");

	Params::FortProgressiveTableOfContentsScreen_BP_OnUpdateErrorStateText Parms{};

	Parms.ErrorStateText = std::move(ErrorStateText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewUI.FortProgressiveTableOfContentsScreen.BP_OnUpdateSubscriptionState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSubscribed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortProgressiveTableOfContentsScreen::BP_OnUpdateSubscriptionState(const bool bSubscribed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressiveTableOfContentsScreen", "BP_OnUpdateSubscriptionState");

	Params::FortProgressiveTableOfContentsScreen_BP_OnUpdateSubscriptionState Parms{};

	Parms.bSubscribed = bSubscribed;

	UObject::ProcessEvent(Func, &Parms);
}

}

