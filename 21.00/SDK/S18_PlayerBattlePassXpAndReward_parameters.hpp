#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S18_PlayerBattlePassXpAndReward

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function S18_PlayerBattlePassXpAndReward.S18_PlayerBattlePassXpAndReward_C.ExecuteUbergraph_S18_PlayerBattlePassXpAndReward
// 0x0010 (0x0010 - 0x0000)
struct S18_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S18_PlayerBattlePassXpAndReward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(S18_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S18_PlayerBattlePassXpAndReward) == 0x000008, "Wrong alignment on S18_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S18_PlayerBattlePassXpAndReward");
static_assert(sizeof(S18_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S18_PlayerBattlePassXpAndReward) == 0x000010, "Wrong size on S18_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S18_PlayerBattlePassXpAndReward");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S18_PlayerBattlePassXpAndReward, EntryPoint) == 0x000000, "Member 'S18_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S18_PlayerBattlePassXpAndReward::EntryPoint' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S18_PlayerBattlePassXpAndReward, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'S18_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S18_PlayerBattlePassXpAndReward::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function S18_PlayerBattlePassXpAndReward.S18_PlayerBattlePassXpAndReward_C.Update Text
// 0x0170 (0x0170 - 0x0000)
struct S18_PlayerBattlePassXpAndReward_C_Update_Text final
{
public:
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0148(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0158(0x0018)()
};
static_assert(alignof(S18_PlayerBattlePassXpAndReward_C_Update_Text) == 0x000008, "Wrong alignment on S18_PlayerBattlePassXpAndReward_C_Update_Text");
static_assert(sizeof(S18_PlayerBattlePassXpAndReward_C_Update_Text) == 0x000170, "Wrong size on S18_PlayerBattlePassXpAndReward_C_Update_Text");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000000, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000060, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_MakeArray_Array) == 0x000068, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000E0, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000E8, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0000F0, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F8, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_MakeArray_Array_1) == 0x000148, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(S18_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Format_ReturnValue_1) == 0x000158, "Member 'S18_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Format_ReturnValue_1' has a wrong offset!");

}

