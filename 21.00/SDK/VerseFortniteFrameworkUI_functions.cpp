#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortniteFrameworkUI

#include "Basic.hpp"

#include "VerseFortniteFrameworkUI_classes.hpp"
#include "VerseFortniteFrameworkUI_parameters.hpp"


namespace SDK
{

// Function VerseFortniteFrameworkUI.VerseFortniteHUDWidgetBase.OnUpdateVisibleState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVerseFortniteHUDWidgetBase::OnUpdateVisibleState(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VerseFortniteHUDWidgetBase", "OnUpdateVisibleState");

	Params::VerseFortniteHUDWidgetBase_OnUpdateVisibleState Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseFortniteFrameworkUI.HUDCountDownWidget.OnStartCountDown
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   SecondsRemaining                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentRound                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDCountDownWidget::OnStartCountDown(const float SecondsRemaining, const int32 CurrentRound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDCountDownWidget", "OnStartCountDown");

	Params::HUDCountDownWidget_OnStartCountDown Parms{};

	Parms.SecondsRemaining = SecondsRemaining;
	Parms.CurrentRound = CurrentRound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseFortniteFrameworkUI.VerseFortniteActivatableWidgetBase.OnEnabledChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVerseFortniteActivatableWidgetBase::OnEnabledChanged(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VerseFortniteActivatableWidgetBase", "OnEnabledChanged");

	Params::VerseFortniteActivatableWidgetBase_OnEnabledChanged Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VerseFortniteFrameworkUI.HUDScoreboardWidgetBase.OnUpdateRounds
// (Final, Native, Protected)
// Parameters:
// uint32                                  CurrentRound                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  NumberOfRounds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDScoreboardWidgetBase::OnUpdateRounds(uint32 CurrentRound, uint32 NumberOfRounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDScoreboardWidgetBase", "OnUpdateRounds");

	Params::HUDScoreboardWidgetBase_OnUpdateRounds Parms{};

	Parms.CurrentRound = CurrentRound;
	Parms.NumberOfRounds = NumberOfRounds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortniteFrameworkUI.HUDScoreboardWidgetBase.OnUpdateScores
// (Final, Native, Protected)

void UHUDScoreboardWidgetBase::OnUpdateScores()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDScoreboardWidgetBase", "OnUpdateScores");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortniteFrameworkUI.HUDGameOverWidgetBase.GetGameOverType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameOverMessageType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGameOverMessageType UHUDGameOverWidgetBase::GetGameOverType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDGameOverWidgetBase", "GetGameOverType");

	Params::HUDGameOverWidgetBase_GetGameOverType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VerseFortniteFrameworkUI.HUDGameOverWidgetBase.HandleGameOverStateChanged
// (Final, Native, Private)
// Parameters:
// class UHUDGameOverComponentBase*        GameOverComponent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDGameOverWidgetBase::HandleGameOverStateChanged(class UHUDGameOverComponentBase* GameOverComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDGameOverWidgetBase", "HandleGameOverStateChanged");

	Params::HUDGameOverWidgetBase_HandleGameOverStateChanged Parms{};

	Parms.GameOverComponent = GameOverComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseFortniteFrameworkUI.HUDSimpleMessageWidget.OnUpdateMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           NewMessage                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDSimpleMessageWidget::OnUpdateMessage(const class FString& NewMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDSimpleMessageWidget", "OnUpdateMessage");

	Params::HUDSimpleMessageWidget_OnUpdateMessage Parms{};

	Parms.NewMessage = std::move(NewMessage);

	UObject::ProcessEvent(Func, &Parms);
}

}

