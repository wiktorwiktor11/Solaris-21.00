#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Athena_Environmental_ZipLine

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Athena_Environmental_ZipLine.BP_Athena_Environmental_ZipLine_C
// 0x0178 (0x0D18 - 0x0BA0)
class ABP_Athena_Environmental_ZipLine_C final : public AFortAthenaZipline
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      InteractCapsule;                                   // 0x0BA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Line;                                           // 0x0BB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      OverlapCapsule;                                    // 0x0BB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Zipline;                                           // 0x0BC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0BD0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0BE8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MotorOffset;                                       // 0x0C00(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineThickness;                                     // 0x0C18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineCollisionThickness;                            // 0x0C1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PoleA;                                             // 0x0C20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AActor*                                 PoleB;                                             // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FCurveTableRowHandle                   SpeedCTHandle;                                     // 0x0C30(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FCurveTableRowHandle                   ZipLineEnabledCTHandle;                            // 0x0C40(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FCurveTableRowHandle                   LineCollisionRadiusCTHandle;                       // 0x0C50(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FCurveTableRowHandle                   BuildingCheckBoxExtentsCTHandle;                   // 0x0C60(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   BackendName;                                       // 0x0C70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C74[0x4];                                      // 0x0C74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItemDefinition*               QuestItem;                                         // 0x0C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineExtendBeyondPoleLength;                        // 0x0C80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C84[0x4];                                      // 0x0C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PoleASocketLocation;                               // 0x0C88(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PoleBSocketLocation;                               // 0x0CA0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPlayerPawn*>                PlayersPendingMovementModeChange;                  // 0x0CC0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         CollisionHeightAboveLine;                          // 0x0CD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD4[0x4];                                      // 0x0CD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PlayerOffsetToLine_Hoverboard;                     // 0x0CD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EndOverlapReleaseTimer;                            // 0x0CF0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  BlockInteractTags;                                 // 0x0CF8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void CalculatePositionsOfPoles();
	void CheckForBuildings(class AFortPlayerPawn* Player, bool* BuildingNearby_);
	void ExecuteUbergraph_BP_Athena_Environmental_ZipLine(int32 EntryPoint);
	void GetCharacterCustomMovementMode(class APawn* Character, EFortCustomMovement* CustomMovementMode, EMovementMode* MovementMode);
	void HandleEnterZipline(class AFortPlayerPawn* InPlayerPawn);
	void HandleOnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void HandleOnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void HandleOnMapInfoInitialized();
	void HandleOnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void QuestCheckForUse(class AFortPlayerController* FortPlayerController);
	void ReceiveBeginPlay();
	void ReleaseZipline();
	void Setup_Overlap_Bindings();
	void StartZipLining(class AFortPlayerPawn* FortPlayerPawn, class UPrimitiveComponent* InteractComponent);
	void UserConstructionScript();

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Athena_Environmental_ZipLine_C">();
	}
	static class ABP_Athena_Environmental_ZipLine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Athena_Environmental_ZipLine_C>();
	}
};
static_assert(alignof(ABP_Athena_Environmental_ZipLine_C) == 0x000008, "Wrong alignment on ABP_Athena_Environmental_ZipLine_C");
static_assert(sizeof(ABP_Athena_Environmental_ZipLine_C) == 0x000D18, "Wrong size on ABP_Athena_Environmental_ZipLine_C");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, UberGraphFrame) == 0x000BA0, "Member 'ABP_Athena_Environmental_ZipLine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, InteractCapsule) == 0x000BA8, "Member 'ABP_Athena_Environmental_ZipLine_C::InteractCapsule' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, SM_Line) == 0x000BB0, "Member 'ABP_Athena_Environmental_ZipLine_C::SM_Line' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, OverlapCapsule) == 0x000BB8, "Member 'ABP_Athena_Environmental_ZipLine_C::OverlapCapsule' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, Zipline) == 0x000BC0, "Member 'ABP_Athena_Environmental_ZipLine_C::Zipline' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, Scene) == 0x000BC8, "Member 'ABP_Athena_Environmental_ZipLine_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, StartLocation) == 0x000BD0, "Member 'ABP_Athena_Environmental_ZipLine_C::StartLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, TargetLocation) == 0x000BE8, "Member 'ABP_Athena_Environmental_ZipLine_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, MotorOffset) == 0x000C00, "Member 'ABP_Athena_Environmental_ZipLine_C::MotorOffset' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, LineThickness) == 0x000C18, "Member 'ABP_Athena_Environmental_ZipLine_C::LineThickness' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, LineCollisionThickness) == 0x000C1C, "Member 'ABP_Athena_Environmental_ZipLine_C::LineCollisionThickness' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, PoleA) == 0x000C20, "Member 'ABP_Athena_Environmental_ZipLine_C::PoleA' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, PoleB) == 0x000C28, "Member 'ABP_Athena_Environmental_ZipLine_C::PoleB' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, SpeedCTHandle) == 0x000C30, "Member 'ABP_Athena_Environmental_ZipLine_C::SpeedCTHandle' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, ZipLineEnabledCTHandle) == 0x000C40, "Member 'ABP_Athena_Environmental_ZipLine_C::ZipLineEnabledCTHandle' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, LineCollisionRadiusCTHandle) == 0x000C50, "Member 'ABP_Athena_Environmental_ZipLine_C::LineCollisionRadiusCTHandle' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, BuildingCheckBoxExtentsCTHandle) == 0x000C60, "Member 'ABP_Athena_Environmental_ZipLine_C::BuildingCheckBoxExtentsCTHandle' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, BackendName) == 0x000C70, "Member 'ABP_Athena_Environmental_ZipLine_C::BackendName' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, QuestItem) == 0x000C78, "Member 'ABP_Athena_Environmental_ZipLine_C::QuestItem' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, LineExtendBeyondPoleLength) == 0x000C80, "Member 'ABP_Athena_Environmental_ZipLine_C::LineExtendBeyondPoleLength' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, PoleASocketLocation) == 0x000C88, "Member 'ABP_Athena_Environmental_ZipLine_C::PoleASocketLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, PoleBSocketLocation) == 0x000CA0, "Member 'ABP_Athena_Environmental_ZipLine_C::PoleBSocketLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, PlayerPawn) == 0x000CB8, "Member 'ABP_Athena_Environmental_ZipLine_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, PlayersPendingMovementModeChange) == 0x000CC0, "Member 'ABP_Athena_Environmental_ZipLine_C::PlayersPendingMovementModeChange' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, CollisionHeightAboveLine) == 0x000CD0, "Member 'ABP_Athena_Environmental_ZipLine_C::CollisionHeightAboveLine' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, PlayerOffsetToLine_Hoverboard) == 0x000CD8, "Member 'ABP_Athena_Environmental_ZipLine_C::PlayerOffsetToLine_Hoverboard' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, EndOverlapReleaseTimer) == 0x000CF0, "Member 'ABP_Athena_Environmental_ZipLine_C::EndOverlapReleaseTimer' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_C, BlockInteractTags) == 0x000CF8, "Member 'ABP_Athena_Environmental_ZipLine_C::BlockInteractTags' has a wrong offset!");

}

