#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAT_ActiveAbility_Hero

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GAT_ActiveAbility_Hero.GAT_ActiveAbility_Hero_C.CommitAbilityWithEvent
// 0x0005 (0x0005 - 0x0000)
struct GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent final
{
public:
	bool                                          Passed;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CheckAbilityCooldown_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CheckAbilityCost_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent) == 0x000001, "Wrong alignment on GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent");
static_assert(sizeof(GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent) == 0x000005, "Wrong size on GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent, Passed) == 0x000000, "Member 'GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent::Passed' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent, CallFunc_K2_CheckAbilityCooldown_ReturnValue) == 0x000001, "Member 'GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent::CallFunc_K2_CheckAbilityCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent, CallFunc_K2_CheckAbilityCost_ReturnValue) == 0x000002, "Member 'GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent::CallFunc_K2_CheckAbilityCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent, CallFunc_K2_CommitAbility_ReturnValue) == 0x000004, "Member 'GAT_ActiveAbility_Hero_C_CommitAbilityWithEvent::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");

// Function GAT_ActiveAbility_Hero.GAT_ActiveAbility_Hero_C.ExecuteUbergraph_GAT_ActiveAbility_Hero
// 0x0040 (0x0040 - 0x0000)
struct GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbilityCooldown_ReturnValue;     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero) == 0x000008, "Wrong alignment on GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero");
static_assert(sizeof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero) == 0x000040, "Wrong size on GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, EntryPoint) == 0x000000, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, K2Node_Event_bWasCancelled) == 0x00000C, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, CallFunc_K2_CommitAbilityCooldown_ReturnValue) == 0x000014, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::CallFunc_K2_CommitAbilityCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000018, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, CallFunc_Array_Get_Item) == 0x000020, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000028, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'GAT_ActiveAbility_Hero_C_ExecuteUbergraph_GAT_ActiveAbility_Hero::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GAT_ActiveAbility_Hero.GAT_ActiveAbility_Hero_C.IncrementAbilityCostAndCooldown
// 0x0088 (0x0088 - 0x0000)
struct GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown final
{
public:
	float                                         Energy_Cost;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Adjust_Cooldown;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Cooldown_Increment;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    Active_Cooldown_Modifiers_0;                       // 0x0010(0x0010)(Parm, OutParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0028(0x0010)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0040(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue; // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue_1;           // 0x0060(0x0010)()
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1; // 0x0070(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue_1; // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown) == 0x000008, "Wrong alignment on GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown");
static_assert(sizeof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown) == 0x000088, "Wrong size on GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, Energy_Cost) == 0x000000, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::Energy_Cost' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, Adjust_Cooldown) == 0x000004, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::Adjust_Cooldown' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, Cooldown_Increment) == 0x000008, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::Cooldown_Increment' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, Active_Cooldown_Modifiers_0) == 0x000010, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::Active_Cooldown_Modifiers_0' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, CallFunc_IsValidClass_ReturnValue) == 0x000024, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000028, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000040, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue) == 0x000050, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, CallFunc_MakeOutgoingSpec_ReturnValue_1) == 0x000060, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::CallFunc_MakeOutgoingSpec_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1) == 0x000070, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown, CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue_1) == 0x000080, "Member 'GAT_ActiveAbility_Hero_C_IncrementAbilityCostAndCooldown::CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue_1' has a wrong offset!");

// Function GAT_ActiveAbility_Hero.GAT_ActiveAbility_Hero_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GAT_ActiveAbility_Hero_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAT_ActiveAbility_Hero_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GAT_ActiveAbility_Hero_C_K2_OnEndAbility");
static_assert(sizeof(GAT_ActiveAbility_Hero_C_K2_OnEndAbility) == 0x000001, "Wrong size on GAT_ActiveAbility_Hero_C_K2_OnEndAbility");
static_assert(offsetof(GAT_ActiveAbility_Hero_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GAT_ActiveAbility_Hero_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

