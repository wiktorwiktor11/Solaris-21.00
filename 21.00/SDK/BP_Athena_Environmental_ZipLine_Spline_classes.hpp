#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Athena_Environmental_ZipLine_Spline

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Athena_Environmental_ZipLine_Spline.BP_Athena_Environmental_ZipLine_Spline_C
// 0x00F8 (0x0CC8 - 0x0BD0)
class ABP_Athena_Environmental_ZipLine_Spline_C final : public AFortAthenaSplineZipline
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMesh*                            SplineStaticMesh;                                  // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TangentSmoothStrength;                             // 0x0BE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoSmoothTangents;                                // 0x0BE4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               ForwardMeshAxis;                                   // 0x0BE5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE6[0x2];                                      // 0x0BE6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MotorOffset;                                       // 0x0BE8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PoleA;                                             // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AActor*                                 PoleB;                                             // 0x0C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                PoleASocketLocation;                               // 0x0C10(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PoleBSocketLocation;                               // 0x0C28(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowerPointID;                                      // 0x0C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HigherPointID;                                     // 0x0C44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HigherEndLocation;                                 // 0x0C48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LowerEndLocation;                                  // 0x0C60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AutoLinearFactorLow;                               // 0x0C78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         AutoLinearFactorHigh;                              // 0x0C7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         AutoSplineTangentLengthCoef;                       // 0x0C80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         AutoSplineTangentHorizCoef;                        // 0x0C84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         AutoSplineTangentVertCoef;                         // 0x0C88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Auto_Set_Spline_Ends;                              // 0x0C8C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Auto_Set_Spline_Mids;                              // 0x0C8D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_C8E[0x2];                                      // 0x0C8E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       SplineMaterials;                                   // 0x0C90(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  BlockInteractTags;                                 // 0x0CA0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         TilingDivisor;                                     // 0x0CC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddSplineMeshSegment(class USplineMeshComponent** SplineMeshSegment);
	void AutoSmoothTanget(const struct FVector& Tangent, const struct FVector& PointA, const struct FVector& PointB, struct FVector* SmoothedTangent);
	void Calc_Auto_Location_At_Alpha(float InAlpha, bool DrawDebug, struct FVector* PointLocation);
	void CalculatePositionOfPoles();
	void ExecuteUbergraph_BP_Athena_Environmental_ZipLine_Spline(int32 EntryPoint);
	void GetAutoHorizAndVertVectors(const struct FVector& highVector, const struct FVector& LowVector, struct FVector* VertVec, struct FVector* HorizVec);
	void PlayerAttachedToZipline(class AFortPlayerPawn* PlayerPawn);
	void PlayerDetachedFromZipline(class AFortPlayerPawn* PlayerPawn);
	void ReceiveBeginPlay();
	void SetCableTilingBySplineLength(class UMeshComponent* Target);
	void SetSplinePositionAndTangent(bool SetPosition, bool SetTangent, int32 ID);
	void UserConstructionScript();

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Athena_Environmental_ZipLine_Spline_C">();
	}
	static class ABP_Athena_Environmental_ZipLine_Spline_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Athena_Environmental_ZipLine_Spline_C>();
	}
};
static_assert(alignof(ABP_Athena_Environmental_ZipLine_Spline_C) == 0x000008, "Wrong alignment on ABP_Athena_Environmental_ZipLine_Spline_C");
static_assert(sizeof(ABP_Athena_Environmental_ZipLine_Spline_C) == 0x000CC8, "Wrong size on ABP_Athena_Environmental_ZipLine_Spline_C");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, UberGraphFrame) == 0x000BD0, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, SplineStaticMesh) == 0x000BD8, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::SplineStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, TangentSmoothStrength) == 0x000BE0, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::TangentSmoothStrength' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, AutoSmoothTangents) == 0x000BE4, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::AutoSmoothTangents' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, ForwardMeshAxis) == 0x000BE5, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::ForwardMeshAxis' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, MotorOffset) == 0x000BE8, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::MotorOffset' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, PoleA) == 0x000C00, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::PoleA' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, PoleB) == 0x000C08, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::PoleB' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, PoleASocketLocation) == 0x000C10, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::PoleASocketLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, PoleBSocketLocation) == 0x000C28, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::PoleBSocketLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, LowerPointID) == 0x000C40, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::LowerPointID' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, HigherPointID) == 0x000C44, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::HigherPointID' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, HigherEndLocation) == 0x000C48, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::HigherEndLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, LowerEndLocation) == 0x000C60, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::LowerEndLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, AutoLinearFactorLow) == 0x000C78, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::AutoLinearFactorLow' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, AutoLinearFactorHigh) == 0x000C7C, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::AutoLinearFactorHigh' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, AutoSplineTangentLengthCoef) == 0x000C80, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::AutoSplineTangentLengthCoef' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, AutoSplineTangentHorizCoef) == 0x000C84, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::AutoSplineTangentHorizCoef' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, AutoSplineTangentVertCoef) == 0x000C88, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::AutoSplineTangentVertCoef' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, Auto_Set_Spline_Ends) == 0x000C8C, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::Auto_Set_Spline_Ends' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, Auto_Set_Spline_Mids) == 0x000C8D, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::Auto_Set_Spline_Mids' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, SplineMaterials) == 0x000C90, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::SplineMaterials' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, BlockInteractTags) == 0x000CA0, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::BlockInteractTags' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, TilingDivisor) == 0x000CC0, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::TilingDivisor' has a wrong offset!");

}

