#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_FloppingRabbit_Weap_Athena

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_FloppingRabbit_Weap_Athena.B_FloppingRabbit_Weap_Athena_C.ExecuteUbergraph_B_FloppingRabbit_Weap_Athena
// 0x0080 (0x0080 - 0x0000)
struct B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Athena_FloppingRabbit_Wire_C*        K2Node_DynamicCast_AsB_Athena_Flopping_Rabbit_Wire; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APrj_Athena_FloppingRabbit_C*           K2Node_DynamicCast_AsPrj_Athena_Flopping_Rabbit;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_1;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_2;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena) == 0x000008, "Wrong alignment on B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena");
static_assert(sizeof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena) == 0x000080, "Wrong size on B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, EntryPoint) == 0x000000, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_DynamicCast_AsB_Athena_Flopping_Rabbit_Wire) == 0x000008, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_DynamicCast_AsB_Athena_Flopping_Rabbit_Wire' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, CallFunc_GetInstigator_ReturnValue) == 0x000018, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_DynamicCast_AsFort_Pawn) == 0x000028, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_DynamicCast_AsPrj_Athena_Flopping_Rabbit) == 0x000038, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_DynamicCast_AsPrj_Athena_Flopping_Rabbit' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, CallFunc_GetInstigator_ReturnValue_1) == 0x000050, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_DynamicCast_AsFort_Pawn_1) == 0x000058, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_DynamicCast_AsFort_Pawn_1' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, CallFunc_GetInstigator_ReturnValue_2) == 0x000068, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::CallFunc_GetInstigator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000070, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena, K2Node_DynamicCast_bSuccess_4) == 0x000078, "Member 'B_FloppingRabbit_Weap_Athena_C_ExecuteUbergraph_B_FloppingRabbit_Weap_Athena::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function B_FloppingRabbit_Weap_Athena.B_FloppingRabbit_Weap_Athena_C.DetermineFishLootTierNameAndSetLootForSpawner
// 0x0020 (0x0020 - 0x0000)
struct B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner final
{
public:
	bool                                          bIsExplosion;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortFishingInterface> K2Node_DynamicCast_AsFort_Fishing_Interface;       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_DetermineFishLootTierNameAndSetLootForSpawner_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner) == 0x000008, "Wrong alignment on B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner");
static_assert(sizeof(B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner) == 0x000020, "Wrong size on B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner, bIsExplosion) == 0x000000, "Member 'B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner::bIsExplosion' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner, ReturnValue) == 0x000004, "Member 'B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner, K2Node_DynamicCast_AsFort_Fishing_Interface) == 0x000008, "Member 'B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner::K2Node_DynamicCast_AsFort_Fishing_Interface' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner, CallFunc_DetermineFishLootTierNameAndSetLootForSpawner_ReturnValue) == 0x00001C, "Member 'B_FloppingRabbit_Weap_Athena_C_DetermineFishLootTierNameAndSetLootForSpawner::CallFunc_DetermineFishLootTierNameAndSetLootForSpawner_ReturnValue' has a wrong offset!");

}

