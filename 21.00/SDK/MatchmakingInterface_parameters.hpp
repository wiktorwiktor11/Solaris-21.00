#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchmakingInterface

#include "Basic.hpp"


namespace SDK::Params
{

// Function MatchmakingInterface.MatchmakingInterface_C.AthenaInteractDetails
// 0x0002 (0x0002 - 0x0000)
struct MatchmakingInterface_C_AthenaInteractDetails final
{
public:
	bool                                          LocalPlayerLookingAt;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInPlayMode;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchmakingInterface_C_AthenaInteractDetails) == 0x000001, "Wrong alignment on MatchmakingInterface_C_AthenaInteractDetails");
static_assert(sizeof(MatchmakingInterface_C_AthenaInteractDetails) == 0x000002, "Wrong size on MatchmakingInterface_C_AthenaInteractDetails");
static_assert(offsetof(MatchmakingInterface_C_AthenaInteractDetails, LocalPlayerLookingAt) == 0x000000, "Member 'MatchmakingInterface_C_AthenaInteractDetails::LocalPlayerLookingAt' has a wrong offset!");
static_assert(offsetof(MatchmakingInterface_C_AthenaInteractDetails, IsInPlayMode) == 0x000001, "Member 'MatchmakingInterface_C_AthenaInteractDetails::IsInPlayMode' has a wrong offset!");

// Function MatchmakingInterface.MatchmakingInterface_C.MatchmakingPortalHasSecondInteraction
// 0x0010 (0x0010 - 0x0000)
struct MatchmakingInterface_C_MatchmakingPortalHasSecondInteraction final
{
public:
	class AFortPlayerPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchmakingInterface_C_MatchmakingPortalHasSecondInteraction) == 0x000008, "Wrong alignment on MatchmakingInterface_C_MatchmakingPortalHasSecondInteraction");
static_assert(sizeof(MatchmakingInterface_C_MatchmakingPortalHasSecondInteraction) == 0x000010, "Wrong size on MatchmakingInterface_C_MatchmakingPortalHasSecondInteraction");
static_assert(offsetof(MatchmakingInterface_C_MatchmakingPortalHasSecondInteraction, InteractingPawn) == 0x000000, "Member 'MatchmakingInterface_C_MatchmakingPortalHasSecondInteraction::InteractingPawn' has a wrong offset!");
static_assert(offsetof(MatchmakingInterface_C_MatchmakingPortalHasSecondInteraction, Return) == 0x000008, "Member 'MatchmakingInterface_C_MatchmakingPortalHasSecondInteraction::Return' has a wrong offset!");

// Function MatchmakingInterface.MatchmakingInterface_C.SendIslandLink
// 0x0018 (0x0018 - 0x0000)
struct MatchmakingInterface_C_SendIslandLink final
{
public:
	class AFortPlayerController*                  Requesting_Player_Controller;                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortCreativeIslandLink*                Link;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _;                                                 // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchmakingInterface_C_SendIslandLink) == 0x000008, "Wrong alignment on MatchmakingInterface_C_SendIslandLink");
static_assert(sizeof(MatchmakingInterface_C_SendIslandLink) == 0x000018, "Wrong size on MatchmakingInterface_C_SendIslandLink");
static_assert(offsetof(MatchmakingInterface_C_SendIslandLink, Requesting_Player_Controller) == 0x000000, "Member 'MatchmakingInterface_C_SendIslandLink::Requesting_Player_Controller' has a wrong offset!");
static_assert(offsetof(MatchmakingInterface_C_SendIslandLink, Link) == 0x000008, "Member 'MatchmakingInterface_C_SendIslandLink::Link' has a wrong offset!");
static_assert(offsetof(MatchmakingInterface_C_SendIslandLink, _) == 0x000010, "Member 'MatchmakingInterface_C_SendIslandLink::_' has a wrong offset!");

}

