#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeleportationDrone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_TeleportationDrone.BP_TeleportationDrone_C.ExecuteUbergraph_BP_TeleportationDrone
// 0x0078 (0x0078 - 0x0000)
struct BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone) == 0x000008, "Wrong alignment on BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone");
static_assert(sizeof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone) == 0x000078, "Wrong size on BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, EntryPoint) == 0x000000, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, K2Node_CustomEvent_Montage) == 0x000008, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, K2Node_CustomEvent_bInterrupted) == 0x000010, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::K2Node_CustomEvent_bInterrupted' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, CallFunc_GetMaterial_ReturnValue) == 0x000040, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000060, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000069, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x00006C, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000071, "Member 'BP_TeleportationDrone_C_ExecuteUbergraph_BP_TeleportationDrone::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_TeleportationDrone.BP_TeleportationDrone_C.OnSpawnOutAnimEnded
// 0x0010 (0x0010 - 0x0000)
struct BP_TeleportationDrone_C_OnSpawnOutAnimEnded final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeleportationDrone_C_OnSpawnOutAnimEnded) == 0x000008, "Wrong alignment on BP_TeleportationDrone_C_OnSpawnOutAnimEnded");
static_assert(sizeof(BP_TeleportationDrone_C_OnSpawnOutAnimEnded) == 0x000010, "Wrong size on BP_TeleportationDrone_C_OnSpawnOutAnimEnded");
static_assert(offsetof(BP_TeleportationDrone_C_OnSpawnOutAnimEnded, Montage) == 0x000000, "Member 'BP_TeleportationDrone_C_OnSpawnOutAnimEnded::Montage' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_OnSpawnOutAnimEnded, bInterrupted) == 0x000008, "Member 'BP_TeleportationDrone_C_OnSpawnOutAnimEnded::bInterrupted' has a wrong offset!");

// Function BP_TeleportationDrone.BP_TeleportationDrone_C.PlaySpawnAnim
// 0x0050 (0x0050 - 0x0000)
struct BP_TeleportationDrone_C_PlaySpawnAnim final
{
public:
	class UAnimationAsset*                        Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeleportationDrone_C_PlaySpawnAnim) == 0x000008, "Wrong alignment on BP_TeleportationDrone_C_PlaySpawnAnim");
static_assert(sizeof(BP_TeleportationDrone_C_PlaySpawnAnim) == 0x000050, "Wrong size on BP_TeleportationDrone_C_PlaySpawnAnim");
static_assert(offsetof(BP_TeleportationDrone_C_PlaySpawnAnim, Temp_object_Variable) == 0x000000, "Member 'BP_TeleportationDrone_C_PlaySpawnAnim::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_PlaySpawnAnim, Temp_bool_Variable) == 0x000008, "Member 'BP_TeleportationDrone_C_PlaySpawnAnim::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_PlaySpawnAnim, Temp_object_Variable_1) == 0x000010, "Member 'BP_TeleportationDrone_C_PlaySpawnAnim::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_PlaySpawnAnim, Temp_object_Variable_2) == 0x000018, "Member 'BP_TeleportationDrone_C_PlaySpawnAnim::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_PlaySpawnAnim, Temp_bool_Variable_1) == 0x000020, "Member 'BP_TeleportationDrone_C_PlaySpawnAnim::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_PlaySpawnAnim, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_TeleportationDrone_C_PlaySpawnAnim::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_PlaySpawnAnim, K2Node_Select_Default) == 0x000030, "Member 'BP_TeleportationDrone_C_PlaySpawnAnim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_PlaySpawnAnim, K2Node_Select_Default_1) == 0x000038, "Member 'BP_TeleportationDrone_C_PlaySpawnAnim::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_TeleportationDrone_C_PlaySpawnAnim, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'BP_TeleportationDrone_C_PlaySpawnAnim::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_TeleportationDrone.BP_TeleportationDrone_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_TeleportationDrone_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeleportationDrone_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_TeleportationDrone_C_ReceiveTick");
static_assert(sizeof(BP_TeleportationDrone_C_ReceiveTick) == 0x000004, "Wrong size on BP_TeleportationDrone_C_ReceiveTick");
static_assert(offsetof(BP_TeleportationDrone_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_TeleportationDrone_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

