#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaSupplyDrop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AthenaSupplyDrop.AthenaSupplyDrop_C
// 0x01C0 (0x0CA0 - 0x0AE0)
class AAthenaSupplyDrop_C : public AFortAthenaSupplyDrop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       WaterCollisionSphere;                              // 0x0AE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortProjectileMovementComponent*       FortProjectileMovement;                            // 0x0AF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         FortWaterInteraction;                              // 0x0AF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FallingAudio;                                      // 0x0B00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ReticlePSC;                                        // 0x0B08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CrateCollision;                                    // 0x0B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor;                                        // 0x0B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FlareAudio;                                        // 0x0B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FlarePSC;                                          // 0x0B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ReticleAudio;                                      // 0x0B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CrateStaticMesh;                                   // 0x0B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              MyInteractingPawn;                                 // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTableName;                                     // 0x0B48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4C[0x4];                                      // 0x0B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LootSpawnOffset;                                   // 0x0B50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Looted;                                      // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Destroyed;                                   // 0x0B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Landing;                                     // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Opened;                                            // 0x0B80(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          BalloonPopped;                                     // 0x0B81(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B82[0x6];                                      // 0x0B82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemAsset*                         LandingFX;                                         // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        DestroyedFX;                                       // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        LootedFX;                                          // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FallSpeed;                                         // 0x0BA0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReticleUpdateInterval;                             // 0x0BA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialFallDelay;                                  // 0x0BA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAC[0x4];                                      // 0x0BAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        FallTrailFX;                                       // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Appear;                                      // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_ReticleAppear;                               // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_AlmostLanded;                                // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LandingLocation;                                   // 0x0BD0(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoOpen;                                          // 0x0BE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE9[0x3];                                      // 0x0BE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FallHeight;                                        // 0x0BEC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DescentOffsetMin;                                  // 0x0BF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DescentOffsetMax;                                  // 0x0BF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FallDirection;                                     // 0x0BF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundLocation;                                    // 0x0C10(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DescentYOffsetMin;                                 // 0x0C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DescentYOffsetMax;                                 // 0x0C2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGroundLocationInitialized;                        // 0x0C30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOverrideRotation;                                 // 0x0C31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C32[0x6];                                      // 0x0C32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               OverrideRotation;                                  // 0x0C38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BlingDrop;                                         // 0x0C50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C51[0x3];                                      // 0x0C51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LootTableNameToUse;                                // 0x0C54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 VehicleType;                                       // 0x0C58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FallingAudioCheckTimerHandle;                      // 0x0C60(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerDistanceCheckTimeLoop;                       // 0x0C68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InfDrop;                                           // 0x0C6C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6D[0x3];                                      // 0x0C6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Looted_Inf;                                  // 0x0C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Appear_Dialogue;                             // 0x0C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFortItemEntry>                 DelayedSpawnLoot;                                  // 0x0C80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         RandomSpawnRangeMin;                               // 0x0C90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomSpawnRangeMax;                               // 0x0C94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LandInterrupted;                                   // 0x0C98(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C99[0x3];                                      // 0x0C99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LogReticleDiscrepencyDistance_Const;               // 0x0C9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void UpdateReticleLocation();
	void TimerCheckPlayerDistance();
	void StopFallAudioTimeline();
	void SpawnVehicle();
	void SpawnLoot();
	void SetupQuestData();
	void Setup_Bind_To_Building_Actor(class UObject* Object);
	void ReceiveBeginPlay();
	void PlayLandingFX_InWater();
	void playLandingFX(bool bSpawnVFX);
	void Play_Looted_Dialogue();
	void PhysicsActivated(class UActorComponent* Component, bool bReset);
	void OpenSupplyDrop();
	void OnTouchedFillFloor(class AAthenaFillFloor* FillFloorActor);
	void OnSetCustomDepthStencilValue(const TArray<class UPrimitiveComponent*>& PrimComponents, bool bUseCustomDepth, int32 StencilValue, bool* bOutConsume);
	void OnRep_Opened();
	void OnRep_LandingLocation();
	void OnRep_BalloonPopped();
	void OnLandingLocationChanged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnLanding();
	void OnDelayedSpawnLoot();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void Multicast_ApplyGravityForFall();
	void LandingInterrupted();
	void InitFallHeightAndSpeed();
	void InitFall();
	void HandleProjectileMovementStop(const struct FHitResult& ImpactResult);
	void ForceSetLocationOnLanding();
	void ExecuteUbergraph_AthenaSupplyDrop(int32 EntryPoint);
	void DisableFlare();
	void DestroyGroundComponents();
	void BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_3_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent, bool bIsFirstBody);
	void BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_2_OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted);
	void BeginFallAudioTimeline();
	void BalloonDestroyed();
	void Analytics(const TArray<struct FFortItemEntry>& ItemsToSpawn);
	void AlmostLanded();

	void GetLootSpawnLocation(struct FVector* LootSpawnLocation) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaSupplyDrop_C">();
	}
	static class AAthenaSupplyDrop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthenaSupplyDrop_C>();
	}
};
static_assert(alignof(AAthenaSupplyDrop_C) == 0x000008, "Wrong alignment on AAthenaSupplyDrop_C");
static_assert(sizeof(AAthenaSupplyDrop_C) == 0x000CA0, "Wrong size on AAthenaSupplyDrop_C");
static_assert(offsetof(AAthenaSupplyDrop_C, UberGraphFrame) == 0x000AE0, "Member 'AAthenaSupplyDrop_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, WaterCollisionSphere) == 0x000AE8, "Member 'AAthenaSupplyDrop_C::WaterCollisionSphere' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, FortProjectileMovement) == 0x000AF0, "Member 'AAthenaSupplyDrop_C::FortProjectileMovement' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, FortWaterInteraction) == 0x000AF8, "Member 'AAthenaSupplyDrop_C::FortWaterInteraction' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, FallingAudio) == 0x000B00, "Member 'AAthenaSupplyDrop_C::FallingAudio' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, ReticlePSC) == 0x000B08, "Member 'AAthenaSupplyDrop_C::ReticlePSC' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, CrateCollision) == 0x000B10, "Member 'AAthenaSupplyDrop_C::CrateCollision' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, ChildActor) == 0x000B18, "Member 'AAthenaSupplyDrop_C::ChildActor' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, FlareAudio) == 0x000B20, "Member 'AAthenaSupplyDrop_C::FlareAudio' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, FlarePSC) == 0x000B28, "Member 'AAthenaSupplyDrop_C::FlarePSC' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, ReticleAudio) == 0x000B30, "Member 'AAthenaSupplyDrop_C::ReticleAudio' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, CrateStaticMesh) == 0x000B38, "Member 'AAthenaSupplyDrop_C::CrateStaticMesh' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, MyInteractingPawn) == 0x000B40, "Member 'AAthenaSupplyDrop_C::MyInteractingPawn' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, LootTableName) == 0x000B48, "Member 'AAthenaSupplyDrop_C::LootTableName' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, LootSpawnOffset) == 0x000B50, "Member 'AAthenaSupplyDrop_C::LootSpawnOffset' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, Sound_Looted) == 0x000B68, "Member 'AAthenaSupplyDrop_C::Sound_Looted' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, Sound_Destroyed) == 0x000B70, "Member 'AAthenaSupplyDrop_C::Sound_Destroyed' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, Sound_Landing) == 0x000B78, "Member 'AAthenaSupplyDrop_C::Sound_Landing' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, Opened) == 0x000B80, "Member 'AAthenaSupplyDrop_C::Opened' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, BalloonPopped) == 0x000B81, "Member 'AAthenaSupplyDrop_C::BalloonPopped' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, LandingFX) == 0x000B88, "Member 'AAthenaSupplyDrop_C::LandingFX' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, DestroyedFX) == 0x000B90, "Member 'AAthenaSupplyDrop_C::DestroyedFX' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, LootedFX) == 0x000B98, "Member 'AAthenaSupplyDrop_C::LootedFX' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, FallSpeed) == 0x000BA0, "Member 'AAthenaSupplyDrop_C::FallSpeed' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, ReticleUpdateInterval) == 0x000BA4, "Member 'AAthenaSupplyDrop_C::ReticleUpdateInterval' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, InitialFallDelay) == 0x000BA8, "Member 'AAthenaSupplyDrop_C::InitialFallDelay' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, FallTrailFX) == 0x000BB0, "Member 'AAthenaSupplyDrop_C::FallTrailFX' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, Sound_Appear) == 0x000BB8, "Member 'AAthenaSupplyDrop_C::Sound_Appear' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, Sound_ReticleAppear) == 0x000BC0, "Member 'AAthenaSupplyDrop_C::Sound_ReticleAppear' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, Sound_AlmostLanded) == 0x000BC8, "Member 'AAthenaSupplyDrop_C::Sound_AlmostLanded' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, LandingLocation) == 0x000BD0, "Member 'AAthenaSupplyDrop_C::LandingLocation' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, AutoOpen) == 0x000BE8, "Member 'AAthenaSupplyDrop_C::AutoOpen' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, FallHeight) == 0x000BEC, "Member 'AAthenaSupplyDrop_C::FallHeight' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, DescentOffsetMin) == 0x000BF0, "Member 'AAthenaSupplyDrop_C::DescentOffsetMin' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, DescentOffsetMax) == 0x000BF4, "Member 'AAthenaSupplyDrop_C::DescentOffsetMax' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, FallDirection) == 0x000BF8, "Member 'AAthenaSupplyDrop_C::FallDirection' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, GroundLocation) == 0x000C10, "Member 'AAthenaSupplyDrop_C::GroundLocation' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, DescentYOffsetMin) == 0x000C28, "Member 'AAthenaSupplyDrop_C::DescentYOffsetMin' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, DescentYOffsetMax) == 0x000C2C, "Member 'AAthenaSupplyDrop_C::DescentYOffsetMax' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, bGroundLocationInitialized) == 0x000C30, "Member 'AAthenaSupplyDrop_C::bGroundLocationInitialized' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, bOverrideRotation) == 0x000C31, "Member 'AAthenaSupplyDrop_C::bOverrideRotation' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, OverrideRotation) == 0x000C38, "Member 'AAthenaSupplyDrop_C::OverrideRotation' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, BlingDrop) == 0x000C50, "Member 'AAthenaSupplyDrop_C::BlingDrop' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, LootTableNameToUse) == 0x000C54, "Member 'AAthenaSupplyDrop_C::LootTableNameToUse' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, VehicleType) == 0x000C58, "Member 'AAthenaSupplyDrop_C::VehicleType' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, FallingAudioCheckTimerHandle) == 0x000C60, "Member 'AAthenaSupplyDrop_C::FallingAudioCheckTimerHandle' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, PlayerDistanceCheckTimeLoop) == 0x000C68, "Member 'AAthenaSupplyDrop_C::PlayerDistanceCheckTimeLoop' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, InfDrop) == 0x000C6C, "Member 'AAthenaSupplyDrop_C::InfDrop' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, Sound_Looted_Inf) == 0x000C70, "Member 'AAthenaSupplyDrop_C::Sound_Looted_Inf' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, Sound_Appear_Dialogue) == 0x000C78, "Member 'AAthenaSupplyDrop_C::Sound_Appear_Dialogue' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, DelayedSpawnLoot) == 0x000C80, "Member 'AAthenaSupplyDrop_C::DelayedSpawnLoot' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, RandomSpawnRangeMin) == 0x000C90, "Member 'AAthenaSupplyDrop_C::RandomSpawnRangeMin' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, RandomSpawnRangeMax) == 0x000C94, "Member 'AAthenaSupplyDrop_C::RandomSpawnRangeMax' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, LandInterrupted) == 0x000C98, "Member 'AAthenaSupplyDrop_C::LandInterrupted' has a wrong offset!");
static_assert(offsetof(AAthenaSupplyDrop_C, LogReticleDiscrepencyDistance_Const) == 0x000C9C, "Member 'AAthenaSupplyDrop_C::LogReticleDiscrepencyDistance_Const' has a wrong offset!");

}

