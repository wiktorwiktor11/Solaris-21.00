#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lawn_Light

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Parent_BuildingPropActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Lawn_Light.Lawn_Light_C
// 0x0030 (0x0FA8 - 0x0F78)
class ALawn_Light_C : public AParent_BuildingPropActor_C
{
public:
	class UAudioComponent*                        LightAudioLoop;                                    // 0x0F78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0F80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_LawnLight_Ray;                                   // 0x0F88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LightColorTint;                                    // 0x0F90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightOpacity;                                      // 0x0FA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Light_Flare_Camera_Offset;                         // 0x0FA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Lawn_Light_C">();
	}
	static class ALawn_Light_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALawn_Light_C>();
	}
};
static_assert(alignof(ALawn_Light_C) == 0x000008, "Wrong alignment on ALawn_Light_C");
static_assert(sizeof(ALawn_Light_C) == 0x000FA8, "Wrong size on ALawn_Light_C");
static_assert(offsetof(ALawn_Light_C, LightAudioLoop) == 0x000F78, "Member 'ALawn_Light_C::LightAudioLoop' has a wrong offset!");
static_assert(offsetof(ALawn_Light_C, SpotLight) == 0x000F80, "Member 'ALawn_Light_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ALawn_Light_C, P_LawnLight_Ray) == 0x000F88, "Member 'ALawn_Light_C::P_LawnLight_Ray' has a wrong offset!");
static_assert(offsetof(ALawn_Light_C, LightColorTint) == 0x000F90, "Member 'ALawn_Light_C::LightColorTint' has a wrong offset!");
static_assert(offsetof(ALawn_Light_C, LightOpacity) == 0x000FA0, "Member 'ALawn_Light_C::LightOpacity' has a wrong offset!");
static_assert(offsetof(ALawn_Light_C, Light_Flare_Camera_Offset) == 0x000FA4, "Member 'ALawn_Light_C::Light_Flare_Camera_Offset' has a wrong offset!");

}

