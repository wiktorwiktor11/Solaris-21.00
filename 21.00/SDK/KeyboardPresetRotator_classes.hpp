#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KeyboardPresetRotator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass KeyboardPresetRotator.KeyboardPresetRotator_C
// 0x0040 (0x0320 - 0x02E0)
class UKeyboardPresetRotator_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UIconTextButton_C*                      ButtonLeft;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonRight;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Description;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_0;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SubDescription;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextRotator_C*                         TextRotator;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         SelectedIndex;                                     // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Spacer_Width;                                      // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature(int32 Value);
	void Center_On_Widget();
	void Construct();
	void ExecuteUbergraph_KeyboardPresetRotator(int32 EntryPoint);
	void Initialize();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void PreConstruct(bool IsDesignTime);
	void Show_Param_Name(bool Show);
	void Update_Options(TArray<class FText>& NewParam);
	void Update_Row_Selector(int32 Currently_Selected);
	void Update_Size();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"KeyboardPresetRotator_C">();
	}
	static class UKeyboardPresetRotator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKeyboardPresetRotator_C>();
	}
};
static_assert(alignof(UKeyboardPresetRotator_C) == 0x000008, "Wrong alignment on UKeyboardPresetRotator_C");
static_assert(sizeof(UKeyboardPresetRotator_C) == 0x000320, "Wrong size on UKeyboardPresetRotator_C");
static_assert(offsetof(UKeyboardPresetRotator_C, UberGraphFrame) == 0x0002E0, "Member 'UKeyboardPresetRotator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UKeyboardPresetRotator_C, ButtonLeft) == 0x0002E8, "Member 'UKeyboardPresetRotator_C::ButtonLeft' has a wrong offset!");
static_assert(offsetof(UKeyboardPresetRotator_C, ButtonRight) == 0x0002F0, "Member 'UKeyboardPresetRotator_C::ButtonRight' has a wrong offset!");
static_assert(offsetof(UKeyboardPresetRotator_C, Description) == 0x0002F8, "Member 'UKeyboardPresetRotator_C::Description' has a wrong offset!");
static_assert(offsetof(UKeyboardPresetRotator_C, Spacer_0) == 0x000300, "Member 'UKeyboardPresetRotator_C::Spacer_0' has a wrong offset!");
static_assert(offsetof(UKeyboardPresetRotator_C, SubDescription) == 0x000308, "Member 'UKeyboardPresetRotator_C::SubDescription' has a wrong offset!");
static_assert(offsetof(UKeyboardPresetRotator_C, TextRotator) == 0x000310, "Member 'UKeyboardPresetRotator_C::TextRotator' has a wrong offset!");
static_assert(offsetof(UKeyboardPresetRotator_C, SelectedIndex) == 0x000318, "Member 'UKeyboardPresetRotator_C::SelectedIndex' has a wrong offset!");
static_assert(offsetof(UKeyboardPresetRotator_C, Spacer_Width) == 0x00031C, "Member 'UKeyboardPresetRotator_C::Spacer_Width' has a wrong offset!");

}

