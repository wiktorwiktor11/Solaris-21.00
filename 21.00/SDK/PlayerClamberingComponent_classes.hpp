#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerClamberingComponent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "ClamberingCodeRuntime_structs.hpp"
#include "ClamberingCodeRuntime_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerClamberingComponent.PlayerClamberingComponent_C
// 0x00C0 (0x0AE0 - 0x0A20)
class UPlayerClamberingComponent_C final : public UClamberingComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A20(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bUISceneAdded;                                     // 0x0A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A29[0x7];                                      // 0x0A29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraShakeBase>           CameraShake;                                       // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTag                           ClamberGameplayCue;                                // 0x0A38(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3C[0x4];                                      // 0x0A3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ClamberAnim;                                       // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ClamberAnimNoRootMotion;                           // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ClamberFailAnim;                                   // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_Clambering;                                     // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            ActiveGEHandle;                                    // 0x0A60(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AClamber_Location_Actor_C*              ClamberLocationIndicator;                          // 0x0A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Decal_ClamberHighlight_C*            ClamberLocationHighlight;                          // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_JetpackEquipped;                                 // 0x0A78(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7C[0x4];                                      // 0x0A7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PromptText;                                        // 0x0A80(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FGameplayTag>                   CancelAbilitiesWithTags;                           // 0x0A98(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FGameplayTag>                   BlockAbilitiesWithTags;                            // 0x0AA8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_TargetWithinRange;                               // 0x0AB8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateClamberLocationHighlight(struct FClamberingTargetingData& TargetingData);
	void ShouldTutorialBeEnabled();
	void SetUISceneVisible(bool bVisible);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void HandleTargetingDataValid(const struct FClamberingTargetingData& TargetingData);
	void HandleTargetingDataInvalid();
	void HandleClamberStateStopped(class AFortPawn* Pawn, EClamberingState ClamberingState);
	void HandleClamberStateStarted(class AFortPawn* Pawn, EClamberingState ClamberingState);
	void HandleClamberingTargetOutOfActivationRange();
	void HandleClamberingTargetInActivationRange();
	void GetClamberLocationHighlightTransform(struct FClamberingTargetingData& TargetingData, struct FTransform* Transform, struct FRotator* Rotation);
	void GetClamberAnimPlayRate(float* PlayRate);
	void GetClamberAnim(class UAnimMontage** Clamber_Anim);
	void ExecuteUbergraph_PlayerClamberingComponent(int32 EntryPoint);
	void DestroyClamberLocationHighlight();
	void CustomEvent_0();
	void CreateClamberLocationHighlight(struct FClamberingTargetingData& TargetingData);
	void CanShowUIPrompt(bool* bCanShow);
	void BP_HandleSynchedActionStarted();
	void BP_HandleClamberingStateChanged(const EClamberingState OldClamberingState, const EClamberingState NewClamberingState);

	void BP_TutorialModeEnabled() const;
	void BP_TutorialModeDisabled() const;
	void BP_CanStartTargeting(bool* bCanStartTargeting) const;
	void BP_CanStartClambering(bool* bCanStartClambering) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerClamberingComponent_C">();
	}
	static class UPlayerClamberingComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerClamberingComponent_C>();
	}
};
static_assert(alignof(UPlayerClamberingComponent_C) == 0x000008, "Wrong alignment on UPlayerClamberingComponent_C");
static_assert(sizeof(UPlayerClamberingComponent_C) == 0x000AE0, "Wrong size on UPlayerClamberingComponent_C");
static_assert(offsetof(UPlayerClamberingComponent_C, UberGraphFrame) == 0x000A20, "Member 'UPlayerClamberingComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, bUISceneAdded) == 0x000A28, "Member 'UPlayerClamberingComponent_C::bUISceneAdded' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, CameraShake) == 0x000A30, "Member 'UPlayerClamberingComponent_C::CameraShake' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, ClamberGameplayCue) == 0x000A38, "Member 'UPlayerClamberingComponent_C::ClamberGameplayCue' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, ClamberAnim) == 0x000A40, "Member 'UPlayerClamberingComponent_C::ClamberAnim' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, ClamberAnimNoRootMotion) == 0x000A48, "Member 'UPlayerClamberingComponent_C::ClamberAnimNoRootMotion' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, ClamberFailAnim) == 0x000A50, "Member 'UPlayerClamberingComponent_C::ClamberFailAnim' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, GE_Clambering) == 0x000A58, "Member 'UPlayerClamberingComponent_C::GE_Clambering' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, ActiveGEHandle) == 0x000A60, "Member 'UPlayerClamberingComponent_C::ActiveGEHandle' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, ClamberLocationIndicator) == 0x000A68, "Member 'UPlayerClamberingComponent_C::ClamberLocationIndicator' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, ClamberLocationHighlight) == 0x000A70, "Member 'UPlayerClamberingComponent_C::ClamberLocationHighlight' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, T_JetpackEquipped) == 0x000A78, "Member 'UPlayerClamberingComponent_C::T_JetpackEquipped' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, PromptText) == 0x000A80, "Member 'UPlayerClamberingComponent_C::PromptText' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, CancelAbilitiesWithTags) == 0x000A98, "Member 'UPlayerClamberingComponent_C::CancelAbilitiesWithTags' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, BlockAbilitiesWithTags) == 0x000AA8, "Member 'UPlayerClamberingComponent_C::BlockAbilitiesWithTags' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, T_TargetWithinRange) == 0x000AB8, "Member 'UPlayerClamberingComponent_C::T_TargetWithinRange' has a wrong offset!");
static_assert(offsetof(UPlayerClamberingComponent_C, PlayerPawn) == 0x000AD8, "Member 'UPlayerClamberingComponent_C::PlayerPawn' has a wrong offset!");

}

