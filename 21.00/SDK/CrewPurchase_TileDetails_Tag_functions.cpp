#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrewPurchase_TileDetails_Tag

#include "Basic.hpp"

#include "CrewPurchase_TileDetails_Tag_classes.hpp"
#include "CrewPurchase_TileDetails_Tag_parameters.hpp"


namespace SDK
{

// Function CrewPurchase_TileDetails_Tag.CrewPurchase_TileDetails_Tag_C.ExecuteUbergraph_CrewPurchase_TileDetails_Tag
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCrewPurchase_TileDetails_Tag_C::ExecuteUbergraph_CrewPurchase_TileDetails_Tag(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchase_TileDetails_Tag_C", "ExecuteUbergraph_CrewPurchase_TileDetails_Tag");

	Params::CrewPurchase_TileDetails_Tag_C_ExecuteUbergraph_CrewPurchase_TileDetails_Tag Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CrewPurchase_TileDetails_Tag.CrewPurchase_TileDetails_Tag_C.OnTagSetup
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECrewDetailsTag                         RewardTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsOwnedTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCrewPurchase_TileDetails_Tag_C::OnTagSetup(ECrewDetailsTag RewardTag, bool bIsOwnedTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CrewPurchase_TileDetails_Tag_C", "OnTagSetup");

	Params::CrewPurchase_TileDetails_Tag_C_OnTagSetup Parms{};

	Parms.RewardTag = RewardTag;
	Parms.bIsOwnedTag = bIsOwnedTag;

	UObject::ProcessEvent(Func, &Parms);
}

}

