#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BountyBoard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BountyBoard.BP_BountyBoard_C
// 0x0078 (0x0B40 - 0x0AC8)
class ABP_BountyBoard_C final : public ABuildingGameplayActorTransientQuest
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AC8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBountyBoardSpecialActorComponent_C*    BountyBoardSpecialActorComponent;                  // 0x0AD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereDetail;                                      // 0x0AD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CylinderDistance;                                  // 0x0AE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0AE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       TriggerVolume;                                     // 0x0AF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BountyBoard_Empty;                                 // 0x0AF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BountyBoard_Full;                                  // 0x0B00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0B08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNonPlayerConversationComponent_C*      NonPlayerConversationComponent;                    // 0x0B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightFlicker_NewTrack_0_3BA826214BE4DB7FCBA1F7A3701F8DD8; // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LightFlicker__Direction_3BA826214BE4DB7FCBA1F7A3701F8DD8; // 0x0B1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1D[0x3];                                      // 0x0B1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LightFlicker;                                      // 0x0B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         PlayersToIgnore;                                   // 0x0B28(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class FName                                   HideReason;                                        // 0x0B38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BP_BountyBoard(int32 EntryPoint);
	void LightFlicker__FinishedFunc();
	void LightFlicker__UpdateFunc();
	void OnBountyStarted(const TArray<class AFortPlayerStateAthena*>& HunterPlayerStates);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnLocalPlayerGrantedBounty();
	void ReceiveBeginPlay();

	class FText BlueprintGetFailedInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BountyBoard_C">();
	}
	static class ABP_BountyBoard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BountyBoard_C>();
	}
};
static_assert(alignof(ABP_BountyBoard_C) == 0x000008, "Wrong alignment on ABP_BountyBoard_C");
static_assert(sizeof(ABP_BountyBoard_C) == 0x000B40, "Wrong size on ABP_BountyBoard_C");
static_assert(offsetof(ABP_BountyBoard_C, UberGraphFrame) == 0x000AC8, "Member 'ABP_BountyBoard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, BountyBoardSpecialActorComponent) == 0x000AD0, "Member 'ABP_BountyBoard_C::BountyBoardSpecialActorComponent' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, SphereDetail) == 0x000AD8, "Member 'ABP_BountyBoard_C::SphereDetail' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, CylinderDistance) == 0x000AE0, "Member 'ABP_BountyBoard_C::CylinderDistance' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, PointLight) == 0x000AE8, "Member 'ABP_BountyBoard_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, TriggerVolume) == 0x000AF0, "Member 'ABP_BountyBoard_C::TriggerVolume' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, BountyBoard_Empty) == 0x000AF8, "Member 'ABP_BountyBoard_C::BountyBoard_Empty' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, BountyBoard_Full) == 0x000B00, "Member 'ABP_BountyBoard_C::BountyBoard_Full' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, Root) == 0x000B08, "Member 'ABP_BountyBoard_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, NonPlayerConversationComponent) == 0x000B10, "Member 'ABP_BountyBoard_C::NonPlayerConversationComponent' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, LightFlicker_NewTrack_0_3BA826214BE4DB7FCBA1F7A3701F8DD8) == 0x000B18, "Member 'ABP_BountyBoard_C::LightFlicker_NewTrack_0_3BA826214BE4DB7FCBA1F7A3701F8DD8' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, LightFlicker__Direction_3BA826214BE4DB7FCBA1F7A3701F8DD8) == 0x000B1C, "Member 'ABP_BountyBoard_C::LightFlicker__Direction_3BA826214BE4DB7FCBA1F7A3701F8DD8' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, LightFlicker) == 0x000B20, "Member 'ABP_BountyBoard_C::LightFlicker' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, PlayersToIgnore) == 0x000B28, "Member 'ABP_BountyBoard_C::PlayersToIgnore' has a wrong offset!");
static_assert(offsetof(ABP_BountyBoard_C, HideReason) == 0x000B38, "Member 'ABP_BountyBoard_C::HideReason' has a wrong offset!");

}

