#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HorizontalTabList

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function HorizontalTabList.HorizontalTabList_C.CustomEvent_0
// 0x0004 (0x0004 - 0x0000)
struct HorizontalTabList_C_CustomEvent_0 final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_CustomEvent_0) == 0x000004, "Wrong alignment on HorizontalTabList_C_CustomEvent_0");
static_assert(sizeof(HorizontalTabList_C_CustomEvent_0) == 0x000004, "Wrong size on HorizontalTabList_C_CustomEvent_0");
static_assert(offsetof(HorizontalTabList_C_CustomEvent_0, TabId) == 0x000000, "Member 'HorizontalTabList_C_CustomEvent_0::TabId' has a wrong offset!");

// Function HorizontalTabList.HorizontalTabList_C.CustomEvent_1
// 0x0001 (0x0001 - 0x0000)
struct HorizontalTabList_C_CustomEvent_1 final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_CustomEvent_1) == 0x000001, "Wrong alignment on HorizontalTabList_C_CustomEvent_1");
static_assert(sizeof(HorizontalTabList_C_CustomEvent_1) == 0x000001, "Wrong size on HorizontalTabList_C_CustomEvent_1");
static_assert(offsetof(HorizontalTabList_C_CustomEvent_1, InVisibility) == 0x000000, "Member 'HorizontalTabList_C_CustomEvent_1::InVisibility' has a wrong offset!");

// Function HorizontalTabList.HorizontalTabList_C.DebugCreateTabsForDesigner
// 0x0028 (0x0028 - 0x0000)
struct HorizontalTabList_C_DebugCreateTabsForDesigner final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_DynamicCast_AsCommon_Button_Base;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_DebugCreateTabsForDesigner) == 0x000008, "Wrong alignment on HorizontalTabList_C_DebugCreateTabsForDesigner");
static_assert(sizeof(HorizontalTabList_C_DebugCreateTabsForDesigner) == 0x000028, "Wrong size on HorizontalTabList_C_DebugCreateTabsForDesigner");
static_assert(offsetof(HorizontalTabList_C_DebugCreateTabsForDesigner, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'HorizontalTabList_C_DebugCreateTabsForDesigner::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_DebugCreateTabsForDesigner, Temp_int_Variable) == 0x000008, "Member 'HorizontalTabList_C_DebugCreateTabsForDesigner::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_DebugCreateTabsForDesigner, CallFunc_Create_ReturnValue) == 0x000010, "Member 'HorizontalTabList_C_DebugCreateTabsForDesigner::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_DebugCreateTabsForDesigner, K2Node_DynamicCast_AsCommon_Button_Base) == 0x000018, "Member 'HorizontalTabList_C_DebugCreateTabsForDesigner::K2Node_DynamicCast_AsCommon_Button_Base' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_DebugCreateTabsForDesigner, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'HorizontalTabList_C_DebugCreateTabsForDesigner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_DebugCreateTabsForDesigner, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000021, "Member 'HorizontalTabList_C_DebugCreateTabsForDesigner::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_DebugCreateTabsForDesigner, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'HorizontalTabList_C_DebugCreateTabsForDesigner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function HorizontalTabList.HorizontalTabList_C.ExecuteUbergraph_HorizontalTabList
// 0x0080 (0x0080 - 0x0000)
struct HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName TabId)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTabCount_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTabCount_ReturnValue_1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_TabId;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_TabNameID_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_Event_TabButton_1;                          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_TabNameID;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_Event_TabButton;                            // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList) == 0x000008, "Wrong alignment on HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList");
static_assert(sizeof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList) == 0x000080, "Wrong size on HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, EntryPoint) == 0x000000, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::EntryPoint' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, Temp_bool_Variable) == 0x000004, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, Temp_byte_Variable) == 0x000005, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, Temp_byte_Variable_1) == 0x000006, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, Temp_bool_Variable_1) == 0x000007, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, Temp_byte_Variable_2) == 0x000008, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, Temp_byte_Variable_3) == 0x000009, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000010, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, Temp_byte_Variable_4) == 0x00003C, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_Event_IsDesignTime) == 0x00003D, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, CallFunc_GetTabCount_ReturnValue) == 0x000040, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::CallFunc_GetTabCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, CallFunc_GetTabCount_ReturnValue_1) == 0x000048, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::CallFunc_GetTabCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00004C, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_Select_Default) == 0x00004D, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_Select_Default_1) == 0x00004E, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_CustomEvent_TabId) == 0x000050, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_CustomEvent_TabId' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, Temp_byte_Variable_5) == 0x000054, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_CustomEvent_bNewInputType) == 0x000055, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_CustomEvent_InVisibility) == 0x000056, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_Event_TabNameID_1) == 0x000058, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_Event_TabNameID_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_Event_TabButton_1) == 0x000060, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_Event_TabButton_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_Event_TabNameID) == 0x000068, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_Event_TabNameID' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_Event_TabButton) == 0x000070, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_Event_TabButton' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, Temp_bool_Variable_2) == 0x000078, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, CallFunc_IsValidClass_ReturnValue) == 0x000079, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, K2Node_Select_Default_2) == 0x00007A, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList, CallFunc_BooleanAND_ReturnValue) == 0x00007B, "Member 'HorizontalTabList_C_ExecuteUbergraph_HorizontalTabList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function HorizontalTabList.HorizontalTabList_C.HandleOnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct HorizontalTabList_C_HandleOnInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_HandleOnInputMethodChanged) == 0x000001, "Wrong alignment on HorizontalTabList_C_HandleOnInputMethodChanged");
static_assert(sizeof(HorizontalTabList_C_HandleOnInputMethodChanged) == 0x000001, "Wrong size on HorizontalTabList_C_HandleOnInputMethodChanged");
static_assert(offsetof(HorizontalTabList_C_HandleOnInputMethodChanged, bNewInputType) == 0x000000, "Member 'HorizontalTabList_C_HandleOnInputMethodChanged::bNewInputType' has a wrong offset!");

// Function HorizontalTabList.HorizontalTabList_C.HandleTabCreation
// 0x0010 (0x0010 - 0x0000)
struct HorizontalTabList_C_HandleTabCreation final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      TabButton;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_HandleTabCreation) == 0x000008, "Wrong alignment on HorizontalTabList_C_HandleTabCreation");
static_assert(sizeof(HorizontalTabList_C_HandleTabCreation) == 0x000010, "Wrong size on HorizontalTabList_C_HandleTabCreation");
static_assert(offsetof(HorizontalTabList_C_HandleTabCreation, TabNameID) == 0x000000, "Member 'HorizontalTabList_C_HandleTabCreation::TabNameID' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_HandleTabCreation, TabButton) == 0x000008, "Member 'HorizontalTabList_C_HandleTabCreation::TabButton' has a wrong offset!");

// Function HorizontalTabList.HorizontalTabList_C.HandleTabRemoval
// 0x0010 (0x0010 - 0x0000)
struct HorizontalTabList_C_HandleTabRemoval final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      TabButton;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_HandleTabRemoval) == 0x000008, "Wrong alignment on HorizontalTabList_C_HandleTabRemoval");
static_assert(sizeof(HorizontalTabList_C_HandleTabRemoval) == 0x000010, "Wrong size on HorizontalTabList_C_HandleTabRemoval");
static_assert(offsetof(HorizontalTabList_C_HandleTabRemoval, TabNameID) == 0x000000, "Member 'HorizontalTabList_C_HandleTabRemoval::TabNameID' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_HandleTabRemoval, TabButton) == 0x000008, "Member 'HorizontalTabList_C_HandleTabRemoval::TabButton' has a wrong offset!");

// Function HorizontalTabList.HorizontalTabList_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HorizontalTabList_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_PreConstruct) == 0x000001, "Wrong alignment on HorizontalTabList_C_PreConstruct");
static_assert(sizeof(HorizontalTabList_C_PreConstruct) == 0x000001, "Wrong size on HorizontalTabList_C_PreConstruct");
static_assert(offsetof(HorizontalTabList_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HorizontalTabList_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HorizontalTabList.HorizontalTabList_C.SetVerticalAlignment
// 0x0010 (0x0010 - 0x0000)
struct HorizontalTabList_C_SetVerticalAlignment final
{
public:
	EVerticalAlignment                            FillVertically;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_SetVerticalAlignment) == 0x000008, "Wrong alignment on HorizontalTabList_C_SetVerticalAlignment");
static_assert(sizeof(HorizontalTabList_C_SetVerticalAlignment) == 0x000010, "Wrong size on HorizontalTabList_C_SetVerticalAlignment");
static_assert(offsetof(HorizontalTabList_C_SetVerticalAlignment, FillVertically) == 0x000000, "Member 'HorizontalTabList_C_SetVerticalAlignment::FillVertically' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_SetVerticalAlignment, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000008, "Member 'HorizontalTabList_C_SetVerticalAlignment::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");

// Function HorizontalTabList.HorizontalTabList_C.UpdateGamepadKeyVisibility
// 0x0020 (0x0020 - 0x0000)
struct HorizontalTabList_C_UpdateGamepadKeyVisibility final
{
public:
	int32                                         NumVisibleTabs;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVisibleTabCount_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_UpdateGamepadKeyVisibility) == 0x000008, "Wrong alignment on HorizontalTabList_C_UpdateGamepadKeyVisibility");
static_assert(sizeof(HorizontalTabList_C_UpdateGamepadKeyVisibility) == 0x000020, "Wrong size on HorizontalTabList_C_UpdateGamepadKeyVisibility");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, NumVisibleTabs) == 0x000000, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::NumVisibleTabs' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, Temp_bool_Variable) == 0x000004, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, Temp_byte_Variable) == 0x000005, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, Temp_byte_Variable_1) == 0x000006, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, Temp_bool_Variable_1) == 0x000007, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, Temp_byte_Variable_2) == 0x000008, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, CallFunc_GetVisibleTabCount_ReturnValue) == 0x00000C, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::CallFunc_GetVisibleTabCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, CallFunc_GetCurrentInputType_ReturnValue) == 0x000019, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, K2Node_Select_Default) == 0x00001C, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateGamepadKeyVisibility, K2Node_Select_Default_1) == 0x00001D, "Member 'HorizontalTabList_C_UpdateGamepadKeyVisibility::K2Node_Select_Default_1' has a wrong offset!");

// Function HorizontalTabList.HorizontalTabList_C.UpdateTabStyles
// 0x0048 (0x0048 - 0x0000)
struct HorizontalTabList_C_UpdateTabStyles final
{
public:
	class UCommonButtonBase*                      ButtonWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconTabButton_C*                       K2Node_DynamicCast_AsIcon_Tab_Button;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconTabButton_C*                       K2Node_DynamicCast_AsIcon_Tab_Button_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0028(0x0018)()
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HorizontalTabList_C_UpdateTabStyles) == 0x000008, "Wrong alignment on HorizontalTabList_C_UpdateTabStyles");
static_assert(sizeof(HorizontalTabList_C_UpdateTabStyles) == 0x000048, "Wrong size on HorizontalTabList_C_UpdateTabStyles");
static_assert(offsetof(HorizontalTabList_C_UpdateTabStyles, ButtonWidget) == 0x000000, "Member 'HorizontalTabList_C_UpdateTabStyles::ButtonWidget' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateTabStyles, K2Node_DynamicCast_AsIcon_Tab_Button) == 0x000008, "Member 'HorizontalTabList_C_UpdateTabStyles::K2Node_DynamicCast_AsIcon_Tab_Button' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateTabStyles, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'HorizontalTabList_C_UpdateTabStyles::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateTabStyles, K2Node_DynamicCast_AsIcon_Tab_Button_1) == 0x000018, "Member 'HorizontalTabList_C_UpdateTabStyles::K2Node_DynamicCast_AsIcon_Tab_Button_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateTabStyles, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'HorizontalTabList_C_UpdateTabStyles::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateTabStyles, CallFunc_GetEmptyText_ReturnValue) == 0x000028, "Member 'HorizontalTabList_C_UpdateTabStyles::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HorizontalTabList_C_UpdateTabStyles, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000040, "Member 'HorizontalTabList_C_UpdateTabStyles::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

}

