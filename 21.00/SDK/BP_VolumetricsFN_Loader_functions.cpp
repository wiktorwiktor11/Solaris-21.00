#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VolumetricsFN_Loader

#include "Basic.hpp"

#include "BP_VolumetricsFN_Loader_classes.hpp"
#include "BP_VolumetricsFN_Loader_parameters.hpp"


namespace SDK
{

// Function BP_VolumetricsFN_Loader.BP_VolumetricsFN_Loader_C.ExecuteUbergraph_BP_VolumetricsFN_Loader
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VolumetricsFN_Loader_C::ExecuteUbergraph_BP_VolumetricsFN_Loader(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VolumetricsFN_Loader_C", "ExecuteUbergraph_BP_VolumetricsFN_Loader");

	Params::BP_VolumetricsFN_Loader_C_ExecuteUbergraph_BP_VolumetricsFN_Loader Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VolumetricsFN_Loader.BP_VolumetricsFN_Loader_C.initVolumetricsFromCvar
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VolumetricsFN_Loader_C::initVolumetricsFromCvar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VolumetricsFN_Loader_C", "initVolumetricsFromCvar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VolumetricsFN_Loader.BP_VolumetricsFN_Loader_C.OnDataDrivenCVarDelegate_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CVarName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_VolumetricsFN_Loader_C::OnDataDrivenCVarDelegate_Event_0(const class FString& CVarName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VolumetricsFN_Loader_C", "OnDataDrivenCVarDelegate_Event_0");

	Params::BP_VolumetricsFN_Loader_C_OnDataDrivenCVarDelegate_Event_0 Parms{};

	Parms.CVarName = std::move(CVarName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VolumetricsFN_Loader.BP_VolumetricsFN_Loader_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_VolumetricsFN_Loader_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VolumetricsFN_Loader_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VolumetricsFN_Loader.BP_VolumetricsFN_Loader_C.ToggleStormMeshVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VolumetricsFN_Loader_C::ToggleStormMeshVisibility(bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VolumetricsFN_Loader_C", "ToggleStormMeshVisibility");

	Params::BP_VolumetricsFN_Loader_C_ToggleStormMeshVisibility Parms{};

	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VolumetricsFN_Loader.BP_VolumetricsFN_Loader_C.ValidateVolumetricsFromQuality
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Quality                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VolumetricsFN_Loader_C::ValidateVolumetricsFromQuality(int32 Quality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VolumetricsFN_Loader_C", "ValidateVolumetricsFromQuality");

	Params::BP_VolumetricsFN_Loader_C_ValidateVolumetricsFromQuality Parms{};

	Parms.Quality = Quality;

	UObject::ProcessEvent(Func, &Parms);
}

}

