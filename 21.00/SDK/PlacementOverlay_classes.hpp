#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlacementOverlay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlacementOverlay.PlacementOverlay_C
// 0x00B8 (0x03F8 - 0x0340)
class UPlacementOverlay_C final : public UPostGamePlacementOverlay
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewItem_FadeIn;                                    // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NewItem_FadeOut;                                   // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       XPScreenLayout;                                    // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlacementIntro;                                    // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Victory_v2_b2;                                     // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SpinningSpikeball;                                 // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Victory_v2_b;                                      // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Victory_v2;                                        // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            CommonWidgetSwitcher_winanim;                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LosingOverlay;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayVictoryText;                                // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_Royale;                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_RoyaleShadow;                        // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_Victory;                             // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_VictoryShadow;                       // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStoreAlertToast_C*                     StoreAlertToast;                                   // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Draw;                                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Placement;                                    // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TieOverlay;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        TopSwitcher;                                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               VictoryOverlay;                                    // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         AnimationDelay;                                    // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DEVTestLocSpace;                                   // 0x03F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isXPLayout;                                        // 0x03F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void EventXPLayout(class FName Placement);
	void ExecuteUbergraph_PlacementOverlay(int32 EntryPoint);
	void New_Item_Anim_End();
	void New_Item_Anim_Start();
	void PreConstruct(bool IsDesignTime);
	void ShowLosingPlacement();
	void ShowTiePlacement();
	void ShowWinningPlacement();
	void XP_Layout_Anim_Finished();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlacementOverlay_C">();
	}
	static class UPlacementOverlay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlacementOverlay_C>();
	}
};
static_assert(alignof(UPlacementOverlay_C) == 0x000008, "Wrong alignment on UPlacementOverlay_C");
static_assert(sizeof(UPlacementOverlay_C) == 0x0003F8, "Wrong size on UPlacementOverlay_C");
static_assert(offsetof(UPlacementOverlay_C, UberGraphFrame) == 0x000340, "Member 'UPlacementOverlay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, NewItem_FadeIn) == 0x000348, "Member 'UPlacementOverlay_C::NewItem_FadeIn' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, NewItem_FadeOut) == 0x000350, "Member 'UPlacementOverlay_C::NewItem_FadeOut' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, XPScreenLayout) == 0x000358, "Member 'UPlacementOverlay_C::XPScreenLayout' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, PlacementIntro) == 0x000360, "Member 'UPlacementOverlay_C::PlacementIntro' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, Victory_v2_b2) == 0x000368, "Member 'UPlacementOverlay_C::Victory_v2_b2' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, SpinningSpikeball) == 0x000370, "Member 'UPlacementOverlay_C::SpinningSpikeball' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, Victory_v2_b) == 0x000378, "Member 'UPlacementOverlay_C::Victory_v2_b' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, Victory_v2) == 0x000380, "Member 'UPlacementOverlay_C::Victory_v2' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, CommonWidgetSwitcher_winanim) == 0x000388, "Member 'UPlacementOverlay_C::CommonWidgetSwitcher_winanim' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, LosingOverlay) == 0x000390, "Member 'UPlacementOverlay_C::LosingOverlay' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, OverlayVictoryText) == 0x000398, "Member 'UPlacementOverlay_C::OverlayVictoryText' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, RichTextBlock_Royale) == 0x0003A0, "Member 'UPlacementOverlay_C::RichTextBlock_Royale' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, RichTextBlock_RoyaleShadow) == 0x0003A8, "Member 'UPlacementOverlay_C::RichTextBlock_RoyaleShadow' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, RichTextBlock_Victory) == 0x0003B0, "Member 'UPlacementOverlay_C::RichTextBlock_Victory' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, RichTextBlock_VictoryShadow) == 0x0003B8, "Member 'UPlacementOverlay_C::RichTextBlock_VictoryShadow' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, StoreAlertToast) == 0x0003C0, "Member 'UPlacementOverlay_C::StoreAlertToast' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, Text_Draw) == 0x0003C8, "Member 'UPlacementOverlay_C::Text_Draw' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, Text_Placement) == 0x0003D0, "Member 'UPlacementOverlay_C::Text_Placement' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, TieOverlay) == 0x0003D8, "Member 'UPlacementOverlay_C::TieOverlay' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, TopSwitcher) == 0x0003E0, "Member 'UPlacementOverlay_C::TopSwitcher' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, VictoryOverlay) == 0x0003E8, "Member 'UPlacementOverlay_C::VictoryOverlay' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, AnimationDelay) == 0x0003F0, "Member 'UPlacementOverlay_C::AnimationDelay' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, DEVTestLocSpace) == 0x0003F4, "Member 'UPlacementOverlay_C::DEVTestLocSpace' has a wrong offset!");
static_assert(offsetof(UPlacementOverlay_C, isXPLayout) == 0x0003F5, "Member 'UPlacementOverlay_C::isXPLayout' has a wrong offset!");

}

