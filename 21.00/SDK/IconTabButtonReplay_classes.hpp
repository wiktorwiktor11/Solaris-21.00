#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IconTabButtonReplay

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUILegacy_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass IconTabButtonReplay.IconTabButtonReplay_C
// 0x0190 (0x11C0 - 0x1030)
class UIconTabButtonReplay_C final : public UCommonButtonLegacy
{
public:
	uint8                                         Pad_1028[0x8];                                     // 0x1028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNormalBangWrapper_C*                   BangWrapper;                                       // 0x1038(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CenterButtonTextWidget;                            // 0x1040(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ContentHB;                                         // 0x1048(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DisabledImage;                                     // 0x1050(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftSideImage;                                     // 0x1058(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxShell;                                      // 0x1060(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ButtonText;                                        // 0x1068(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateBrush                            IconBrush;                                         // 0x1080(0x00C0)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          UseText;                                           // 0x1140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1141[0x3];                                     // 0x1141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SelectedIconTint;                                  // 0x1144(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DeselectedIconTint;                                // 0x1154(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredIconTint;                                   // 0x1164(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DisabledIconTint;                                  // 0x1174(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBangEnabled;                                      // 0x1184(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeIconColorWhenSelected;                       // 0x1185(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1186[0x2];                                     // 0x1186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            SelectedIconColor;                                 // 0x1188(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            UnSelectedIconColor;                               // 0x119C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             CameraButtonHoverSound;                            // 0x11B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CameraButtonSelectSound;                           // 0x11B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnDeselected();
	void BP_OnDisabled();
	void BP_OnEnabled();
	void BP_OnHovered();
	void BP_OnSelected();
	void BP_OnUnhovered();
	void Construct();
	void ExecuteUbergraph_IconTabButtonReplay(int32 EntryPoint);
	void OnCurrentTextStyleChanged();
	void PreConstruct(bool IsDesignTime);
	void Set_Icon(const struct FSlateBrush& IconBrush_0);
	void Set_Text(const class FText& ButtonText_0);
	void SetChangeIconColorWhenSelected(bool ChangeColorWhenSelected, const struct FSlateColor& SelectedColor, const struct FSlateColor& UnselectedColor);
	void SetTabLabelInfo(const struct FFortTabButtonLabelInfo& TabLabelInfo);
	void SetTutorialBorderStyle(class UClass* BorderStyle);
	void ShowText();
	void Update_Bang_State(bool bBangEnabled_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IconTabButtonReplay_C">();
	}
	static class UIconTabButtonReplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIconTabButtonReplay_C>();
	}
};
static_assert(alignof(UIconTabButtonReplay_C) == 0x000010, "Wrong alignment on UIconTabButtonReplay_C");
static_assert(sizeof(UIconTabButtonReplay_C) == 0x0011C0, "Wrong size on UIconTabButtonReplay_C");
static_assert(offsetof(UIconTabButtonReplay_C, UberGraphFrame) == 0x001030, "Member 'UIconTabButtonReplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, BangWrapper) == 0x001038, "Member 'UIconTabButtonReplay_C::BangWrapper' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, CenterButtonTextWidget) == 0x001040, "Member 'UIconTabButtonReplay_C::CenterButtonTextWidget' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, ContentHB) == 0x001048, "Member 'UIconTabButtonReplay_C::ContentHB' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, DisabledImage) == 0x001050, "Member 'UIconTabButtonReplay_C::DisabledImage' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, LeftSideImage) == 0x001058, "Member 'UIconTabButtonReplay_C::LeftSideImage' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, SizeBoxShell) == 0x001060, "Member 'UIconTabButtonReplay_C::SizeBoxShell' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, ButtonText) == 0x001068, "Member 'UIconTabButtonReplay_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, IconBrush) == 0x001080, "Member 'UIconTabButtonReplay_C::IconBrush' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, UseText) == 0x001140, "Member 'UIconTabButtonReplay_C::UseText' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, SelectedIconTint) == 0x001144, "Member 'UIconTabButtonReplay_C::SelectedIconTint' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, DeselectedIconTint) == 0x001154, "Member 'UIconTabButtonReplay_C::DeselectedIconTint' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, HoveredIconTint) == 0x001164, "Member 'UIconTabButtonReplay_C::HoveredIconTint' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, DisabledIconTint) == 0x001174, "Member 'UIconTabButtonReplay_C::DisabledIconTint' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, bBangEnabled) == 0x001184, "Member 'UIconTabButtonReplay_C::bBangEnabled' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, ChangeIconColorWhenSelected) == 0x001185, "Member 'UIconTabButtonReplay_C::ChangeIconColorWhenSelected' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, SelectedIconColor) == 0x001188, "Member 'UIconTabButtonReplay_C::SelectedIconColor' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, UnSelectedIconColor) == 0x00119C, "Member 'UIconTabButtonReplay_C::UnSelectedIconColor' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, CameraButtonHoverSound) == 0x0011B0, "Member 'UIconTabButtonReplay_C::CameraButtonHoverSound' has a wrong offset!");
static_assert(offsetof(UIconTabButtonReplay_C, CameraButtonSelectSound) == 0x0011B8, "Member 'UIconTabButtonReplay_C::CameraButtonSelectSound' has a wrong offset!");

}

