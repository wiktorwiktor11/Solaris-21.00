#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KillerInfoWeaponWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass KillerInfoWeaponWidget.KillerInfoWeaponWidget_C
// 0x0048 (0x0300 - 0x02B8)
class UKillerInfoWeaponWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_84;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_IconShadow;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ItemBG;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageTriangleL;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageTriangleR;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_WeaponName;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_WeaponRarity;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Colorize(EFortRarity Rarity);
	void ExecuteUbergraph_KillerInfoWeaponWidget(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Set_Icon_And_Name(class UTexture2D* Weapon_Icon, class UFortWeaponItemDefinition* WID);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"KillerInfoWeaponWidget_C">();
	}
	static class UKillerInfoWeaponWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKillerInfoWeaponWidget_C>();
	}
};
static_assert(alignof(UKillerInfoWeaponWidget_C) == 0x000008, "Wrong alignment on UKillerInfoWeaponWidget_C");
static_assert(sizeof(UKillerInfoWeaponWidget_C) == 0x000300, "Wrong size on UKillerInfoWeaponWidget_C");
static_assert(offsetof(UKillerInfoWeaponWidget_C, UberGraphFrame) == 0x0002B8, "Member 'UKillerInfoWeaponWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UKillerInfoWeaponWidget_C, Image_84) == 0x0002C0, "Member 'UKillerInfoWeaponWidget_C::Image_84' has a wrong offset!");
static_assert(offsetof(UKillerInfoWeaponWidget_C, Image_Icon) == 0x0002C8, "Member 'UKillerInfoWeaponWidget_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UKillerInfoWeaponWidget_C, Image_IconShadow) == 0x0002D0, "Member 'UKillerInfoWeaponWidget_C::Image_IconShadow' has a wrong offset!");
static_assert(offsetof(UKillerInfoWeaponWidget_C, Image_ItemBG) == 0x0002D8, "Member 'UKillerInfoWeaponWidget_C::Image_ItemBG' has a wrong offset!");
static_assert(offsetof(UKillerInfoWeaponWidget_C, ImageTriangleL) == 0x0002E0, "Member 'UKillerInfoWeaponWidget_C::ImageTriangleL' has a wrong offset!");
static_assert(offsetof(UKillerInfoWeaponWidget_C, ImageTriangleR) == 0x0002E8, "Member 'UKillerInfoWeaponWidget_C::ImageTriangleR' has a wrong offset!");
static_assert(offsetof(UKillerInfoWeaponWidget_C, Text_WeaponName) == 0x0002F0, "Member 'UKillerInfoWeaponWidget_C::Text_WeaponName' has a wrong offset!");
static_assert(offsetof(UKillerInfoWeaponWidget_C, Text_WeaponRarity) == 0x0002F8, "Member 'UKillerInfoWeaponWidget_C::Text_WeaponRarity' has a wrong offset!");

}

