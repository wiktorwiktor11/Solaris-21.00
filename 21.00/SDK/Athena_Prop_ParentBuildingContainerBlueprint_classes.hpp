#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_Prop_ParentBuildingContainerBlueprint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "DayPhaseFloats_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Athena_Prop_ParentBuildingContainerBlueprint.Athena_Prop_ParentBuildingContainerBlueprint_C
// 0x00E8 (0x0F58 - 0x0E70)
class AAthena_Prop_ParentBuildingContainerBlueprint_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          DebugWind;                                         // 0x0E78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E79[0x7];                                      // 0x0E79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             IntenseWindMaterialsForPreview;                    // 0x0E80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UStaticMeshComponent*                   Wind_Intensity_Debug_Mesh;                         // 0x0E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             OriginalMaterials;                                 // 0x0E98(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               Debug_TempMaterial;                                // 0x0EA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugWindYaw;                                      // 0x0EB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Debug_Wind_Intensity;                              // 0x0EB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_Max_Actor_Scale;                               // 0x0EB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB9[0x3];                                      // 0x0EB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Max_Scale;                                         // 0x0EBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Disable_TOD_Lights_and_Material_Emissive_Values;   // 0x0EC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Disable_Static_Mesh_Shadow_Casting_When_Lights_Are_Active; // 0x0EC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_An_Alternate_Shadow_Mesh_When_The_Light_is_On_; // 0x0EC2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC3[0x5];                                      // 0x0EC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            AlternateShadowStaticMesh;                         // 0x0EC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Animate_Emissive_and_Lights_Over_Time;             // 0x0ED0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED1[0x7];                                      // 0x0ED1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   CodeControlled_EmissiveColor;                      // 0x0ED8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 CodeControlled_LightConeOpacity;                   // 0x0EE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDayPhaseFloats                        Light_Intensity_Over_Time_of_Day_;                 // 0x0EF8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Day_Phase_Transition_Length;                       // 0x0F08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDayPhaseFloats                        Emissive_Intensity_Over_Time_of_Day;               // 0x0F0C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volumetric_Light_Scattering_Intensity;             // 0x0F1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Volumetric_Shadows;                           // 0x0F20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Animate_Lights_With_A_Curve___Disables_time_of_day_light_controls; // 0x0F21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Animate_Mesh_MID_Emissive_Value_with_a_Curve___Disables_time_of_day_light_controls; // 0x0F22(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F23[0x5];                                      // 0x0F23(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            LightAnimationCurve;                               // 0x0F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CodeControlled_Animation_Curve_Animation_Length;   // 0x0F30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CodeControlled_NumberOfMaterials;                  // 0x0F34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 NewVar_0;                                          // 0x0F38(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Random_Time_Scale_Percent;                         // 0x0F48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CodeControlled_CurrentPlayLength;                  // 0x0F4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Snow_Coverage_Amount;                              // 0x0F50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Athena_Prop_ParentBuildingContainerBlueprint(int32 EntryPoint);
	void GetTimeOfDayBlueprintDefaultVariables(struct FTimeOfDayBlueprintDefaultVariables* OutVariables);
	void Loop_Animation_Curve();
	void OnBounceAnimationUpdate(const struct FFortBounceData& Data);
	void OnDayPhaseChanged(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void OnSetSearched();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Athena_Prop_ParentBuildingContainerBlueprint_C">();
	}
	static class AAthena_Prop_ParentBuildingContainerBlueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthena_Prop_ParentBuildingContainerBlueprint_C>();
	}
};
static_assert(alignof(AAthena_Prop_ParentBuildingContainerBlueprint_C) == 0x000008, "Wrong alignment on AAthena_Prop_ParentBuildingContainerBlueprint_C");
static_assert(sizeof(AAthena_Prop_ParentBuildingContainerBlueprint_C) == 0x000F58, "Wrong size on AAthena_Prop_ParentBuildingContainerBlueprint_C");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, UberGraphFrame) == 0x000E70, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, DebugWind) == 0x000E78, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::DebugWind' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, IntenseWindMaterialsForPreview) == 0x000E80, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::IntenseWindMaterialsForPreview' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Wind_Intensity_Debug_Mesh) == 0x000E90, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Wind_Intensity_Debug_Mesh' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, OriginalMaterials) == 0x000E98, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::OriginalMaterials' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Debug_TempMaterial) == 0x000EA8, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Debug_TempMaterial' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, DebugWindYaw) == 0x000EB0, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::DebugWindYaw' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Debug_Wind_Intensity) == 0x000EB4, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Debug_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Set_Max_Actor_Scale) == 0x000EB8, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Set_Max_Actor_Scale' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Max_Scale) == 0x000EBC, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Max_Scale' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Disable_TOD_Lights_and_Material_Emissive_Values) == 0x000EC0, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Disable_TOD_Lights_and_Material_Emissive_Values' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Disable_Static_Mesh_Shadow_Casting_When_Lights_Are_Active) == 0x000EC1, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Disable_Static_Mesh_Shadow_Casting_When_Lights_Are_Active' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Use_An_Alternate_Shadow_Mesh_When_The_Light_is_On_) == 0x000EC2, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Use_An_Alternate_Shadow_Mesh_When_The_Light_is_On_' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, AlternateShadowStaticMesh) == 0x000EC8, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::AlternateShadowStaticMesh' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Animate_Emissive_and_Lights_Over_Time) == 0x000ED0, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Animate_Emissive_and_Lights_Over_Time' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, CodeControlled_EmissiveColor) == 0x000ED8, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::CodeControlled_EmissiveColor' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, CodeControlled_LightConeOpacity) == 0x000EE8, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::CodeControlled_LightConeOpacity' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Light_Intensity_Over_Time_of_Day_) == 0x000EF8, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Light_Intensity_Over_Time_of_Day_' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Day_Phase_Transition_Length) == 0x000F08, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Day_Phase_Transition_Length' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Emissive_Intensity_Over_Time_of_Day) == 0x000F0C, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Emissive_Intensity_Over_Time_of_Day' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Volumetric_Light_Scattering_Intensity) == 0x000F1C, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Volumetric_Light_Scattering_Intensity' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Cast_Volumetric_Shadows) == 0x000F20, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Cast_Volumetric_Shadows' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Animate_Lights_With_A_Curve___Disables_time_of_day_light_controls) == 0x000F21, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Animate_Lights_With_A_Curve___Disables_time_of_day_light_controls' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Animate_Mesh_MID_Emissive_Value_with_a_Curve___Disables_time_of_day_light_controls) == 0x000F22, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Animate_Mesh_MID_Emissive_Value_with_a_Curve___Disables_time_of_day_light_controls' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, LightAnimationCurve) == 0x000F28, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::LightAnimationCurve' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, CodeControlled_Animation_Curve_Animation_Length) == 0x000F30, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::CodeControlled_Animation_Curve_Animation_Length' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, CodeControlled_NumberOfMaterials) == 0x000F34, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::CodeControlled_NumberOfMaterials' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, NewVar_0) == 0x000F38, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Random_Time_Scale_Percent) == 0x000F48, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Random_Time_Scale_Percent' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, CodeControlled_CurrentPlayLength) == 0x000F4C, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::CodeControlled_CurrentPlayLength' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_ParentBuildingContainerBlueprint_C, Snow_Coverage_Amount) == 0x000F50, "Member 'AAthena_Prop_ParentBuildingContainerBlueprint_C::Snow_Coverage_Amount' has a wrong offset!");

}

