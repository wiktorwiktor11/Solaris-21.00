#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CorruptionGameplayCodeUI

#include "Basic.hpp"


namespace SDK::Params
{

// Function CorruptionGameplayCodeUI.FortPowerupReticleExtensionWidget.GetCurrentOverheatPercent
// 0x0004 (0x0004 - 0x0000)
struct FortPowerupReticleExtensionWidget_GetCurrentOverheatPercent final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPowerupReticleExtensionWidget_GetCurrentOverheatPercent) == 0x000004, "Wrong alignment on FortPowerupReticleExtensionWidget_GetCurrentOverheatPercent");
static_assert(sizeof(FortPowerupReticleExtensionWidget_GetCurrentOverheatPercent) == 0x000004, "Wrong size on FortPowerupReticleExtensionWidget_GetCurrentOverheatPercent");
static_assert(offsetof(FortPowerupReticleExtensionWidget_GetCurrentOverheatPercent, ReturnValue) == 0x000000, "Member 'FortPowerupReticleExtensionWidget_GetCurrentOverheatPercent::ReturnValue' has a wrong offset!");

// Function CorruptionGameplayCodeUI.FortPowerupReticleExtensionWidget.GetCurrentOverheatValue
// 0x0004 (0x0004 - 0x0000)
struct FortPowerupReticleExtensionWidget_GetCurrentOverheatValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPowerupReticleExtensionWidget_GetCurrentOverheatValue) == 0x000004, "Wrong alignment on FortPowerupReticleExtensionWidget_GetCurrentOverheatValue");
static_assert(sizeof(FortPowerupReticleExtensionWidget_GetCurrentOverheatValue) == 0x000004, "Wrong size on FortPowerupReticleExtensionWidget_GetCurrentOverheatValue");
static_assert(offsetof(FortPowerupReticleExtensionWidget_GetCurrentOverheatValue, ReturnValue) == 0x000000, "Member 'FortPowerupReticleExtensionWidget_GetCurrentOverheatValue::ReturnValue' has a wrong offset!");

// Function CorruptionGameplayCodeUI.FortPowerupReticleExtensionWidget.GetOverheatingMaxValue
// 0x0004 (0x0004 - 0x0000)
struct FortPowerupReticleExtensionWidget_GetOverheatingMaxValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPowerupReticleExtensionWidget_GetOverheatingMaxValue) == 0x000004, "Wrong alignment on FortPowerupReticleExtensionWidget_GetOverheatingMaxValue");
static_assert(sizeof(FortPowerupReticleExtensionWidget_GetOverheatingMaxValue) == 0x000004, "Wrong size on FortPowerupReticleExtensionWidget_GetOverheatingMaxValue");
static_assert(offsetof(FortPowerupReticleExtensionWidget_GetOverheatingMaxValue, ReturnValue) == 0x000000, "Member 'FortPowerupReticleExtensionWidget_GetOverheatingMaxValue::ReturnValue' has a wrong offset!");

}

