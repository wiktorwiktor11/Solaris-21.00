#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZP_Underwater_Ripples

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ZP_Underwater_Ripples.BP_ZP_Underwater_Ripples_C
// 0x0068 (0x02D8 - 0x0270)
class ABP_ZP_Underwater_Ripples_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_ZP_Ripple_12;                                   // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_11;                                   // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_10;                                   // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_09;                                   // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_08;                                   // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_07;                                   // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_06;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_05;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_04;                                   // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_03;                                   // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_02;                                   // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ZP_Ripple_01;                                   // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ZP_Underwater_Ripples_C">();
	}
	static class ABP_ZP_Underwater_Ripples_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ZP_Underwater_Ripples_C>();
	}
};
static_assert(alignof(ABP_ZP_Underwater_Ripples_C) == 0x000008, "Wrong alignment on ABP_ZP_Underwater_Ripples_C");
static_assert(sizeof(ABP_ZP_Underwater_Ripples_C) == 0x0002D8, "Wrong size on ABP_ZP_Underwater_Ripples_C");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_12) == 0x000270, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_12' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_11) == 0x000278, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_11' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_10) == 0x000280, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_10' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_09) == 0x000288, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_09' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_08) == 0x000290, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_08' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_07) == 0x000298, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_07' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_06) == 0x0002A0, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_06' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_05) == 0x0002A8, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_05' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_04) == 0x0002B0, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_04' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_03) == 0x0002B8, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_03' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_02) == 0x0002C0, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_02' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, SM_ZP_Ripple_01) == 0x0002C8, "Member 'ABP_ZP_Underwater_Ripples_C::SM_ZP_Ripple_01' has a wrong offset!");
static_assert(offsetof(ABP_ZP_Underwater_Ripples_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABP_ZP_Underwater_Ripples_C::DefaultSceneRoot' has a wrong offset!");

}

