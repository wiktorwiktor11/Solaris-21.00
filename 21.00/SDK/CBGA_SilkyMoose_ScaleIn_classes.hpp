#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CBGA_SilkyMoose_ScaleIn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CBGA_SilkyMoose_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CBGA_SilkyMoose_ScaleIn.CBGA_SilkyMoose_ScaleIn_C
// 0x0030 (0x0D00 - 0x0CD0)
class ACBGA_SilkyMoose_ScaleIn_C final : public ACBGA_SilkyMoose_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_CBGA_SilkyMoose_ScaleIn_C;          // 0x0CC8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         LerpTimerInterval;                                 // 0x0CD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD4[0x4];                                      // 0x0CD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LerpTimerHandle;                                   // 0x0CD8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Cur_Min_World_Scale;                               // 0x0CE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cur_Max_World_Scale;                               // 0x0CE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Curr_World_Scale;                                  // 0x0CE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale_Interp_Speed;                                // 0x0CEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasReachedDestScale;                               // 0x0CF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF1[0x3];                                      // 0x0CF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Start_World_Scale;                                 // 0x0CF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dest_World_Scale;                                  // 0x0CF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScaleOutAndDie;                                    // 0x0CFC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CBGA_SilkyMoose_ScaleIn(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Scale_Out_and_Die();
	void Set_Weed_Scale(float SizeAlpha);
	void UpdateLerpToDest();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CBGA_SilkyMoose_ScaleIn_C">();
	}
	static class ACBGA_SilkyMoose_ScaleIn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACBGA_SilkyMoose_ScaleIn_C>();
	}
};
static_assert(alignof(ACBGA_SilkyMoose_ScaleIn_C) == 0x000010, "Wrong alignment on ACBGA_SilkyMoose_ScaleIn_C");
static_assert(sizeof(ACBGA_SilkyMoose_ScaleIn_C) == 0x000D00, "Wrong size on ACBGA_SilkyMoose_ScaleIn_C");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, UberGraphFrame_CBGA_SilkyMoose_ScaleIn_C) == 0x000CC8, "Member 'ACBGA_SilkyMoose_ScaleIn_C::UberGraphFrame_CBGA_SilkyMoose_ScaleIn_C' has a wrong offset!");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, LerpTimerInterval) == 0x000CD0, "Member 'ACBGA_SilkyMoose_ScaleIn_C::LerpTimerInterval' has a wrong offset!");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, LerpTimerHandle) == 0x000CD8, "Member 'ACBGA_SilkyMoose_ScaleIn_C::LerpTimerHandle' has a wrong offset!");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, Cur_Min_World_Scale) == 0x000CE0, "Member 'ACBGA_SilkyMoose_ScaleIn_C::Cur_Min_World_Scale' has a wrong offset!");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, Cur_Max_World_Scale) == 0x000CE4, "Member 'ACBGA_SilkyMoose_ScaleIn_C::Cur_Max_World_Scale' has a wrong offset!");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, Curr_World_Scale) == 0x000CE8, "Member 'ACBGA_SilkyMoose_ScaleIn_C::Curr_World_Scale' has a wrong offset!");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, Scale_Interp_Speed) == 0x000CEC, "Member 'ACBGA_SilkyMoose_ScaleIn_C::Scale_Interp_Speed' has a wrong offset!");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, HasReachedDestScale) == 0x000CF0, "Member 'ACBGA_SilkyMoose_ScaleIn_C::HasReachedDestScale' has a wrong offset!");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, Start_World_Scale) == 0x000CF4, "Member 'ACBGA_SilkyMoose_ScaleIn_C::Start_World_Scale' has a wrong offset!");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, Dest_World_Scale) == 0x000CF8, "Member 'ACBGA_SilkyMoose_ScaleIn_C::Dest_World_Scale' has a wrong offset!");
static_assert(offsetof(ACBGA_SilkyMoose_ScaleIn_C, ScaleOutAndDie) == 0x000CFC, "Member 'ACBGA_SilkyMoose_ScaleIn_C::ScaleOutAndDie' has a wrong offset!");

}

