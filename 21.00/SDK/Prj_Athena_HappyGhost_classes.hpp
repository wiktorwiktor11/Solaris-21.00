#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prj_Athena_HappyGhost

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C
// 0x0198 (0x0CB0 - 0x0B18)
class APrj_Athena_HappyGhost_C final : public AFortAttachableProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B18(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Athena_HappyGhost_Wire_C*            Rope;                                              // 0x0B38(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        FortPawn;                                          // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_HappyGhost_Athena_C*                 WeaponActor;                                       // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReelinPlayRate;                                    // 0x0B50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_ProjSpawned;                                 // 0x0B54(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_SpawnItems;                                     // 0x0B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_SpawnItems;                                  // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnItemsTraceOffset;                             // 0x0B68(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             WaterHit;                                          // 0x0B80(0x00E0)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UParticleSystem*                        WaterImpactFX;                                     // 0x0C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      WaterHitMat;                                       // 0x0C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitFishReelInRate;                                 // 0x0C70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ItemSpawnDelay;                                    // 0x0C74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Hit_Fish_Sound;                                    // 0x0C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ItemAttachMinDist;                                 // 0x0C80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ItemAttachDistanceRequirement;                     // 0x0C84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_Vehicle;                                        // 0x0C88(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         HitReelInRate;                                     // 0x0CA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CustomPickupAttach(class AFortPickup* FortPickup);
	void ExecuteUbergraph_Prj_Athena_HappyGhost(int32 EntryPoint);
	void HandleCost();
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void SendQuestEvent(class AActor* Hit_Actor);
	void SpawnItemsFX();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Prj_Athena_HappyGhost_C">();
	}
	static class APrj_Athena_HappyGhost_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APrj_Athena_HappyGhost_C>();
	}
};
static_assert(alignof(APrj_Athena_HappyGhost_C) == 0x000008, "Wrong alignment on APrj_Athena_HappyGhost_C");
static_assert(sizeof(APrj_Athena_HappyGhost_C) == 0x000CB0, "Wrong size on APrj_Athena_HappyGhost_C");
static_assert(offsetof(APrj_Athena_HappyGhost_C, UberGraphFrame) == 0x000B18, "Member 'APrj_Athena_HappyGhost_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, ParticleSystem) == 0x000B20, "Member 'APrj_Athena_HappyGhost_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, StaticMesh) == 0x000B28, "Member 'APrj_Athena_HappyGhost_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, PlayerPawn) == 0x000B30, "Member 'APrj_Athena_HappyGhost_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, Rope) == 0x000B38, "Member 'APrj_Athena_HappyGhost_C::Rope' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, FortPawn) == 0x000B40, "Member 'APrj_Athena_HappyGhost_C::FortPawn' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, WeaponActor) == 0x000B48, "Member 'APrj_Athena_HappyGhost_C::WeaponActor' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, ReelinPlayRate) == 0x000B50, "Member 'APrj_Athena_HappyGhost_C::ReelinPlayRate' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, Event_ProjSpawned) == 0x000B54, "Member 'APrj_Athena_HappyGhost_C::Event_ProjSpawned' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, FX_SpawnItems) == 0x000B58, "Member 'APrj_Athena_HappyGhost_C::FX_SpawnItems' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, Sound_SpawnItems) == 0x000B60, "Member 'APrj_Athena_HappyGhost_C::Sound_SpawnItems' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, SpawnItemsTraceOffset) == 0x000B68, "Member 'APrj_Athena_HappyGhost_C::SpawnItemsTraceOffset' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, WaterHit) == 0x000B80, "Member 'APrj_Athena_HappyGhost_C::WaterHit' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, WaterImpactFX) == 0x000C60, "Member 'APrj_Athena_HappyGhost_C::WaterImpactFX' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, WaterHitMat) == 0x000C68, "Member 'APrj_Athena_HappyGhost_C::WaterHitMat' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, HitFishReelInRate) == 0x000C70, "Member 'APrj_Athena_HappyGhost_C::HitFishReelInRate' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, ItemSpawnDelay) == 0x000C74, "Member 'APrj_Athena_HappyGhost_C::ItemSpawnDelay' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, Hit_Fish_Sound) == 0x000C78, "Member 'APrj_Athena_HappyGhost_C::Hit_Fish_Sound' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, ItemAttachMinDist) == 0x000C80, "Member 'APrj_Athena_HappyGhost_C::ItemAttachMinDist' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, ItemAttachDistanceRequirement) == 0x000C84, "Member 'APrj_Athena_HappyGhost_C::ItemAttachDistanceRequirement' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, TC_Vehicle) == 0x000C88, "Member 'APrj_Athena_HappyGhost_C::TC_Vehicle' has a wrong offset!");
static_assert(offsetof(APrj_Athena_HappyGhost_C, HitReelInRate) == 0x000CA8, "Member 'APrj_Athena_HappyGhost_C::HitReelInRate' has a wrong offset!");

}

