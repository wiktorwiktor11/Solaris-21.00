#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaultRotator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass VaultRotator.VaultRotator_C
// 0x0178 (0x0520 - 0x03A8)
class AVaultRotator_C final : public AItemPreviewRotator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDirectionalLightComponent*             DirectionalLightMobile;                            // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             DirectionalLight_LOWPC;                            // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DirectionalLights;                                 // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLightLowMobile;                                 // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLight;                                          // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLight_LOWPC;                                    // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess_Mobile;                                // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess_LOWPC;                                 // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        GenericLighting;                                   // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Zoom_ZoomLevel_6FFD6729471BD965D850258DA1C0AF39; // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_Zoom__Direction_6FFD6729471BD965D850258DA1C0AF39; // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405[0x3];                                      // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_Zoom;                                     // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraTurn_180_to_360_CameraRotationOffset_DF51680448A0BDB5D459C9BB5786D714; // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraTurn_180_to_360_CameraPositionOffset_DF51680448A0BDB5D459C9BB5786D714; // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraTurn_180_to_360_DirectionRotation_DF51680448A0BDB5D459C9BB5786D714; // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraTurn_180_to_360_FoV_DF51680448A0BDB5D459C9BB5786D714; // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CameraTurn_180_to_360__Direction_DF51680448A0BDB5D459C9BB5786D714; // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CameraTurn_180_to_360;                             // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraTurn_0_to_180_CameraRotationOffset_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0; // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraTurn_0_to_180_CameraPositionOffset_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0; // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraTurn_0_to_180_DirectionalRotation_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0; // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraTurn_0_to_180_FoV_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0; // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CameraTurn_0_to_180__Direction_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0; // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CameraTurn_0_to_180;                               // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             InitialCameraTransform;                            // 0x04A0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             ClockwiseSound;                                    // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CounterClockwiseSound;                             // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugMobile_Lighting;                              // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugLightingPC;                                   // 0x0511(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0512(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysOn;                                          // 0x0513(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugLighting_LOWDetailPC;                         // 0x0514(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetZoomLevel;                                   // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateSettings();
	void ToggleBackgroundText(bool bDisplayText);
	void Timeline_Zoom__UpdateFunc();
	void Timeline_Zoom__FinishedFunc();
	void SwitchPCLighting_LOWDetail(bool Visibility);
	void SwitchPCLighting(bool Visibility);
	void SwitchMobileLighting(bool Visibility);
	void SetBackgroundString(const class FText& CustomText);
	void SetBackgroundColor(const struct FLinearColor& RGBA0, const struct FLinearColor& RGBA1);
	void ReceiveBeginPlay();
	void PlaySoundWhenEnabled(class USoundBase* sound);
	void OnUpdateBackgroundColor(bool bEnableAutotestBackground);
	void OnTargetZoomLevelSet(float TargetZoomLevel_0);
	void OnSetBackgroundMessageText(const class FText& BackgroundMessageText);
	void OnCameraTransitionReady(bool bPrimaryToSecondary, const class UFortAccountItemDefinition* PrimaryRequestedItem, const struct FSceneTransitionOptions& Options);
	void LightControl(bool Active);
	void CameraTurn_0_to_180__UpdateFunc();
	void CameraTurn_0_to_180__FinishedFunc();
	void ExecuteUbergraph_VaultRotator(int32 EntryPoint);
	void CameraTurn_180_to_360__UpdateFunc();
	void CameraTurn_180_to_360__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VaultRotator_C">();
	}
	static class AVaultRotator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVaultRotator_C>();
	}
};
static_assert(alignof(AVaultRotator_C) == 0x000010, "Wrong alignment on AVaultRotator_C");
static_assert(sizeof(AVaultRotator_C) == 0x000520, "Wrong size on AVaultRotator_C");
static_assert(offsetof(AVaultRotator_C, UberGraphFrame) == 0x0003A8, "Member 'AVaultRotator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, DirectionalLightMobile) == 0x0003B0, "Member 'AVaultRotator_C::DirectionalLightMobile' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, DirectionalLight_LOWPC) == 0x0003B8, "Member 'AVaultRotator_C::DirectionalLight_LOWPC' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, DirectionalLights) == 0x0003C0, "Member 'AVaultRotator_C::DirectionalLights' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, SkyLightLowMobile) == 0x0003C8, "Member 'AVaultRotator_C::SkyLightLowMobile' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, SkyLight) == 0x0003D0, "Member 'AVaultRotator_C::SkyLight' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, SkyLight_LOWPC) == 0x0003D8, "Member 'AVaultRotator_C::SkyLight_LOWPC' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, Arrow) == 0x0003E0, "Member 'AVaultRotator_C::Arrow' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, PostProcess_Mobile) == 0x0003E8, "Member 'AVaultRotator_C::PostProcess_Mobile' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, PostProcess_LOWPC) == 0x0003F0, "Member 'AVaultRotator_C::PostProcess_LOWPC' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, GenericLighting) == 0x0003F8, "Member 'AVaultRotator_C::GenericLighting' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, Timeline_Zoom_ZoomLevel_6FFD6729471BD965D850258DA1C0AF39) == 0x000400, "Member 'AVaultRotator_C::Timeline_Zoom_ZoomLevel_6FFD6729471BD965D850258DA1C0AF39' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, Timeline_Zoom__Direction_6FFD6729471BD965D850258DA1C0AF39) == 0x000404, "Member 'AVaultRotator_C::Timeline_Zoom__Direction_6FFD6729471BD965D850258DA1C0AF39' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, Timeline_Zoom) == 0x000408, "Member 'AVaultRotator_C::Timeline_Zoom' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_180_to_360_CameraRotationOffset_DF51680448A0BDB5D459C9BB5786D714) == 0x000410, "Member 'AVaultRotator_C::CameraTurn_180_to_360_CameraRotationOffset_DF51680448A0BDB5D459C9BB5786D714' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_180_to_360_CameraPositionOffset_DF51680448A0BDB5D459C9BB5786D714) == 0x000428, "Member 'AVaultRotator_C::CameraTurn_180_to_360_CameraPositionOffset_DF51680448A0BDB5D459C9BB5786D714' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_180_to_360_DirectionRotation_DF51680448A0BDB5D459C9BB5786D714) == 0x000440, "Member 'AVaultRotator_C::CameraTurn_180_to_360_DirectionRotation_DF51680448A0BDB5D459C9BB5786D714' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_180_to_360_FoV_DF51680448A0BDB5D459C9BB5786D714) == 0x000444, "Member 'AVaultRotator_C::CameraTurn_180_to_360_FoV_DF51680448A0BDB5D459C9BB5786D714' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_180_to_360__Direction_DF51680448A0BDB5D459C9BB5786D714) == 0x000448, "Member 'AVaultRotator_C::CameraTurn_180_to_360__Direction_DF51680448A0BDB5D459C9BB5786D714' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_180_to_360) == 0x000450, "Member 'AVaultRotator_C::CameraTurn_180_to_360' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_0_to_180_CameraRotationOffset_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0) == 0x000458, "Member 'AVaultRotator_C::CameraTurn_0_to_180_CameraRotationOffset_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_0_to_180_CameraPositionOffset_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0) == 0x000470, "Member 'AVaultRotator_C::CameraTurn_0_to_180_CameraPositionOffset_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_0_to_180_DirectionalRotation_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0) == 0x000488, "Member 'AVaultRotator_C::CameraTurn_0_to_180_DirectionalRotation_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_0_to_180_FoV_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0) == 0x00048C, "Member 'AVaultRotator_C::CameraTurn_0_to_180_FoV_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_0_to_180__Direction_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0) == 0x000490, "Member 'AVaultRotator_C::CameraTurn_0_to_180__Direction_EEFFCB9D4EE2DC181BC00CBD7C0E7EF0' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CameraTurn_0_to_180) == 0x000498, "Member 'AVaultRotator_C::CameraTurn_0_to_180' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, InitialCameraTransform) == 0x0004A0, "Member 'AVaultRotator_C::InitialCameraTransform' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, ClockwiseSound) == 0x000500, "Member 'AVaultRotator_C::ClockwiseSound' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, CounterClockwiseSound) == 0x000508, "Member 'AVaultRotator_C::CounterClockwiseSound' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, DebugMobile_Lighting) == 0x000510, "Member 'AVaultRotator_C::DebugMobile_Lighting' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, DebugLightingPC) == 0x000511, "Member 'AVaultRotator_C::DebugLightingPC' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, IsActive) == 0x000512, "Member 'AVaultRotator_C::IsActive' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, AlwaysOn) == 0x000513, "Member 'AVaultRotator_C::AlwaysOn' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, DebugLighting_LOWDetailPC) == 0x000514, "Member 'AVaultRotator_C::DebugLighting_LOWDetailPC' has a wrong offset!");
static_assert(offsetof(AVaultRotator_C, TargetZoomLevel) == 0x000518, "Member 'AVaultRotator_C::TargetZoomLevel' has a wrong offset!");

}

