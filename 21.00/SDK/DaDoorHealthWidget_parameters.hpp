#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DaDoorHealthWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DaDoorHealthWidget.DaDoorHealthWidget_C.SetKeepVisibilityOn
// 0x0001 (0x0001 - 0x0000)
struct DaDoorHealthWidget_C_SetKeepVisibilityOn final
{
public:
	bool                                          KeepVisibilityOn_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DaDoorHealthWidget_C_SetKeepVisibilityOn) == 0x000001, "Wrong alignment on DaDoorHealthWidget_C_SetKeepVisibilityOn");
static_assert(sizeof(DaDoorHealthWidget_C_SetKeepVisibilityOn) == 0x000001, "Wrong size on DaDoorHealthWidget_C_SetKeepVisibilityOn");
static_assert(offsetof(DaDoorHealthWidget_C_SetKeepVisibilityOn, KeepVisibilityOn_0) == 0x000000, "Member 'DaDoorHealthWidget_C_SetKeepVisibilityOn::KeepVisibilityOn_0' has a wrong offset!");

// Function DaDoorHealthWidget.DaDoorHealthWidget_C.ExecuteUbergraph_DaDoorHealthWidget
// 0x0050 (0x0050 - 0x0000)
struct DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_health_1;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_shield;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowShield;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_StatusWidgetVisibleDuration;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_KeepVisibilityOn;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_health;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0038(0x0018)()
};
static_assert(alignof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget) == 0x000008, "Wrong alignment on DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget");
static_assert(sizeof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget) == 0x000050, "Wrong size on DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, EntryPoint) == 0x000000, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, K2Node_CustomEvent_health_1) == 0x000004, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::K2Node_CustomEvent_health_1' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, K2Node_CustomEvent_shield) == 0x000008, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::K2Node_CustomEvent_shield' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, K2Node_CustomEvent_ShowShield) == 0x00000C, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::K2Node_CustomEvent_ShowShield' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, K2Node_CustomEvent_StatusWidgetVisibleDuration) == 0x00001C, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::K2Node_CustomEvent_StatusWidgetVisibleDuration' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000028, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, K2Node_CustomEvent_KeepVisibilityOn) == 0x00002A, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::K2Node_CustomEvent_KeepVisibilityOn' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x00002B, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, CallFunc_BooleanNAND_ReturnValue) == 0x00002C, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, K2Node_CustomEvent_health) == 0x000030, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::K2Node_CustomEvent_health' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000038, "Member 'DaDoorHealthWidget_C_ExecuteUbergraph_DaDoorHealthWidget::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");

// Function DaDoorHealthWidget.DaDoorHealthWidget_C.EventUpdateStatus
// 0x000C (0x000C - 0x0000)
struct DaDoorHealthWidget_C_EventUpdateStatus final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowShield;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DaDoorHealthWidget_C_EventUpdateStatus) == 0x000004, "Wrong alignment on DaDoorHealthWidget_C_EventUpdateStatus");
static_assert(sizeof(DaDoorHealthWidget_C_EventUpdateStatus) == 0x00000C, "Wrong size on DaDoorHealthWidget_C_EventUpdateStatus");
static_assert(offsetof(DaDoorHealthWidget_C_EventUpdateStatus, Health) == 0x000000, "Member 'DaDoorHealthWidget_C_EventUpdateStatus::Health' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_EventUpdateStatus, Shield) == 0x000004, "Member 'DaDoorHealthWidget_C_EventUpdateStatus::Shield' has a wrong offset!");
static_assert(offsetof(DaDoorHealthWidget_C_EventUpdateStatus, ShowShield) == 0x000008, "Member 'DaDoorHealthWidget_C_EventUpdateStatus::ShowShield' has a wrong offset!");

// Function DaDoorHealthWidget.DaDoorHealthWidget_C.EventShowNumbers
// 0x0008 (0x0008 - 0x0000)
struct DaDoorHealthWidget_C_EventShowNumbers final
{
public:
	int64                                         Health;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DaDoorHealthWidget_C_EventShowNumbers) == 0x000008, "Wrong alignment on DaDoorHealthWidget_C_EventShowNumbers");
static_assert(sizeof(DaDoorHealthWidget_C_EventShowNumbers) == 0x000008, "Wrong size on DaDoorHealthWidget_C_EventShowNumbers");
static_assert(offsetof(DaDoorHealthWidget_C_EventShowNumbers, Health) == 0x000000, "Member 'DaDoorHealthWidget_C_EventShowNumbers::Health' has a wrong offset!");

// Function DaDoorHealthWidget.DaDoorHealthWidget_C.ChangeWidgetVisibleDuration
// 0x0004 (0x0004 - 0x0000)
struct DaDoorHealthWidget_C_ChangeWidgetVisibleDuration final
{
public:
	float                                         StatusWidgetVisibleDuration_0;                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DaDoorHealthWidget_C_ChangeWidgetVisibleDuration) == 0x000004, "Wrong alignment on DaDoorHealthWidget_C_ChangeWidgetVisibleDuration");
static_assert(sizeof(DaDoorHealthWidget_C_ChangeWidgetVisibleDuration) == 0x000004, "Wrong size on DaDoorHealthWidget_C_ChangeWidgetVisibleDuration");
static_assert(offsetof(DaDoorHealthWidget_C_ChangeWidgetVisibleDuration, StatusWidgetVisibleDuration_0) == 0x000000, "Member 'DaDoorHealthWidget_C_ChangeWidgetVisibleDuration::StatusWidgetVisibleDuration_0' has a wrong offset!");

}

