#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuartzMusicTrackComponent_DataTracker

#include "Basic.hpp"

#include "E_DataTrackerTagTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "DataTrackerParameterData_structs.hpp"
#include "QuartzMusicTrackComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass QuartzMusicTrackComponent_DataTracker.QuartzMusicTrackComponent_DataTracker_C
// 0x0068 (0x01D0 - 0x0168)
class UQuartzMusicTrackComponent_DataTracker_C : public UQuartzMusicTrackComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_QuartzMusicTrackComponent_DataTracker_C; // 0x0168(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 DataTrackerClass;                                  // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGameplayDataTrackerComponentManager* DataTrackerManager;                                // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDataTrackerAssigned;                              // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameplayDataTrackerComponent*      DataTrackerComponent;                              // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAwaitingCooldownBeforeShutoff;                    // 0x0190(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpdateFrequency;                                   // 0x0194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDataTrackerParameterData>      DataTrackerParameters;                             // 0x0198(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bHasFiredOffDataTrackerParameterWarning;           // 0x01A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundMix*                              DataTrackerSoundMix;                               // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSoundMixActive;                                   // 0x01B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandle;                                       // 0x01C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           StopTimer;                                         // 0x01C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DataTrackerStart_Internal();
	void DataTrackerStop_Internal();
	void DataTrackerUpdate_Internal();
	void ExecuteUbergraph_QuartzMusicTrackComponent_DataTracker(int32 EntryPoint);
	void GetDataTrackerComponent(class UFortGameplayDataTrackerComponent** DataTracker);
	void GetDataTrackerParameterValue(int32 Index_0, float* Value);
	void GetDataTrackerParameterValueTotal(float* Value);
	void On_Changed_Has_Any_Event_Value(class UFortGameplayDataTrackerComponent* DataTrackerComponent_0, bool bHasEventValues);
	void OnDataTrackerComponentRegistered(class UFortGameplayDataTrackerComponent* RegisteredDataTracker);
	void OnDataTrackerComponentUnRegistered(class UFortGameplayDataTrackerComponent* UnRegisteredDataTracker);
	void OnDataTrackerStart();
	void OnDataTrackerStop();
	void OnDataTrackerUpdate();
	void OnReady_EAA166EB4AA20B4778C921B5F15F1C62(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void ReceiveBeginPlay();
	void Retry_Get_Data_Tracker_Manager();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuartzMusicTrackComponent_DataTracker_C">();
	}
	static class UQuartzMusicTrackComponent_DataTracker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuartzMusicTrackComponent_DataTracker_C>();
	}
};
static_assert(alignof(UQuartzMusicTrackComponent_DataTracker_C) == 0x000008, "Wrong alignment on UQuartzMusicTrackComponent_DataTracker_C");
static_assert(sizeof(UQuartzMusicTrackComponent_DataTracker_C) == 0x0001D0, "Wrong size on UQuartzMusicTrackComponent_DataTracker_C");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, UberGraphFrame_QuartzMusicTrackComponent_DataTracker_C) == 0x000168, "Member 'UQuartzMusicTrackComponent_DataTracker_C::UberGraphFrame_QuartzMusicTrackComponent_DataTracker_C' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, DataTrackerClass) == 0x000170, "Member 'UQuartzMusicTrackComponent_DataTracker_C::DataTrackerClass' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, DataTrackerManager) == 0x000178, "Member 'UQuartzMusicTrackComponent_DataTracker_C::DataTrackerManager' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, bDataTrackerAssigned) == 0x000180, "Member 'UQuartzMusicTrackComponent_DataTracker_C::bDataTrackerAssigned' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, DataTrackerComponent) == 0x000188, "Member 'UQuartzMusicTrackComponent_DataTracker_C::DataTrackerComponent' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, bAwaitingCooldownBeforeShutoff) == 0x000190, "Member 'UQuartzMusicTrackComponent_DataTracker_C::bAwaitingCooldownBeforeShutoff' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, UpdateFrequency) == 0x000194, "Member 'UQuartzMusicTrackComponent_DataTracker_C::UpdateFrequency' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, DataTrackerParameters) == 0x000198, "Member 'UQuartzMusicTrackComponent_DataTracker_C::DataTrackerParameters' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, bHasFiredOffDataTrackerParameterWarning) == 0x0001A8, "Member 'UQuartzMusicTrackComponent_DataTracker_C::bHasFiredOffDataTrackerParameterWarning' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, DataTrackerSoundMix) == 0x0001B0, "Member 'UQuartzMusicTrackComponent_DataTracker_C::DataTrackerSoundMix' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, bSoundMixActive) == 0x0001B8, "Member 'UQuartzMusicTrackComponent_DataTracker_C::bSoundMixActive' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, TimerHandle) == 0x0001C0, "Member 'UQuartzMusicTrackComponent_DataTracker_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_DataTracker_C, StopTimer) == 0x0001C8, "Member 'UQuartzMusicTrackComponent_DataTracker_C::StopTimer' has a wrong offset!");

}

