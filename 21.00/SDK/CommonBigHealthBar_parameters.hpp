#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonBigHealthBar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CommonBigHealthBar.CommonBigHealthBar_C.ExecuteUbergraph_CommonBigHealthBar
// 0x0008 (0x0008 - 0x0000)
struct CommonBigHealthBar_C_ExecuteUbergraph_CommonBigHealthBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonBigHealthBar_C_ExecuteUbergraph_CommonBigHealthBar) == 0x000004, "Wrong alignment on CommonBigHealthBar_C_ExecuteUbergraph_CommonBigHealthBar");
static_assert(sizeof(CommonBigHealthBar_C_ExecuteUbergraph_CommonBigHealthBar) == 0x000008, "Wrong size on CommonBigHealthBar_C_ExecuteUbergraph_CommonBigHealthBar");
static_assert(offsetof(CommonBigHealthBar_C_ExecuteUbergraph_CommonBigHealthBar, EntryPoint) == 0x000000, "Member 'CommonBigHealthBar_C_ExecuteUbergraph_CommonBigHealthBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_ExecuteUbergraph_CommonBigHealthBar, K2Node_Event_IsDesignTime) == 0x000004, "Member 'CommonBigHealthBar_C_ExecuteUbergraph_CommonBigHealthBar::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function CommonBigHealthBar.CommonBigHealthBar_C.InitializeBar
// 0x0008 (0x0008 - 0x0000)
struct CommonBigHealthBar_C_InitializeBar final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonBigHealthBar_C_InitializeBar) == 0x000008, "Wrong alignment on CommonBigHealthBar_C_InitializeBar");
static_assert(sizeof(CommonBigHealthBar_C_InitializeBar) == 0x000008, "Wrong size on CommonBigHealthBar_C_InitializeBar");
static_assert(offsetof(CommonBigHealthBar_C_InitializeBar, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'CommonBigHealthBar_C_InitializeBar::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function CommonBigHealthBar.CommonBigHealthBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CommonBigHealthBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonBigHealthBar_C_PreConstruct) == 0x000001, "Wrong alignment on CommonBigHealthBar_C_PreConstruct");
static_assert(sizeof(CommonBigHealthBar_C_PreConstruct) == 0x000001, "Wrong size on CommonBigHealthBar_C_PreConstruct");
static_assert(offsetof(CommonBigHealthBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CommonBigHealthBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CommonBigHealthBar.CommonBigHealthBar_C.SetColors
// 0x0048 (0x0048 - 0x0000)
struct CommonBigHealthBar_C_SetColors final
{
public:
	struct FLinearColor                           ColorA;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorB;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BevelColor;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BaseplateColor;                                    // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonBigHealthBar_C_SetColors) == 0x000008, "Wrong alignment on CommonBigHealthBar_C_SetColors");
static_assert(sizeof(CommonBigHealthBar_C_SetColors) == 0x000048, "Wrong size on CommonBigHealthBar_C_SetColors");
static_assert(offsetof(CommonBigHealthBar_C_SetColors, ColorA) == 0x000000, "Member 'CommonBigHealthBar_C_SetColors::ColorA' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_SetColors, ColorB) == 0x000010, "Member 'CommonBigHealthBar_C_SetColors::ColorB' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_SetColors, BevelColor) == 0x000020, "Member 'CommonBigHealthBar_C_SetColors::BevelColor' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_SetColors, BaseplateColor) == 0x000030, "Member 'CommonBigHealthBar_C_SetColors::BaseplateColor' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_SetColors, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000040, "Member 'CommonBigHealthBar_C_SetColors::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function CommonBigHealthBar.CommonBigHealthBar_C.SetSwitcherTextIndex
// 0x0004 (0x0004 - 0x0000)
struct CommonBigHealthBar_C_SetSwitcherTextIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonBigHealthBar_C_SetSwitcherTextIndex) == 0x000004, "Wrong alignment on CommonBigHealthBar_C_SetSwitcherTextIndex");
static_assert(sizeof(CommonBigHealthBar_C_SetSwitcherTextIndex) == 0x000004, "Wrong size on CommonBigHealthBar_C_SetSwitcherTextIndex");
static_assert(offsetof(CommonBigHealthBar_C_SetSwitcherTextIndex, Index_0) == 0x000000, "Member 'CommonBigHealthBar_C_SetSwitcherTextIndex::Index_0' has a wrong offset!");

// Function CommonBigHealthBar.CommonBigHealthBar_C.Update
// 0x0008 (0x0008 - 0x0000)
struct CommonBigHealthBar_C_Update final
{
public:
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonBigHealthBar_C_Update) == 0x000004, "Wrong alignment on CommonBigHealthBar_C_Update");
static_assert(sizeof(CommonBigHealthBar_C_Update) == 0x000008, "Wrong size on CommonBigHealthBar_C_Update");
static_assert(offsetof(CommonBigHealthBar_C_Update, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'CommonBigHealthBar_C_Update::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'CommonBigHealthBar_C_Update::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function CommonBigHealthBar.CommonBigHealthBar_C.Update Current HP Value
// 0x0028 (0x0028 - 0x0000)
struct CommonBigHealthBar_C_Update_Current_HP_Value final
{
public:
	float                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(CommonBigHealthBar_C_Update_Current_HP_Value) == 0x000008, "Wrong alignment on CommonBigHealthBar_C_Update_Current_HP_Value");
static_assert(sizeof(CommonBigHealthBar_C_Update_Current_HP_Value) == 0x000028, "Wrong size on CommonBigHealthBar_C_Update_Current_HP_Value");
static_assert(offsetof(CommonBigHealthBar_C_Update_Current_HP_Value, Current) == 0x000000, "Member 'CommonBigHealthBar_C_Update_Current_HP_Value::Current' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_Current_HP_Value, CallFunc_FCeil_ReturnValue) == 0x000004, "Member 'CommonBigHealthBar_C_Update_Current_HP_Value::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_Current_HP_Value, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'CommonBigHealthBar_C_Update_Current_HP_Value::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_Current_HP_Value, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'CommonBigHealthBar_C_Update_Current_HP_Value::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function CommonBigHealthBar.CommonBigHealthBar_C.Update HP Fill
// 0x0004 (0x0004 - 0x0000)
struct CommonBigHealthBar_C_Update_HP_Fill final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonBigHealthBar_C_Update_HP_Fill) == 0x000004, "Wrong alignment on CommonBigHealthBar_C_Update_HP_Fill");
static_assert(sizeof(CommonBigHealthBar_C_Update_HP_Fill) == 0x000004, "Wrong size on CommonBigHealthBar_C_Update_HP_Fill");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill, Percent) == 0x000000, "Member 'CommonBigHealthBar_C_Update_HP_Fill::Percent' has a wrong offset!");

// Function CommonBigHealthBar.CommonBigHealthBar_C.Update HP Fill Bar
// 0x0050 (0x0050 - 0x0000)
struct CommonBigHealthBar_C_Update_HP_Fill_Bar final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           K2Node_DynamicCast_AsSize_Box_Slot;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonBigHealthBar_C_Update_HP_Fill_Bar) == 0x000008, "Wrong alignment on CommonBigHealthBar_C_Update_HP_Fill_Bar");
static_assert(sizeof(CommonBigHealthBar_C_Update_HP_Fill_Bar) == 0x000050, "Wrong size on CommonBigHealthBar_C_Update_HP_Fill_Bar");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, Temp_float_Variable) == 0x000004, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, K2Node_DynamicCast_AsSize_Box_Slot) == 0x000008, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::K2Node_DynamicCast_AsSize_Box_Slot' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, CallFunc_BreakVector2D_X) == 0x000014, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, Temp_bool_Variable) == 0x000020, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000021, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000030, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, K2Node_Select_Default) == 0x000038, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Fill_Bar, K2Node_MakeStruct_LinearColor) == 0x00003C, "Member 'CommonBigHealthBar_C_Update_HP_Fill_Bar::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function CommonBigHealthBar.CommonBigHealthBar_C.Update HP Text
// 0x0018 (0x0018 - 0x0000)
struct CommonBigHealthBar_C_Update_HP_Text final
{
public:
	class FText                                   HP_Text;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(CommonBigHealthBar_C_Update_HP_Text) == 0x000008, "Wrong alignment on CommonBigHealthBar_C_Update_HP_Text");
static_assert(sizeof(CommonBigHealthBar_C_Update_HP_Text) == 0x000018, "Wrong size on CommonBigHealthBar_C_Update_HP_Text");
static_assert(offsetof(CommonBigHealthBar_C_Update_HP_Text, HP_Text) == 0x000000, "Member 'CommonBigHealthBar_C_Update_HP_Text::HP_Text' has a wrong offset!");

// Function CommonBigHealthBar.CommonBigHealthBar_C.Update Max HP Value
// 0x00A0 (0x00A0 - 0x0000)
struct CommonBigHealthBar_C_Update_Max_HP_Value final
{
public:
	float                                         Max;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(CommonBigHealthBar_C_Update_Max_HP_Value) == 0x000008, "Wrong alignment on CommonBigHealthBar_C_Update_Max_HP_Value");
static_assert(sizeof(CommonBigHealthBar_C_Update_Max_HP_Value) == 0x0000A0, "Wrong size on CommonBigHealthBar_C_Update_Max_HP_Value");
static_assert(offsetof(CommonBigHealthBar_C_Update_Max_HP_Value, Max) == 0x000000, "Member 'CommonBigHealthBar_C_Update_Max_HP_Value::Max' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_Max_HP_Value, CallFunc_FCeil_ReturnValue) == 0x000004, "Member 'CommonBigHealthBar_C_Update_Max_HP_Value::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_Max_HP_Value, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'CommonBigHealthBar_C_Update_Max_HP_Value::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_Max_HP_Value, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'CommonBigHealthBar_C_Update_Max_HP_Value::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_Max_HP_Value, K2Node_MakeArray_Array) == 0x000070, "Member 'CommonBigHealthBar_C_Update_Max_HP_Value::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_Max_HP_Value, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000080, "Member 'CommonBigHealthBar_C_Update_Max_HP_Value::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonBigHealthBar_C_Update_Max_HP_Value, CallFunc_Format_ReturnValue) == 0x000088, "Member 'CommonBigHealthBar_C_Update_Max_HP_Value::CallFunc_Format_ReturnValue' has a wrong offset!");

}

