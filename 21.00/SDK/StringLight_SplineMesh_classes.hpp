#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StringLight_SplineMesh

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass StringLight_SplineMesh.StringLight_SplineMesh_C
// 0x0038 (0x0DA0 - 0x0D68)
class AStringLight_SplineMesh_C final : public ABuildingDeco
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D68(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       Spline;                                            // 0x0D70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoSmoothTangent;                                 // 0x0D78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D79[0x3];                                      // 0x0D79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Tension;                                           // 0x0D7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseScaling;                                        // 0x0D80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D81[0x7];                                      // 0x0D81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABuildingActor*>                 LightAttachmentActors;                             // 0x0D90(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)

public:
	void ExecuteUbergraph_StringLight_SplineMesh(int32 EntryPoint);
	void IReallyDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void ValidateSplineMesh();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"StringLight_SplineMesh_C">();
	}
	static class AStringLight_SplineMesh_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStringLight_SplineMesh_C>();
	}
};
static_assert(alignof(AStringLight_SplineMesh_C) == 0x000008, "Wrong alignment on AStringLight_SplineMesh_C");
static_assert(sizeof(AStringLight_SplineMesh_C) == 0x000DA0, "Wrong size on AStringLight_SplineMesh_C");
static_assert(offsetof(AStringLight_SplineMesh_C, UberGraphFrame) == 0x000D68, "Member 'AStringLight_SplineMesh_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AStringLight_SplineMesh_C, Spline) == 0x000D70, "Member 'AStringLight_SplineMesh_C::Spline' has a wrong offset!");
static_assert(offsetof(AStringLight_SplineMesh_C, AutoSmoothTangent) == 0x000D78, "Member 'AStringLight_SplineMesh_C::AutoSmoothTangent' has a wrong offset!");
static_assert(offsetof(AStringLight_SplineMesh_C, Tension) == 0x000D7C, "Member 'AStringLight_SplineMesh_C::Tension' has a wrong offset!");
static_assert(offsetof(AStringLight_SplineMesh_C, UseScaling) == 0x000D80, "Member 'AStringLight_SplineMesh_C::UseScaling' has a wrong offset!");
static_assert(offsetof(AStringLight_SplineMesh_C, OverrideMaterial) == 0x000D88, "Member 'AStringLight_SplineMesh_C::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(AStringLight_SplineMesh_C, LightAttachmentActors) == 0x000D90, "Member 'AStringLight_SplineMesh_C::LightAttachmentActors' has a wrong offset!");

}

