#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaultWorld

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function VaultWorld.VaultWorld_C.OnUpdateDisplay
// 0x0002 (0x0002 - 0x0000)
struct VaultWorld_C_OnUpdateDisplay final
{
public:
	bool                                          bShowFloor;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowEffects;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VaultWorld_C_OnUpdateDisplay) == 0x000001, "Wrong alignment on VaultWorld_C_OnUpdateDisplay");
static_assert(sizeof(VaultWorld_C_OnUpdateDisplay) == 0x000002, "Wrong size on VaultWorld_C_OnUpdateDisplay");
static_assert(offsetof(VaultWorld_C_OnUpdateDisplay, bShowFloor) == 0x000000, "Member 'VaultWorld_C_OnUpdateDisplay::bShowFloor' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_OnUpdateDisplay, bShowEffects) == 0x000001, "Member 'VaultWorld_C_OnUpdateDisplay::bShowEffects' has a wrong offset!");

// Function VaultWorld.VaultWorld_C.OnSetupBackground
// 0x0068 (0x0068 - 0x0000)
struct VaultWorld_C_OnSetupBackground final
{
public:
	const class UTexture2D*                       LoadedBackgroundTexture;                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackDynamicBackground                BackgroundInfo;                                    // 0x0008(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(VaultWorld_C_OnSetupBackground) == 0x000008, "Wrong alignment on VaultWorld_C_OnSetupBackground");
static_assert(sizeof(VaultWorld_C_OnSetupBackground) == 0x000068, "Wrong size on VaultWorld_C_OnSetupBackground");
static_assert(offsetof(VaultWorld_C_OnSetupBackground, LoadedBackgroundTexture) == 0x000000, "Member 'VaultWorld_C_OnSetupBackground::LoadedBackgroundTexture' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_OnSetupBackground, BackgroundInfo) == 0x000008, "Member 'VaultWorld_C_OnSetupBackground::BackgroundInfo' has a wrong offset!");

// Function VaultWorld.VaultWorld_C.GetVaultRotator
// 0x0018 (0x0018 - 0x0000)
struct VaultWorld_C_GetVaultRotator final
{
public:
	class AVaultRotator_C*                        VaultRotator;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AVaultRotator_C*                        K2Node_DynamicCast_AsVault_Rotator;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VaultWorld_C_GetVaultRotator) == 0x000008, "Wrong alignment on VaultWorld_C_GetVaultRotator");
static_assert(sizeof(VaultWorld_C_GetVaultRotator) == 0x000018, "Wrong size on VaultWorld_C_GetVaultRotator");
static_assert(offsetof(VaultWorld_C_GetVaultRotator, VaultRotator) == 0x000000, "Member 'VaultWorld_C_GetVaultRotator::VaultRotator' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_GetVaultRotator, K2Node_DynamicCast_AsVault_Rotator) == 0x000008, "Member 'VaultWorld_C_GetVaultRotator::K2Node_DynamicCast_AsVault_Rotator' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_GetVaultRotator, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'VaultWorld_C_GetVaultRotator::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function VaultWorld.VaultWorld_C.OnTransitionItemDetails
// 0x0001 (0x0001 - 0x0000)
struct VaultWorld_C_OnTransitionItemDetails final
{
public:
	bool                                          bShowItemDetails;                                  // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VaultWorld_C_OnTransitionItemDetails) == 0x000001, "Wrong alignment on VaultWorld_C_OnTransitionItemDetails");
static_assert(sizeof(VaultWorld_C_OnTransitionItemDetails) == 0x000001, "Wrong size on VaultWorld_C_OnTransitionItemDetails");
static_assert(offsetof(VaultWorld_C_OnTransitionItemDetails, bShowItemDetails) == 0x000000, "Member 'VaultWorld_C_OnTransitionItemDetails::bShowItemDetails' has a wrong offset!");

// Function VaultWorld.VaultWorld_C.OnTransitionBackground
// 0x0001 (0x0001 - 0x0000)
struct VaultWorld_C_OnTransitionBackground final
{
public:
	bool                                          bPlayForward;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VaultWorld_C_OnTransitionBackground) == 0x000001, "Wrong alignment on VaultWorld_C_OnTransitionBackground");
static_assert(sizeof(VaultWorld_C_OnTransitionBackground) == 0x000001, "Wrong size on VaultWorld_C_OnTransitionBackground");
static_assert(offsetof(VaultWorld_C_OnTransitionBackground, bPlayForward) == 0x000000, "Member 'VaultWorld_C_OnTransitionBackground::bPlayForward' has a wrong offset!");

// Function VaultWorld.VaultWorld_C.ExecuteUbergraph_VaultWorld
// 0x0098 (0x0098 - 0x0000)
struct VaultWorld_C_ExecuteUbergraph_VaultWorld final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UTexture2D*                       K2Node_Event_LoadedBackgroundTexture;              // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrackDynamicBackground                K2Node_Event_BackgroundInfo;                       // 0x0020(0x0060)(ConstParm)
	bool                                          K2Node_Event_bPlayForward;                         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortStaticMeshActor*                   K2Node_DynamicCast_AsFort_Static_Mesh_Actor;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowFloor;                           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowEffects;                         // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowItemDetails;                     // 0x0093(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VaultWorld_C_ExecuteUbergraph_VaultWorld) == 0x000008, "Wrong alignment on VaultWorld_C_ExecuteUbergraph_VaultWorld");
static_assert(sizeof(VaultWorld_C_ExecuteUbergraph_VaultWorld) == 0x000098, "Wrong size on VaultWorld_C_ExecuteUbergraph_VaultWorld");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, EntryPoint) == 0x000000, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::EntryPoint' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000010, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, K2Node_Event_LoadedBackgroundTexture) == 0x000018, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::K2Node_Event_LoadedBackgroundTexture' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, K2Node_Event_BackgroundInfo) == 0x000020, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::K2Node_Event_BackgroundInfo' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, K2Node_Event_bPlayForward) == 0x000080, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::K2Node_Event_bPlayForward' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, K2Node_DynamicCast_AsFort_Static_Mesh_Actor) == 0x000088, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::K2Node_DynamicCast_AsFort_Static_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, K2Node_Event_bShowFloor) == 0x000091, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::K2Node_Event_bShowFloor' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, K2Node_Event_bShowEffects) == 0x000092, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::K2Node_Event_bShowEffects' has a wrong offset!");
static_assert(offsetof(VaultWorld_C_ExecuteUbergraph_VaultWorld, K2Node_Event_bShowItemDetails) == 0x000093, "Member 'VaultWorld_C_ExecuteUbergraph_VaultWorld::K2Node_Event_bShowItemDetails' has a wrong offset!");

}

