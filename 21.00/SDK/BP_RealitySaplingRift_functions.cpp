#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RealitySaplingRift

#include "Basic.hpp"

#include "BP_RealitySaplingRift_classes.hpp"
#include "BP_RealitySaplingRift_parameters.hpp"


namespace SDK
{

// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.CanPlayerEnter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanEnter                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RealitySaplingRift_C::CanPlayerEnter(class AActor* PlayerPawn, bool* CanEnter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "CanPlayerEnter");

	Params::BP_RealitySaplingRift_C_CanPlayerEnter Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);

	if (CanEnter != nullptr)
		*CanEnter = Parms.CanEnter;
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.DisplayDirectionVFX
// (BlueprintCallable, BlueprintEvent)

void ABP_RealitySaplingRift_C::DisplayDirectionVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "DisplayDirectionVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.EnterZPE
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_RealitySaplingRift_C::EnterZPE(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "EnterZPE");

	Params::BP_RealitySaplingRift_C_EnterZPE Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.ExecuteUbergraph_BP_RealitySaplingRift
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RealitySaplingRift_C::ExecuteUbergraph_BP_RealitySaplingRift(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "ExecuteUbergraph_BP_RealitySaplingRift");

	Params::BP_RealitySaplingRift_C_ExecuteUbergraph_BP_RealitySaplingRift Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_RealitySaplingRift_C::OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "OnDeathServer");

	Params::BP_RealitySaplingRift_C_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.OnRep_BallEntered
// (BlueprintCallable, BlueprintEvent)

void ABP_RealitySaplingRift_C::OnRep_BallEntered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "OnRep_BallEntered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.OnRep_BallExited
// (BlueprintCallable, BlueprintEvent)

void ABP_RealitySaplingRift_C::OnRep_BallExited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "OnRep_BallExited");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.OnRep_FortPawnsInBall
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RealitySaplingRift_C::OnRep_FortPawnsInBall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "OnRep_FortPawnsInBall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.OnRep_HideActor
// (BlueprintCallable, BlueprintEvent)

void ABP_RealitySaplingRift_C::OnRep_HideActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "OnRep_HideActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_RealitySaplingRift_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.ShakeBall
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGoingIn                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RealitySaplingRift_C::ShakeBall(bool IsGoingIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "ShakeBall");

	Params::BP_RealitySaplingRift_C_ShakeBall Parms{};

	Parms.IsGoingIn = IsGoingIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.SpawnSaplingRift
// (BlueprintCallable, BlueprintEvent)

void ABP_RealitySaplingRift_C::SpawnSaplingRift()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "SpawnSaplingRift");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RealitySaplingRift.BP_RealitySaplingRift_C.SpawnSkybeam
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_RealitySaplingRift_C::SpawnSkybeam(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RealitySaplingRift_C", "SpawnSkybeam");

	Params::BP_RealitySaplingRift_C_SpawnSkybeam Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}

}

