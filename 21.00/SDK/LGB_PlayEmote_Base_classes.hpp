#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LGB_PlayEmote_Base

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "STRUCT_LGB_PlayEmoteList_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteAI_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LGB_PlayEmote_Base.LGB_PlayEmote_Base_C
// 0x00A0 (0x0320 - 0x0280)
class ALGB_PlayEmote_Base_C final : public AFortAthenaLocalGameplayBehavior
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        DirectionArrow;                                    // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSTRUCT_LGB_PlayEmoteList>      EmoteList;                                         // 0x0290(0x0010)(Edit, BlueprintVisible)
	bool                                          UseDirection;                                      // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayBeforeEmote;                                  // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaAIBotController*             AIBotControllerActivator;                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChanceToPlayEmote;                                 // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LGB_PlayEmoteList              SelectedEmote;                                     // 0x02B8(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_NPCStatusStressed;                              // 0x02D8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          LoopAtEnd;                                         // 0x02DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            HAND_GEToApply;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          UseGlobalGameplayEffectForAllEmotes;               // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GlobalGameplayEffect;                              // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldKeepGameplayEffectOnEndOrAbort;              // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        Emote_Primary_Asset_ID;                            // 0x02FC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PreviousFocalPoint;                                // 0x0308(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetFocalPoint();
	void ResetFocalPoint();
	void PlayEmote();
	void OnExecute(class AActor* Activator);
	void OnAbort();
	void ExecuteUbergraph_LGB_PlayEmote_Base(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LGB_PlayEmote_Base_C">();
	}
	static class ALGB_PlayEmote_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALGB_PlayEmote_Base_C>();
	}
};
static_assert(alignof(ALGB_PlayEmote_Base_C) == 0x000008, "Wrong alignment on ALGB_PlayEmote_Base_C");
static_assert(sizeof(ALGB_PlayEmote_Base_C) == 0x000320, "Wrong size on ALGB_PlayEmote_Base_C");
static_assert(offsetof(ALGB_PlayEmote_Base_C, UberGraphFrame) == 0x000280, "Member 'ALGB_PlayEmote_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, DirectionArrow) == 0x000288, "Member 'ALGB_PlayEmote_Base_C::DirectionArrow' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, EmoteList) == 0x000290, "Member 'ALGB_PlayEmote_Base_C::EmoteList' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, UseDirection) == 0x0002A0, "Member 'ALGB_PlayEmote_Base_C::UseDirection' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, DelayBeforeEmote) == 0x0002A4, "Member 'ALGB_PlayEmote_Base_C::DelayBeforeEmote' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, AIBotControllerActivator) == 0x0002A8, "Member 'ALGB_PlayEmote_Base_C::AIBotControllerActivator' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, ChanceToPlayEmote) == 0x0002B0, "Member 'ALGB_PlayEmote_Base_C::ChanceToPlayEmote' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, SelectedEmote) == 0x0002B8, "Member 'ALGB_PlayEmote_Base_C::SelectedEmote' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, TC_NPCStatusStressed) == 0x0002D8, "Member 'ALGB_PlayEmote_Base_C::TC_NPCStatusStressed' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, LoopAtEnd) == 0x0002DC, "Member 'ALGB_PlayEmote_Base_C::LoopAtEnd' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, HAND_GEToApply) == 0x0002E0, "Member 'ALGB_PlayEmote_Base_C::HAND_GEToApply' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, UseGlobalGameplayEffectForAllEmotes) == 0x0002E8, "Member 'ALGB_PlayEmote_Base_C::UseGlobalGameplayEffectForAllEmotes' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, GlobalGameplayEffect) == 0x0002F0, "Member 'ALGB_PlayEmote_Base_C::GlobalGameplayEffect' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, ShouldKeepGameplayEffectOnEndOrAbort) == 0x0002F8, "Member 'ALGB_PlayEmote_Base_C::ShouldKeepGameplayEffectOnEndOrAbort' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, Emote_Primary_Asset_ID) == 0x0002FC, "Member 'ALGB_PlayEmote_Base_C::Emote_Primary_Asset_ID' has a wrong offset!");
static_assert(offsetof(ALGB_PlayEmote_Base_C, PreviousFocalPoint) == 0x000308, "Member 'ALGB_PlayEmote_Base_C::PreviousFocalPoint' has a wrong offset!");

}

