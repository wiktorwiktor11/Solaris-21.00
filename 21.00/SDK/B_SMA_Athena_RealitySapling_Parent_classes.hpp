#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SMA_Athena_RealitySapling_Parent

#include "Basic.hpp"

#include "SaplingAgeVariants_structs.hpp"
#include "ServerSpawnedFruitSlot_structs.hpp"
#include "SaplingFruitVariants_structs.hpp"
#include "RealitySeedGameplayRuntime_structs.hpp"
#include "RealitySeedGameplayRuntime_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "SaplingBPReppedData_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SMA_Athena_RealitySapling_Parent.B_SMA_Athena_RealitySapling_Parent_C
// 0x0528 (0x13A8 - 0x0E80)
class AB_SMA_Athena_RealitySapling_Parent_C : public ABuildingRealitySapling
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E80(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        AmbientLoop;                                       // 0x0E88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNonPlayerConversationComponent_C*      NonPlayerConversationComponent;                    // 0x0E90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0E98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StumpStaticMesh;                                   // 0x0EA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   YouthStaticMesh;                                   // 0x0EA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BabyStaticMesh;                                    // 0x0EB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FruitStartDistanceFromGround;                      // 0x0EB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FruitHorizDistanceFromCenter;                      // 0x0EBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         NumFruitsToGrow;                                   // 0x0EC0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FServerSpawnedFruitSlot>        ServerSpawnedFruitSlot;                            // 0x0EE8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TArray<class AActor*>                         ServerWeeds;                                       // 0x0EF8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         ServerConsumables;                                 // 0x0F08(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         YouthScale;                                        // 0x0F18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BabyScale;                                         // 0x0F1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumTimesWeeded;                                    // 0x0F20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_F24[0x4];                                      // 0x0F24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_RealitySaplingsWeeds_Spawner_C*      WeedSpawner;                                       // 0x0F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SaplingNurturedCountThisMatch;                     // 0x0F30(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F34[0x4];                                      // 0x0F34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MaxWeedingTimes;                                   // 0x0F38(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           CreateFruitTimerHandle;                            // 0x0F60(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseShortTimes;                                    // 0x0F68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F69[0x3];                                      // 0x0F69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PrevNumTimesWeeded;                                // 0x0F6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overrride_Sapling_Persistence;                     // 0x0F70(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_F71[0x3];                                      // 0x0F71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FruitAngleOffset;                                  // 0x0F74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReviveCount_unrepped;                              // 0x0F78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasDied;                                           // 0x0F7C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F7D[0x3];                                      // 0x0F7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Dead_Baby_Material;                                // 0x0F80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWeakPointComponent*                WeakPointComp;                                     // 0x0F88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortWeakPointComponent*>        WeakPointCmps;                                     // 0x0F90(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          Debug;                                             // 0x0FA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA1[0x7];                                      // 0x0FA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  Owning_Player_Controller_Repped;                   // 0x0FA8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerStateAthena*                 Owning_Player_State_Repped;                        // 0x0FB0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         SecondsWateredThisMatch;                           // 0x0FB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FBC[0x4];                                      // 0x0FBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MaxTimesASaplingCanBeWateredPerMatch;              // 0x0FC0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         NumSecondsWateredForReaction;                      // 0x0FE8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         LastWateredTime;                                   // 0x1010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1014[0x4];                                     // 0x1014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           WaterTimerHandle;                                  // 0x1018(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         NumTimesWateredThisMatch;                          // 0x1020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBeingWatered;                                    // 0x1024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyedForTransplant;                            // 0x1025(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyedFromAging;                                // 0x1026(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1027[0x1];                                     // 0x1027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumCurrentWeeds;                                   // 0x1028(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102C[0x4];                                     // 0x102C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              LastWeededDateTime;                                // 0x1030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              DebugTimespanOffset;                               // 0x1038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         DayOffset;                                         // 0x1040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         MinuteOffset;                                      // 0x1044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedsWeeding;                                      // 0x1048(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1049[0x3];                                     // 0x1049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Fruit1State;                                       // 0x104C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Fruit2State;                                       // 0x1050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Fruit3State;                                       // 0x1054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ESaplingFruitVariants                         InitialSaplingFruitVariant;                        // 0x1058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasSpawnedMythic;                                  // 0x1059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isInSafeZone;                                      // 0x105A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105B[0x5];                                     // 0x105B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Persistent_Sapling_Data_Fruit_States;              // 0x1060(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class AB_SMA_Athena_RealitySapling_Parent_C* Sapling)> SaplingUpdateEvent;                                // 0x1070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FRealitySaplingPersistentData          MovedSaplingPersistentData;                        // 0x1080(0x0060)(Edit, BlueprintVisible, ExposeOnSpawn)
	class USoundBase*                             FruitSpawnSound;                                   // 0x10E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             NurturedSound;                                     // 0x10E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DamagedSound;                                      // 0x10F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Dead_Youth_Material;                               // 0x10F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Dead_Mature_Material;                              // 0x1100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Dead_Stump_Material;                               // 0x1108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SaplingTransplanted;                               // 0x1110(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_1111[0x7];                                     // 0x1111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRealitySaplingPersistentData          PersistentDataWhenSpawned;                         // 0x1118(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             PlantedSound;                                      // 0x1178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  PlanterPlayerController;                           // 0x1180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSaplingBPReppedData                   SaplingBPReppedData;                               // 0x1188(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          OverrideIsLocalPlayerSapling;                      // 0x1190(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          FruitFallsOffSaplingsWhenKilled;                   // 0x1191(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1192[0x6];                                     // 0x1192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Active_Static_Mesh_Comp;                           // 0x1198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveOnZAxis;                                       // 0x11A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A4[0x4];                                     // 0x11A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             FruitGrowSound;                                    // 0x11A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             WitheringSound;                                    // 0x11B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         DelayForPartialNurtureCelebration;                 // 0x11B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DelayForNurtureFruitUpgrade;                       // 0x11E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DelayForNurtureCelebration;                        // 0x1208(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinNurturingLevel;                                 // 0x1230(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HasBeenInitialized;                                // 0x1258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGhost;                                           // 0x1259(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125A[0x6];                                     // 0x125A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MaturityLevelWhenGroundItemsShowUp;                // 0x1260(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         SaplingsEnabled;                                   // 0x1288(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MythicFruitEnabled;                                // 0x12B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class UTexture2D>              OwningPlayerSocialAvatarIcon;                      // 0x12D8(0x0028)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          FoundMythic;                                       // 0x1300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1301[0x7];                                     // 0x1301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         OverrideMinBabyFruitsAtStartOfMatch;               // 0x1308(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         OverrideMinYouthFruitsAtStartOfMatch;              // 0x1330(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         OverrideMinAdultFruitsAtStartOfMatch;              // 0x1358(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         fruitStateCount;                                   // 0x1380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         youthCount;                                        // 0x1384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         adultCount;                                        // 0x1388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         babyConst;                                         // 0x138C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         youthConst;                                        // 0x1390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         adultConst;                                        // 0x1394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              SaplingDestroyedForTransplantEvent;                // 0x1398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Add_Server_Consumable(class AActor* Consumable);
	void Add_Server_Weed(class AActor* Weed);
	void AgeUpSapling();
	void BindToBoxOverlapEvent(bool Begin);
	void Calc_Needs_Weeding();
	void CheckForSaplingNewlyTransplanted();
	void CheckMatchStartHotFixFruitStateOverrides();
	void CreateFruits();
	void CreateServerFruitAndBindToDestroyed(int32 Index_0, bool IsMythic);
	void EnterGhostState();
	void EventFinishedSound(class USoundBase* SoundToPlay);
	void EventGrowthSound();
	void ExecuteUbergraph_B_SMA_Athena_RealitySapling_Parent(int32 EntryPoint);
	void FillVariablesFromPersistentData();
	void ForceSpawnWeeds();
	void GamePhaseStepChanged(const TScriptInterface<class IFortSafeZoneInterface>& SafeZoneInterface, const EAthenaGamePhaseStep GamePhaseStep);
	void Get_Fruit_Spawn_Transform(int32 FruitIndex, struct FTransform* OutTransform);
	void Get_UTCTime_With_Offset_Added(struct FDateTime* NewParam);
	void GetRarityNameAndColor(class FText* Name_0, struct FLinearColor* Color);
	void GetSaplingAgeVariant(ESaplingAgeVariants* SaplingAge);
	void Init_Local_Persistent_Sapling_Data_Fruit_States();
	void InitializeSapling();
	void Instigate_Sapling_Wither();
	void Is_Dead(bool* RetVal);
	bool IsOkToAutoping();
	void Kill_Weeds();
	void MarkSapling(bool MarkOnClient);
	void Notify_Fruit_State_Changed(class ATiered_RealityFruit_Athena_C* Fruit);
	void Notify_Fruits_Upgraded();
	void Notify_Getting_Transplanted();
	void Notify_Sapling_Fruit_Destroyed(class AActor* Destroyed_Fruit_Actor);
	void On_Consumable_Destroyed(class AActor* Consumable);
	void On_End_Of_Life();
	void On_Fruit_Destroyed(class AActor* DestroyedActor);
	void On_Sapling_Baby_Planted();
	void On_Sapling_Belongs_to_Local_Player();
	void On_Sapling_Newly_Transplanted();
	void On_Sapling_Partially_Nurtured();
	void On_Sapling_Transplanting_Away();
	void On_Turned_Into_A_Ghost();
	void On_Weed_Destroyed(class AActor* Weed);
	void On_Weeds_Killed();
	void OnCurieStateAttached_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& StateTag);
	void OnCurieStateDetached_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& StateTag);
	void OnFruitVariantOrRarityChangedEvent();
	void OnRep_DestroyedForTransplant();
	void OnRep_HasDied();
	void OnRep_NeedsWeeding();
	void OnRep_NumCurrentWeeds();
	void OnRep_OverrideIsLocalPlayerSapling();
	void OnRep_Owning_Player_Controller_Repped();
	void OnRep_Owning_Player_State_Repped();
	void OnRep_SaplingBPReppedData();
	void OnRep_SaplingNurturedCountThisMatch();
	void OnRep_ServerSpawnedFruitSlot();
	void OnSaplingKilled();
	void OnSaplingNurtured();
	void OnSaplingRegistered();
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo);
	void ReceiveRadialDamage(float DamageReceived, const class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser);
	void SafeZoneCheck();
	void Sapling_Partially_Nurtured();
	void Set_Sapling_Mesh_Active(class UStaticMeshComponent* InStaticMeshComp, bool bVisible, bool bActiveCollision, class UMaterialInstance* OriginalMaterial, class UMaterialInstance* DeadMaterial);
	void SetNeedsWeeding();
	void Setup_Persistent_Sapling_Fruit_States();
	void Setup_Persistent_Sapling_Fruit_States_Immediate();
	void SpawnFruit(int32 ArrayIndex, bool bIsMythic, class ATiered_RealityFruit_Athena_C** TieredFruitAthena);
	void SpawnMissingFruitActors();
	void SpawnMushrooms();
	void SpawnWeedsIfNeeded();
	void SpawnWeedsImmediate();
	void Start_Add_Fruit_Timer_if_Needed();
	void Start_Watered_Timer();
	void StartBoxOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UpdateControllerCompSaplingDataStruct();
	void UpdateSafeZoneStatus(bool bInSafeZone);
	void Water_With_Gasoline();
	void WaterSapling();
	void WeedSpawnerDestroyed(class AActor* DestroyedActor);

	void Get_Scalable_Float_Time(const struct FScalableFloat& ScalableFloat, float* Value) const;
	class FName GetMarkerDetailsId() const;
	void ShouldPlayNativeCurieFX(EFortCurieNativeFXType FXType, struct FFortNativeCurieFXResponse* OutResponse) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SMA_Athena_RealitySapling_Parent_C">();
	}
	static class AB_SMA_Athena_RealitySapling_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SMA_Athena_RealitySapling_Parent_C>();
	}
};
static_assert(alignof(AB_SMA_Athena_RealitySapling_Parent_C) == 0x000008, "Wrong alignment on AB_SMA_Athena_RealitySapling_Parent_C");
static_assert(sizeof(AB_SMA_Athena_RealitySapling_Parent_C) == 0x0013A8, "Wrong size on AB_SMA_Athena_RealitySapling_Parent_C");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, UberGraphFrame) == 0x000E80, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, AmbientLoop) == 0x000E88, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::AmbientLoop' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, NonPlayerConversationComponent) == 0x000E90, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::NonPlayerConversationComponent' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Box) == 0x000E98, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Box' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, StumpStaticMesh) == 0x000EA0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::StumpStaticMesh' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, YouthStaticMesh) == 0x000EA8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::YouthStaticMesh' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, BabyStaticMesh) == 0x000EB0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::BabyStaticMesh' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, FruitStartDistanceFromGround) == 0x000EB8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::FruitStartDistanceFromGround' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, FruitHorizDistanceFromCenter) == 0x000EBC, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::FruitHorizDistanceFromCenter' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, NumFruitsToGrow) == 0x000EC0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::NumFruitsToGrow' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, ServerSpawnedFruitSlot) == 0x000EE8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::ServerSpawnedFruitSlot' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, ServerWeeds) == 0x000EF8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::ServerWeeds' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, ServerConsumables) == 0x000F08, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::ServerConsumables' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, YouthScale) == 0x000F18, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::YouthScale' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, BabyScale) == 0x000F1C, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::BabyScale' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, NumTimesWeeded) == 0x000F20, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::NumTimesWeeded' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, WeedSpawner) == 0x000F28, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::WeedSpawner' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, SaplingNurturedCountThisMatch) == 0x000F30, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::SaplingNurturedCountThisMatch' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, MaxWeedingTimes) == 0x000F38, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::MaxWeedingTimes' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, CreateFruitTimerHandle) == 0x000F60, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::CreateFruitTimerHandle' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, bUseShortTimes) == 0x000F68, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::bUseShortTimes' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, PrevNumTimesWeeded) == 0x000F6C, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::PrevNumTimesWeeded' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Overrride_Sapling_Persistence) == 0x000F70, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Overrride_Sapling_Persistence' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, FruitAngleOffset) == 0x000F74, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::FruitAngleOffset' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, ReviveCount_unrepped) == 0x000F78, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::ReviveCount_unrepped' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, HasDied) == 0x000F7C, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::HasDied' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Dead_Baby_Material) == 0x000F80, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Dead_Baby_Material' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, WeakPointComp) == 0x000F88, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::WeakPointComp' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, WeakPointCmps) == 0x000F90, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::WeakPointCmps' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Debug) == 0x000FA0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Debug' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Owning_Player_Controller_Repped) == 0x000FA8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Owning_Player_Controller_Repped' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Owning_Player_State_Repped) == 0x000FB0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Owning_Player_State_Repped' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, SecondsWateredThisMatch) == 0x000FB8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::SecondsWateredThisMatch' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, MaxTimesASaplingCanBeWateredPerMatch) == 0x000FC0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::MaxTimesASaplingCanBeWateredPerMatch' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, NumSecondsWateredForReaction) == 0x000FE8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::NumSecondsWateredForReaction' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, LastWateredTime) == 0x001010, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::LastWateredTime' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, WaterTimerHandle) == 0x001018, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::WaterTimerHandle' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, NumTimesWateredThisMatch) == 0x001020, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::NumTimesWateredThisMatch' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, IsBeingWatered) == 0x001024, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::IsBeingWatered' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, DestroyedForTransplant) == 0x001025, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::DestroyedForTransplant' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, DestroyedFromAging) == 0x001026, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::DestroyedFromAging' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, NumCurrentWeeds) == 0x001028, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::NumCurrentWeeds' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, LastWeededDateTime) == 0x001030, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::LastWeededDateTime' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, DebugTimespanOffset) == 0x001038, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::DebugTimespanOffset' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, DayOffset) == 0x001040, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::DayOffset' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, MinuteOffset) == 0x001044, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::MinuteOffset' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, NeedsWeeding) == 0x001048, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::NeedsWeeding' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Fruit1State) == 0x00104C, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Fruit1State' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Fruit2State) == 0x001050, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Fruit2State' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Fruit3State) == 0x001054, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Fruit3State' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, InitialSaplingFruitVariant) == 0x001058, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::InitialSaplingFruitVariant' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, HasSpawnedMythic) == 0x001059, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::HasSpawnedMythic' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, isInSafeZone) == 0x00105A, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::isInSafeZone' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Persistent_Sapling_Data_Fruit_States) == 0x001060, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Persistent_Sapling_Data_Fruit_States' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, SaplingUpdateEvent) == 0x001070, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::SaplingUpdateEvent' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, MovedSaplingPersistentData) == 0x001080, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::MovedSaplingPersistentData' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, FruitSpawnSound) == 0x0010E0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::FruitSpawnSound' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, NurturedSound) == 0x0010E8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::NurturedSound' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, DamagedSound) == 0x0010F0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::DamagedSound' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Dead_Youth_Material) == 0x0010F8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Dead_Youth_Material' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Dead_Mature_Material) == 0x001100, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Dead_Mature_Material' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Dead_Stump_Material) == 0x001108, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Dead_Stump_Material' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, SaplingTransplanted) == 0x001110, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::SaplingTransplanted' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, PersistentDataWhenSpawned) == 0x001118, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::PersistentDataWhenSpawned' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, PlantedSound) == 0x001178, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::PlantedSound' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, PlanterPlayerController) == 0x001180, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::PlanterPlayerController' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, SaplingBPReppedData) == 0x001188, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::SaplingBPReppedData' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, OverrideIsLocalPlayerSapling) == 0x001190, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::OverrideIsLocalPlayerSapling' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, FruitFallsOffSaplingsWhenKilled) == 0x001191, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::FruitFallsOffSaplingsWhenKilled' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, Active_Static_Mesh_Comp) == 0x001198, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::Active_Static_Mesh_Comp' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, MoveOnZAxis) == 0x0011A0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::MoveOnZAxis' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, FruitGrowSound) == 0x0011A8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::FruitGrowSound' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, WitheringSound) == 0x0011B0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::WitheringSound' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, DelayForPartialNurtureCelebration) == 0x0011B8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::DelayForPartialNurtureCelebration' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, DelayForNurtureFruitUpgrade) == 0x0011E0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::DelayForNurtureFruitUpgrade' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, DelayForNurtureCelebration) == 0x001208, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::DelayForNurtureCelebration' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, MinNurturingLevel) == 0x001230, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::MinNurturingLevel' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, HasBeenInitialized) == 0x001258, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::HasBeenInitialized' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, IsGhost) == 0x001259, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::IsGhost' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, MaturityLevelWhenGroundItemsShowUp) == 0x001260, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::MaturityLevelWhenGroundItemsShowUp' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, SaplingsEnabled) == 0x001288, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::SaplingsEnabled' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, MythicFruitEnabled) == 0x0012B0, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::MythicFruitEnabled' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, OwningPlayerSocialAvatarIcon) == 0x0012D8, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::OwningPlayerSocialAvatarIcon' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, FoundMythic) == 0x001300, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::FoundMythic' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, OverrideMinBabyFruitsAtStartOfMatch) == 0x001308, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::OverrideMinBabyFruitsAtStartOfMatch' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, OverrideMinYouthFruitsAtStartOfMatch) == 0x001330, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::OverrideMinYouthFruitsAtStartOfMatch' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, OverrideMinAdultFruitsAtStartOfMatch) == 0x001358, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::OverrideMinAdultFruitsAtStartOfMatch' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, fruitStateCount) == 0x001380, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::fruitStateCount' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, youthCount) == 0x001384, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::youthCount' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, adultCount) == 0x001388, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::adultCount' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, babyConst) == 0x00138C, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::babyConst' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, youthConst) == 0x001390, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::youthConst' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, adultConst) == 0x001394, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::adultConst' has a wrong offset!");
static_assert(offsetof(AB_SMA_Athena_RealitySapling_Parent_C, SaplingDestroyedForTransplantEvent) == 0x001398, "Member 'AB_SMA_Athena_RealitySapling_Parent_C::SaplingDestroyedForTransplantEvent' has a wrong offset!");

}

