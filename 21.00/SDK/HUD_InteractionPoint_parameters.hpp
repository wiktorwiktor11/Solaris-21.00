#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_InteractionPoint

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function HUD_InteractionPoint.HUD_InteractionPoint_C.SetDistantIcon
// 0x00D0 (0x00D0 - 0x0000)
struct HUD_InteractionPoint_C_SetDistantIcon final
{
public:
	struct FSlateBrush                            Icon;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Default;                                           // 0x00C0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideArrow;                                         // 0x00C1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_InteractionPoint_C_SetDistantIcon) == 0x000010, "Wrong alignment on HUD_InteractionPoint_C_SetDistantIcon");
static_assert(sizeof(HUD_InteractionPoint_C_SetDistantIcon) == 0x0000D0, "Wrong size on HUD_InteractionPoint_C_SetDistantIcon");
static_assert(offsetof(HUD_InteractionPoint_C_SetDistantIcon, Icon) == 0x000000, "Member 'HUD_InteractionPoint_C_SetDistantIcon::Icon' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_SetDistantIcon, Default) == 0x0000C0, "Member 'HUD_InteractionPoint_C_SetDistantIcon::Default' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_SetDistantIcon, HideArrow) == 0x0000C1, "Member 'HUD_InteractionPoint_C_SetDistantIcon::HideArrow' has a wrong offset!");

// Function HUD_InteractionPoint.HUD_InteractionPoint_C.SetDetailIcon
// 0x00D0 (0x00D0 - 0x0000)
struct HUD_InteractionPoint_C_SetDetailIcon final
{
public:
	struct FSlateBrush                            Icon;                                              // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ShowWithText;                                      // 0x00C0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideArrow;                                         // 0x00C1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_InteractionPoint_C_SetDetailIcon) == 0x000010, "Wrong alignment on HUD_InteractionPoint_C_SetDetailIcon");
static_assert(sizeof(HUD_InteractionPoint_C_SetDetailIcon) == 0x0000D0, "Wrong size on HUD_InteractionPoint_C_SetDetailIcon");
static_assert(offsetof(HUD_InteractionPoint_C_SetDetailIcon, Icon) == 0x000000, "Member 'HUD_InteractionPoint_C_SetDetailIcon::Icon' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_SetDetailIcon, ShowWithText) == 0x0000C0, "Member 'HUD_InteractionPoint_C_SetDetailIcon::ShowWithText' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_SetDetailIcon, HideArrow) == 0x0000C1, "Member 'HUD_InteractionPoint_C_SetDetailIcon::HideArrow' has a wrong offset!");

// Function HUD_InteractionPoint.HUD_InteractionPoint_C.ExecuteUbergraph_HUD_InteractionPoint
// 0x0290 (0x0290 - 0x0000)
struct HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_DetailText;                     // 0x0020(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0090(0x0018)()
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_CustomEvent_Icon_1;                         // 0x00B0(0x00C0)()
	bool                                          K2Node_CustomEvent_Default;                        // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_HideArrow_1;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0xE];                                      // 0x0172(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_CustomEvent_Icon;                           // 0x0180(0x00C0)()
	bool                                          K2Node_CustomEvent_ShowWithText;                   // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_HideArrow;                      // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_4;                           // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isClamped;                      // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_266[0x2];                                      // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_Position;                       // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowDetail;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x2];                                      // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_6;                           // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayAnimationByName_ReturnValue;          // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayAnimationByName_ReturnValue_1;        // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint) == 0x000010, "Wrong alignment on HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint");
static_assert(sizeof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint) == 0x000290, "Wrong size on HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, EntryPoint) == 0x000000, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, CallFunc_MakeLiteralName_ReturnValue) == 0x000004, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_bool_Variable) == 0x000008, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_int_Variable) == 0x00000C, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_int_Variable_1) == 0x000010, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_bool_Variable_1) == 0x000014, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_byte_Variable) == 0x000015, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_byte_Variable_1) == 0x000016, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_bool_Variable_2) == 0x000017, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_byte_Variable_2) == 0x000018, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_byte_Variable_3) == 0x000019, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_bool_Variable_3) == 0x00001A, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_byte_Variable_4) == 0x00001B, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_byte_Variable_5) == 0x00001C, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_byte_Variable_6) == 0x00001D, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_CustomEvent_DetailText) == 0x000020, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_CustomEvent_DetailText' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_byte_Variable_7) == 0x000038, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, CallFunc_Split_LeftS) == 0x000050, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, CallFunc_Split_RightS) == 0x000060, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, CallFunc_Split_ReturnValue) == 0x000070, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_bool_Variable_4) == 0x000071, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000090, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_CustomEvent_Icon_1) == 0x0000B0, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_CustomEvent_Icon_1' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_CustomEvent_Default) == 0x000170, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_CustomEvent_Default' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_CustomEvent_HideArrow_1) == 0x000171, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_CustomEvent_HideArrow_1' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_CustomEvent_Icon) == 0x000180, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_CustomEvent_ShowWithText) == 0x000240, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_CustomEvent_ShowWithText' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_CustomEvent_HideArrow) == 0x000241, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_CustomEvent_HideArrow' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_Select_Default) == 0x000242, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_Select_Default_1) == 0x000243, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_Select_Default_2) == 0x000244, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_Select_Default_3) == 0x000248, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_int_Variable_2) == 0x00024C, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_int_Variable_3) == 0x000250, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_bool_Variable_5) == 0x000254, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_Select_Default_4) == 0x000258, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_int_Variable_4) == 0x00025C, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_int_Variable_5) == 0x000260, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, Temp_bool_Variable_6) == 0x000264, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_CustomEvent_isClamped) == 0x000265, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_CustomEvent_isClamped' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_CustomEvent_Position) == 0x000268, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_CustomEvent_Position' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_CustomEvent_ShowDetail) == 0x000278, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_CustomEvent_ShowDetail' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_Select_Default_5) == 0x000279, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, K2Node_Select_Default_6) == 0x00027C, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000280, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, CallFunc_PlayAnimationByName_ReturnValue) == 0x000284, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::CallFunc_PlayAnimationByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint, CallFunc_PlayAnimationByName_ReturnValue_1) == 0x000285, "Member 'HUD_InteractionPoint_C_ExecuteUbergraph_HUD_InteractionPoint::CallFunc_PlayAnimationByName_ReturnValue_1' has a wrong offset!");

// Function HUD_InteractionPoint.HUD_InteractionPoint_C.EventShowDetail
// 0x0001 (0x0001 - 0x0000)
struct HUD_InteractionPoint_C_EventShowDetail final
{
public:
	bool                                          ShowDetail;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_InteractionPoint_C_EventShowDetail) == 0x000001, "Wrong alignment on HUD_InteractionPoint_C_EventShowDetail");
static_assert(sizeof(HUD_InteractionPoint_C_EventShowDetail) == 0x000001, "Wrong size on HUD_InteractionPoint_C_EventShowDetail");
static_assert(offsetof(HUD_InteractionPoint_C_EventShowDetail, ShowDetail) == 0x000000, "Member 'HUD_InteractionPoint_C_EventShowDetail::ShowDetail' has a wrong offset!");

// Function HUD_InteractionPoint.HUD_InteractionPoint_C.EventSetText
// 0x0018 (0x0018 - 0x0000)
struct HUD_InteractionPoint_C_EventSetText final
{
public:
	class FText                                   DetailText_0;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(HUD_InteractionPoint_C_EventSetText) == 0x000008, "Wrong alignment on HUD_InteractionPoint_C_EventSetText");
static_assert(sizeof(HUD_InteractionPoint_C_EventSetText) == 0x000018, "Wrong size on HUD_InteractionPoint_C_EventSetText");
static_assert(offsetof(HUD_InteractionPoint_C_EventSetText, DetailText_0) == 0x000000, "Member 'HUD_InteractionPoint_C_EventSetText::DetailText_0' has a wrong offset!");

// Function HUD_InteractionPoint.HUD_InteractionPoint_C.EventClamp
// 0x0018 (0x0018 - 0x0000)
struct HUD_InteractionPoint_C_EventClamp final
{
public:
	bool                                          IsClamped;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Position;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_InteractionPoint_C_EventClamp) == 0x000008, "Wrong alignment on HUD_InteractionPoint_C_EventClamp");
static_assert(sizeof(HUD_InteractionPoint_C_EventClamp) == 0x000018, "Wrong size on HUD_InteractionPoint_C_EventClamp");
static_assert(offsetof(HUD_InteractionPoint_C_EventClamp, IsClamped) == 0x000000, "Member 'HUD_InteractionPoint_C_EventClamp::IsClamped' has a wrong offset!");
static_assert(offsetof(HUD_InteractionPoint_C_EventClamp, Position) == 0x000008, "Member 'HUD_InteractionPoint_C_EventClamp::Position' has a wrong offset!");

}

