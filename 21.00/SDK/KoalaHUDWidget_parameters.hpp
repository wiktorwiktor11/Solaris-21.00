#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KoalaHUDWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "KoalaUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function KoalaHUDWidget.KoalaHUDWidget_C.UpdateText
// 0x0080 (0x0080 - 0x0000)
struct KoalaHUDWidget_C_UpdateText final
{
public:
	EKoalaClipStatus                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)()
};
static_assert(alignof(KoalaHUDWidget_C_UpdateText) == 0x000008, "Wrong alignment on KoalaHUDWidget_C_UpdateText");
static_assert(sizeof(KoalaHUDWidget_C_UpdateText) == 0x000080, "Wrong size on KoalaHUDWidget_C_UpdateText");
static_assert(offsetof(KoalaHUDWidget_C_UpdateText, Temp_byte_Variable) == 0x000000, "Member 'KoalaHUDWidget_C_UpdateText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateText, Temp_text_Variable) == 0x000008, "Member 'KoalaHUDWidget_C_UpdateText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateText, Temp_text_Variable_1) == 0x000020, "Member 'KoalaHUDWidget_C_UpdateText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateText, Temp_text_Variable_2) == 0x000038, "Member 'KoalaHUDWidget_C_UpdateText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateText, Temp_text_Variable_3) == 0x000050, "Member 'KoalaHUDWidget_C_UpdateText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateText, K2Node_Select_Default) == 0x000068, "Member 'KoalaHUDWidget_C_UpdateText::K2Node_Select_Default' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.UpdateState
// 0x0030 (0x0030 - 0x0000)
struct KoalaHUDWidget_C_UpdateState final
{
public:
	EKoalaClipStatus                              NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBlockUpdate_BlockUpdate;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_UpdateState) == 0x000008, "Wrong alignment on KoalaHUDWidget_C_UpdateState");
static_assert(sizeof(KoalaHUDWidget_C_UpdateState) == 0x000030, "Wrong size on KoalaHUDWidget_C_UpdateState");
static_assert(offsetof(KoalaHUDWidget_C_UpdateState, NewState) == 0x000000, "Member 'KoalaHUDWidget_C_UpdateState::NewState' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateState, CallFunc_ShouldBlockUpdate_BlockUpdate) == 0x000001, "Member 'KoalaHUDWidget_C_UpdateState::CallFunc_ShouldBlockUpdate_BlockUpdate' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateState, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'KoalaHUDWidget_C_UpdateState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateState, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'KoalaHUDWidget_C_UpdateState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'KoalaHUDWidget_C_UpdateState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateState, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'KoalaHUDWidget_C_UpdateState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateState, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'KoalaHUDWidget_C_UpdateState::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_UpdateState, CallFunc_PlayAnimation_ReturnValue_2) == 0x000028, "Member 'KoalaHUDWidget_C_UpdateState::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.TriggerCapturedStateSpin
// 0x0008 (0x0008 - 0x0000)
struct KoalaHUDWidget_C_TriggerCapturedStateSpin final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_TriggerCapturedStateSpin) == 0x000008, "Wrong alignment on KoalaHUDWidget_C_TriggerCapturedStateSpin");
static_assert(sizeof(KoalaHUDWidget_C_TriggerCapturedStateSpin) == 0x000008, "Wrong size on KoalaHUDWidget_C_TriggerCapturedStateSpin");
static_assert(offsetof(KoalaHUDWidget_C_TriggerCapturedStateSpin, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'KoalaHUDWidget_C_TriggerCapturedStateSpin::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.StopCapturedStateSpin
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_C_StopCapturedStateSpin final
{
public:
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_StopCapturedStateSpin) == 0x000001, "Wrong alignment on KoalaHUDWidget_C_StopCapturedStateSpin");
static_assert(sizeof(KoalaHUDWidget_C_StopCapturedStateSpin) == 0x000001, "Wrong size on KoalaHUDWidget_C_StopCapturedStateSpin");
static_assert(offsetof(KoalaHUDWidget_C_StopCapturedStateSpin, CallFunc_IsAnimationPlayingForward_ReturnValue) == 0x000000, "Member 'KoalaHUDWidget_C_StopCapturedStateSpin::CallFunc_IsAnimationPlayingForward_ReturnValue' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.ShouldBlockUpdate
// 0x0010 (0x0010 - 0x0000)
struct KoalaHUDWidget_C_ShouldBlockUpdate final
{
public:
	EKoalaClipStatus                              NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlockUpdate;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUploadingClipCount_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_ShouldBlockUpdate) == 0x000004, "Wrong alignment on KoalaHUDWidget_C_ShouldBlockUpdate");
static_assert(sizeof(KoalaHUDWidget_C_ShouldBlockUpdate) == 0x000010, "Wrong size on KoalaHUDWidget_C_ShouldBlockUpdate");
static_assert(offsetof(KoalaHUDWidget_C_ShouldBlockUpdate, NewState) == 0x000000, "Member 'KoalaHUDWidget_C_ShouldBlockUpdate::NewState' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ShouldBlockUpdate, BlockUpdate) == 0x000001, "Member 'KoalaHUDWidget_C_ShouldBlockUpdate::BlockUpdate' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ShouldBlockUpdate, CallFunc_GetUploadingClipCount_ReturnValue) == 0x000004, "Member 'KoalaHUDWidget_C_ShouldBlockUpdate::CallFunc_GetUploadingClipCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ShouldBlockUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'KoalaHUDWidget_C_ShouldBlockUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ShouldBlockUpdate, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'KoalaHUDWidget_C_ShouldBlockUpdate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ShouldBlockUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'KoalaHUDWidget_C_ShouldBlockUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ShouldBlockUpdate, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'KoalaHUDWidget_C_ShouldBlockUpdate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ShouldBlockUpdate, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'KoalaHUDWidget_C_ShouldBlockUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ShouldBlockUpdate, CallFunc_BooleanAND_ReturnValue_1) == 0x00000D, "Member 'KoalaHUDWidget_C_ShouldBlockUpdate::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.SetNotificationVisuals
// 0x0228 (0x0228 - 0x0000)
struct KoalaHUDWidget_C_SetNotificationVisuals final
{
public:
	int32                                         InClipID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaClipStatus                              Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaClipStatus                              Temp_byte_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaClipStatus                              Temp_byte_Variable_2;                              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaClipStatus                              Temp_byte_Variable_3;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaClipStatus                              Temp_byte_Variable_4;                              // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_16;                           // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_17;                           // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_18;                           // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_19;                           // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_20;                           // 0x0154(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x019C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x01AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_21;                           // 0x01BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_4;                           // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_22;                           // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_23;                           // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_24;                           // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaClipStatus                              Temp_byte_Variable_5;                              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x020C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_SetNotificationVisuals) == 0x000008, "Wrong alignment on KoalaHUDWidget_C_SetNotificationVisuals");
static_assert(sizeof(KoalaHUDWidget_C_SetNotificationVisuals) == 0x000228, "Wrong size on KoalaHUDWidget_C_SetNotificationVisuals");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, InClipID) == 0x000000, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::InClipID' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable) == 0x000004, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_byte_Variable) == 0x000014, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_1) == 0x000018, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_2) == 0x000028, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_3) == 0x000038, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_4) == 0x000048, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_5) == 0x000058, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_byte_Variable_1) == 0x000068, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_6) == 0x00006C, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_7) == 0x00007C, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_8) == 0x00008C, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_9) == 0x00009C, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_10) == 0x0000AC, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_byte_Variable_2) == 0x0000BC, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_11) == 0x0000C0, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_12) == 0x0000D0, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_13) == 0x0000E0, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_14) == 0x0000F0, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_15) == 0x000100, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_byte_Variable_3) == 0x000110, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_byte_Variable_4) == 0x000111, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_16) == 0x000114, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_17) == 0x000124, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_18) == 0x000134, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_19) == 0x000144, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_20) == 0x000154, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000168, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, K2Node_Select_Default) == 0x000170, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, K2Node_Select_Default_1) == 0x000180, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000190, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000198, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, K2Node_Select_Default_2) == 0x00019C, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, K2Node_Select_Default_3) == 0x0001AC, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_21) == 0x0001BC, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, K2Node_Select_Default_4) == 0x0001D0, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_22) == 0x0001D8, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_23) == 0x0001E8, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_23' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_struct_Variable_24) == 0x0001F8, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_struct_Variable_24' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, Temp_byte_Variable_5) == 0x000208, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, K2Node_Select_Default_5) == 0x00020C, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_SetNotificationVisuals, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000220, "Member 'KoalaHUDWidget_C_SetNotificationVisuals::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_PreConstruct) == 0x000001, "Wrong alignment on KoalaHUDWidget_C_PreConstruct");
static_assert(sizeof(KoalaHUDWidget_C_PreConstruct) == 0x000001, "Wrong size on KoalaHUDWidget_C_PreConstruct");
static_assert(offsetof(KoalaHUDWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'KoalaHUDWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.PlayIntro
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_C_PlayIntro final
{
public:
	bool                                          bQuickIntro;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_PlayIntro) == 0x000001, "Wrong alignment on KoalaHUDWidget_C_PlayIntro");
static_assert(sizeof(KoalaHUDWidget_C_PlayIntro) == 0x000001, "Wrong size on KoalaHUDWidget_C_PlayIntro");
static_assert(offsetof(KoalaHUDWidget_C_PlayIntro, bQuickIntro) == 0x000000, "Member 'KoalaHUDWidget_C_PlayIntro::bQuickIntro' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.OnReminderTimerStarted
// 0x0004 (0x0004 - 0x0000)
struct KoalaHUDWidget_C_OnReminderTimerStarted final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_OnReminderTimerStarted) == 0x000004, "Wrong alignment on KoalaHUDWidget_C_OnReminderTimerStarted");
static_assert(sizeof(KoalaHUDWidget_C_OnReminderTimerStarted) == 0x000004, "Wrong size on KoalaHUDWidget_C_OnReminderTimerStarted");
static_assert(offsetof(KoalaHUDWidget_C_OnReminderTimerStarted, Time) == 0x000000, "Member 'KoalaHUDWidget_C_OnReminderTimerStarted::Time' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.OnRecordingStatusChanged
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_C_OnRecordingStatusChanged final
{
public:
	EKoalaRecording                               InRecordingStatus;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_OnRecordingStatusChanged) == 0x000001, "Wrong alignment on KoalaHUDWidget_C_OnRecordingStatusChanged");
static_assert(sizeof(KoalaHUDWidget_C_OnRecordingStatusChanged) == 0x000001, "Wrong size on KoalaHUDWidget_C_OnRecordingStatusChanged");
static_assert(offsetof(KoalaHUDWidget_C_OnRecordingStatusChanged, InRecordingStatus) == 0x000000, "Member 'KoalaHUDWidget_C_OnRecordingStatusChanged::InRecordingStatus' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.OnInputProgress
// 0x0004 (0x0004 - 0x0000)
struct KoalaHUDWidget_C_OnInputProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_OnInputProgress) == 0x000004, "Wrong alignment on KoalaHUDWidget_C_OnInputProgress");
static_assert(sizeof(KoalaHUDWidget_C_OnInputProgress) == 0x000004, "Wrong size on KoalaHUDWidget_C_OnInputProgress");
static_assert(offsetof(KoalaHUDWidget_C_OnInputProgress, Progress) == 0x000000, "Member 'KoalaHUDWidget_C_OnInputProgress::Progress' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.OnCreateClipComplete
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_C_OnCreateClipComplete final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_OnCreateClipComplete) == 0x000001, "Wrong alignment on KoalaHUDWidget_C_OnCreateClipComplete");
static_assert(sizeof(KoalaHUDWidget_C_OnCreateClipComplete) == 0x000001, "Wrong size on KoalaHUDWidget_C_OnCreateClipComplete");
static_assert(offsetof(KoalaHUDWidget_C_OnCreateClipComplete, bSuccess) == 0x000000, "Member 'KoalaHUDWidget_C_OnCreateClipComplete::bSuccess' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.OnConnectionChanged
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_C_OnConnectionChanged final
{
public:
	EKoalaConnectionStatus                        InStatus;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_OnConnectionChanged) == 0x000001, "Wrong alignment on KoalaHUDWidget_C_OnConnectionChanged");
static_assert(sizeof(KoalaHUDWidget_C_OnConnectionChanged) == 0x000001, "Wrong size on KoalaHUDWidget_C_OnConnectionChanged");
static_assert(offsetof(KoalaHUDWidget_C_OnConnectionChanged, InStatus) == 0x000000, "Member 'KoalaHUDWidget_C_OnConnectionChanged::InStatus' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.OnClipStatusChanged
// 0x000C (0x000C - 0x0000)
struct KoalaHUDWidget_C_OnClipStatusChanged final
{
public:
	int32                                         InClipID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaClipStatus                              InClipStatus;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InUploadProgress;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_OnClipStatusChanged) == 0x000004, "Wrong alignment on KoalaHUDWidget_C_OnClipStatusChanged");
static_assert(sizeof(KoalaHUDWidget_C_OnClipStatusChanged) == 0x00000C, "Wrong size on KoalaHUDWidget_C_OnClipStatusChanged");
static_assert(offsetof(KoalaHUDWidget_C_OnClipStatusChanged, InClipID) == 0x000000, "Member 'KoalaHUDWidget_C_OnClipStatusChanged::InClipID' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_OnClipStatusChanged, InClipStatus) == 0x000004, "Member 'KoalaHUDWidget_C_OnClipStatusChanged::InClipStatus' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_OnClipStatusChanged, InUploadProgress) == 0x000008, "Member 'KoalaHUDWidget_C_OnClipStatusChanged::InUploadProgress' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.OnAvailabilityChanged
// 0x0001 (0x0001 - 0x0000)
struct KoalaHUDWidget_C_OnAvailabilityChanged final
{
public:
	EKoalaAvailability                            Availability;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_OnAvailabilityChanged) == 0x000001, "Wrong alignment on KoalaHUDWidget_C_OnAvailabilityChanged");
static_assert(sizeof(KoalaHUDWidget_C_OnAvailabilityChanged) == 0x000001, "Wrong size on KoalaHUDWidget_C_OnAvailabilityChanged");
static_assert(offsetof(KoalaHUDWidget_C_OnAvailabilityChanged, Availability) == 0x000000, "Member 'KoalaHUDWidget_C_OnAvailabilityChanged::Availability' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.On_CommonBorder_TouchArea_MouseButtonDown
// 0x02F8 (0x02F8 - 0x0000)
struct KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0188(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0240(0x00B8)()
};
static_assert(alignof(KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown) == 0x000008, "Wrong alignment on KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown");
static_assert(sizeof(KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown) == 0x0002F8, "Wrong size on KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown");
static_assert(offsetof(KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown, MyGeometry) == 0x000000, "Member 'KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown, MouseEvent) == 0x000040, "Member 'KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown, ReturnValue) == 0x0000D0, "Member 'KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000188, "Member 'KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000240, "Member 'KoalaHUDWidget_C_On_CommonBorder_TouchArea_MouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.FadeOut
// 0x0003 (0x0003 - 0x0000)
struct KoalaHUDWidget_C_FadeOut final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_FadeOut) == 0x000001, "Wrong alignment on KoalaHUDWidget_C_FadeOut");
static_assert(sizeof(KoalaHUDWidget_C_FadeOut) == 0x000003, "Wrong size on KoalaHUDWidget_C_FadeOut");
static_assert(offsetof(KoalaHUDWidget_C_FadeOut, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'KoalaHUDWidget_C_FadeOut::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_FadeOut, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'KoalaHUDWidget_C_FadeOut::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_FadeOut, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'KoalaHUDWidget_C_FadeOut::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.ExecuteUbergraph_KoalaHUDWidget
// 0x00C0 (0x00C0 - 0x0000)
struct KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSuccess;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaRecording                               K2Node_Event_InRecordingStatus;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Time;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InClipID;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaClipStatus                              K2Node_Event_InClipStatus;                         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InUploadProgress;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaConnectionStatus                        K2Node_Event_InStatus;                             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKoalaAvailability                            K2Node_Event_Availability;                         // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bQuickIntro;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Progress;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget) == 0x000008, "Wrong alignment on KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget");
static_assert(sizeof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget) == 0x0000C0, "Wrong size on KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, EntryPoint) == 0x000000, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, Temp_bool_Variable) == 0x000010, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Event_bSuccess) == 0x000011, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Event_bSuccess' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Event_InRecordingStatus) == 0x000012, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Event_InRecordingStatus' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Event_Time) == 0x000014, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000024, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Event_InClipID) == 0x000038, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Event_InClipID' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Event_InClipStatus) == 0x00003C, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Event_InClipStatus' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Event_InUploadProgress) == 0x000040, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Event_InUploadProgress' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Event_IsDesignTime) == 0x000044, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000060, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000068, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Event_InStatus) == 0x000071, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Event_InStatus' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Event_Availability) == 0x000072, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Event_Availability' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000073, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_CustomEvent_bQuickIntro) == 0x000074, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_CustomEvent_bQuickIntro' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000080, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000088, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Select_Default) == 0x000090, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_PlayAnimation_ReturnValue) == 0x0000A0, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, K2Node_Event_Progress) == 0x0000A8, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::K2Node_Event_Progress' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000B0, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000B8, "Member 'KoalaHUDWidget_C_ExecuteUbergraph_KoalaHUDWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.DelayedFadeout
// 0x0018 (0x0018 - 0x0000)
struct KoalaHUDWidget_C_DelayedFadeout final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_DelayedFadeout) == 0x000008, "Wrong alignment on KoalaHUDWidget_C_DelayedFadeout");
static_assert(sizeof(KoalaHUDWidget_C_DelayedFadeout) == 0x000018, "Wrong size on KoalaHUDWidget_C_DelayedFadeout");
static_assert(offsetof(KoalaHUDWidget_C_DelayedFadeout, Delay) == 0x000000, "Member 'KoalaHUDWidget_C_DelayedFadeout::Delay' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_DelayedFadeout, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'KoalaHUDWidget_C_DelayedFadeout::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_DelayedFadeout, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'KoalaHUDWidget_C_DelayedFadeout::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function KoalaHUDWidget.KoalaHUDWidget_C.AdjustForSafeFrame
// 0x00A0 (0x00A0 - 0x0000)
struct KoalaHUDWidget_C_AdjustForSafeFrame final
{
public:
	struct FVector4                               CallFunc_GetSafeZonePadding_SafePadding;           // 0x0000(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSafeZonePadding_SafePaddingScale;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_GetSafeZonePadding_SpillOverPadding;      // 0x0030(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_X;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KoalaHUDWidget_C_AdjustForSafeFrame) == 0x000010, "Wrong alignment on KoalaHUDWidget_C_AdjustForSafeFrame");
static_assert(sizeof(KoalaHUDWidget_C_AdjustForSafeFrame) == 0x0000A0, "Wrong size on KoalaHUDWidget_C_AdjustForSafeFrame");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_GetSafeZonePadding_SafePadding) == 0x000000, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_GetSafeZonePadding_SafePadding' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_GetSafeZonePadding_SafePaddingScale) == 0x000020, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_GetSafeZonePadding_SafePaddingScale' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_GetSafeZonePadding_SpillOverPadding) == 0x000030, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_GetSafeZonePadding_SpillOverPadding' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000050, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_BreakVector4_X) == 0x000058, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_BreakVector4_Y) == 0x00005C, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_BreakVector4_Z) == 0x000060, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_BreakVector4_W) == 0x000064, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, K2Node_MakeStruct_Margin) == 0x000068, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000078, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(KoalaHUDWidget_C_AdjustForSafeFrame, CallFunc_MakeVector2D_ReturnValue) == 0x000088, "Member 'KoalaHUDWidget_C_AdjustForSafeFrame::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

