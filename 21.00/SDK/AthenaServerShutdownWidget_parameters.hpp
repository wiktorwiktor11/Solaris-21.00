#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaServerShutdownWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AthenaServerShutdownWidget.AthenaServerShutdownWidget_C.ExecuteUbergraph_AthenaServerShutdownWidget
// 0x0014 (0x0014 - 0x0000)
struct AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainingTime;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainingTime_1;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_RemainingTime_2;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget) == 0x000004, "Wrong alignment on AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget");
static_assert(sizeof(AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget) == 0x000014, "Wrong size on AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget");
static_assert(offsetof(AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget, EntryPoint) == 0x000000, "Member 'AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget, K2Node_Event_RemainingTime) == 0x000004, "Member 'AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget::K2Node_Event_RemainingTime' has a wrong offset!");
static_assert(offsetof(AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget, K2Node_Event_RemainingTime_1) == 0x000008, "Member 'AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget::K2Node_Event_RemainingTime_1' has a wrong offset!");
static_assert(offsetof(AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget, K2Node_Event_RemainingTime_2) == 0x000010, "Member 'AthenaServerShutdownWidget_C_ExecuteUbergraph_AthenaServerShutdownWidget::K2Node_Event_RemainingTime_2' has a wrong offset!");

// Function AthenaServerShutdownWidget.AthenaServerShutdownWidget_C.OnStartShowing
// 0x0004 (0x0004 - 0x0000)
struct AthenaServerShutdownWidget_C_OnStartShowing final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaServerShutdownWidget_C_OnStartShowing) == 0x000004, "Wrong alignment on AthenaServerShutdownWidget_C_OnStartShowing");
static_assert(sizeof(AthenaServerShutdownWidget_C_OnStartShowing) == 0x000004, "Wrong size on AthenaServerShutdownWidget_C_OnStartShowing");
static_assert(offsetof(AthenaServerShutdownWidget_C_OnStartShowing, RemainingTime) == 0x000000, "Member 'AthenaServerShutdownWidget_C_OnStartShowing::RemainingTime' has a wrong offset!");

// Function AthenaServerShutdownWidget.AthenaServerShutdownWidget_C.OnStopShowing
// 0x0004 (0x0004 - 0x0000)
struct AthenaServerShutdownWidget_C_OnStopShowing final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaServerShutdownWidget_C_OnStopShowing) == 0x000004, "Wrong alignment on AthenaServerShutdownWidget_C_OnStopShowing");
static_assert(sizeof(AthenaServerShutdownWidget_C_OnStopShowing) == 0x000004, "Wrong size on AthenaServerShutdownWidget_C_OnStopShowing");
static_assert(offsetof(AthenaServerShutdownWidget_C_OnStopShowing, RemainingTime) == 0x000000, "Member 'AthenaServerShutdownWidget_C_OnStopShowing::RemainingTime' has a wrong offset!");

// Function AthenaServerShutdownWidget.AthenaServerShutdownWidget_C.OnUpdateCountdown
// 0x0004 (0x0004 - 0x0000)
struct AthenaServerShutdownWidget_C_OnUpdateCountdown final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaServerShutdownWidget_C_OnUpdateCountdown) == 0x000004, "Wrong alignment on AthenaServerShutdownWidget_C_OnUpdateCountdown");
static_assert(sizeof(AthenaServerShutdownWidget_C_OnUpdateCountdown) == 0x000004, "Wrong size on AthenaServerShutdownWidget_C_OnUpdateCountdown");
static_assert(offsetof(AthenaServerShutdownWidget_C_OnUpdateCountdown, RemainingTime) == 0x000000, "Member 'AthenaServerShutdownWidget_C_OnUpdateCountdown::RemainingTime' has a wrong offset!");

// Function AthenaServerShutdownWidget.AthenaServerShutdownWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaServerShutdownWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaServerShutdownWidget_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaServerShutdownWidget_C_PreConstruct");
static_assert(sizeof(AthenaServerShutdownWidget_C_PreConstruct) == 0x000001, "Wrong size on AthenaServerShutdownWidget_C_PreConstruct");
static_assert(offsetof(AthenaServerShutdownWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaServerShutdownWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaServerShutdownWidget.AthenaServerShutdownWidget_C.SetCountdownText
// 0x0088 (0x0088 - 0x0000)
struct AthenaServerShutdownWidget_C_SetCountdownText final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
};
static_assert(alignof(AthenaServerShutdownWidget_C_SetCountdownText) == 0x000008, "Wrong alignment on AthenaServerShutdownWidget_C_SetCountdownText");
static_assert(sizeof(AthenaServerShutdownWidget_C_SetCountdownText) == 0x000088, "Wrong size on AthenaServerShutdownWidget_C_SetCountdownText");
static_assert(offsetof(AthenaServerShutdownWidget_C_SetCountdownText, RemainingTime) == 0x000000, "Member 'AthenaServerShutdownWidget_C_SetCountdownText::RemainingTime' has a wrong offset!");
static_assert(offsetof(AthenaServerShutdownWidget_C_SetCountdownText, CallFunc_Round_ReturnValue) == 0x000004, "Member 'AthenaServerShutdownWidget_C_SetCountdownText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaServerShutdownWidget_C_SetCountdownText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'AthenaServerShutdownWidget_C_SetCountdownText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaServerShutdownWidget_C_SetCountdownText, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'AthenaServerShutdownWidget_C_SetCountdownText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AthenaServerShutdownWidget_C_SetCountdownText, K2Node_MakeArray_Array) == 0x000060, "Member 'AthenaServerShutdownWidget_C_SetCountdownText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AthenaServerShutdownWidget_C_SetCountdownText, CallFunc_Format_ReturnValue) == 0x000070, "Member 'AthenaServerShutdownWidget_C_SetCountdownText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

