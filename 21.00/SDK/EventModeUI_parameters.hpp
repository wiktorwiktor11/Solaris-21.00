#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventModeUI

#include "Basic.hpp"


namespace SDK::Params
{

// Function EventModeUI.FocusButton.HandleCanUseEventModeFocusChanged
// 0x0001 (0x0001 - 0x0000)
struct FocusButton_HandleCanUseEventModeFocusChanged final
{
public:
	bool                                          bCanUseEventModeFocus;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FocusButton_HandleCanUseEventModeFocusChanged) == 0x000001, "Wrong alignment on FocusButton_HandleCanUseEventModeFocusChanged");
static_assert(sizeof(FocusButton_HandleCanUseEventModeFocusChanged) == 0x000001, "Wrong size on FocusButton_HandleCanUseEventModeFocusChanged");
static_assert(offsetof(FocusButton_HandleCanUseEventModeFocusChanged, bCanUseEventModeFocus) == 0x000000, "Member 'FocusButton_HandleCanUseEventModeFocusChanged::bCanUseEventModeFocus' has a wrong offset!");

// Function EventModeUI.FocusButton.HandleEventModeFocusingChanged
// 0x0001 (0x0001 - 0x0000)
struct FocusButton_HandleEventModeFocusingChanged final
{
public:
	bool                                          bIsEventModeFocusing;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FocusButton_HandleEventModeFocusingChanged) == 0x000001, "Wrong alignment on FocusButton_HandleEventModeFocusingChanged");
static_assert(sizeof(FocusButton_HandleEventModeFocusingChanged) == 0x000001, "Wrong size on FocusButton_HandleEventModeFocusingChanged");
static_assert(offsetof(FocusButton_HandleEventModeFocusingChanged, bIsEventModeFocusing) == 0x000000, "Member 'FocusButton_HandleEventModeFocusingChanged::bIsEventModeFocusing' has a wrong offset!");

// Function EventModeUI.FortEventModeEmotesWidget.OnFocusAvailableChanged
// 0x0001 (0x0001 - 0x0000)
struct FortEventModeEmotesWidget_OnFocusAvailableChanged final
{
public:
	bool                                          bIsFocusAvailable;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortEventModeEmotesWidget_OnFocusAvailableChanged) == 0x000001, "Wrong alignment on FortEventModeEmotesWidget_OnFocusAvailableChanged");
static_assert(sizeof(FortEventModeEmotesWidget_OnFocusAvailableChanged) == 0x000001, "Wrong size on FortEventModeEmotesWidget_OnFocusAvailableChanged");
static_assert(offsetof(FortEventModeEmotesWidget_OnFocusAvailableChanged, bIsFocusAvailable) == 0x000000, "Member 'FortEventModeEmotesWidget_OnFocusAvailableChanged::bIsFocusAvailable' has a wrong offset!");

// Function EventModeUI.FortEventModeEmotesWidget.OnFocusStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FortEventModeEmotesWidget_OnFocusStateChanged final
{
public:
	bool                                          bIsFocusing;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortEventModeEmotesWidget_OnFocusStateChanged) == 0x000001, "Wrong alignment on FortEventModeEmotesWidget_OnFocusStateChanged");
static_assert(sizeof(FortEventModeEmotesWidget_OnFocusStateChanged) == 0x000001, "Wrong size on FortEventModeEmotesWidget_OnFocusStateChanged");
static_assert(offsetof(FortEventModeEmotesWidget_OnFocusStateChanged, bIsFocusing) == 0x000000, "Member 'FortEventModeEmotesWidget_OnFocusStateChanged::bIsFocusing' has a wrong offset!");

// Function EventModeUI.FortMobileActionButtonBehavior_Focus.HandleCanUseEventModeFocusChanged
// 0x0001 (0x0001 - 0x0000)
struct FortMobileActionButtonBehavior_Focus_HandleCanUseEventModeFocusChanged final
{
public:
	bool                                          bCanUseEventModeFocus;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMobileActionButtonBehavior_Focus_HandleCanUseEventModeFocusChanged) == 0x000001, "Wrong alignment on FortMobileActionButtonBehavior_Focus_HandleCanUseEventModeFocusChanged");
static_assert(sizeof(FortMobileActionButtonBehavior_Focus_HandleCanUseEventModeFocusChanged) == 0x000001, "Wrong size on FortMobileActionButtonBehavior_Focus_HandleCanUseEventModeFocusChanged");
static_assert(offsetof(FortMobileActionButtonBehavior_Focus_HandleCanUseEventModeFocusChanged, bCanUseEventModeFocus) == 0x000000, "Member 'FortMobileActionButtonBehavior_Focus_HandleCanUseEventModeFocusChanged::bCanUseEventModeFocus' has a wrong offset!");

// Function EventModeUI.FortMobileActionButtonBehavior_Focus.HandleEventModeFocusingChanged
// 0x0001 (0x0001 - 0x0000)
struct FortMobileActionButtonBehavior_Focus_HandleEventModeFocusingChanged final
{
public:
	bool                                          bIsEventModeFocusing;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMobileActionButtonBehavior_Focus_HandleEventModeFocusingChanged) == 0x000001, "Wrong alignment on FortMobileActionButtonBehavior_Focus_HandleEventModeFocusingChanged");
static_assert(sizeof(FortMobileActionButtonBehavior_Focus_HandleEventModeFocusingChanged) == 0x000001, "Wrong size on FortMobileActionButtonBehavior_Focus_HandleEventModeFocusingChanged");
static_assert(offsetof(FortMobileActionButtonBehavior_Focus_HandleEventModeFocusingChanged, bIsEventModeFocusing) == 0x000000, "Member 'FortMobileActionButtonBehavior_Focus_HandleEventModeFocusingChanged::bIsEventModeFocusing' has a wrong offset!");

}

