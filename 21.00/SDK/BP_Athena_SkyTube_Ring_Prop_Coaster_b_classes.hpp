#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Athena_SkyTube_Ring_Prop_Coaster_b

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Athena_SkyTube_Ring_Prop_Coaster_b.BP_Athena_SkyTube_Ring_Prop_Coaster_b_C
// 0x0040 (0x0EB8 - 0x0E78)
class ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C final : public AFortSkyTubeAnchorVertical
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E78(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        AmbientAudio;                                      // 0x0E80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Wind_Tunnel_Connector;                          // 0x0E88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0E90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_NeoTilted_Conduit_Base;                          // 0x0E98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_NeoTilted_Conduit_Pole;                          // 0x0EA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BaseOffset;                                        // 0x0EA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Base_Rotation;                                     // 0x0EAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RingOnly;                                          // 0x0EB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoWindMesh;                                        // 0x0EB1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB2[0x2];                                      // 0x0EB2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           EnterCue;                                          // 0x0EB4(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AreTubesEnabled(bool* Enabled);
	void ExecuteUbergraph_BP_Athena_SkyTube_Ring_Prop_Coaster_b(int32 EntryPoint);
	void OnEnabledChanged();
	void PawnPassedThroughConduit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void PlaylistLoaded(class FName PlaylistName, const struct FGameplayTagContainer& PlaylistContextTags);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Athena_SkyTube_Ring_Prop_Coaster_b_C">();
	}
	static class ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C>();
	}
};
static_assert(alignof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C) == 0x000008, "Wrong alignment on ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C");
static_assert(sizeof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C) == 0x000EB8, "Wrong size on ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, UberGraphFrame) == 0x000E78, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, AmbientAudio) == 0x000E80, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::AmbientAudio' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, SM_Wind_Tunnel_Connector) == 0x000E88, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::SM_Wind_Tunnel_Connector' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, Capsule) == 0x000E90, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, S_NeoTilted_Conduit_Base) == 0x000E98, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::S_NeoTilted_Conduit_Base' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, S_NeoTilted_Conduit_Pole) == 0x000EA0, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::S_NeoTilted_Conduit_Pole' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, BaseOffset) == 0x000EA8, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::BaseOffset' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, Base_Rotation) == 0x000EAC, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::Base_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, RingOnly) == 0x000EB0, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::RingOnly' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, NoWindMesh) == 0x000EB1, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::NoWindMesh' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C, EnterCue) == 0x000EB4, "Member 'ABP_Athena_SkyTube_Ring_Prop_Coaster_b_C::EnterCue' has a wrong offset!");

}

