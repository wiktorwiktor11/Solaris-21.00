#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GenericConsume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_GenericConsume.GA_GenericConsume_C
// 0x0030 (0x0B40 - 0x0B10)
class UGA_GenericConsume_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnimMontage*                           MontageToPlay;                                     // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              GESpecToApply;                                     // 0x0B20(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          GESpecAlreadyApplied;                              // 0x0B30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B31[0x7];                                      // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   ForceFeedback;                                     // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Cancelled_4BF174EF4ED7A4C301F86F8B87D7E4ED(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_4BF174EF4ED7A4C301F86F8B87D7E4ED(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void DropHeldObject();
	void ExecuteUbergraph_GA_GenericConsume(int32 EntryPoint);
	void K2_ActivateAbility();
	void OnGenericNotifyFromAnimation(const struct FGameplayTag& NotifyTag);
	void Triggered_4BF174EF4ED7A4C301F86F8B87D7E4ED(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_GenericConsume_C">();
	}
	static class UGA_GenericConsume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_GenericConsume_C>();
	}
};
static_assert(alignof(UGA_GenericConsume_C) == 0x000008, "Wrong alignment on UGA_GenericConsume_C");
static_assert(sizeof(UGA_GenericConsume_C) == 0x000B40, "Wrong size on UGA_GenericConsume_C");
static_assert(offsetof(UGA_GenericConsume_C, UberGraphFrame) == 0x000B10, "Member 'UGA_GenericConsume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_GenericConsume_C, MontageToPlay) == 0x000B18, "Member 'UGA_GenericConsume_C::MontageToPlay' has a wrong offset!");
static_assert(offsetof(UGA_GenericConsume_C, GESpecToApply) == 0x000B20, "Member 'UGA_GenericConsume_C::GESpecToApply' has a wrong offset!");
static_assert(offsetof(UGA_GenericConsume_C, GESpecAlreadyApplied) == 0x000B30, "Member 'UGA_GenericConsume_C::GESpecAlreadyApplied' has a wrong offset!");
static_assert(offsetof(UGA_GenericConsume_C, ForceFeedback) == 0x000B38, "Member 'UGA_GenericConsume_C::ForceFeedback' has a wrong offset!");

}

