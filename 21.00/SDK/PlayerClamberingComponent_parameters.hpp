#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerClamberingComponent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "ClamberingCodeRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.UpdateClamberLocationHighlight
// 0x0330 (0x0330 - 0x0000)
struct PlayerClamberingComponent_C_UpdateClamberLocationHighlight final
{
public:
	struct FClamberingTargetingData               TargetingData;                                     // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetClamberLocationHighlightTransform_Transform; // 0x00E0(0x0060)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClamberLocationHighlightTransform_Rotation; // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0158(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0240(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_UpdateClamberLocationHighlight) == 0x000010, "Wrong alignment on PlayerClamberingComponent_C_UpdateClamberLocationHighlight");
static_assert(sizeof(PlayerClamberingComponent_C_UpdateClamberLocationHighlight) == 0x000330, "Wrong size on PlayerClamberingComponent_C_UpdateClamberLocationHighlight");
static_assert(offsetof(PlayerClamberingComponent_C_UpdateClamberLocationHighlight, TargetingData) == 0x000000, "Member 'PlayerClamberingComponent_C_UpdateClamberLocationHighlight::TargetingData' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_UpdateClamberLocationHighlight, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000D0, "Member 'PlayerClamberingComponent_C_UpdateClamberLocationHighlight::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_UpdateClamberLocationHighlight, CallFunc_GetClamberLocationHighlightTransform_Transform) == 0x0000E0, "Member 'PlayerClamberingComponent_C_UpdateClamberLocationHighlight::CallFunc_GetClamberLocationHighlightTransform_Transform' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_UpdateClamberLocationHighlight, CallFunc_GetClamberLocationHighlightTransform_Rotation) == 0x000140, "Member 'PlayerClamberingComponent_C_UpdateClamberLocationHighlight::CallFunc_GetClamberLocationHighlightTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_UpdateClamberLocationHighlight, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000158, "Member 'PlayerClamberingComponent_C_UpdateClamberLocationHighlight::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_UpdateClamberLocationHighlight, CallFunc_IsValid_ReturnValue) == 0x000238, "Member 'PlayerClamberingComponent_C_UpdateClamberLocationHighlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_UpdateClamberLocationHighlight, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000240, "Member 'PlayerClamberingComponent_C_UpdateClamberLocationHighlight::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_UpdateClamberLocationHighlight, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000320, "Member 'PlayerClamberingComponent_C_UpdateClamberLocationHighlight::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.ShouldTutorialBeEnabled
// 0x0030 (0x0030 - 0x0000)
struct PlayerClamberingComponent_C_ShouldTutorialBeEnabled final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_ShouldTutorialBeEnabled) == 0x000008, "Wrong alignment on PlayerClamberingComponent_C_ShouldTutorialBeEnabled");
static_assert(sizeof(PlayerClamberingComponent_C_ShouldTutorialBeEnabled) == 0x000030, "Wrong size on PlayerClamberingComponent_C_ShouldTutorialBeEnabled");
static_assert(offsetof(PlayerClamberingComponent_C_ShouldTutorialBeEnabled, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'PlayerClamberingComponent_C_ShouldTutorialBeEnabled::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ShouldTutorialBeEnabled, K2Node_DynamicCast_AsFort_Pawn) == 0x000008, "Member 'PlayerClamberingComponent_C_ShouldTutorialBeEnabled::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ShouldTutorialBeEnabled, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PlayerClamberingComponent_C_ShouldTutorialBeEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ShouldTutorialBeEnabled, CallFunc_GetLocalRole_ReturnValue) == 0x000011, "Member 'PlayerClamberingComponent_C_ShouldTutorialBeEnabled::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ShouldTutorialBeEnabled, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'PlayerClamberingComponent_C_ShouldTutorialBeEnabled::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ShouldTutorialBeEnabled, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'PlayerClamberingComponent_C_ShouldTutorialBeEnabled::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ShouldTutorialBeEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'PlayerClamberingComponent_C_ShouldTutorialBeEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.SetUISceneVisible
// 0x0070 (0x0070 - 0x0000)
struct PlayerClamberingComponent_C_SetUISceneVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue_1;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAutoClamberingEnabled_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0044(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAthena_PlayerController_C*             K2Node_DynamicCast_AsAthena_Player_Controller;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_3;                              // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShowUIPrompt_bCanShow;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0064(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x0068(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_SetUISceneVisible) == 0x000008, "Wrong alignment on PlayerClamberingComponent_C_SetUISceneVisible");
static_assert(sizeof(PlayerClamberingComponent_C_SetUISceneVisible) == 0x000070, "Wrong size on PlayerClamberingComponent_C_SetUISceneVisible");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, bVisible) == 0x000000, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::bVisible' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, Temp_name_Variable) == 0x000004, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, Temp_bool_Variable) == 0x000008, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, Temp_name_Variable_1) == 0x00000C, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, Temp_name_Variable_2) == 0x000010, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, Temp_bool_Variable_1) == 0x000014, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, CallFunc_GetContext_ReturnValue_1) == 0x000020, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, CallFunc_IsAutoClamberingEnabled_ReturnValue) == 0x000028, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::CallFunc_IsAutoClamberingEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, K2Node_DynamicCast_AsFort_Pawn) == 0x000038, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, K2Node_Select_Default) == 0x000044, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, CallFunc_GetController_ReturnValue) == 0x000048, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, K2Node_DynamicCast_AsAthena_Player_Controller) == 0x000050, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::K2Node_DynamicCast_AsAthena_Player_Controller' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, Temp_name_Variable_3) == 0x00005C, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, CallFunc_IsUsingGamepad_ReturnValue) == 0x000060, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, CallFunc_CanShowUIPrompt_bCanShow) == 0x000061, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::CallFunc_CanShowUIPrompt_bCanShow' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, Temp_bool_Variable_2) == 0x000062, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, K2Node_Select_Default_1) == 0x000064, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_SetUISceneVisible, K2Node_Select_Default_2) == 0x000068, "Member 'PlayerClamberingComponent_C_SetUISceneVisible::K2Node_Select_Default_2' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PlayerClamberingComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on PlayerClamberingComponent_C_ReceiveTick");
static_assert(sizeof(PlayerClamberingComponent_C_ReceiveTick) == 0x000004, "Wrong size on PlayerClamberingComponent_C_ReceiveTick");
static_assert(offsetof(PlayerClamberingComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PlayerClamberingComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.HandleTargetingDataValid
// 0x00D0 (0x00D0 - 0x0000)
struct PlayerClamberingComponent_C_HandleTargetingDataValid final
{
public:
	struct FClamberingTargetingData               TargetingData;                                     // 0x0000(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlayerClamberingComponent_C_HandleTargetingDataValid) == 0x000008, "Wrong alignment on PlayerClamberingComponent_C_HandleTargetingDataValid");
static_assert(sizeof(PlayerClamberingComponent_C_HandleTargetingDataValid) == 0x0000D0, "Wrong size on PlayerClamberingComponent_C_HandleTargetingDataValid");
static_assert(offsetof(PlayerClamberingComponent_C_HandleTargetingDataValid, TargetingData) == 0x000000, "Member 'PlayerClamberingComponent_C_HandleTargetingDataValid::TargetingData' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.HandleClamberStateStopped
// 0x0010 (0x0010 - 0x0000)
struct PlayerClamberingComponent_C_HandleClamberStateStopped final
{
public:
	class AFortPawn*                              Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EClamberingState                              ClamberingState;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_HandleClamberStateStopped) == 0x000008, "Wrong alignment on PlayerClamberingComponent_C_HandleClamberStateStopped");
static_assert(sizeof(PlayerClamberingComponent_C_HandleClamberStateStopped) == 0x000010, "Wrong size on PlayerClamberingComponent_C_HandleClamberStateStopped");
static_assert(offsetof(PlayerClamberingComponent_C_HandleClamberStateStopped, Pawn) == 0x000000, "Member 'PlayerClamberingComponent_C_HandleClamberStateStopped::Pawn' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_HandleClamberStateStopped, ClamberingState) == 0x000008, "Member 'PlayerClamberingComponent_C_HandleClamberStateStopped::ClamberingState' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.HandleClamberStateStarted
// 0x0010 (0x0010 - 0x0000)
struct PlayerClamberingComponent_C_HandleClamberStateStarted final
{
public:
	class AFortPawn*                              Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EClamberingState                              ClamberingState;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_HandleClamberStateStarted) == 0x000008, "Wrong alignment on PlayerClamberingComponent_C_HandleClamberStateStarted");
static_assert(sizeof(PlayerClamberingComponent_C_HandleClamberStateStarted) == 0x000010, "Wrong size on PlayerClamberingComponent_C_HandleClamberStateStarted");
static_assert(offsetof(PlayerClamberingComponent_C_HandleClamberStateStarted, Pawn) == 0x000000, "Member 'PlayerClamberingComponent_C_HandleClamberStateStarted::Pawn' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_HandleClamberStateStarted, ClamberingState) == 0x000008, "Member 'PlayerClamberingComponent_C_HandleClamberStateStarted::ClamberingState' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.GetClamberLocationHighlightTransform
// 0x01D0 (0x01D0 - 0x0000)
struct PlayerClamberingComponent_C_GetClamberLocationHighlightTransform final
{
public:
	struct FClamberingTargetingData               TargetingData;                                     // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FTransform                             Transform;                                         // 0x00D0(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FRotator                               Rotation;                                          // 0x0130(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0150(0x0060)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerClamberingComponent_C_GetClamberLocationHighlightTransform) == 0x000010, "Wrong alignment on PlayerClamberingComponent_C_GetClamberLocationHighlightTransform");
static_assert(sizeof(PlayerClamberingComponent_C_GetClamberLocationHighlightTransform) == 0x0001D0, "Wrong size on PlayerClamberingComponent_C_GetClamberLocationHighlightTransform");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberLocationHighlightTransform, TargetingData) == 0x000000, "Member 'PlayerClamberingComponent_C_GetClamberLocationHighlightTransform::TargetingData' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberLocationHighlightTransform, Transform) == 0x0000D0, "Member 'PlayerClamberingComponent_C_GetClamberLocationHighlightTransform::Transform' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberLocationHighlightTransform, Rotation) == 0x000130, "Member 'PlayerClamberingComponent_C_GetClamberLocationHighlightTransform::Rotation' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberLocationHighlightTransform, CallFunc_MakeTransform_ReturnValue) == 0x000150, "Member 'PlayerClamberingComponent_C_GetClamberLocationHighlightTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberLocationHighlightTransform, CallFunc_MakeRotFromX_ReturnValue) == 0x0001B0, "Member 'PlayerClamberingComponent_C_GetClamberLocationHighlightTransform::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.GetClamberAnimPlayRate
// 0x0018 (0x0018 - 0x0000)
struct PlayerClamberingComponent_C_GetClamberAnimPlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_GetClamberAnimPlayRate) == 0x000004, "Wrong alignment on PlayerClamberingComponent_C_GetClamberAnimPlayRate");
static_assert(sizeof(PlayerClamberingComponent_C_GetClamberAnimPlayRate) == 0x000018, "Wrong size on PlayerClamberingComponent_C_GetClamberAnimPlayRate");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberAnimPlayRate, PlayRate) == 0x000000, "Member 'PlayerClamberingComponent_C_GetClamberAnimPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberAnimPlayRate, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'PlayerClamberingComponent_C_GetClamberAnimPlayRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberAnimPlayRate, CallFunc_GetValueAtLevel_ReturnValue) == 0x000008, "Member 'PlayerClamberingComponent_C_GetClamberAnimPlayRate::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberAnimPlayRate, CallFunc_GetPlayLength_ReturnValue) == 0x00000C, "Member 'PlayerClamberingComponent_C_GetClamberAnimPlayRate::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberAnimPlayRate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'PlayerClamberingComponent_C_GetClamberAnimPlayRate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberAnimPlayRate, CallFunc_SafeDivide_ReturnValue) == 0x000014, "Member 'PlayerClamberingComponent_C_GetClamberAnimPlayRate::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.GetClamberAnim
// 0x0008 (0x0008 - 0x0000)
struct PlayerClamberingComponent_C_GetClamberAnim final
{
public:
	class UAnimMontage*                           Clamber_Anim;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_GetClamberAnim) == 0x000008, "Wrong alignment on PlayerClamberingComponent_C_GetClamberAnim");
static_assert(sizeof(PlayerClamberingComponent_C_GetClamberAnim) == 0x000008, "Wrong size on PlayerClamberingComponent_C_GetClamberAnim");
static_assert(offsetof(PlayerClamberingComponent_C_GetClamberAnim, Clamber_Anim) == 0x000000, "Member 'PlayerClamberingComponent_C_GetClamberAnim::Clamber_Anim' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.ExecuteUbergraph_PlayerClamberingComponent
// 0x0338 (0x0338 - 0x0000)
struct PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0018(0x00D0)(ContainsInstancedReference)
	float                                         CallFunc_GetClamberAnimPlayRate_PlayRate;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_CustomEvent_Pawn;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EClamberingState                              K2Node_CustomEvent_ClamberingState;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilitySystemComponent*            K2Node_DynamicCast_AsFort_Ability_System_Component; // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_CustomEvent_Pawn_1;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EClamberingState                              K2Node_CustomEvent_ClamberingState_1;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_1;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EClamberingState                              K2Node_Event_OldClamberingState;                   // 0x0183(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EClamberingState                              K2Node_Event_NewClamberingState;                   // 0x0184(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowClamberIndicator_ReturnValue;   // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_186[0x2];                                      // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClamberingTargetingData               K2Node_Event_TargetingData;                        // 0x0188(0x00D0)(ConstParm, NoDestructor, ContainsInstancedReference)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0258(0x0020)()
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue_1; // 0x0280(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue_2; // 0x02A0(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetClamberAnim_Clamber_Anim;              // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_2;                  // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue_1; // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilitySystemComponent*            K2Node_DynamicCast_AsFort_Ability_System_Component_1; // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue; // 0x031C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveLooseGameplayTags_ReturnValue;      // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent) == 0x000008, "Wrong alignment on PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent");
static_assert(sizeof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent) == 0x000338, "Wrong size on PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, EntryPoint) == 0x000000, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000018, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetClamberAnimPlayRate_PlayRate) == 0x0000E8, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetClamberAnimPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_CustomEvent_Pawn) == 0x0000F0, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_CustomEvent_ClamberingState) == 0x0000F8, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_CustomEvent_ClamberingState' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000100, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_SwitchEnum_CmpSuccess) == 0x000108, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_HasAuthority_ReturnValue_1) == 0x000109, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x000110, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000118, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_AsFort_Ability_System_Component) == 0x000120, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_AsFort_Ability_System_Component' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_CustomEvent_Pawn_1) == 0x000130, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_CustomEvent_Pawn_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_CustomEvent_ClamberingState_1) == 0x000138, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_CustomEvent_ClamberingState_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_SwitchEnum_CmpSuccess_1) == 0x000139, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x00013A, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_PlayAnimMontage_ReturnValue) == 0x00013C, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000140, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_AsFort_Pawn) == 0x000148, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetOwner_ReturnValue_3) == 0x000158, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_AsFort_Pawn_1) == 0x000160, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_AsFort_Pawn_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_IsValid_ReturnValue) == 0x000169, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetLocalRole_ReturnValue) == 0x00016A, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00016B, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetController_ReturnValue) == 0x000170, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000178, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_bSuccess_3) == 0x000180, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_IsInputKeyDown_ReturnValue) == 0x000181, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000182, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_Event_OldClamberingState) == 0x000183, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_Event_OldClamberingState' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_Event_NewClamberingState) == 0x000184, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_Event_NewClamberingState' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_ShouldShowClamberIndicator_ReturnValue) == 0x000185, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_ShouldShowClamberIndicator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_Event_TargetingData) == 0x000188, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_Event_TargetingData' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000258, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_Event_DeltaSeconds) == 0x000278, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue_1) == 0x000280, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue_2) == 0x0002A0, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_IsValid_ReturnValue_1) == 0x0002C0, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetClamberAnim_Clamber_Anim) == 0x0002C8, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetClamberAnim_Clamber_Anim' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetOwner_ReturnValue_4) == 0x0002D0, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetOwner_ReturnValue_5) == 0x0002D8, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_AsFort_Pawn_2) == 0x0002E0, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_AsFort_Pawn_2' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_bSuccess_4) == 0x0002E8, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0002F0, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_bSuccess_5) == 0x0002F8, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue_1) == 0x000300, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000308, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_AsFort_Ability_System_Component_1) == 0x000310, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_AsFort_Ability_System_Component_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, K2Node_DynamicCast_bSuccess_6) == 0x000318, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue) == 0x00031C, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000328, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x000330, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent, CallFunc_RemoveLooseGameplayTags_ReturnValue) == 0x000331, "Member 'PlayerClamberingComponent_C_ExecuteUbergraph_PlayerClamberingComponent::CallFunc_RemoveLooseGameplayTags_ReturnValue' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.DestroyClamberLocationHighlight
// 0x0001 (0x0001 - 0x0000)
struct PlayerClamberingComponent_C_DestroyClamberLocationHighlight final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_DestroyClamberLocationHighlight) == 0x000001, "Wrong alignment on PlayerClamberingComponent_C_DestroyClamberLocationHighlight");
static_assert(sizeof(PlayerClamberingComponent_C_DestroyClamberLocationHighlight) == 0x000001, "Wrong size on PlayerClamberingComponent_C_DestroyClamberLocationHighlight");
static_assert(offsetof(PlayerClamberingComponent_C_DestroyClamberLocationHighlight, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PlayerClamberingComponent_C_DestroyClamberLocationHighlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.CreateClamberLocationHighlight
// 0x0270 (0x0270 - 0x0000)
struct PlayerClamberingComponent_C_CreateClamberLocationHighlight final
{
public:
	struct FClamberingTargetingData               TargetingData;                                     // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetClamberLocationHighlightTransform_Transform; // 0x00E0(0x0060)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClamberLocationHighlightTransform_Rotation; // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Decal_ClamberHighlight_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0188(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlayerClamberingComponent_C_CreateClamberLocationHighlight) == 0x000010, "Wrong alignment on PlayerClamberingComponent_C_CreateClamberLocationHighlight");
static_assert(sizeof(PlayerClamberingComponent_C_CreateClamberLocationHighlight) == 0x000270, "Wrong size on PlayerClamberingComponent_C_CreateClamberLocationHighlight");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, TargetingData) == 0x000000, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::TargetingData' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, CallFunc_GetOwner_ReturnValue) == 0x0000D0, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, CallFunc_GetClamberLocationHighlightTransform_Transform) == 0x0000E0, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::CallFunc_GetClamberLocationHighlightTransform_Transform' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, CallFunc_GetClamberLocationHighlightTransform_Rotation) == 0x000140, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::CallFunc_GetClamberLocationHighlightTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, K2Node_DynamicCast_AsPawn) == 0x000158, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000168, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, CallFunc_FinishSpawningActor_ReturnValue) == 0x000178, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000180, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CreateClamberLocationHighlight, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000188, "Member 'PlayerClamberingComponent_C_CreateClamberLocationHighlight::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.CanShowUIPrompt
// 0x0003 (0x0003 - 0x0000)
struct PlayerClamberingComponent_C_CanShowUIPrompt final
{
public:
	bool                                          bCanShow;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_CanShowUIPrompt) == 0x000001, "Wrong alignment on PlayerClamberingComponent_C_CanShowUIPrompt");
static_assert(sizeof(PlayerClamberingComponent_C_CanShowUIPrompt) == 0x000003, "Wrong size on PlayerClamberingComponent_C_CanShowUIPrompt");
static_assert(offsetof(PlayerClamberingComponent_C_CanShowUIPrompt, bCanShow) == 0x000000, "Member 'PlayerClamberingComponent_C_CanShowUIPrompt::bCanShow' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CanShowUIPrompt, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'PlayerClamberingComponent_C_CanShowUIPrompt::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_CanShowUIPrompt, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PlayerClamberingComponent_C_CanShowUIPrompt::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.BP_HandleClamberingStateChanged
// 0x0002 (0x0002 - 0x0000)
struct PlayerClamberingComponent_C_BP_HandleClamberingStateChanged final
{
public:
	EClamberingState                              OldClamberingState;                                // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EClamberingState                              NewClamberingState;                                // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_BP_HandleClamberingStateChanged) == 0x000001, "Wrong alignment on PlayerClamberingComponent_C_BP_HandleClamberingStateChanged");
static_assert(sizeof(PlayerClamberingComponent_C_BP_HandleClamberingStateChanged) == 0x000002, "Wrong size on PlayerClamberingComponent_C_BP_HandleClamberingStateChanged");
static_assert(offsetof(PlayerClamberingComponent_C_BP_HandleClamberingStateChanged, OldClamberingState) == 0x000000, "Member 'PlayerClamberingComponent_C_BP_HandleClamberingStateChanged::OldClamberingState' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_HandleClamberingStateChanged, NewClamberingState) == 0x000001, "Member 'PlayerClamberingComponent_C_BP_HandleClamberingStateChanged::NewClamberingState' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.BP_CanStartTargeting
// 0x0050 (0x0050 - 0x0000)
struct PlayerClamberingComponent_C_BP_CanStartTargeting final
{
public:
	bool                                          bCanStartTargeting;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetDBNOHoistee_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHeldObjectComponent*               CallFunc_GetHeldObjectComponentAttachedToPlayer_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_BP_CanStartTargeting) == 0x000008, "Wrong alignment on PlayerClamberingComponent_C_BP_CanStartTargeting");
static_assert(sizeof(PlayerClamberingComponent_C_BP_CanStartTargeting) == 0x000050, "Wrong size on PlayerClamberingComponent_C_BP_CanStartTargeting");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartTargeting, bCanStartTargeting) == 0x000000, "Member 'PlayerClamberingComponent_C_BP_CanStartTargeting::bCanStartTargeting' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartTargeting, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'PlayerClamberingComponent_C_BP_CanStartTargeting::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartTargeting, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000010, "Member 'PlayerClamberingComponent_C_BP_CanStartTargeting::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartTargeting, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PlayerClamberingComponent_C_BP_CanStartTargeting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartTargeting, CallFunc_GetDBNOHoistee_ReturnValue) == 0x000020, "Member 'PlayerClamberingComponent_C_BP_CanStartTargeting::CallFunc_GetDBNOHoistee_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartTargeting, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000028, "Member 'PlayerClamberingComponent_C_BP_CanStartTargeting::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartTargeting, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000038, "Member 'PlayerClamberingComponent_C_BP_CanStartTargeting::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartTargeting, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'PlayerClamberingComponent_C_BP_CanStartTargeting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartTargeting, CallFunc_GetHeldObjectComponentAttachedToPlayer_ReturnValue) == 0x000040, "Member 'PlayerClamberingComponent_C_BP_CanStartTargeting::CallFunc_GetHeldObjectComponentAttachedToPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartTargeting, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'PlayerClamberingComponent_C_BP_CanStartTargeting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PlayerClamberingComponent.PlayerClamberingComponent_C.BP_CanStartClambering
// 0x0050 (0x0050 - 0x0000)
struct PlayerClamberingComponent_C_BP_CanStartClambering final
{
public:
	bool                                          bCanStartClambering;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerClamberingComponent_C_BP_CanStartClambering) == 0x000008, "Wrong alignment on PlayerClamberingComponent_C_BP_CanStartClambering");
static_assert(sizeof(PlayerClamberingComponent_C_BP_CanStartClambering) == 0x000050, "Wrong size on PlayerClamberingComponent_C_BP_CanStartClambering");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartClambering, bCanStartClambering) == 0x000000, "Member 'PlayerClamberingComponent_C_BP_CanStartClambering::bCanStartClambering' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartClambering, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'PlayerClamberingComponent_C_BP_CanStartClambering::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartClambering, K2Node_DynamicCast_AsFort_Pawn) == 0x000010, "Member 'PlayerClamberingComponent_C_BP_CanStartClambering::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartClambering, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PlayerClamberingComponent_C_BP_CanStartClambering::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartClambering, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000020, "Member 'PlayerClamberingComponent_C_BP_CanStartClambering::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartClambering, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000030, "Member 'PlayerClamberingComponent_C_BP_CanStartClambering::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartClambering, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000038, "Member 'PlayerClamberingComponent_C_BP_CanStartClambering::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PlayerClamberingComponent_C_BP_CanStartClambering, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000048, "Member 'PlayerClamberingComponent_C_BP_CanStartClambering::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");

}

