#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KnockbackRuntime

#include "Basic.hpp"

#include "KnockbackRuntime_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// Class KnockbackRuntime.FortAthenaMutator_Knockback
// 0x0240 (0x0558 - 0x0318)
class AFortAthenaMutator_Knockback final : public AFortAthenaMutator
{
public:
	bool                                          bStorePlayerKnockbackData;                         // 0x0318(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReplicatePlayerKnockbackData;                     // 0x0319(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31A[0x6];                                      // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(struct FKnockbackMutatorData& KnockbackData)> OnPlayerKnockbackDataChanged;                      // 0x0320(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FKnockbackMutatorDataArray             AllPlayersKnockbackData;                           // 0x0330(0x0120)(Net, NativeAccessSpecifierPublic)
	struct FScalableFloat                         bDisplayKnockbackDamageNumbersAsPercentage;        // 0x0450(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ConvertToKnockbackDamageMultiplier;                // 0x0478(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PercentDamageLowMaxThreshold;                      // 0x04A0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PercentDamageMediumMaxThreshold;                   // 0x04C8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         KnockbackMultiplierInitialValue;                   // 0x04F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4F4[0x64];                                     // 0x04F4(0x0064)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<struct FKnockbackMutatorData> GetAllPlayersKnockbackData();
	void HandleBlockedCharacterMovement(struct FHitResult* InOutImpact, class AFortPawn* FortPawn);
	void SetPlayersShouldBreakThroughStructures(const bool bActive, class AFortPlayerPawn* PlayerPawn);

	float GetKnockbackMultiplierInitialValue() const;
	float GetPercentDamageLowMaxThreshold() const;
	float GetPercentDamageMediumMaxThreshold() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAthenaMutator_Knockback">();
	}
	static class AFortAthenaMutator_Knockback* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFortAthenaMutator_Knockback>();
	}
};
static_assert(alignof(AFortAthenaMutator_Knockback) == 0x000008, "Wrong alignment on AFortAthenaMutator_Knockback");
static_assert(sizeof(AFortAthenaMutator_Knockback) == 0x000558, "Wrong size on AFortAthenaMutator_Knockback");
static_assert(offsetof(AFortAthenaMutator_Knockback, bStorePlayerKnockbackData) == 0x000318, "Member 'AFortAthenaMutator_Knockback::bStorePlayerKnockbackData' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Knockback, bReplicatePlayerKnockbackData) == 0x000319, "Member 'AFortAthenaMutator_Knockback::bReplicatePlayerKnockbackData' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Knockback, OnPlayerKnockbackDataChanged) == 0x000320, "Member 'AFortAthenaMutator_Knockback::OnPlayerKnockbackDataChanged' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Knockback, AllPlayersKnockbackData) == 0x000330, "Member 'AFortAthenaMutator_Knockback::AllPlayersKnockbackData' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Knockback, bDisplayKnockbackDamageNumbersAsPercentage) == 0x000450, "Member 'AFortAthenaMutator_Knockback::bDisplayKnockbackDamageNumbersAsPercentage' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Knockback, ConvertToKnockbackDamageMultiplier) == 0x000478, "Member 'AFortAthenaMutator_Knockback::ConvertToKnockbackDamageMultiplier' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Knockback, PercentDamageLowMaxThreshold) == 0x0004A0, "Member 'AFortAthenaMutator_Knockback::PercentDamageLowMaxThreshold' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Knockback, PercentDamageMediumMaxThreshold) == 0x0004C8, "Member 'AFortAthenaMutator_Knockback::PercentDamageMediumMaxThreshold' has a wrong offset!");
static_assert(offsetof(AFortAthenaMutator_Knockback, KnockbackMultiplierInitialValue) == 0x0004F0, "Member 'AFortAthenaMutator_Knockback::KnockbackMultiplierInitialValue' has a wrong offset!");

// Class KnockbackRuntime.FortGameplayAbility_KnockbackMutator
// 0x0010 (0x0B20 - 0x0B10)
class UFortGameplayAbility_KnockbackMutator final : public UFortGameplayAbility
{
public:
	class AFortAthenaMutator_Knockback*           CachedMutator;                                     // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortAthenaMutator_Knockback> MutatorClassToGet;                                 // 0x0B18(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class AFortAthenaMutator_Knockback* GetCachedMutator();
	void SaveKnockbackData(const struct FKnockbackMutatorData& InKnockbackData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameplayAbility_KnockbackMutator">();
	}
	static class UFortGameplayAbility_KnockbackMutator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameplayAbility_KnockbackMutator>();
	}
};
static_assert(alignof(UFortGameplayAbility_KnockbackMutator) == 0x000008, "Wrong alignment on UFortGameplayAbility_KnockbackMutator");
static_assert(sizeof(UFortGameplayAbility_KnockbackMutator) == 0x000B20, "Wrong size on UFortGameplayAbility_KnockbackMutator");
static_assert(offsetof(UFortGameplayAbility_KnockbackMutator, CachedMutator) == 0x000B10, "Member 'UFortGameplayAbility_KnockbackMutator::CachedMutator' has a wrong offset!");
static_assert(offsetof(UFortGameplayAbility_KnockbackMutator, MutatorClassToGet) == 0x000B18, "Member 'UFortGameplayAbility_KnockbackMutator::MutatorClassToGet' has a wrong offset!");

}

