#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CraftingRuntime

#include "Basic.hpp"

#include "CraftingRuntime_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_0_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CraftingRuntime.CraftingCheatManager.StartSelfCrafting
// 0x0004 (0x0004 - 0x0000)
struct CraftingCheatManager_StartSelfCrafting final
{
public:
	class FName                                   FormulaName;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingCheatManager_StartSelfCrafting) == 0x000004, "Wrong alignment on CraftingCheatManager_StartSelfCrafting");
static_assert(sizeof(CraftingCheatManager_StartSelfCrafting) == 0x000004, "Wrong size on CraftingCheatManager_StartSelfCrafting");
static_assert(offsetof(CraftingCheatManager_StartSelfCrafting, FormulaName) == 0x000000, "Member 'CraftingCheatManager_StartSelfCrafting::FormulaName' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.CancelCrafting
// 0x0010 (0x0010 - 0x0000)
struct CraftingLibrary_CancelCrafting final
{
public:
	class AFortPlayerController*                  Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 CraftingObject;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_CancelCrafting) == 0x000008, "Wrong alignment on CraftingLibrary_CancelCrafting");
static_assert(sizeof(CraftingLibrary_CancelCrafting) == 0x000010, "Wrong size on CraftingLibrary_CancelCrafting");
static_assert(offsetof(CraftingLibrary_CancelCrafting, Instigator) == 0x000000, "Member 'CraftingLibrary_CancelCrafting::Instigator' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_CancelCrafting, CraftingObject) == 0x000008, "Member 'CraftingLibrary_CancelCrafting::CraftingObject' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.CanCraftFormula
// 0x0030 (0x0030 - 0x0000)
struct CraftingLibrary_CanCraftFormula final
{
public:
	const class AFortPlayerController*            FortPC;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           CraftingObject;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CraftingFormulaRow;                                // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCraftingIngredientQueryState>  OutIngredientStates;                               // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_CanCraftFormula) == 0x000008, "Wrong alignment on CraftingLibrary_CanCraftFormula");
static_assert(sizeof(CraftingLibrary_CanCraftFormula) == 0x000030, "Wrong size on CraftingLibrary_CanCraftFormula");
static_assert(offsetof(CraftingLibrary_CanCraftFormula, FortPC) == 0x000000, "Member 'CraftingLibrary_CanCraftFormula::FortPC' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_CanCraftFormula, CraftingObject) == 0x000008, "Member 'CraftingLibrary_CanCraftFormula::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_CanCraftFormula, CraftingFormulaRow) == 0x000010, "Member 'CraftingLibrary_CanCraftFormula::CraftingFormulaRow' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_CanCraftFormula, OutIngredientStates) == 0x000018, "Member 'CraftingLibrary_CanCraftFormula::OutIngredientStates' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_CanCraftFormula, ReturnValue) == 0x000028, "Member 'CraftingLibrary_CanCraftFormula::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.CanCraftFormulaWithAdditionalItems
// 0x0040 (0x0040 - 0x0000)
struct CraftingLibrary_CanCraftFormulaWithAdditionalItems final
{
public:
	const class AFortPlayerController*            FortPC;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           CraftingObject;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CraftingFormulaRow;                                // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemAndCount>                  AdditionalItems;                                   // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FCraftingIngredientQueryState>  OutIngredientStates;                               // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_CanCraftFormulaWithAdditionalItems) == 0x000008, "Wrong alignment on CraftingLibrary_CanCraftFormulaWithAdditionalItems");
static_assert(sizeof(CraftingLibrary_CanCraftFormulaWithAdditionalItems) == 0x000040, "Wrong size on CraftingLibrary_CanCraftFormulaWithAdditionalItems");
static_assert(offsetof(CraftingLibrary_CanCraftFormulaWithAdditionalItems, FortPC) == 0x000000, "Member 'CraftingLibrary_CanCraftFormulaWithAdditionalItems::FortPC' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_CanCraftFormulaWithAdditionalItems, CraftingObject) == 0x000008, "Member 'CraftingLibrary_CanCraftFormulaWithAdditionalItems::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_CanCraftFormulaWithAdditionalItems, CraftingFormulaRow) == 0x000010, "Member 'CraftingLibrary_CanCraftFormulaWithAdditionalItems::CraftingFormulaRow' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_CanCraftFormulaWithAdditionalItems, AdditionalItems) == 0x000018, "Member 'CraftingLibrary_CanCraftFormulaWithAdditionalItems::AdditionalItems' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_CanCraftFormulaWithAdditionalItems, OutIngredientStates) == 0x000028, "Member 'CraftingLibrary_CanCraftFormulaWithAdditionalItems::OutIngredientStates' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_CanCraftFormulaWithAdditionalItems, ReturnValue) == 0x000038, "Member 'CraftingLibrary_CanCraftFormulaWithAdditionalItems::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.ClaimCraftingResults
// 0x0010 (0x0010 - 0x0000)
struct CraftingLibrary_ClaimCraftingResults final
{
public:
	class AFortPlayerController*                  Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 CraftingObject;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_ClaimCraftingResults) == 0x000008, "Wrong alignment on CraftingLibrary_ClaimCraftingResults");
static_assert(sizeof(CraftingLibrary_ClaimCraftingResults) == 0x000010, "Wrong size on CraftingLibrary_ClaimCraftingResults");
static_assert(offsetof(CraftingLibrary_ClaimCraftingResults, Instigator) == 0x000000, "Member 'CraftingLibrary_ClaimCraftingResults::Instigator' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_ClaimCraftingResults, CraftingObject) == 0x000008, "Member 'CraftingLibrary_ClaimCraftingResults::CraftingObject' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.EjectItems
// 0x0010 (0x0010 - 0x0000)
struct CraftingLibrary_EjectItems final
{
public:
	class AFortPlayerController*                  Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 CraftingObject;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_EjectItems) == 0x000008, "Wrong alignment on CraftingLibrary_EjectItems");
static_assert(sizeof(CraftingLibrary_EjectItems) == 0x000010, "Wrong size on CraftingLibrary_EjectItems");
static_assert(offsetof(CraftingLibrary_EjectItems, Instigator) == 0x000000, "Member 'CraftingLibrary_EjectItems::Instigator' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_EjectItems, CraftingObject) == 0x000008, "Member 'CraftingLibrary_EjectItems::CraftingObject' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetAllCraftableFormulas
// 0x0020 (0x0020 - 0x0000)
struct CraftingLibrary_GetAllCraftableFormulas final
{
public:
	const class AFortPlayerController*            FortPC;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           CraftingObject;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           OutFormulas;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_GetAllCraftableFormulas) == 0x000008, "Wrong alignment on CraftingLibrary_GetAllCraftableFormulas");
static_assert(sizeof(CraftingLibrary_GetAllCraftableFormulas) == 0x000020, "Wrong size on CraftingLibrary_GetAllCraftableFormulas");
static_assert(offsetof(CraftingLibrary_GetAllCraftableFormulas, FortPC) == 0x000000, "Member 'CraftingLibrary_GetAllCraftableFormulas::FortPC' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetAllCraftableFormulas, CraftingObject) == 0x000008, "Member 'CraftingLibrary_GetAllCraftableFormulas::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetAllCraftableFormulas, OutFormulas) == 0x000010, "Member 'CraftingLibrary_GetAllCraftableFormulas::OutFormulas' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetAllValidIngredients
// 0x0020 (0x0020 - 0x0000)
struct CraftingLibrary_GetAllValidIngredients final
{
public:
	const class AFortPlayerController*            FortPC;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           CraftingObject;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTagContainer>          OutIngredients;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_GetAllValidIngredients) == 0x000008, "Wrong alignment on CraftingLibrary_GetAllValidIngredients");
static_assert(sizeof(CraftingLibrary_GetAllValidIngredients) == 0x000020, "Wrong size on CraftingLibrary_GetAllValidIngredients");
static_assert(offsetof(CraftingLibrary_GetAllValidIngredients, FortPC) == 0x000000, "Member 'CraftingLibrary_GetAllValidIngredients::FortPC' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetAllValidIngredients, CraftingObject) == 0x000008, "Member 'CraftingLibrary_GetAllValidIngredients::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetAllValidIngredients, OutIngredients) == 0x000010, "Member 'CraftingLibrary_GetAllValidIngredients::OutIngredients' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetCraftedResults_TempItems
// 0x0018 (0x0018 - 0x0000)
struct CraftingLibrary_GetCraftedResults_TempItems final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItem*>                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_GetCraftedResults_TempItems) == 0x000008, "Wrong alignment on CraftingLibrary_GetCraftedResults_TempItems");
static_assert(sizeof(CraftingLibrary_GetCraftedResults_TempItems) == 0x000018, "Wrong size on CraftingLibrary_GetCraftedResults_TempItems");
static_assert(offsetof(CraftingLibrary_GetCraftedResults_TempItems, CraftingObject) == 0x000000, "Member 'CraftingLibrary_GetCraftedResults_TempItems::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftedResults_TempItems, ReturnValue) == 0x000008, "Member 'CraftingLibrary_GetCraftedResults_TempItems::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetCraftingFormulaIngredientRequirements
// 0x0028 (0x0028 - 0x0000)
struct CraftingLibrary_GetCraftingFormulaIngredientRequirements final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CraftingFormulaRow;                                // 0x0008(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCraftingIngredientRequirement> OutIngredientRequirements;                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_GetCraftingFormulaIngredientRequirements) == 0x000008, "Wrong alignment on CraftingLibrary_GetCraftingFormulaIngredientRequirements");
static_assert(sizeof(CraftingLibrary_GetCraftingFormulaIngredientRequirements) == 0x000028, "Wrong size on CraftingLibrary_GetCraftingFormulaIngredientRequirements");
static_assert(offsetof(CraftingLibrary_GetCraftingFormulaIngredientRequirements, WorldContextObject) == 0x000000, "Member 'CraftingLibrary_GetCraftingFormulaIngredientRequirements::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingFormulaIngredientRequirements, CraftingFormulaRow) == 0x000008, "Member 'CraftingLibrary_GetCraftingFormulaIngredientRequirements::CraftingFormulaRow' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingFormulaIngredientRequirements, OutIngredientRequirements) == 0x000010, "Member 'CraftingLibrary_GetCraftingFormulaIngredientRequirements::OutIngredientRequirements' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingFormulaIngredientRequirements, ReturnValue) == 0x000020, "Member 'CraftingLibrary_GetCraftingFormulaIngredientRequirements::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetCraftingFormulaNameBeingCrafted
// 0x0010 (0x0010 - 0x0000)
struct CraftingLibrary_GetCraftingFormulaNameBeingCrafted final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_GetCraftingFormulaNameBeingCrafted) == 0x000008, "Wrong alignment on CraftingLibrary_GetCraftingFormulaNameBeingCrafted");
static_assert(sizeof(CraftingLibrary_GetCraftingFormulaNameBeingCrafted) == 0x000010, "Wrong size on CraftingLibrary_GetCraftingFormulaNameBeingCrafted");
static_assert(offsetof(CraftingLibrary_GetCraftingFormulaNameBeingCrafted, CraftingObject) == 0x000000, "Member 'CraftingLibrary_GetCraftingFormulaNameBeingCrafted::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingFormulaNameBeingCrafted, ReturnValue) == 0x000008, "Member 'CraftingLibrary_GetCraftingFormulaNameBeingCrafted::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetCraftingIngredients_TempItems
// 0x0018 (0x0018 - 0x0000)
struct CraftingLibrary_GetCraftingIngredients_TempItems final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItem*>                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_GetCraftingIngredients_TempItems) == 0x000008, "Wrong alignment on CraftingLibrary_GetCraftingIngredients_TempItems");
static_assert(sizeof(CraftingLibrary_GetCraftingIngredients_TempItems) == 0x000018, "Wrong size on CraftingLibrary_GetCraftingIngredients_TempItems");
static_assert(offsetof(CraftingLibrary_GetCraftingIngredients_TempItems, CraftingObject) == 0x000000, "Member 'CraftingLibrary_GetCraftingIngredients_TempItems::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingIngredients_TempItems, ReturnValue) == 0x000008, "Member 'CraftingLibrary_GetCraftingIngredients_TempItems::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetCraftingObjectCraftingState
// 0x0010 (0x0010 - 0x0000)
struct CraftingLibrary_GetCraftingObjectCraftingState final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECraftingObjectState                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_GetCraftingObjectCraftingState) == 0x000008, "Wrong alignment on CraftingLibrary_GetCraftingObjectCraftingState");
static_assert(sizeof(CraftingLibrary_GetCraftingObjectCraftingState) == 0x000010, "Wrong size on CraftingLibrary_GetCraftingObjectCraftingState");
static_assert(offsetof(CraftingLibrary_GetCraftingObjectCraftingState, CraftingObject) == 0x000000, "Member 'CraftingLibrary_GetCraftingObjectCraftingState::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingObjectCraftingState, ReturnValue) == 0x000008, "Member 'CraftingLibrary_GetCraftingObjectCraftingState::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetCraftingObjectCurrentCraftingStateEndTime
// 0x0010 (0x0010 - 0x0000)
struct CraftingLibrary_GetCraftingObjectCurrentCraftingStateEndTime final
{
public:
	const class AActor*                           CraftingObject;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateEndTime) == 0x000008, "Wrong alignment on CraftingLibrary_GetCraftingObjectCurrentCraftingStateEndTime");
static_assert(sizeof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateEndTime) == 0x000010, "Wrong size on CraftingLibrary_GetCraftingObjectCurrentCraftingStateEndTime");
static_assert(offsetof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateEndTime, CraftingObject) == 0x000000, "Member 'CraftingLibrary_GetCraftingObjectCurrentCraftingStateEndTime::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateEndTime, ReturnValue) == 0x000008, "Member 'CraftingLibrary_GetCraftingObjectCurrentCraftingStateEndTime::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetCraftingObjectCurrentCraftingStateStartTime
// 0x0010 (0x0010 - 0x0000)
struct CraftingLibrary_GetCraftingObjectCurrentCraftingStateStartTime final
{
public:
	const class AActor*                           CraftingObject;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateStartTime) == 0x000008, "Wrong alignment on CraftingLibrary_GetCraftingObjectCurrentCraftingStateStartTime");
static_assert(sizeof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateStartTime) == 0x000010, "Wrong size on CraftingLibrary_GetCraftingObjectCurrentCraftingStateStartTime");
static_assert(offsetof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateStartTime, CraftingObject) == 0x000000, "Member 'CraftingLibrary_GetCraftingObjectCurrentCraftingStateStartTime::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateStartTime, ReturnValue) == 0x000008, "Member 'CraftingLibrary_GetCraftingObjectCurrentCraftingStateStartTime::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetCraftingObjectCurrentCraftingStateTimeLeft
// 0x0010 (0x0010 - 0x0000)
struct CraftingLibrary_GetCraftingObjectCurrentCraftingStateTimeLeft final
{
public:
	const class AActor*                           CraftingObject;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateTimeLeft) == 0x000008, "Wrong alignment on CraftingLibrary_GetCraftingObjectCurrentCraftingStateTimeLeft");
static_assert(sizeof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateTimeLeft) == 0x000010, "Wrong size on CraftingLibrary_GetCraftingObjectCurrentCraftingStateTimeLeft");
static_assert(offsetof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateTimeLeft, CraftingObject) == 0x000000, "Member 'CraftingLibrary_GetCraftingObjectCurrentCraftingStateTimeLeft::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingObjectCurrentCraftingStateTimeLeft, ReturnValue) == 0x000008, "Member 'CraftingLibrary_GetCraftingObjectCurrentCraftingStateTimeLeft::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetCraftingResultsForRowName
// 0x0020 (0x0020 - 0x0000)
struct CraftingLibrary_GetCraftingResultsForRowName final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CraftingFormulaRow;                                // 0x0008(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemAndCount>                  OutResults;                                        // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_GetCraftingResultsForRowName) == 0x000008, "Wrong alignment on CraftingLibrary_GetCraftingResultsForRowName");
static_assert(sizeof(CraftingLibrary_GetCraftingResultsForRowName) == 0x000020, "Wrong size on CraftingLibrary_GetCraftingResultsForRowName");
static_assert(offsetof(CraftingLibrary_GetCraftingResultsForRowName, WorldContextObject) == 0x000000, "Member 'CraftingLibrary_GetCraftingResultsForRowName::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingResultsForRowName, CraftingFormulaRow) == 0x000008, "Member 'CraftingLibrary_GetCraftingResultsForRowName::CraftingFormulaRow' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetCraftingResultsForRowName, OutResults) == 0x000010, "Member 'CraftingLibrary_GetCraftingResultsForRowName::OutResults' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetIngredientsInCraftingObject
// 0x0018 (0x0018 - 0x0000)
struct CraftingLibrary_GetIngredientsInCraftingObject final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItem*>                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_GetIngredientsInCraftingObject) == 0x000008, "Wrong alignment on CraftingLibrary_GetIngredientsInCraftingObject");
static_assert(sizeof(CraftingLibrary_GetIngredientsInCraftingObject) == 0x000018, "Wrong size on CraftingLibrary_GetIngredientsInCraftingObject");
static_assert(offsetof(CraftingLibrary_GetIngredientsInCraftingObject, CraftingObject) == 0x000000, "Member 'CraftingLibrary_GetIngredientsInCraftingObject::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetIngredientsInCraftingObject, ReturnValue) == 0x000008, "Member 'CraftingLibrary_GetIngredientsInCraftingObject::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetKnownCraftingFormulas
// 0x0020 (0x0020 - 0x0000)
struct CraftingLibrary_GetKnownCraftingFormulas final
{
public:
	const class AFortPlayerController*            FortPC;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           CraftingObject;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           OutFormulas;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_GetKnownCraftingFormulas) == 0x000008, "Wrong alignment on CraftingLibrary_GetKnownCraftingFormulas");
static_assert(sizeof(CraftingLibrary_GetKnownCraftingFormulas) == 0x000020, "Wrong size on CraftingLibrary_GetKnownCraftingFormulas");
static_assert(offsetof(CraftingLibrary_GetKnownCraftingFormulas, FortPC) == 0x000000, "Member 'CraftingLibrary_GetKnownCraftingFormulas::FortPC' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetKnownCraftingFormulas, CraftingObject) == 0x000008, "Member 'CraftingLibrary_GetKnownCraftingFormulas::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetKnownCraftingFormulas, OutFormulas) == 0x000010, "Member 'CraftingLibrary_GetKnownCraftingFormulas::OutFormulas' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetUIDataForCraftingIngredientTags
// 0x0048 (0x0048 - 0x0000)
struct CraftingLibrary_GetUIDataForCraftingIngredientTags final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  IngredientTags;                                    // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> OutItemDefs;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UObject>>         OutIcons;                                          // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_GetUIDataForCraftingIngredientTags) == 0x000008, "Wrong alignment on CraftingLibrary_GetUIDataForCraftingIngredientTags");
static_assert(sizeof(CraftingLibrary_GetUIDataForCraftingIngredientTags) == 0x000048, "Wrong size on CraftingLibrary_GetUIDataForCraftingIngredientTags");
static_assert(offsetof(CraftingLibrary_GetUIDataForCraftingIngredientTags, WorldContextObject) == 0x000000, "Member 'CraftingLibrary_GetUIDataForCraftingIngredientTags::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetUIDataForCraftingIngredientTags, IngredientTags) == 0x000008, "Member 'CraftingLibrary_GetUIDataForCraftingIngredientTags::IngredientTags' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetUIDataForCraftingIngredientTags, OutItemDefs) == 0x000028, "Member 'CraftingLibrary_GetUIDataForCraftingIngredientTags::OutItemDefs' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetUIDataForCraftingIngredientTags, OutIcons) == 0x000038, "Member 'CraftingLibrary_GetUIDataForCraftingIngredientTags::OutIcons' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GetValidIngredientsInInventory
// 0x0020 (0x0020 - 0x0000)
struct CraftingLibrary_GetValidIngredientsInInventory final
{
public:
	const class AFortPlayerController*            FortPC;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           CraftingObject;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItem*>                 OutIngredients;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_GetValidIngredientsInInventory) == 0x000008, "Wrong alignment on CraftingLibrary_GetValidIngredientsInInventory");
static_assert(sizeof(CraftingLibrary_GetValidIngredientsInInventory) == 0x000020, "Wrong size on CraftingLibrary_GetValidIngredientsInInventory");
static_assert(offsetof(CraftingLibrary_GetValidIngredientsInInventory, FortPC) == 0x000000, "Member 'CraftingLibrary_GetValidIngredientsInInventory::FortPC' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetValidIngredientsInInventory, CraftingObject) == 0x000008, "Member 'CraftingLibrary_GetValidIngredientsInInventory::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GetValidIngredientsInInventory, OutIngredients) == 0x000010, "Member 'CraftingLibrary_GetValidIngredientsInInventory::OutIngredients' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.GiveItemToCraftingObject
// 0x01B0 (0x01B0 - 0x0000)
struct CraftingLibrary_GiveItemToCraftingObject final
{
public:
	class AFortPlayerController*                  Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 CraftingObject;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortItemEntry                         ItemEntryToGrant;                                  // 0x0010(0x01A0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_GiveItemToCraftingObject) == 0x000008, "Wrong alignment on CraftingLibrary_GiveItemToCraftingObject");
static_assert(sizeof(CraftingLibrary_GiveItemToCraftingObject) == 0x0001B0, "Wrong size on CraftingLibrary_GiveItemToCraftingObject");
static_assert(offsetof(CraftingLibrary_GiveItemToCraftingObject, Instigator) == 0x000000, "Member 'CraftingLibrary_GiveItemToCraftingObject::Instigator' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GiveItemToCraftingObject, CraftingObject) == 0x000008, "Member 'CraftingLibrary_GiveItemToCraftingObject::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_GiveItemToCraftingObject, ItemEntryToGrant) == 0x000010, "Member 'CraftingLibrary_GiveItemToCraftingObject::ItemEntryToGrant' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.IsValidIngredient
// 0x0020 (0x0020 - 0x0000)
struct CraftingLibrary_IsValidIngredient final
{
public:
	const class AFortPlayerController*            FortPC;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           CraftingObject;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortItemDefinition*              ItemDef;                                           // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_IsValidIngredient) == 0x000008, "Wrong alignment on CraftingLibrary_IsValidIngredient");
static_assert(sizeof(CraftingLibrary_IsValidIngredient) == 0x000020, "Wrong size on CraftingLibrary_IsValidIngredient");
static_assert(offsetof(CraftingLibrary_IsValidIngredient, FortPC) == 0x000000, "Member 'CraftingLibrary_IsValidIngredient::FortPC' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_IsValidIngredient, CraftingObject) == 0x000008, "Member 'CraftingLibrary_IsValidIngredient::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_IsValidIngredient, ItemDef) == 0x000010, "Member 'CraftingLibrary_IsValidIngredient::ItemDef' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_IsValidIngredient, ReturnValue) == 0x000018, "Member 'CraftingLibrary_IsValidIngredient::ReturnValue' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.PickupItemAndStartCrafting
// 0x0020 (0x0020 - 0x0000)
struct CraftingLibrary_PickupItemAndStartCrafting final
{
public:
	class AFortPlayerController*                  Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 CraftingObject;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                            PickUp;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CraftingFormulaName;                               // 0x0018(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_PickupItemAndStartCrafting) == 0x000008, "Wrong alignment on CraftingLibrary_PickupItemAndStartCrafting");
static_assert(sizeof(CraftingLibrary_PickupItemAndStartCrafting) == 0x000020, "Wrong size on CraftingLibrary_PickupItemAndStartCrafting");
static_assert(offsetof(CraftingLibrary_PickupItemAndStartCrafting, Instigator) == 0x000000, "Member 'CraftingLibrary_PickupItemAndStartCrafting::Instigator' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_PickupItemAndStartCrafting, CraftingObject) == 0x000008, "Member 'CraftingLibrary_PickupItemAndStartCrafting::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_PickupItemAndStartCrafting, PickUp) == 0x000010, "Member 'CraftingLibrary_PickupItemAndStartCrafting::PickUp' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_PickupItemAndStartCrafting, CraftingFormulaName) == 0x000018, "Member 'CraftingLibrary_PickupItemAndStartCrafting::CraftingFormulaName' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.ReportCraftingSuccess
// 0x0010 (0x0010 - 0x0000)
struct CraftingLibrary_ReportCraftingSuccess final
{
public:
	class AFortPlayerController*                  Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 CraftingObject;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingLibrary_ReportCraftingSuccess) == 0x000008, "Wrong alignment on CraftingLibrary_ReportCraftingSuccess");
static_assert(sizeof(CraftingLibrary_ReportCraftingSuccess) == 0x000010, "Wrong size on CraftingLibrary_ReportCraftingSuccess");
static_assert(offsetof(CraftingLibrary_ReportCraftingSuccess, Instigator) == 0x000000, "Member 'CraftingLibrary_ReportCraftingSuccess::Instigator' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_ReportCraftingSuccess, CraftingObject) == 0x000008, "Member 'CraftingLibrary_ReportCraftingSuccess::CraftingObject' has a wrong offset!");

// Function CraftingRuntime.CraftingLibrary.StartCrafting
// 0x0018 (0x0018 - 0x0000)
struct CraftingLibrary_StartCrafting final
{
public:
	class AFortPlayerController*                  Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 CraftingObject;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CraftingFormulaName;                               // 0x0010(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingLibrary_StartCrafting) == 0x000008, "Wrong alignment on CraftingLibrary_StartCrafting");
static_assert(sizeof(CraftingLibrary_StartCrafting) == 0x000018, "Wrong size on CraftingLibrary_StartCrafting");
static_assert(offsetof(CraftingLibrary_StartCrafting, Instigator) == 0x000000, "Member 'CraftingLibrary_StartCrafting::Instigator' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_StartCrafting, CraftingObject) == 0x000008, "Member 'CraftingLibrary_StartCrafting::CraftingObject' has a wrong offset!");
static_assert(offsetof(CraftingLibrary_StartCrafting, CraftingFormulaName) == 0x000010, "Member 'CraftingLibrary_StartCrafting::CraftingFormulaName' has a wrong offset!");

// Function CraftingRuntime.CraftingObjectBGA.HandleInteractionRangeBeginOverlap
// 0x0100 (0x0100 - 0x0000)
struct CraftingObjectBGA_HandleInteractionRangeBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingObjectBGA_HandleInteractionRangeBeginOverlap) == 0x000008, "Wrong alignment on CraftingObjectBGA_HandleInteractionRangeBeginOverlap");
static_assert(sizeof(CraftingObjectBGA_HandleInteractionRangeBeginOverlap) == 0x000100, "Wrong size on CraftingObjectBGA_HandleInteractionRangeBeginOverlap");
static_assert(offsetof(CraftingObjectBGA_HandleInteractionRangeBeginOverlap, OverlappedComponent) == 0x000000, "Member 'CraftingObjectBGA_HandleInteractionRangeBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(CraftingObjectBGA_HandleInteractionRangeBeginOverlap, OtherActor) == 0x000008, "Member 'CraftingObjectBGA_HandleInteractionRangeBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(CraftingObjectBGA_HandleInteractionRangeBeginOverlap, OtherComp) == 0x000010, "Member 'CraftingObjectBGA_HandleInteractionRangeBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(CraftingObjectBGA_HandleInteractionRangeBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'CraftingObjectBGA_HandleInteractionRangeBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(CraftingObjectBGA_HandleInteractionRangeBeginOverlap, bFromSweep) == 0x00001C, "Member 'CraftingObjectBGA_HandleInteractionRangeBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(CraftingObjectBGA_HandleInteractionRangeBeginOverlap, SweepResult) == 0x000020, "Member 'CraftingObjectBGA_HandleInteractionRangeBeginOverlap::SweepResult' has a wrong offset!");

// Function CraftingRuntime.CraftingObjectBGA.HandleInteractionRangeEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct CraftingObjectBGA_HandleInteractionRangeEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CraftingObjectBGA_HandleInteractionRangeEndOverlap) == 0x000008, "Wrong alignment on CraftingObjectBGA_HandleInteractionRangeEndOverlap");
static_assert(sizeof(CraftingObjectBGA_HandleInteractionRangeEndOverlap) == 0x000020, "Wrong size on CraftingObjectBGA_HandleInteractionRangeEndOverlap");
static_assert(offsetof(CraftingObjectBGA_HandleInteractionRangeEndOverlap, OverlappedComponent) == 0x000000, "Member 'CraftingObjectBGA_HandleInteractionRangeEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(CraftingObjectBGA_HandleInteractionRangeEndOverlap, OtherActor) == 0x000008, "Member 'CraftingObjectBGA_HandleInteractionRangeEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(CraftingObjectBGA_HandleInteractionRangeEndOverlap, OtherComp) == 0x000010, "Member 'CraftingObjectBGA_HandleInteractionRangeEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(CraftingObjectBGA_HandleInteractionRangeEndOverlap, OtherBodyIndex) == 0x000018, "Member 'CraftingObjectBGA_HandleInteractionRangeEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function CraftingRuntime.CraftingObjectComponent.HandlePickupCraftingItemPickedUp
// 0x0030 (0x0030 - 0x0000)
struct CraftingObjectComponent_HandlePickupCraftingItemPickedUp final
{
public:
	class AFortPickup*                            PickUp;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                              InteractingPawn;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortWorldItemDefinition*         WorldItemDefinition;                               // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PickupLocation;                                    // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CraftingObjectComponent_HandlePickupCraftingItemPickedUp) == 0x000008, "Wrong alignment on CraftingObjectComponent_HandlePickupCraftingItemPickedUp");
static_assert(sizeof(CraftingObjectComponent_HandlePickupCraftingItemPickedUp) == 0x000030, "Wrong size on CraftingObjectComponent_HandlePickupCraftingItemPickedUp");
static_assert(offsetof(CraftingObjectComponent_HandlePickupCraftingItemPickedUp, PickUp) == 0x000000, "Member 'CraftingObjectComponent_HandlePickupCraftingItemPickedUp::PickUp' has a wrong offset!");
static_assert(offsetof(CraftingObjectComponent_HandlePickupCraftingItemPickedUp, InteractingPawn) == 0x000008, "Member 'CraftingObjectComponent_HandlePickupCraftingItemPickedUp::InteractingPawn' has a wrong offset!");
static_assert(offsetof(CraftingObjectComponent_HandlePickupCraftingItemPickedUp, WorldItemDefinition) == 0x000010, "Member 'CraftingObjectComponent_HandlePickupCraftingItemPickedUp::WorldItemDefinition' has a wrong offset!");
static_assert(offsetof(CraftingObjectComponent_HandlePickupCraftingItemPickedUp, PickupLocation) == 0x000018, "Member 'CraftingObjectComponent_HandlePickupCraftingItemPickedUp::PickupLocation' has a wrong offset!");

// Function CraftingRuntime.FortContextualTutorial_CraftingComplete.OnCraftingSuccess
// 0x0018 (0x0018 - 0x0000)
struct FortContextualTutorial_CraftingComplete_OnCraftingSuccess final
{
public:
	class AFortPlayerController*                  Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 CraftingObject;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FormulaRowName;                                    // 0x0010(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortContextualTutorial_CraftingComplete_OnCraftingSuccess) == 0x000008, "Wrong alignment on FortContextualTutorial_CraftingComplete_OnCraftingSuccess");
static_assert(sizeof(FortContextualTutorial_CraftingComplete_OnCraftingSuccess) == 0x000018, "Wrong size on FortContextualTutorial_CraftingComplete_OnCraftingSuccess");
static_assert(offsetof(FortContextualTutorial_CraftingComplete_OnCraftingSuccess, Instigator) == 0x000000, "Member 'FortContextualTutorial_CraftingComplete_OnCraftingSuccess::Instigator' has a wrong offset!");
static_assert(offsetof(FortContextualTutorial_CraftingComplete_OnCraftingSuccess, CraftingObject) == 0x000008, "Member 'FortContextualTutorial_CraftingComplete_OnCraftingSuccess::CraftingObject' has a wrong offset!");
static_assert(offsetof(FortContextualTutorial_CraftingComplete_OnCraftingSuccess, FormulaRowName) == 0x000010, "Member 'FortContextualTutorial_CraftingComplete_OnCraftingSuccess::FormulaRowName' has a wrong offset!");

// Function CraftingRuntime.FortContextualTutorial_CraftingReady.HandleFormulaCraftableChanged
// 0x0008 (0x0008 - 0x0000)
struct FortContextualTutorial_CraftingReady_HandleFormulaCraftableChanged final
{
public:
	class FName                                   FormulaRowName;                                    // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCraftable;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortContextualTutorial_CraftingReady_HandleFormulaCraftableChanged) == 0x000004, "Wrong alignment on FortContextualTutorial_CraftingReady_HandleFormulaCraftableChanged");
static_assert(sizeof(FortContextualTutorial_CraftingReady_HandleFormulaCraftableChanged) == 0x000008, "Wrong size on FortContextualTutorial_CraftingReady_HandleFormulaCraftableChanged");
static_assert(offsetof(FortContextualTutorial_CraftingReady_HandleFormulaCraftableChanged, FormulaRowName) == 0x000000, "Member 'FortContextualTutorial_CraftingReady_HandleFormulaCraftableChanged::FormulaRowName' has a wrong offset!");
static_assert(offsetof(FortContextualTutorial_CraftingReady_HandleFormulaCraftableChanged, bIsCraftable) == 0x000004, "Member 'FortContextualTutorial_CraftingReady_HandleFormulaCraftableChanged::bIsCraftable' has a wrong offset!");

// Function CraftingRuntime.FortContextualTutorial_CraftingTabOpen.HandleFormulaCraftableChanged
// 0x0008 (0x0008 - 0x0000)
struct FortContextualTutorial_CraftingTabOpen_HandleFormulaCraftableChanged final
{
public:
	class FName                                   FormulaRowName;                                    // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCraftable;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortContextualTutorial_CraftingTabOpen_HandleFormulaCraftableChanged) == 0x000004, "Wrong alignment on FortContextualTutorial_CraftingTabOpen_HandleFormulaCraftableChanged");
static_assert(sizeof(FortContextualTutorial_CraftingTabOpen_HandleFormulaCraftableChanged) == 0x000008, "Wrong size on FortContextualTutorial_CraftingTabOpen_HandleFormulaCraftableChanged");
static_assert(offsetof(FortContextualTutorial_CraftingTabOpen_HandleFormulaCraftableChanged, FormulaRowName) == 0x000000, "Member 'FortContextualTutorial_CraftingTabOpen_HandleFormulaCraftableChanged::FormulaRowName' has a wrong offset!");
static_assert(offsetof(FortContextualTutorial_CraftingTabOpen_HandleFormulaCraftableChanged, bIsCraftable) == 0x000004, "Member 'FortContextualTutorial_CraftingTabOpen_HandleFormulaCraftableChanged::bIsCraftable' has a wrong offset!");

// Function CraftingRuntime.FortContextualTutorial_CraftingTabOpen.HandleInventoryTabChanged
// 0x0004 (0x0004 - 0x0000)
struct FortContextualTutorial_CraftingTabOpen_HandleInventoryTabChanged final
{
public:
	class FName                                   InventoryTabNameId;                                // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortContextualTutorial_CraftingTabOpen_HandleInventoryTabChanged) == 0x000004, "Wrong alignment on FortContextualTutorial_CraftingTabOpen_HandleInventoryTabChanged");
static_assert(sizeof(FortContextualTutorial_CraftingTabOpen_HandleInventoryTabChanged) == 0x000004, "Wrong size on FortContextualTutorial_CraftingTabOpen_HandleInventoryTabChanged");
static_assert(offsetof(FortContextualTutorial_CraftingTabOpen_HandleInventoryTabChanged, InventoryTabNameId) == 0x000000, "Member 'FortContextualTutorial_CraftingTabOpen_HandleInventoryTabChanged::InventoryTabNameId' has a wrong offset!");

// Function CraftingRuntime.FortControllerComponent_CraftingNetworkEvents.ClientNotifyCraftingFailed
// 0x0028 (0x0028 - 0x0000)
struct FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingFailed final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  FailedReason;                                      // 0x0008(0x0020)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingFailed) == 0x000008, "Wrong alignment on FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingFailed");
static_assert(sizeof(FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingFailed) == 0x000028, "Wrong size on FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingFailed");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingFailed, CraftingObject) == 0x000000, "Member 'FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingFailed::CraftingObject' has a wrong offset!");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingFailed, FailedReason) == 0x000008, "Member 'FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingFailed::FailedReason' has a wrong offset!");

// Function CraftingRuntime.FortControllerComponent_CraftingNetworkEvents.ClientNotifyCraftingSuccess
// 0x0010 (0x0010 - 0x0000)
struct FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingSuccess final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FormulaRowName;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingSuccess) == 0x000008, "Wrong alignment on FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingSuccess");
static_assert(sizeof(FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingSuccess) == 0x000010, "Wrong size on FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingSuccess");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingSuccess, CraftingObject) == 0x000000, "Member 'FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingSuccess::CraftingObject' has a wrong offset!");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingSuccess, FormulaRowName) == 0x000008, "Member 'FortControllerComponent_CraftingNetworkEvents_ClientNotifyCraftingSuccess::FormulaRowName' has a wrong offset!");

// Function CraftingRuntime.FortControllerComponent_CraftingNetworkEvents.NotifyCraftingSuccess
// 0x0010 (0x0010 - 0x0000)
struct FortControllerComponent_CraftingNetworkEvents_NotifyCraftingSuccess final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FormulaRowName;                                    // 0x0008(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortControllerComponent_CraftingNetworkEvents_NotifyCraftingSuccess) == 0x000008, "Wrong alignment on FortControllerComponent_CraftingNetworkEvents_NotifyCraftingSuccess");
static_assert(sizeof(FortControllerComponent_CraftingNetworkEvents_NotifyCraftingSuccess) == 0x000010, "Wrong size on FortControllerComponent_CraftingNetworkEvents_NotifyCraftingSuccess");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_NotifyCraftingSuccess, CraftingObject) == 0x000000, "Member 'FortControllerComponent_CraftingNetworkEvents_NotifyCraftingSuccess::CraftingObject' has a wrong offset!");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_NotifyCraftingSuccess, FormulaRowName) == 0x000008, "Member 'FortControllerComponent_CraftingNetworkEvents_NotifyCraftingSuccess::FormulaRowName' has a wrong offset!");

// Function CraftingRuntime.FortControllerComponent_CraftingNetworkEvents.ServerCancelCrafting
// 0x0008 (0x0008 - 0x0000)
struct FortControllerComponent_CraftingNetworkEvents_ServerCancelCrafting final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortControllerComponent_CraftingNetworkEvents_ServerCancelCrafting) == 0x000008, "Wrong alignment on FortControllerComponent_CraftingNetworkEvents_ServerCancelCrafting");
static_assert(sizeof(FortControllerComponent_CraftingNetworkEvents_ServerCancelCrafting) == 0x000008, "Wrong size on FortControllerComponent_CraftingNetworkEvents_ServerCancelCrafting");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ServerCancelCrafting, CraftingObject) == 0x000000, "Member 'FortControllerComponent_CraftingNetworkEvents_ServerCancelCrafting::CraftingObject' has a wrong offset!");

// Function CraftingRuntime.FortControllerComponent_CraftingNetworkEvents.ServerClaimCraftingResults
// 0x0008 (0x0008 - 0x0000)
struct FortControllerComponent_CraftingNetworkEvents_ServerClaimCraftingResults final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortControllerComponent_CraftingNetworkEvents_ServerClaimCraftingResults) == 0x000008, "Wrong alignment on FortControllerComponent_CraftingNetworkEvents_ServerClaimCraftingResults");
static_assert(sizeof(FortControllerComponent_CraftingNetworkEvents_ServerClaimCraftingResults) == 0x000008, "Wrong size on FortControllerComponent_CraftingNetworkEvents_ServerClaimCraftingResults");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ServerClaimCraftingResults, CraftingObject) == 0x000000, "Member 'FortControllerComponent_CraftingNetworkEvents_ServerClaimCraftingResults::CraftingObject' has a wrong offset!");

// Function CraftingRuntime.FortControllerComponent_CraftingNetworkEvents.ServerEjectItems
// 0x0008 (0x0008 - 0x0000)
struct FortControllerComponent_CraftingNetworkEvents_ServerEjectItems final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortControllerComponent_CraftingNetworkEvents_ServerEjectItems) == 0x000008, "Wrong alignment on FortControllerComponent_CraftingNetworkEvents_ServerEjectItems");
static_assert(sizeof(FortControllerComponent_CraftingNetworkEvents_ServerEjectItems) == 0x000008, "Wrong size on FortControllerComponent_CraftingNetworkEvents_ServerEjectItems");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ServerEjectItems, CraftingObject) == 0x000000, "Member 'FortControllerComponent_CraftingNetworkEvents_ServerEjectItems::CraftingObject' has a wrong offset!");

// Function CraftingRuntime.FortControllerComponent_CraftingNetworkEvents.ServerPickupItemAndStartCrafting
// 0x0018 (0x0018 - 0x0000)
struct FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                            PickUp;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CraftingFormulaName;                               // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting) == 0x000008, "Wrong alignment on FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting");
static_assert(sizeof(FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting) == 0x000018, "Wrong size on FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting, CraftingObject) == 0x000000, "Member 'FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting::CraftingObject' has a wrong offset!");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting, PickUp) == 0x000008, "Member 'FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting::PickUp' has a wrong offset!");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting, CraftingFormulaName) == 0x000010, "Member 'FortControllerComponent_CraftingNetworkEvents_ServerPickupItemAndStartCrafting::CraftingFormulaName' has a wrong offset!");

// Function CraftingRuntime.FortControllerComponent_CraftingNetworkEvents.ServerReportCraftingSuccess
// 0x0008 (0x0008 - 0x0000)
struct FortControllerComponent_CraftingNetworkEvents_ServerReportCraftingSuccess final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortControllerComponent_CraftingNetworkEvents_ServerReportCraftingSuccess) == 0x000008, "Wrong alignment on FortControllerComponent_CraftingNetworkEvents_ServerReportCraftingSuccess");
static_assert(sizeof(FortControllerComponent_CraftingNetworkEvents_ServerReportCraftingSuccess) == 0x000008, "Wrong size on FortControllerComponent_CraftingNetworkEvents_ServerReportCraftingSuccess");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ServerReportCraftingSuccess, CraftingObject) == 0x000000, "Member 'FortControllerComponent_CraftingNetworkEvents_ServerReportCraftingSuccess::CraftingObject' has a wrong offset!");

// Function CraftingRuntime.FortControllerComponent_CraftingNetworkEvents.ServerStartCrafting
// 0x0010 (0x0010 - 0x0000)
struct FortControllerComponent_CraftingNetworkEvents_ServerStartCrafting final
{
public:
	class AActor*                                 CraftingObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CraftingFormulaName;                               // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortControllerComponent_CraftingNetworkEvents_ServerStartCrafting) == 0x000008, "Wrong alignment on FortControllerComponent_CraftingNetworkEvents_ServerStartCrafting");
static_assert(sizeof(FortControllerComponent_CraftingNetworkEvents_ServerStartCrafting) == 0x000010, "Wrong size on FortControllerComponent_CraftingNetworkEvents_ServerStartCrafting");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ServerStartCrafting, CraftingObject) == 0x000000, "Member 'FortControllerComponent_CraftingNetworkEvents_ServerStartCrafting::CraftingObject' has a wrong offset!");
static_assert(offsetof(FortControllerComponent_CraftingNetworkEvents_ServerStartCrafting, CraftingFormulaName) == 0x000008, "Member 'FortControllerComponent_CraftingNetworkEvents_ServerStartCrafting::CraftingFormulaName' has a wrong offset!");

// Function CraftingRuntime.FortGameStateComponent_Crafting.OnPlaylistDataReady
// 0x0030 (0x0030 - 0x0000)
struct FortGameStateComponent_Crafting_OnPlaylistDataReady final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameStateComponent_Crafting_OnPlaylistDataReady) == 0x000008, "Wrong alignment on FortGameStateComponent_Crafting_OnPlaylistDataReady");
static_assert(sizeof(FortGameStateComponent_Crafting_OnPlaylistDataReady) == 0x000030, "Wrong size on FortGameStateComponent_Crafting_OnPlaylistDataReady");
static_assert(offsetof(FortGameStateComponent_Crafting_OnPlaylistDataReady, GameState) == 0x000000, "Member 'FortGameStateComponent_Crafting_OnPlaylistDataReady::GameState' has a wrong offset!");
static_assert(offsetof(FortGameStateComponent_Crafting_OnPlaylistDataReady, Playlist) == 0x000008, "Member 'FortGameStateComponent_Crafting_OnPlaylistDataReady::Playlist' has a wrong offset!");
static_assert(offsetof(FortGameStateComponent_Crafting_OnPlaylistDataReady, PlaylistContextTags) == 0x000010, "Member 'FortGameStateComponent_Crafting_OnPlaylistDataReady::PlaylistContextTags' has a wrong offset!");

}

