#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SolarisInterop

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class SolarisInterop.SolarisGeneratedClassBase
// 0x0000 (0x0230 - 0x0230)
class USolarisGeneratedClassBase : public UClass
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SolarisGeneratedClassBase">();
	}
	static class USolarisGeneratedClassBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USolarisGeneratedClassBase>();
	}
};
static_assert(alignof(USolarisGeneratedClassBase) == 0x000008, "Wrong alignment on USolarisGeneratedClassBase");
static_assert(sizeof(USolarisGeneratedClassBase) == 0x000230, "Wrong size on USolarisGeneratedClassBase");

// Class SolarisInterop.VerseAsset
// 0x0008 (0x0030 - 0x0028)
class UVerseAsset : public UObject
{
public:
	class UClass*                                 AssetClass;                                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseAsset">();
	}
	static class UVerseAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseAsset>();
	}
};
static_assert(alignof(UVerseAsset) == 0x000008, "Wrong alignment on UVerseAsset");
static_assert(sizeof(UVerseAsset) == 0x000030, "Wrong size on UVerseAsset");
static_assert(offsetof(UVerseAsset, AssetClass) == 0x000028, "Member 'UVerseAsset::AssetClass' has a wrong offset!");

// Class SolarisInterop.TaskPlaceholder
// 0x0188 (0x01B0 - 0x0028)
class UTaskPlaceholder final : public UObject
{
public:
	uint8                                         Pad_28[0x188];                                     // 0x0028(0x0188)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TaskPlaceholder">();
	}
	static class UTaskPlaceholder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTaskPlaceholder>();
	}
};
static_assert(alignof(UTaskPlaceholder) == 0x000008, "Wrong alignment on UTaskPlaceholder");
static_assert(sizeof(UTaskPlaceholder) == 0x0001B0, "Wrong size on UTaskPlaceholder");

}

