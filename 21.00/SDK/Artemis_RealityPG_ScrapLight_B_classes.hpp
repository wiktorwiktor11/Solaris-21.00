#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Artemis_RealityPG_ScrapLight_B

#include "Basic.hpp"

#include "RandomColor_Prop_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Artemis_RealityPG_ScrapLight_B.Artemis_RealityPG_ScrapLight_B_C
// 0x0028 (0x0EF8 - 0x0ED0)
class AArtemis_RealityPG_ScrapLight_B_C final : public ARandomColor_Prop_C
{
public:
	class UStaticMeshComponent*                   SM_Smokestack_Sprites_01;                          // 0x0ED0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0ED8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 EmissiveColor;                                     // 0x0EE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_smoke_;                                        // 0x0EE4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE5[0x3];                                      // 0x0EE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         XPOS_Offset;                                       // 0x0EE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_random_color_;                                 // 0x0EEC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EED[0x3];                                      // 0x0EED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          Stream;                                            // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Artemis_RealityPG_ScrapLight_B_C">();
	}
	static class AArtemis_RealityPG_ScrapLight_B_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AArtemis_RealityPG_ScrapLight_B_C>();
	}
};
static_assert(alignof(AArtemis_RealityPG_ScrapLight_B_C) == 0x000008, "Wrong alignment on AArtemis_RealityPG_ScrapLight_B_C");
static_assert(sizeof(AArtemis_RealityPG_ScrapLight_B_C) == 0x000EF8, "Wrong size on AArtemis_RealityPG_ScrapLight_B_C");
static_assert(offsetof(AArtemis_RealityPG_ScrapLight_B_C, SM_Smokestack_Sprites_01) == 0x000ED0, "Member 'AArtemis_RealityPG_ScrapLight_B_C::SM_Smokestack_Sprites_01' has a wrong offset!");
static_assert(offsetof(AArtemis_RealityPG_ScrapLight_B_C, PointLight) == 0x000ED8, "Member 'AArtemis_RealityPG_ScrapLight_B_C::PointLight' has a wrong offset!");
static_assert(offsetof(AArtemis_RealityPG_ScrapLight_B_C, EmissiveColor) == 0x000EE0, "Member 'AArtemis_RealityPG_ScrapLight_B_C::EmissiveColor' has a wrong offset!");
static_assert(offsetof(AArtemis_RealityPG_ScrapLight_B_C, Use_smoke_) == 0x000EE4, "Member 'AArtemis_RealityPG_ScrapLight_B_C::Use_smoke_' has a wrong offset!");
static_assert(offsetof(AArtemis_RealityPG_ScrapLight_B_C, XPOS_Offset) == 0x000EE8, "Member 'AArtemis_RealityPG_ScrapLight_B_C::XPOS_Offset' has a wrong offset!");
static_assert(offsetof(AArtemis_RealityPG_ScrapLight_B_C, Use_random_color_) == 0x000EEC, "Member 'AArtemis_RealityPG_ScrapLight_B_C::Use_random_color_' has a wrong offset!");
static_assert(offsetof(AArtemis_RealityPG_ScrapLight_B_C, Stream) == 0x000EF0, "Member 'AArtemis_RealityPG_ScrapLight_B_C::Stream' has a wrong offset!");

}

