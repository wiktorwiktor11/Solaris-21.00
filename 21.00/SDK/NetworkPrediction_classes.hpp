#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NetworkPrediction

#include "Basic.hpp"

#include "NetworkPrediction_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class NetworkPrediction.NetworkPhysicsManager
// 0x60E0 (0x6110 - 0x0030)
class UNetworkPhysicsManager final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x60E0];                                    // 0x0030(0x60E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetworkPhysicsManager">();
	}
	static class UNetworkPhysicsManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetworkPhysicsManager>();
	}
};
static_assert(alignof(UNetworkPhysicsManager) == 0x000008, "Wrong alignment on UNetworkPhysicsManager");
static_assert(sizeof(UNetworkPhysicsManager) == 0x006110, "Wrong size on UNetworkPhysicsManager");

// Class NetworkPrediction.NetworkPhysicsComponent
// 0x0010 (0x00B0 - 0x00A0)
class UNetworkPhysicsComponent final : public UActorComponent
{
public:
	TArray<struct FNetworkPhysicsState>           NetworkPhysicsStateArray;                          // 0x00A0(0x0010)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	int32 GetNetworkPredictionLOD() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetworkPhysicsComponent">();
	}
	static class UNetworkPhysicsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetworkPhysicsComponent>();
	}
};
static_assert(alignof(UNetworkPhysicsComponent) == 0x000008, "Wrong alignment on UNetworkPhysicsComponent");
static_assert(sizeof(UNetworkPhysicsComponent) == 0x0000B0, "Wrong size on UNetworkPhysicsComponent");
static_assert(offsetof(UNetworkPhysicsComponent, NetworkPhysicsStateArray) == 0x0000A0, "Member 'UNetworkPhysicsComponent::NetworkPhysicsStateArray' has a wrong offset!");

// Class NetworkPrediction.NetworkPredictionComponent
// 0x01F0 (0x0290 - 0x00A0)
class UNetworkPredictionComponent final : public UActorComponent
{
public:
	struct FNetworkPredictionProxy                NetworkPredictionProxy;                            // 0x00A0(0x00B0)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	struct FReplicationProxy                      ReplicationProxy_ServerRPC;                        // 0x0150(0x0050)(Protected, NativeAccessSpecifierProtected)
	struct FReplicationProxy                      ReplicationProxy_Autonomous;                       // 0x01A0(0x0050)(Net, Transient, NativeAccessSpecifierPrivate)
	struct FReplicationProxy                      ReplicationProxy_Simulated;                        // 0x01F0(0x0050)(Net, Transient, NativeAccessSpecifierPrivate)
	struct FReplicationProxy                      ReplicationProxy_Replay;                           // 0x0240(0x0050)(Net, Transient, NativeAccessSpecifierPrivate)

public:
	void ServerReceiveClientInput(const struct FServerReplicationRPCParameter& ProxyParameter);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetworkPredictionComponent">();
	}
	static class UNetworkPredictionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetworkPredictionComponent>();
	}
};
static_assert(alignof(UNetworkPredictionComponent) == 0x000010, "Wrong alignment on UNetworkPredictionComponent");
static_assert(sizeof(UNetworkPredictionComponent) == 0x000290, "Wrong size on UNetworkPredictionComponent");
static_assert(offsetof(UNetworkPredictionComponent, NetworkPredictionProxy) == 0x0000A0, "Member 'UNetworkPredictionComponent::NetworkPredictionProxy' has a wrong offset!");
static_assert(offsetof(UNetworkPredictionComponent, ReplicationProxy_ServerRPC) == 0x000150, "Member 'UNetworkPredictionComponent::ReplicationProxy_ServerRPC' has a wrong offset!");
static_assert(offsetof(UNetworkPredictionComponent, ReplicationProxy_Autonomous) == 0x0001A0, "Member 'UNetworkPredictionComponent::ReplicationProxy_Autonomous' has a wrong offset!");
static_assert(offsetof(UNetworkPredictionComponent, ReplicationProxy_Simulated) == 0x0001F0, "Member 'UNetworkPredictionComponent::ReplicationProxy_Simulated' has a wrong offset!");
static_assert(offsetof(UNetworkPredictionComponent, ReplicationProxy_Replay) == 0x000240, "Member 'UNetworkPredictionComponent::ReplicationProxy_Replay' has a wrong offset!");

// Class NetworkPrediction.NetworkPredictionPhysicsComponent
// 0x0120 (0x01C0 - 0x00A0)
class UNetworkPredictionPhysicsComponent final : public UActorComponent
{
public:
	struct FNetworkPredictionProxy                NetworkPredictionProxy;                            // 0x00A0(0x00B0)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                    UpdatedPrimitive;                                  // 0x0150(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FReplicationProxy                      ReplicationProxy;                                  // 0x0160(0x0050)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B0[0x10];                                     // 0x01B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetworkPredictionPhysicsComponent">();
	}
	static class UNetworkPredictionPhysicsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetworkPredictionPhysicsComponent>();
	}
};
static_assert(alignof(UNetworkPredictionPhysicsComponent) == 0x000010, "Wrong alignment on UNetworkPredictionPhysicsComponent");
static_assert(sizeof(UNetworkPredictionPhysicsComponent) == 0x0001C0, "Wrong size on UNetworkPredictionPhysicsComponent");
static_assert(offsetof(UNetworkPredictionPhysicsComponent, NetworkPredictionProxy) == 0x0000A0, "Member 'UNetworkPredictionPhysicsComponent::NetworkPredictionProxy' has a wrong offset!");
static_assert(offsetof(UNetworkPredictionPhysicsComponent, UpdatedPrimitive) == 0x000150, "Member 'UNetworkPredictionPhysicsComponent::UpdatedPrimitive' has a wrong offset!");
static_assert(offsetof(UNetworkPredictionPhysicsComponent, ReplicationProxy) == 0x000160, "Member 'UNetworkPredictionPhysicsComponent::ReplicationProxy' has a wrong offset!");

// Class NetworkPrediction.NetworkPredictionReplicatedManager
// 0x0010 (0x0280 - 0x0270)
class ANetworkPredictionReplicatedManager final : public AActor
{
public:
	struct FSharedPackageMap                      SharedPackageMap;                                  // 0x0270(0x0010)(Net, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetworkPredictionReplicatedManager">();
	}
	static class ANetworkPredictionReplicatedManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANetworkPredictionReplicatedManager>();
	}
};
static_assert(alignof(ANetworkPredictionReplicatedManager) == 0x000008, "Wrong alignment on ANetworkPredictionReplicatedManager");
static_assert(sizeof(ANetworkPredictionReplicatedManager) == 0x000280, "Wrong size on ANetworkPredictionReplicatedManager");
static_assert(offsetof(ANetworkPredictionReplicatedManager, SharedPackageMap) == 0x000270, "Member 'ANetworkPredictionReplicatedManager::SharedPackageMap' has a wrong offset!");

// Class NetworkPrediction.NetworkPredictionSettingsObject
// 0x0038 (0x0060 - 0x0028)
class UNetworkPredictionSettingsObject final : public UObject
{
public:
	struct FNetworkPredictionSettings             Settings;                                          // 0x0028(0x0028)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FNetworkPredictionDevHUD>       DevHUDs;                                           // 0x0050(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetworkPredictionSettingsObject">();
	}
	static class UNetworkPredictionSettingsObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetworkPredictionSettingsObject>();
	}
};
static_assert(alignof(UNetworkPredictionSettingsObject) == 0x000008, "Wrong alignment on UNetworkPredictionSettingsObject");
static_assert(sizeof(UNetworkPredictionSettingsObject) == 0x000060, "Wrong size on UNetworkPredictionSettingsObject");
static_assert(offsetof(UNetworkPredictionSettingsObject, Settings) == 0x000028, "Member 'UNetworkPredictionSettingsObject::Settings' has a wrong offset!");
static_assert(offsetof(UNetworkPredictionSettingsObject, DevHUDs) == 0x000050, "Member 'UNetworkPredictionSettingsObject::DevHUDs' has a wrong offset!");

// Class NetworkPrediction.NetworkPredictionWorldManager
// 0x0638 (0x0668 - 0x0030)
class UNetworkPredictionWorldManager final : public UWorldSubsystem
{
public:
	class ANetworkPredictionReplicatedManager*    ReplicatedManager;                                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x630];                                     // 0x0038(0x0630)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetworkPredictionWorldManager">();
	}
	static class UNetworkPredictionWorldManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetworkPredictionWorldManager>();
	}
};
static_assert(alignof(UNetworkPredictionWorldManager) == 0x000008, "Wrong alignment on UNetworkPredictionWorldManager");
static_assert(sizeof(UNetworkPredictionWorldManager) == 0x000668, "Wrong size on UNetworkPredictionWorldManager");
static_assert(offsetof(UNetworkPredictionWorldManager, ReplicatedManager) == 0x000030, "Member 'UNetworkPredictionWorldManager::ReplicatedManager' has a wrong offset!");

}

