#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerSurveySingleChoiceResponse

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function PlayerSurveySingleChoiceResponse.PlayerSurveySingleChoiceResponse_C.ExecuteUbergraph_PlayerSurveySingleChoiceResponse
// 0x0034 (0x0034 - 0x0000)
struct PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NumberOfResponses;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x002C(0x0008)(NoDestructor)
};
static_assert(alignof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse) == 0x000004, "Wrong alignment on PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse");
static_assert(sizeof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse) == 0x000034, "Wrong size on PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, EntryPoint) == 0x000000, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, Temp_byte_Variable) == 0x000004, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, Temp_byte_Variable_1) == 0x000005, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, Temp_bool_Variable) == 0x000006, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, Temp_byte_Variable_2) == 0x000007, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, Temp_byte_Variable_3) == 0x000008, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, K2Node_Event_NumberOfResponses) == 0x00000C, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::K2Node_Event_NumberOfResponses' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, CallFunc_Divide_IntInt_ReturnValue) == 0x000014, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, CallFunc_Min_ReturnValue) == 0x000018, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, K2Node_Select_Default) == 0x000028, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, Temp_bool_Variable_1) == 0x000029, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, K2Node_Select_Default_1) == 0x00002A, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse, K2Node_Event_InFocusEvent) == 0x00002C, "Member 'PlayerSurveySingleChoiceResponse_C_ExecuteUbergraph_PlayerSurveySingleChoiceResponse::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function PlayerSurveySingleChoiceResponse.PlayerSurveySingleChoiceResponse_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct PlayerSurveySingleChoiceResponse_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(PlayerSurveySingleChoiceResponse_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on PlayerSurveySingleChoiceResponse_C_OnAddedToFocusPath");
static_assert(sizeof(PlayerSurveySingleChoiceResponse_C_OnAddedToFocusPath) == 0x000008, "Wrong size on PlayerSurveySingleChoiceResponse_C_OnAddedToFocusPath");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'PlayerSurveySingleChoiceResponse_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function PlayerSurveySingleChoiceResponse.PlayerSurveySingleChoiceResponse_C.SetNumberOfResponses
// 0x0004 (0x0004 - 0x0000)
struct PlayerSurveySingleChoiceResponse_C_SetNumberOfResponses final
{
public:
	int32                                         NumberOfResponses;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerSurveySingleChoiceResponse_C_SetNumberOfResponses) == 0x000004, "Wrong alignment on PlayerSurveySingleChoiceResponse_C_SetNumberOfResponses");
static_assert(sizeof(PlayerSurveySingleChoiceResponse_C_SetNumberOfResponses) == 0x000004, "Wrong size on PlayerSurveySingleChoiceResponse_C_SetNumberOfResponses");
static_assert(offsetof(PlayerSurveySingleChoiceResponse_C_SetNumberOfResponses, NumberOfResponses) == 0x000000, "Member 'PlayerSurveySingleChoiceResponse_C_SetNumberOfResponses::NumberOfResponses' has a wrong offset!");

}

