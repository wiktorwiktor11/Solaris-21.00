#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_RealitySeed_ListenForTree

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_RealitySeed_ListenForTree.GA_RealitySeed_ListenForTree_C
// 0x0020 (0x0B30 - 0x0B10)
class UGA_RealitySeed_ListenForTree_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 PlayerOwnedTree;                                   // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RealitySaplingRift_C*               RealityRift;                                       // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EventReceived_BEED7CAC42EA6CD4A52F96B69B8310D4(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_RealitySeed_ListenForTree(int32 EntryPoint);
	void FailedToActivatePassiveAbility();
	void K2_ActivateAbility();
	void RegisterTree(class AActor* Actor);
	void SaplingPlanted(bool isNewSapling);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_RealitySeed_ListenForTree_C">();
	}
	static class UGA_RealitySeed_ListenForTree_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_RealitySeed_ListenForTree_C>();
	}
};
static_assert(alignof(UGA_RealitySeed_ListenForTree_C) == 0x000008, "Wrong alignment on UGA_RealitySeed_ListenForTree_C");
static_assert(sizeof(UGA_RealitySeed_ListenForTree_C) == 0x000B30, "Wrong size on UGA_RealitySeed_ListenForTree_C");
static_assert(offsetof(UGA_RealitySeed_ListenForTree_C, UberGraphFrame) == 0x000B10, "Member 'UGA_RealitySeed_ListenForTree_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_ListenForTree_C, PlayerOwnedTree) == 0x000B18, "Member 'UGA_RealitySeed_ListenForTree_C::PlayerOwnedTree' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_ListenForTree_C, RealityRift) == 0x000B20, "Member 'UGA_RealitySeed_ListenForTree_C::RealityRift' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_ListenForTree_C, PlayerPawn) == 0x000B28, "Member 'UGA_RealitySeed_ListenForTree_C::PlayerPawn' has a wrong offset!");

}

