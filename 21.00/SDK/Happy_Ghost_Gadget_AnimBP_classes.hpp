#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Happy_Ghost_Gadget_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Happy_Ghost_Gadget_AnimBP.Happy_Ghost_Gadget_AnimBP_C
// 0x0B40 (0x0E90 - 0x0350)
class UHappy_Ghost_Gadget_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0388(0x0010)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0398(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x04C0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x04E0(0x0020)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x0500(0x0980)()
	bool                                          IsFired;                                           // 0x0E80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_Happy_Ghost_Gadget_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Happy_Ghost_Gadget_AnimBP_C">();
	}
	static class UHappy_Ghost_Gadget_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHappy_Ghost_Gadget_AnimBP_C>();
	}
};
static_assert(alignof(UHappy_Ghost_Gadget_AnimBP_C) == 0x000010, "Wrong alignment on UHappy_Ghost_Gadget_AnimBP_C");
static_assert(sizeof(UHappy_Ghost_Gadget_AnimBP_C) == 0x000E90, "Wrong size on UHappy_Ghost_Gadget_AnimBP_C");
static_assert(offsetof(UHappy_Ghost_Gadget_AnimBP_C, UberGraphFrame) == 0x000350, "Member 'UHappy_Ghost_Gadget_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHappy_Ghost_Gadget_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UHappy_Ghost_Gadget_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UHappy_Ghost_Gadget_AnimBP_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UHappy_Ghost_Gadget_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UHappy_Ghost_Gadget_AnimBP_C, AnimGraphNode_Root) == 0x000368, "Member 'UHappy_Ghost_Gadget_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UHappy_Ghost_Gadget_AnimBP_C, AnimGraphNode_LocalRefPose) == 0x000388, "Member 'UHappy_Ghost_Gadget_AnimBP_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UHappy_Ghost_Gadget_AnimBP_C, AnimGraphNode_ModifyBone) == 0x000398, "Member 'UHappy_Ghost_Gadget_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UHappy_Ghost_Gadget_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x0004C0, "Member 'UHappy_Ghost_Gadget_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UHappy_Ghost_Gadget_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x0004E0, "Member 'UHappy_Ghost_Gadget_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UHappy_Ghost_Gadget_AnimBP_C, AnimGraphNode_RigidBody) == 0x000500, "Member 'UHappy_Ghost_Gadget_AnimBP_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UHappy_Ghost_Gadget_AnimBP_C, IsFired) == 0x000E80, "Member 'UHappy_Ghost_Gadget_AnimBP_C::IsFired' has a wrong offset!");

}

