#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_RealitySaplingRift_Teleport

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_RealitySaplingRift_Teleport.GA_RealitySaplingRift_Teleport_C
// 0x0358 (0x0E68 - 0x0B10)
class UGA_RealitySaplingRift_Teleport_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_RealitySaplingRift_C*               HidingProp_Rift;                                   // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_HudElementToHide;                                // 0x0B20(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           TargetPropTeleportingCue;                          // 0x0B40(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B44[0x4];                                      // 0x0B44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           WobbleHandle;                                      // 0x0B48(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WobbleCue;                                         // 0x0B50(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ServerWorldTime;                                   // 0x0B54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PlayerEnterCue;                                    // 0x0B58(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           HidingInPropTag;                                   // 0x0B5C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  ChangeEquipmentTag;                                // 0x0B60(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         ScalableFloat_TraceAndDestroyDistance;             // 0x0B88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                StartingPos;                                       // 0x0BB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TeleportPos;                                       // 0x0BC8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ExitCue;                                           // 0x0BE0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE4[0x4];                                      // 0x0BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FlattenedStartWithTrajPos;                         // 0x0BE8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  PlayerController;                                  // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      TraceTypes;                                        // 0x0C08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ScalableFloat_TraceAndDestroyRadius;               // 0x0C18(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AActor*>                         TraceIgnoreActors;                                 // 0x0C40(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                PlayerExitTrajectory;                              // 0x0C50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         GE_KnockBack;                                      // 0x0C68(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         TraceDistance;                                     // 0x0C78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7C[0x4];                                      // 0x0C7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         GE_BreakBuilding;                                  // 0x0C80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         LaunchVelocity_Down;                               // 0x0C90(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         LaunchVelocity;                                    // 0x0CB8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         LaunchVelocity_Up;                                 // 0x0CE0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         LaunchVelocityExtraVert;                           // 0x0D08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         LaunchVelocityExtraVert_Up;                        // 0x0D30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         LaunchVelocityExtraVert_Down;                      // 0x0D58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ZUpMult;                                           // 0x0D80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZDownMult;                                         // 0x0D84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZMidMult;                                          // 0x0D88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawDebug;                                         // 0x0D8C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8D[0x3];                                      // 0x0D8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DebugDrawTime;                                     // 0x0D90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D94[0x4];                                      // 0x0D94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerPawn*>                TempFortPlayerPawns;                               // 0x0D98(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FScalableFloat                         SF_SkyDiveHeight;                                  // 0x0DA8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRotator                               TeleportRotation;                                  // 0x0DD0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FScalableFloat                         SF_TeleportOffset;                                 // 0x0DE8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABuildingRealitySapling*                CachedTargetSapling;                               // 0x0E10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         HorizontalLaunchVelocity;                          // 0x0E18(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VerticalLaunchVelocity;                            // 0x0E40(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Added_1BDC9E32405196081D8F5FB0EF467467();
	void Added_2707329F4C8327029C97B4B285E1D388();
	void Added_9C36B6F84E28FDBBDB24309AA0C8EC2C();
	void Added_E6A9E3DF417CF1A2BBB5DC9F32502AE8();
	void Determine_Teleport_Position(struct FVector* TeleportLocRetVal);
	void Determine_Teleport_Rotation(struct FRotator* OutRotattion);
	void ExecuteUbergraph_GA_RealitySaplingRift_Teleport(int32 EntryPoint);
	void FailedToActivatePassiveAbility();
	void GetOrCacheTargetRealitySapling(class ABuildingRealitySapling** TargetSapling);
	void GrapplerFailSafe(class AFortPawn* FortPawn);
	void Handle_Surface_Impact(class AActor* OptionalImpactActor, const struct FVector& ImpactLoc, const struct FVector& ImpactNorm);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnComplete_5D2B0ECF45E2CE118927679C25F73323();
	void OnPawnDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void QuestUpdate(class AFortPawn* Pawn);
	void ResetCamera();
	void Set_Hiding_Prop_Collision_Enabled(bool Enable);
	void Set_Player_Exit_Trajectory();
	void Trace_and_Destroy_Buildings_in_Trajectory_Path();
	void Wobble();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_RealitySaplingRift_Teleport_C">();
	}
	static class UGA_RealitySaplingRift_Teleport_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_RealitySaplingRift_Teleport_C>();
	}
};
static_assert(alignof(UGA_RealitySaplingRift_Teleport_C) == 0x000008, "Wrong alignment on UGA_RealitySaplingRift_Teleport_C");
static_assert(sizeof(UGA_RealitySaplingRift_Teleport_C) == 0x000E68, "Wrong size on UGA_RealitySaplingRift_Teleport_C");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, UberGraphFrame) == 0x000B10, "Member 'UGA_RealitySaplingRift_Teleport_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, HidingProp_Rift) == 0x000B18, "Member 'UGA_RealitySaplingRift_Teleport_C::HidingProp_Rift' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, T_HudElementToHide) == 0x000B20, "Member 'UGA_RealitySaplingRift_Teleport_C::T_HudElementToHide' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, TargetPropTeleportingCue) == 0x000B40, "Member 'UGA_RealitySaplingRift_Teleport_C::TargetPropTeleportingCue' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, WobbleHandle) == 0x000B48, "Member 'UGA_RealitySaplingRift_Teleport_C::WobbleHandle' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, WobbleCue) == 0x000B50, "Member 'UGA_RealitySaplingRift_Teleport_C::WobbleCue' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, ServerWorldTime) == 0x000B54, "Member 'UGA_RealitySaplingRift_Teleport_C::ServerWorldTime' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, PlayerEnterCue) == 0x000B58, "Member 'UGA_RealitySaplingRift_Teleport_C::PlayerEnterCue' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, HidingInPropTag) == 0x000B5C, "Member 'UGA_RealitySaplingRift_Teleport_C::HidingInPropTag' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, ChangeEquipmentTag) == 0x000B60, "Member 'UGA_RealitySaplingRift_Teleport_C::ChangeEquipmentTag' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, PlayerPawn) == 0x000B80, "Member 'UGA_RealitySaplingRift_Teleport_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, ScalableFloat_TraceAndDestroyDistance) == 0x000B88, "Member 'UGA_RealitySaplingRift_Teleport_C::ScalableFloat_TraceAndDestroyDistance' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, StartingPos) == 0x000BB0, "Member 'UGA_RealitySaplingRift_Teleport_C::StartingPos' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, TeleportPos) == 0x000BC8, "Member 'UGA_RealitySaplingRift_Teleport_C::TeleportPos' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, ExitCue) == 0x000BE0, "Member 'UGA_RealitySaplingRift_Teleport_C::ExitCue' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, FlattenedStartWithTrajPos) == 0x000BE8, "Member 'UGA_RealitySaplingRift_Teleport_C::FlattenedStartWithTrajPos' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, PlayerController) == 0x000C00, "Member 'UGA_RealitySaplingRift_Teleport_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, TraceTypes) == 0x000C08, "Member 'UGA_RealitySaplingRift_Teleport_C::TraceTypes' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, ScalableFloat_TraceAndDestroyRadius) == 0x000C18, "Member 'UGA_RealitySaplingRift_Teleport_C::ScalableFloat_TraceAndDestroyRadius' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, TraceIgnoreActors) == 0x000C40, "Member 'UGA_RealitySaplingRift_Teleport_C::TraceIgnoreActors' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, PlayerExitTrajectory) == 0x000C50, "Member 'UGA_RealitySaplingRift_Teleport_C::PlayerExitTrajectory' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, GE_KnockBack) == 0x000C68, "Member 'UGA_RealitySaplingRift_Teleport_C::GE_KnockBack' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, TraceDistance) == 0x000C78, "Member 'UGA_RealitySaplingRift_Teleport_C::TraceDistance' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, GE_BreakBuilding) == 0x000C80, "Member 'UGA_RealitySaplingRift_Teleport_C::GE_BreakBuilding' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, LaunchVelocity_Down) == 0x000C90, "Member 'UGA_RealitySaplingRift_Teleport_C::LaunchVelocity_Down' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, LaunchVelocity) == 0x000CB8, "Member 'UGA_RealitySaplingRift_Teleport_C::LaunchVelocity' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, LaunchVelocity_Up) == 0x000CE0, "Member 'UGA_RealitySaplingRift_Teleport_C::LaunchVelocity_Up' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, LaunchVelocityExtraVert) == 0x000D08, "Member 'UGA_RealitySaplingRift_Teleport_C::LaunchVelocityExtraVert' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, LaunchVelocityExtraVert_Up) == 0x000D30, "Member 'UGA_RealitySaplingRift_Teleport_C::LaunchVelocityExtraVert_Up' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, LaunchVelocityExtraVert_Down) == 0x000D58, "Member 'UGA_RealitySaplingRift_Teleport_C::LaunchVelocityExtraVert_Down' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, ZUpMult) == 0x000D80, "Member 'UGA_RealitySaplingRift_Teleport_C::ZUpMult' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, ZDownMult) == 0x000D84, "Member 'UGA_RealitySaplingRift_Teleport_C::ZDownMult' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, ZMidMult) == 0x000D88, "Member 'UGA_RealitySaplingRift_Teleport_C::ZMidMult' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, DrawDebug) == 0x000D8C, "Member 'UGA_RealitySaplingRift_Teleport_C::DrawDebug' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, DebugDrawTime) == 0x000D90, "Member 'UGA_RealitySaplingRift_Teleport_C::DebugDrawTime' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, TempFortPlayerPawns) == 0x000D98, "Member 'UGA_RealitySaplingRift_Teleport_C::TempFortPlayerPawns' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, SF_SkyDiveHeight) == 0x000DA8, "Member 'UGA_RealitySaplingRift_Teleport_C::SF_SkyDiveHeight' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, TeleportRotation) == 0x000DD0, "Member 'UGA_RealitySaplingRift_Teleport_C::TeleportRotation' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, SF_TeleportOffset) == 0x000DE8, "Member 'UGA_RealitySaplingRift_Teleport_C::SF_TeleportOffset' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, CachedTargetSapling) == 0x000E10, "Member 'UGA_RealitySaplingRift_Teleport_C::CachedTargetSapling' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, HorizontalLaunchVelocity) == 0x000E18, "Member 'UGA_RealitySaplingRift_Teleport_C::HorizontalLaunchVelocity' has a wrong offset!");
static_assert(offsetof(UGA_RealitySaplingRift_Teleport_C, VerticalLaunchVelocity) == 0x000E40, "Member 'UGA_RealitySaplingRift_Teleport_C::VerticalLaunchVelocity' has a wrong offset!");

}

