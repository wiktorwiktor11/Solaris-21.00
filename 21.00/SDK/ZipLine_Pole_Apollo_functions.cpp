#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ZipLine_Pole_Apollo

#include "Basic.hpp"

#include "ZipLine_Pole_Apollo_classes.hpp"
#include "ZipLine_Pole_Apollo_parameters.hpp"


namespace SDK
{

// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.updateZiplinePoleCollisionWithOverlappingPawns
// (BlueprintCallable, BlueprintEvent)

void AZipLine_Pole_Apollo_C::updateZiplinePoleCollisionWithOverlappingPawns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "updateZiplinePoleCollisionWithOverlappingPawns");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.UnbindZiplineStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InFortPlayerPawn                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZipLine_Pole_Apollo_C::UnbindZiplineStateChanged(class AFortPlayerPawn* InFortPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "UnbindZiplineStateChanged");

	Params::ZipLine_Pole_Apollo_C_UnbindZiplineStateChanged Parms{};

	Parms.InFortPlayerPawn = InFortPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.RemovePawnFromPawnsOverlappingLarge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZipLine_Pole_Apollo_C::RemovePawnFromPawnsOverlappingLarge(class AFortPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "RemovePawnFromPawnsOverlappingLarge");

	Params::ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.Remove Ignore Player
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InFortPlayerPawn                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZipLine_Pole_Apollo_C::Remove_Ignore_Player(class AFortPlayerPawn* InFortPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "Remove Ignore Player");

	Params::ZipLine_Pole_Apollo_C_Remove_Ignore_Player Parms{};

	Parms.InFortPlayerPawn = InFortPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AZipLine_Pole_Apollo_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.PlayerEndOverlappingLargeCapsule
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  FortPlayerPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZipLine_Pole_Apollo_C::PlayerEndOverlappingLargeCapsule(class AFortPlayerPawn* FortPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "PlayerEndOverlappingLargeCapsule");

	Params::ZipLine_Pole_Apollo_C_PlayerEndOverlappingLargeCapsule Parms{};

	Parms.FortPlayerPawn = FortPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.PlayerBeginOverlappingLargeCapsule
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  FortPlayerPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZipLine_Pole_Apollo_C::PlayerBeginOverlappingLargeCapsule(class AFortPlayerPawn* FortPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "PlayerBeginOverlappingLargeCapsule");

	Params::ZipLine_Pole_Apollo_C_PlayerBeginOverlappingLargeCapsule Parms{};

	Parms.FortPlayerPawn = FortPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.pawnZiplineStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsZiplining                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZipLine_Pole_Apollo_C::pawnZiplineStateChanged(bool bIsZiplining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "pawnZiplineStateChanged");

	Params::ZipLine_Pole_Apollo_C_pawnZiplineStateChanged Parms{};

	Parms.bIsZiplining = bIsZiplining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.FindInIgnorePlayers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InFortPlayerPawn                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZipLine_Pole_Apollo_C::FindInIgnorePlayers(class AFortPlayerPawn* InFortPlayerPawn, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "FindInIgnorePlayers");

	Params::ZipLine_Pole_Apollo_C_FindInIgnorePlayers Parms{};

	Parms.InFortPlayerPawn = InFortPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.ExecuteUbergraph_ZipLine_Pole_Apollo
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZipLine_Pole_Apollo_C::ExecuteUbergraph_ZipLine_Pole_Apollo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "ExecuteUbergraph_ZipLine_Pole_Apollo");

	Params::ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.Actor Hit
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SelfActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZipLine_Pole_Apollo_C::Actor_Hit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZipLine_Pole_Apollo_C", "Actor Hit");

	Params::ZipLine_Pole_Apollo_C_Actor_Hit Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}

}

