#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Meatball_UI_Gauge

#include "Basic.hpp"

#include "Meatball_UI_Gauge_classes.hpp"
#include "Meatball_UI_Gauge_parameters.hpp"


namespace SDK
{

// Function Meatball_UI_Gauge.Meatball_UI_Gauge_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMeatball_UI_Gauge_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Meatball_UI_Gauge_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Meatball_UI_Gauge.Meatball_UI_Gauge_C.ExecuteUbergraph_Meatball_UI_Gauge
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMeatball_UI_Gauge_C::ExecuteUbergraph_Meatball_UI_Gauge(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Meatball_UI_Gauge_C", "ExecuteUbergraph_Meatball_UI_Gauge");

	Params::Meatball_UI_Gauge_C_ExecuteUbergraph_Meatball_UI_Gauge Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Meatball_UI_Gauge.Meatball_UI_Gauge_C.OnFuelValueChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   FuelPercentage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLowOnFuel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMeatball_UI_Gauge_C::OnFuelValueChanged(float FuelPercentage, bool bIsLowOnFuel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Meatball_UI_Gauge_C", "OnFuelValueChanged");

	Params::Meatball_UI_Gauge_C_OnFuelValueChanged Parms{};

	Parms.FuelPercentage = FuelPercentage;
	Parms.bIsLowOnFuel = bIsLowOnFuel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Meatball_UI_Gauge.Meatball_UI_Gauge_C.OnLowFuel
// (Event, Protected, BlueprintEvent)

void UMeatball_UI_Gauge_C::OnLowFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Meatball_UI_Gauge_C", "OnLowFuel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Meatball_UI_Gauge.Meatball_UI_Gauge_C.OnOutOfFuel
// (Event, Protected, BlueprintEvent)

void UMeatball_UI_Gauge_C::OnOutOfFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Meatball_UI_Gauge_C", "OnOutOfFuel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Meatball_UI_Gauge.Meatball_UI_Gauge_C.OnUpdateBoostChargePercent
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   BoostPercent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMeatball_UI_Gauge_C::OnUpdateBoostChargePercent(float BoostPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Meatball_UI_Gauge_C", "OnUpdateBoostChargePercent");

	Params::Meatball_UI_Gauge_C_OnUpdateBoostChargePercent Parms{};

	Parms.BoostPercent = BoostPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Meatball_UI_Gauge.Meatball_UI_Gauge_C.OnWidgetVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMeatball_UI_Gauge_C::OnWidgetVisibilityChanged(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Meatball_UI_Gauge_C", "OnWidgetVisibilityChanged");

	Params::Meatball_UI_Gauge_C_OnWidgetVisibilityChanged Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Meatball_UI_Gauge.Meatball_UI_Gauge_C.SetVehicleHasInfiniteFuel
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInfiniteFuel                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMeatball_UI_Gauge_C::SetVehicleHasInfiniteFuel(bool bInfiniteFuel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Meatball_UI_Gauge_C", "SetVehicleHasInfiniteFuel");

	Params::Meatball_UI_Gauge_C_SetVehicleHasInfiniteFuel Parms{};

	Parms.bInfiniteFuel = bInfiniteFuel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Meatball_UI_Gauge.Meatball_UI_Gauge_C.ShowNoFuelMessage
// (Event, Protected, BlueprintEvent)

void UMeatball_UI_Gauge_C::ShowNoFuelMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Meatball_UI_Gauge_C", "ShowNoFuelMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Meatball_UI_Gauge.Meatball_UI_Gauge_C.UpdateSpeedometer
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NormalizedSpeed                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RawSpeed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMeatball_UI_Gauge_C::UpdateSpeedometer(float NormalizedSpeed, float RawSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Meatball_UI_Gauge_C", "UpdateSpeedometer");

	Params::Meatball_UI_Gauge_C_UpdateSpeedometer Parms{};

	Parms.NormalizedSpeed = NormalizedSpeed;
	Parms.RawSpeed = RawSpeed;

	UObject::ProcessEvent(Func, &Parms);
}

}

