#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StationProp_VendingMachine_Emote_Base

#include "Basic.hpp"

#include "BP_StationProp_VendingMachine_Emote_Base_classes.hpp"
#include "BP_StationProp_VendingMachine_Emote_Base_parameters.hpp"


namespace SDK
{

// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.Added_CA0C20DD44E949E0334456BD7493231A
// (BlueprintCallable, BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::Added_CA0C20DD44E949E0334456BD7493231A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "Added_CA0C20DD44E949E0334456BD7493231A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.BlueprintOnLocalInteract
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InteractingPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInteractionBeingAttempted              InteractionBeingAttempted                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_StationProp_VendingMachine_Emote_Base_C::BlueprintOnLocalInteract(class AFortPlayerPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "BlueprintOnLocalInteract");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_BlueprintOnLocalInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.ChangeEmote
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVendingMachineMaterialStyle     DesiredStyle                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StationProp_VendingMachine_Emote_Base_C::ChangeEmote(const struct FVendingMachineMaterialStyle& DesiredStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "ChangeEmote");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_ChangeEmote Parms{};

	Parms.DesiredStyle = std::move(DesiredStyle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.ChangeEmoteScreenRevealed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Revealed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StationProp_VendingMachine_Emote_Base_C::ChangeEmoteScreenRevealed(bool Revealed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "ChangeEmoteScreenRevealed");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_ChangeEmoteScreenRevealed Parms{};

	Parms.Revealed = Revealed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.Event On Dialog Marker Interaction State Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EDialogMarkerInteractionState           CurrentInteractionState                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerController*            InteractingController                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StationProp_VendingMachine_Emote_Base_C::Event_On_Dialog_Marker_Interaction_State_Changed(const EDialogMarkerInteractionState CurrentInteractionState, const class AFortPlayerController* InteractingController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "Event On Dialog Marker Interaction State Changed");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_Event_On_Dialog_Marker_Interaction_State_Changed Parms{};

	Parms.CurrentInteractionState = CurrentInteractionState;
	Parms.InteractingController = InteractingController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.Event On Receive Conversation Message
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerController*            LocalPlayerController                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClientConversationMessagePayloadMessage                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_StationProp_VendingMachine_Emote_Base_C::Event_On_Receive_Conversation_Message(const class AFortPlayerController* LocalPlayerController, const struct FClientConversationMessagePayload& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "Event On Receive Conversation Message");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_Event_On_Receive_Conversation_Message Parms{};

	Parms.LocalPlayerController = LocalPlayerController;
	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.Event Player Dance For Required Duration
// (BlueprintCallable, BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::Event_Player_Dance_For_Required_Duration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "Event Player Dance For Required Duration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.ExecuteUbergraph_BP_StationProp_VendingMachine_Emote_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StationProp_VendingMachine_Emote_Base_C::ExecuteUbergraph_BP_StationProp_VendingMachine_Emote_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "ExecuteUbergraph_BP_StationProp_VendingMachine_Emote_Base");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_ExecuteUbergraph_BP_StationProp_VendingMachine_Emote_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.From_A_to_B__FinishedFunc
// (BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::From_A_to_B__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "From_A_to_B__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.From_A_to_B__UpdateFunc
// (BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::From_A_to_B__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "From_A_to_B__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.From_B_to_A__FinishedFunc
// (BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::From_B_to_A__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "From_B_to_A__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.From_B_to_A__UpdateFunc
// (BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::From_B_to_A__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "From_B_to_A__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.HandleLocalPlayerInteract
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::HandleLocalPlayerInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "HandleLocalPlayerInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.HandleReceiveConversationMessage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FClientConversationMessagePayloadClientConversationMessagePayload                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_StationProp_VendingMachine_Emote_Base_C::HandleReceiveConversationMessage(const struct FClientConversationMessagePayload& ClientConversationMessagePayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "HandleReceiveConversationMessage");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_HandleReceiveConversationMessage Parms{};

	Parms.ClientConversationMessagePayload = std::move(ClientConversationMessagePayload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.HandleReceiveDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        InstigatingPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StationProp_VendingMachine_Emote_Base_C::HandleReceiveDamage(class AFortPawn* InstigatingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "HandleReceiveDamage");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_HandleReceiveDamage Parms{};

	Parms.InstigatingPawn = InstigatingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.OnDamagePlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_StationProp_VendingMachine_Emote_Base_C::OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "OnDamagePlayEffects");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_OnDamagePlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.PlayServiceUsedEffects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StationProp_VendingMachine_Emote_Base_C::PlayServiceUsedEffects(class AFortPlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "PlayServiceUsedEffects");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_PlayServiceUsedEffects Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.Reset A Defaults
// (BlueprintCallable, BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::Reset_A_Defaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "Reset A Defaults");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.ResetADefaults
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::ResetADefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "ResetADefaults");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.RevealEmoteScreen__FinishedFunc
// (BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::RevealEmoteScreen__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "RevealEmoteScreen__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.RevealEmoteScreen__UpdateFunc
// (BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::RevealEmoteScreen__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "RevealEmoteScreen__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.SetMaterialTextureParameters
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::SetMaterialTextureParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "SetMaterialTextureParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.StopReactionAudio
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FadeOutDuration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StationProp_VendingMachine_Emote_Base_C::StopReactionAudio(float FadeOutDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "StopReactionAudio");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_StopReactionAudio Parms{};

	Parms.FadeOutDuration = FadeOutDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.TriggerChangeMaterialStyle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVendingMachineMaterialStyle     MaterialStyleData                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StationProp_VendingMachine_Emote_Base_C::TriggerChangeMaterialStyle(const struct FVendingMachineMaterialStyle& MaterialStyleData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "TriggerChangeMaterialStyle");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_TriggerChangeMaterialStyle Parms{};

	Parms.MaterialStyleData = std::move(MaterialStyleData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.TriggerDanceReaction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::TriggerDanceReaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "TriggerDanceReaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.TriggerVendEffects
// (BlueprintCallable, BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::TriggerVendEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "TriggerVendEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.UpdateMaterialTransition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distortion                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EmoteSwap                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BackgroundChange                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Cloud_and_Rainbow                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_StationProp_VendingMachine_Emote_Base_C::UpdateMaterialTransition(float Distortion, float EmoteSwap, float BackgroundChange, float Cloud_and_Rainbow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "UpdateMaterialTransition");

	Params::BP_StationProp_VendingMachine_Emote_Base_C_UpdateMaterialTransition Parms{};

	Parms.Distortion = Distortion;
	Parms.EmoteSwap = EmoteSwap;
	Parms.BackgroundChange = BackgroundChange;
	Parms.Cloud_and_Rainbow = Cloud_and_Rainbow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.WobbleTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::WobbleTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "WobbleTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StationProp_VendingMachine_Emote_Base.BP_StationProp_VendingMachine_Emote_Base_C.WobbleTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_StationProp_VendingMachine_Emote_Base_C::WobbleTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StationProp_VendingMachine_Emote_Base_C", "WobbleTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

