#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuartzMusicTrackComponent_ButterCake

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function QuartzMusicTrackComponent_ButterCake.QuartzMusicTrackComponent_ButterCake_C.UpdateStingerVolumes
// 0x0014 (0x0014 - 0x0000)
struct QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes) == 0x000004, "Wrong alignment on QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes");
static_assert(sizeof(QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes) == 0x000014, "Wrong size on QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes, CallFunc_IsValid_ReturnValue_1) == 0x000008, "Member 'QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes, CallFunc_MapRangeClamped_ReturnValue) == 0x00000C, "Member 'QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'QuartzMusicTrackComponent_ButterCake_C_UpdateStingerVolumes::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function QuartzMusicTrackComponent_ButterCake.QuartzMusicTrackComponent_ButterCake_C.On Changed Has Any Event Value
// 0x0010 (0x0010 - 0x0000)
struct QuartzMusicTrackComponent_ButterCake_C_On_Changed_Has_Any_Event_Value final
{
public:
	class UFortGameplayDataTrackerComponent*      DataTrackerComponent_0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasEventValues;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_ButterCake_C_On_Changed_Has_Any_Event_Value) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_ButterCake_C_On_Changed_Has_Any_Event_Value");
static_assert(sizeof(QuartzMusicTrackComponent_ButterCake_C_On_Changed_Has_Any_Event_Value) == 0x000010, "Wrong size on QuartzMusicTrackComponent_ButterCake_C_On_Changed_Has_Any_Event_Value");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_On_Changed_Has_Any_Event_Value, DataTrackerComponent_0) == 0x000000, "Member 'QuartzMusicTrackComponent_ButterCake_C_On_Changed_Has_Any_Event_Value::DataTrackerComponent_0' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_On_Changed_Has_Any_Event_Value, bHasEventValues) == 0x000008, "Member 'QuartzMusicTrackComponent_ButterCake_C_On_Changed_Has_Any_Event_Value::bHasEventValues' has a wrong offset!");

// Function QuartzMusicTrackComponent_ButterCake.QuartzMusicTrackComponent_ButterCake_C.ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake
// 0x00C8 (0x00C8 - 0x0000)
struct QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EQuartzCommandDelegateSubType EventType, class FName Name)> Temp_delegate_Variable;                            // 0x0004(0x000C)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuartzQuantizationBoundary            K2Node_MakeStruct_QuartzQuantizationBoundary;      // 0x0018(0x0020)()
	class UQuartzClockHandle*                     CallFunc_GetClockHandle_Clock_Handle;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EQuartzCommandDelegateSubType EventType, class FName Name)> Temp_delegate_Variable_1;                          // 0x0040(0x000C)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameplayDataTrackerComponent*      K2Node_Event_DataTrackerComponent;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasEventValues;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQuartzQuantizationBoundary            K2Node_MakeStruct_QuartzQuantizationBoundary_1;    // 0x0068(0x0020)()
	class UQuartzClockHandle*                     CallFunc_GetClockHandle_Clock_Handle_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGameplayDataTrackerComponent*      CallFunc_GetDataTrackerComponent_DataTracker;      // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventValue_ReturnValue;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameplayDataTrackerComponent*      CallFunc_GetDataTrackerComponent_DataTracker_1;    // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue_1;              // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventValue_ReturnValue_1;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameplayDataTrackerComponent*      CallFunc_GetDataTrackerComponent_DataTracker_2;    // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventValue_ReturnValue_2;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake) == 0x000008, "Wrong alignment on QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake");
static_assert(sizeof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake) == 0x0000C8, "Wrong size on QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, EntryPoint) == 0x000000, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, Temp_delegate_Variable) == 0x000004, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, K2Node_MakeStruct_QuartzQuantizationBoundary) == 0x000018, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::K2Node_MakeStruct_QuartzQuantizationBoundary' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_GetClockHandle_Clock_Handle) == 0x000038, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_GetClockHandle_Clock_Handle' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, Temp_delegate_Variable_1) == 0x000040, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, K2Node_Event_DataTrackerComponent) == 0x000050, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::K2Node_Event_DataTrackerComponent' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, K2Node_Event_bHasEventValues) == 0x000058, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::K2Node_Event_bHasEventValues' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_CreateSound2D_ReturnValue) == 0x000060, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_CreateSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, K2Node_MakeStruct_QuartzQuantizationBoundary_1) == 0x000068, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::K2Node_MakeStruct_QuartzQuantizationBoundary_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_GetClockHandle_Clock_Handle_1) == 0x000088, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_GetClockHandle_Clock_Handle_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_GetDataTrackerComponent_DataTracker) == 0x000090, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_GetDataTrackerComponent_DataTracker' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_GetEventValue_ReturnValue) == 0x000098, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_GetEventValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00009C, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00009D, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_GetDataTrackerComponent_DataTracker_1) == 0x0000A0, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_GetDataTrackerComponent_DataTracker_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_CreateSound2D_ReturnValue_1) == 0x0000A8, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_CreateSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_GetEventValue_ReturnValue_1) == 0x0000B0, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_GetEventValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_GetDataTrackerComponent_DataTracker_2) == 0x0000B8, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_GetDataTrackerComponent_DataTracker_2' has a wrong offset!");
static_assert(offsetof(QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake, CallFunc_GetEventValue_ReturnValue_2) == 0x0000C0, "Member 'QuartzMusicTrackComponent_ButterCake_C_ExecuteUbergraph_QuartzMusicTrackComponent_ButterCake::CallFunc_GetEventValue_ReturnValue_2' has a wrong offset!");

}

