#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SquadLock_PlayerIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SquadLock_PlayerIndicator.SquadLock_PlayerIndicator_C.Update UI Player In Range State
// 0x0020 (0x0020 - 0x0000)
struct SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State final
{
public:
	bool                                          bInRangeAndScanned;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInRangePendingScan;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State) == 0x000008, "Wrong alignment on SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State");
static_assert(sizeof(SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State) == 0x000020, "Wrong size on SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State");
static_assert(offsetof(SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State, bInRangeAndScanned) == 0x000000, "Member 'SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State::bInRangeAndScanned' has a wrong offset!");
static_assert(offsetof(SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State, bInRangePendingScan) == 0x000001, "Member 'SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State::bInRangePendingScan' has a wrong offset!");
static_assert(offsetof(SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000002, "Member 'SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'SquadLock_PlayerIndicator_C_Update_UI_Player_In_Range_State::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

