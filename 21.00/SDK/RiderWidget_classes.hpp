#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RiderWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RiderWidget.RiderWidget_C
// 0x00D0 (0x03F0 - 0x0320)
class URiderWidget_C final : public UFortHUDElementWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       A_LowAnim;                                         // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       A_FullBarAnim;                                     // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       CurrentValue;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DeltaBar;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DeltaBar_1;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EmptyStatusGlow;                                   // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FillBar;                                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FillBar_1;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_50;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Stats;                                     // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Health;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Progress;                                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SprintIcon;                                        // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CahcedProgressDynamicMat;                          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowEnergyThreshold;                                // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedCurrentEnergy;                               // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevEnergy;                                        // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Anim_DeltaThreshold;                               // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EmptyEnergyDelta_Handle;                           // 0x03A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPlayerRiderComponent_C*                PlayerRiderComponentRef;                           // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevHealth;                                        // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           EmptyHealthDelta_Handle;                           // 0x03C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         EnergyDeltaDecayDelay;                             // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthDeltaDecayDelay;                             // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              AIPawn;                                            // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CooldownStartTime;                                 // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorStart;                                        // 0x03DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateOvershieldBarVisibility(bool bNewVisible);
	void UpdateHealthDelta();
	void UpdateHealth(float Value);
	void UpdateEnergy(float Value);
	void TryPlayingLowState(class UWidgetAnimation* InAnimation);
	void SetupEventBinds();
	void SetProgressBar(float Value, class UImage* TargetFillBar, class UImage* DeltaBar_0, float PreviousValue, float Threshold, const class FString& FunctionName, struct FTimerHandle& TimerHandle, float DeltaDecayDelay, struct FTimerHandle* DeltaTimerHandle);
	void SetHealthValue(float Value);
	void Set_Delta(class UImage* Target, float CurrentValue_0, float PreviousValue, float Threshold, const class FString& FunctionName, struct FTimerHandle& TimerHandle, float DeltaDecayDelay, struct FTimerHandle* TimerHandleRef);
	void RiderUINewStats_Event_0(const class FText& Name_0, const struct FSlateBrush& Icon, class AActor* RidableActor);
	void RiderUIHealthChanged(float Health);
	void RiderUIEnergyChanged(float Energy);
	void RiderUIEnd_Event_0(class AActor* RidableActor);
	void OnOvershieldVisibilityChanged();
	void OnInitialized();
	void InitRiderWidget();
	void ExecuteUbergraph_RiderWidget(int32 EntryPoint);
	void EmptyEnergyDelta();
	void Destruct();
	void Construct();
	void ClearOldBindings();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RiderWidget_C">();
	}
	static class URiderWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URiderWidget_C>();
	}
};
static_assert(alignof(URiderWidget_C) == 0x000008, "Wrong alignment on URiderWidget_C");
static_assert(sizeof(URiderWidget_C) == 0x0003F0, "Wrong size on URiderWidget_C");
static_assert(offsetof(URiderWidget_C, UberGraphFrame) == 0x000320, "Member 'URiderWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, A_LowAnim) == 0x000328, "Member 'URiderWidget_C::A_LowAnim' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, A_FullBarAnim) == 0x000330, "Member 'URiderWidget_C::A_FullBarAnim' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, CurrentValue) == 0x000338, "Member 'URiderWidget_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, DeltaBar) == 0x000340, "Member 'URiderWidget_C::DeltaBar' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, DeltaBar_1) == 0x000348, "Member 'URiderWidget_C::DeltaBar_1' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, EmptyStatusGlow) == 0x000350, "Member 'URiderWidget_C::EmptyStatusGlow' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, FillBar) == 0x000358, "Member 'URiderWidget_C::FillBar' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, FillBar_1) == 0x000360, "Member 'URiderWidget_C::FillBar_1' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, HorizontalBox_50) == 0x000368, "Member 'URiderWidget_C::HorizontalBox_50' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, Overlay_Stats) == 0x000370, "Member 'URiderWidget_C::Overlay_Stats' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, SizeBox_Health) == 0x000378, "Member 'URiderWidget_C::SizeBox_Health' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, SizeBox_Progress) == 0x000380, "Member 'URiderWidget_C::SizeBox_Progress' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, SprintIcon) == 0x000388, "Member 'URiderWidget_C::SprintIcon' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, CahcedProgressDynamicMat) == 0x000390, "Member 'URiderWidget_C::CahcedProgressDynamicMat' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, LowEnergyThreshold) == 0x000398, "Member 'URiderWidget_C::LowEnergyThreshold' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, CachedCurrentEnergy) == 0x00039C, "Member 'URiderWidget_C::CachedCurrentEnergy' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, PrevEnergy) == 0x0003A0, "Member 'URiderWidget_C::PrevEnergy' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, Anim_DeltaThreshold) == 0x0003A4, "Member 'URiderWidget_C::Anim_DeltaThreshold' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, EmptyEnergyDelta_Handle) == 0x0003A8, "Member 'URiderWidget_C::EmptyEnergyDelta_Handle' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, PlayerRiderComponentRef) == 0x0003B0, "Member 'URiderWidget_C::PlayerRiderComponentRef' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, PrevHealth) == 0x0003B8, "Member 'URiderWidget_C::PrevHealth' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, EmptyHealthDelta_Handle) == 0x0003C0, "Member 'URiderWidget_C::EmptyHealthDelta_Handle' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, EnergyDeltaDecayDelay) == 0x0003C8, "Member 'URiderWidget_C::EnergyDeltaDecayDelay' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, HealthDeltaDecayDelay) == 0x0003CC, "Member 'URiderWidget_C::HealthDeltaDecayDelay' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, AIPawn) == 0x0003D0, "Member 'URiderWidget_C::AIPawn' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, CooldownStartTime) == 0x0003D8, "Member 'URiderWidget_C::CooldownStartTime' has a wrong offset!");
static_assert(offsetof(URiderWidget_C, ColorStart) == 0x0003DC, "Member 'URiderWidget_C::ColorStart' has a wrong offset!");

}

