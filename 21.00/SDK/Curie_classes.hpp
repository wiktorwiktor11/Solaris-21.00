#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Curie

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Curie_structs.hpp"
#include "ModularGameplay_classes.hpp"


namespace SDK
{

// Class Curie.CurieComponent
// 0x0010 (0x00B0 - 0x00A0)
class UCurieComponent : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieComponent">();
	}
	static class UCurieComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieComponent>();
	}
};
static_assert(alignof(UCurieComponent) == 0x000008, "Wrong alignment on UCurieComponent");
static_assert(sizeof(UCurieComponent) == 0x0000B0, "Wrong size on UCurieComponent");

// Class Curie.CurieElementGameplayEffectOwner
// 0x0000 (0x0028 - 0x0028)
class UCurieElementGameplayEffectOwner : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieElementGameplayEffectOwner">();
	}
	static class UCurieElementGameplayEffectOwner* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieElementGameplayEffectOwner>();
	}
};
static_assert(alignof(UCurieElementGameplayEffectOwner) == 0x000008, "Wrong alignment on UCurieElementGameplayEffectOwner");
static_assert(sizeof(UCurieElementGameplayEffectOwner) == 0x000028, "Wrong size on UCurieElementGameplayEffectOwner");

// Class Curie.CurieEntityStateBehavior
// 0x0098 (0x00C0 - 0x0028)
class UCurieEntityStateBehavior : public UCurieElementGameplayEffectOwner
{
public:
	struct FGameplayTagContainer                  RequiredAttachedElements;                          // 0x0028(0x0020)(Edit, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  RequiredInteractingElements;                       // 0x0048(0x0020)(Edit, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  AllowedAttachmentEntityTypes;                      // 0x0068(0x0020)(Edit, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCurieEffectContainer>          OnBeginEffects;                                    // 0x0088(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCurieEffectContainer>          OngoingEffects;                                    // 0x0098(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCurieEffectContainer>          OnEndEffects;                                      // 0x00A8(0x0010)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         bShouldDetach : 1;                                 // 0x00B8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSkipExecuteAttachDetach : 1;                      // 0x00B8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieEntityStateBehavior">();
	}
	static class UCurieEntityStateBehavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieEntityStateBehavior>();
	}
};
static_assert(alignof(UCurieEntityStateBehavior) == 0x000008, "Wrong alignment on UCurieEntityStateBehavior");
static_assert(sizeof(UCurieEntityStateBehavior) == 0x0000C0, "Wrong size on UCurieEntityStateBehavior");
static_assert(offsetof(UCurieEntityStateBehavior, RequiredAttachedElements) == 0x000028, "Member 'UCurieEntityStateBehavior::RequiredAttachedElements' has a wrong offset!");
static_assert(offsetof(UCurieEntityStateBehavior, RequiredInteractingElements) == 0x000048, "Member 'UCurieEntityStateBehavior::RequiredInteractingElements' has a wrong offset!");
static_assert(offsetof(UCurieEntityStateBehavior, AllowedAttachmentEntityTypes) == 0x000068, "Member 'UCurieEntityStateBehavior::AllowedAttachmentEntityTypes' has a wrong offset!");
static_assert(offsetof(UCurieEntityStateBehavior, OnBeginEffects) == 0x000088, "Member 'UCurieEntityStateBehavior::OnBeginEffects' has a wrong offset!");
static_assert(offsetof(UCurieEntityStateBehavior, OngoingEffects) == 0x000098, "Member 'UCurieEntityStateBehavior::OngoingEffects' has a wrong offset!");
static_assert(offsetof(UCurieEntityStateBehavior, OnEndEffects) == 0x0000A8, "Member 'UCurieEntityStateBehavior::OnEndEffects' has a wrong offset!");

// Class Curie.CurieGlobals
// 0x0028 (0x0050 - 0x0028)
class UCurieGlobals final : public UObject
{
public:
	bool                                          bEnableCurie;                                      // 0x0028(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftClassPath                         CurieGlobalsClassName;                             // 0x0030(0x0018)(ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurieManager*                          RegisteredCurieManager;                            // 0x0048(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieGlobals">();
	}
	static class UCurieGlobals* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieGlobals>();
	}
};
static_assert(alignof(UCurieGlobals) == 0x000008, "Wrong alignment on UCurieGlobals");
static_assert(sizeof(UCurieGlobals) == 0x000050, "Wrong size on UCurieGlobals");
static_assert(offsetof(UCurieGlobals, bEnableCurie) == 0x000028, "Member 'UCurieGlobals::bEnableCurie' has a wrong offset!");
static_assert(offsetof(UCurieGlobals, CurieGlobalsClassName) == 0x000030, "Member 'UCurieGlobals::CurieGlobalsClassName' has a wrong offset!");
static_assert(offsetof(UCurieGlobals, RegisteredCurieManager) == 0x000048, "Member 'UCurieGlobals::RegisteredCurieManager' has a wrong offset!");

// Class Curie.CurieElementAllocationHandler
// 0x0000 (0x0028 - 0x0028)
class UCurieElementAllocationHandler : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieElementAllocationHandler">();
	}
	static class UCurieElementAllocationHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieElementAllocationHandler>();
	}
};
static_assert(alignof(UCurieElementAllocationHandler) == 0x000008, "Wrong alignment on UCurieElementAllocationHandler");
static_assert(sizeof(UCurieElementAllocationHandler) == 0x000028, "Wrong size on UCurieElementAllocationHandler");

// Class Curie.CurieElementInteractWithElementHandler
// 0x0008 (0x0030 - 0x0028)
class UCurieElementInteractWithElementHandler : public UObject
{
public:
	ECurieHandlerPriority                         HandlerPriority;                                   // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECurieHandlerBehavior                         HandlerBehavior;                                   // 0x0029(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ElementTag;                                        // 0x002C(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieElementInteractWithElementHandler">();
	}
	static class UCurieElementInteractWithElementHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieElementInteractWithElementHandler>();
	}
};
static_assert(alignof(UCurieElementInteractWithElementHandler) == 0x000008, "Wrong alignment on UCurieElementInteractWithElementHandler");
static_assert(sizeof(UCurieElementInteractWithElementHandler) == 0x000030, "Wrong size on UCurieElementInteractWithElementHandler");
static_assert(offsetof(UCurieElementInteractWithElementHandler, HandlerPriority) == 0x000028, "Member 'UCurieElementInteractWithElementHandler::HandlerPriority' has a wrong offset!");
static_assert(offsetof(UCurieElementInteractWithElementHandler, HandlerBehavior) == 0x000029, "Member 'UCurieElementInteractWithElementHandler::HandlerBehavior' has a wrong offset!");
static_assert(offsetof(UCurieElementInteractWithElementHandler, ElementTag) == 0x00002C, "Member 'UCurieElementInteractWithElementHandler::ElementTag' has a wrong offset!");

// Class Curie.CurieElementInteractWithMaterialHandler
// 0x0008 (0x0030 - 0x0028)
class UCurieElementInteractWithMaterialHandler : public UObject
{
public:
	ECurieHandlerPriority                         HandlerPriority;                                   // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECurieHandlerBehavior                         HandlerBehavior;                                   // 0x0029(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ElementTag;                                        // 0x002C(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieElementInteractWithMaterialHandler">();
	}
	static class UCurieElementInteractWithMaterialHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieElementInteractWithMaterialHandler>();
	}
};
static_assert(alignof(UCurieElementInteractWithMaterialHandler) == 0x000008, "Wrong alignment on UCurieElementInteractWithMaterialHandler");
static_assert(sizeof(UCurieElementInteractWithMaterialHandler) == 0x000030, "Wrong size on UCurieElementInteractWithMaterialHandler");
static_assert(offsetof(UCurieElementInteractWithMaterialHandler, HandlerPriority) == 0x000028, "Member 'UCurieElementInteractWithMaterialHandler::HandlerPriority' has a wrong offset!");
static_assert(offsetof(UCurieElementInteractWithMaterialHandler, HandlerBehavior) == 0x000029, "Member 'UCurieElementInteractWithMaterialHandler::HandlerBehavior' has a wrong offset!");
static_assert(offsetof(UCurieElementInteractWithMaterialHandler, ElementTag) == 0x00002C, "Member 'UCurieElementInteractWithMaterialHandler::ElementTag' has a wrong offset!");

// Class Curie.CurieElementAttachHandler
// 0x0038 (0x0060 - 0x0028)
class UCurieElementAttachHandler : public UCurieElementGameplayEffectOwner
{
public:
	ECurieHandlerPriority                         HandlerPriority;                                   // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECurieHandlerBehavior                         HandlerBehavior;                                   // 0x0029(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ElementTag;                                        // 0x002C(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FCurieEffectContainer>          OnBeginAttachmentEffects;                          // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FCurieEffectContainer>          OngoingAttachmentEffects;                          // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FCurieEffectContainer>          OnEndAttachmentEffects;                            // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieElementAttachHandler">();
	}
	static class UCurieElementAttachHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieElementAttachHandler>();
	}
};
static_assert(alignof(UCurieElementAttachHandler) == 0x000008, "Wrong alignment on UCurieElementAttachHandler");
static_assert(sizeof(UCurieElementAttachHandler) == 0x000060, "Wrong size on UCurieElementAttachHandler");
static_assert(offsetof(UCurieElementAttachHandler, HandlerPriority) == 0x000028, "Member 'UCurieElementAttachHandler::HandlerPriority' has a wrong offset!");
static_assert(offsetof(UCurieElementAttachHandler, HandlerBehavior) == 0x000029, "Member 'UCurieElementAttachHandler::HandlerBehavior' has a wrong offset!");
static_assert(offsetof(UCurieElementAttachHandler, ElementTag) == 0x00002C, "Member 'UCurieElementAttachHandler::ElementTag' has a wrong offset!");
static_assert(offsetof(UCurieElementAttachHandler, OnBeginAttachmentEffects) == 0x000030, "Member 'UCurieElementAttachHandler::OnBeginAttachmentEffects' has a wrong offset!");
static_assert(offsetof(UCurieElementAttachHandler, OngoingAttachmentEffects) == 0x000040, "Member 'UCurieElementAttachHandler::OngoingAttachmentEffects' has a wrong offset!");
static_assert(offsetof(UCurieElementAttachHandler, OnEndAttachmentEffects) == 0x000050, "Member 'UCurieElementAttachHandler::OnEndAttachmentEffects' has a wrong offset!");

// Class Curie.CurieElementAttachConditionHandler
// 0x0008 (0x0030 - 0x0028)
class UCurieElementAttachConditionHandler : public UObject
{
public:
	ECurieHandlerPriority                         HandlerPriority;                                   // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ElementTag;                                        // 0x002C(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieElementAttachConditionHandler">();
	}
	static class UCurieElementAttachConditionHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieElementAttachConditionHandler>();
	}
};
static_assert(alignof(UCurieElementAttachConditionHandler) == 0x000008, "Wrong alignment on UCurieElementAttachConditionHandler");
static_assert(sizeof(UCurieElementAttachConditionHandler) == 0x000030, "Wrong size on UCurieElementAttachConditionHandler");
static_assert(offsetof(UCurieElementAttachConditionHandler, HandlerPriority) == 0x000028, "Member 'UCurieElementAttachConditionHandler::HandlerPriority' has a wrong offset!");
static_assert(offsetof(UCurieElementAttachConditionHandler, ElementTag) == 0x00002C, "Member 'UCurieElementAttachConditionHandler::ElementTag' has a wrong offset!");

// Class Curie.CurieElementInteractWithContainerHandler
// 0x0048 (0x0070 - 0x0028)
class UCurieElementInteractWithContainerHandler : public UCurieElementGameplayEffectOwner
{
public:
	ECurieHandlerPriority                         HandlerPriority;                                   // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECurieHandlerBehavior                         HandlerBehavior;                                   // 0x0029(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ElementTag;                                        // 0x002C(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FCurieEffectContainer>          OnInstantInteractionEffects;                       // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FCurieEffectContainer>          OnBeginInteractionEffects;                         // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FCurieEffectContainer>          OngoingInteractionEffects;                         // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FCurieEffectContainer>          OnEndInteractionEffects;                           // 0x0060(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieElementInteractWithContainerHandler">();
	}
	static class UCurieElementInteractWithContainerHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieElementInteractWithContainerHandler>();
	}
};
static_assert(alignof(UCurieElementInteractWithContainerHandler) == 0x000008, "Wrong alignment on UCurieElementInteractWithContainerHandler");
static_assert(sizeof(UCurieElementInteractWithContainerHandler) == 0x000070, "Wrong size on UCurieElementInteractWithContainerHandler");
static_assert(offsetof(UCurieElementInteractWithContainerHandler, HandlerPriority) == 0x000028, "Member 'UCurieElementInteractWithContainerHandler::HandlerPriority' has a wrong offset!");
static_assert(offsetof(UCurieElementInteractWithContainerHandler, HandlerBehavior) == 0x000029, "Member 'UCurieElementInteractWithContainerHandler::HandlerBehavior' has a wrong offset!");
static_assert(offsetof(UCurieElementInteractWithContainerHandler, ElementTag) == 0x00002C, "Member 'UCurieElementInteractWithContainerHandler::ElementTag' has a wrong offset!");
static_assert(offsetof(UCurieElementInteractWithContainerHandler, OnInstantInteractionEffects) == 0x000030, "Member 'UCurieElementInteractWithContainerHandler::OnInstantInteractionEffects' has a wrong offset!");
static_assert(offsetof(UCurieElementInteractWithContainerHandler, OnBeginInteractionEffects) == 0x000040, "Member 'UCurieElementInteractWithContainerHandler::OnBeginInteractionEffects' has a wrong offset!");
static_assert(offsetof(UCurieElementInteractWithContainerHandler, OngoingInteractionEffects) == 0x000050, "Member 'UCurieElementInteractWithContainerHandler::OngoingInteractionEffects' has a wrong offset!");
static_assert(offsetof(UCurieElementInteractWithContainerHandler, OnEndInteractionEffects) == 0x000060, "Member 'UCurieElementInteractWithContainerHandler::OnEndInteractionEffects' has a wrong offset!");

// Class Curie.CurieInterface
// 0x0000 (0x0028 - 0x0028)
class ICurieInterface : public IInterface
{
public:
	void OnCurieContainerAcquired_BP(const struct FCurieContainerHandle& CurieContainerHandle);
	void OnCurieContainerReleased_BP(const struct FCurieContainerHandle& CurieContainerHandle);
	void OnCurieContainerReparented_BP(const struct FCurieContainerHandle& CurieContainerHandle);
	void OnCurieElementAttached_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& ElementTag);
	void OnCurieElementDetached_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& ElementTag);
	void OnCurieElementInteract_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& ElementTag, const struct FCurieInteractParamsHandle& InteractParamsHandle);
	void OnCurieElementInteractBegun_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& ElementTag, const struct FCurieInteractParamsHandle& InteractParamsHandle);
	void OnCurieElementInteractEnded_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& ElementTag, const struct FCurieInteractParamsHandle& InteractParamsHandle);
	void OnCurieStateAttached_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& StateTag);
	void OnCurieStateDetached_BP(const struct FCurieContainerHandle& CurieContainerHandle, const struct FGameplayTag& StateTag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieInterface">();
	}
	static class ICurieInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICurieInterface>();
	}
};
static_assert(alignof(ICurieInterface) == 0x000008, "Wrong alignment on ICurieInterface");
static_assert(sizeof(ICurieInterface) == 0x000028, "Wrong size on ICurieInterface");

// Class Curie.CurieManager
// 0x0580 (0x0620 - 0x00A0)
class UCurieManager : public UGameStateComponent
{
public:
	TSubclassOf<class UCurieComponent>            CurieComponentClass;                               // 0x00A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   MaterialDataRegistryName;                          // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   ElementDataRegistryName;                           // 0x00AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   EntityStateDataRegistryName;                       // 0x00B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B4[0x29C];                                     // 0x00B4(0x029C)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class UCurieElementAllocationHandler*> ElementAllocationHandlers;                         // 0x0350(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FCurieElementAttachHandlersContainer> ElementAttachmentHandlers;                         // 0x03A0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FCurieElementAttachConditionHandlersContainer> ElementAttachmentConditionHandlers;                // 0x03F0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<struct FCurieElementPairKey, struct FCurieElementInteractWithElementHandlersContainer> ElementInteractWithElementHandlers;                // 0x0440(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FCurieElementInteractWithMaterialHandlersContainer> ElementInteractWithMaterialHandlers;               // 0x0490(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FCurieElementInteractWithContainerHandlersContainer> ElementInteractWithContainerHandlers;              // 0x04E0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_530[0xF0];                                     // 0x0530(0x00F0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BindDelegateForCurieElementAttached(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)>& Delegate);
	void BindDelegateForCurieElementBeginInteract(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)>& Delegate);
	void BindDelegateForCurieElementDetached(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)>& Delegate);
	void BindDelegateForCurieElementEndInteract(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)>& Delegate);
	void BindDelegateForCurieElementInteract(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)>& Delegate);
	void BindDelegateForCurieStateAttached(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& StateIdentifier)>& Delegate);
	void BindDelegateForCurieStateDetached(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& StateIdentifier)>& Delegate);
	void HandleContainerOwnerDestroyed(class AActor* OwnerActor);
	void UnbindDelegateForCurieElementAttached(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)>& Delegate);
	void UnbindDelegateForCurieElementBeginInteract(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)>& Delegate);
	void UnbindDelegateForCurieElementDetached(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)>& Delegate);
	void UnbindDelegateForCurieElementEndInteract(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)>& Delegate);
	void UnbindDelegateForCurieElementInteract(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& ElementIdentifier)>& Delegate);
	void UnbindDelegateForCurieStateAttached(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& StateIdentifier)>& Delegate);
	void UnbindDelegateForCurieStateDetached(class UObject* CurieOwner, const TDelegate<void(class UObject* Owner, const struct FCurieContainerHandle& ContainerHandle, struct FGameplayTag& StateIdentifier)>& Delegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurieManager">();
	}
	static class UCurieManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurieManager>();
	}
};
static_assert(alignof(UCurieManager) == 0x000008, "Wrong alignment on UCurieManager");
static_assert(sizeof(UCurieManager) == 0x000620, "Wrong size on UCurieManager");
static_assert(offsetof(UCurieManager, CurieComponentClass) == 0x0000A0, "Member 'UCurieManager::CurieComponentClass' has a wrong offset!");
static_assert(offsetof(UCurieManager, MaterialDataRegistryName) == 0x0000A8, "Member 'UCurieManager::MaterialDataRegistryName' has a wrong offset!");
static_assert(offsetof(UCurieManager, ElementDataRegistryName) == 0x0000AC, "Member 'UCurieManager::ElementDataRegistryName' has a wrong offset!");
static_assert(offsetof(UCurieManager, EntityStateDataRegistryName) == 0x0000B0, "Member 'UCurieManager::EntityStateDataRegistryName' has a wrong offset!");
static_assert(offsetof(UCurieManager, ElementAllocationHandlers) == 0x000350, "Member 'UCurieManager::ElementAllocationHandlers' has a wrong offset!");
static_assert(offsetof(UCurieManager, ElementAttachmentHandlers) == 0x0003A0, "Member 'UCurieManager::ElementAttachmentHandlers' has a wrong offset!");
static_assert(offsetof(UCurieManager, ElementAttachmentConditionHandlers) == 0x0003F0, "Member 'UCurieManager::ElementAttachmentConditionHandlers' has a wrong offset!");
static_assert(offsetof(UCurieManager, ElementInteractWithElementHandlers) == 0x000440, "Member 'UCurieManager::ElementInteractWithElementHandlers' has a wrong offset!");
static_assert(offsetof(UCurieManager, ElementInteractWithMaterialHandlers) == 0x000490, "Member 'UCurieManager::ElementInteractWithMaterialHandlers' has a wrong offset!");
static_assert(offsetof(UCurieManager, ElementInteractWithContainerHandlers) == 0x0004E0, "Member 'UCurieManager::ElementInteractWithContainerHandlers' has a wrong offset!");

}

