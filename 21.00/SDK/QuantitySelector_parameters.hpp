#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuantitySelector

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function QuantitySelector.QuantitySelector_C.BndEvt__AnalogSlider_0_K2Node_ComponentBoundEvent_434_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct QuantitySelector_C_BndEvt__AnalogSlider_0_K2Node_ComponentBoundEvent_434_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_BndEvt__AnalogSlider_0_K2Node_ComponentBoundEvent_434_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on QuantitySelector_C_BndEvt__AnalogSlider_0_K2Node_ComponentBoundEvent_434_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(QuantitySelector_C_BndEvt__AnalogSlider_0_K2Node_ComponentBoundEvent_434_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on QuantitySelector_C_BndEvt__AnalogSlider_0_K2Node_ComponentBoundEvent_434_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(QuantitySelector_C_BndEvt__AnalogSlider_0_K2Node_ComponentBoundEvent_434_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'QuantitySelector_C_BndEvt__AnalogSlider_0_K2Node_ComponentBoundEvent_434_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_166_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct QuantitySelector_C_BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_166_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_166_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on QuantitySelector_C_BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_166_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(QuantitySelector_C_BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_166_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on QuantitySelector_C_BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_166_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(QuantitySelector_C_BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_166_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'QuantitySelector_C_BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_166_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.BndEvt__IconTextButton_K2Node_ComponentBoundEvent_86_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct QuantitySelector_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_86_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_86_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on QuantitySelector_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_86_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(QuantitySelector_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_86_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on QuantitySelector_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_86_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(QuantitySelector_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_86_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'QuantitySelector_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_86_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.BndEvt__MaxButton_K2Node_ComponentBoundEvent_343_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct QuantitySelector_C_BndEvt__MaxButton_K2Node_ComponentBoundEvent_343_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_BndEvt__MaxButton_K2Node_ComponentBoundEvent_343_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on QuantitySelector_C_BndEvt__MaxButton_K2Node_ComponentBoundEvent_343_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(QuantitySelector_C_BndEvt__MaxButton_K2Node_ComponentBoundEvent_343_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on QuantitySelector_C_BndEvt__MaxButton_K2Node_ComponentBoundEvent_343_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(QuantitySelector_C_BndEvt__MaxButton_K2Node_ComponentBoundEvent_343_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'QuantitySelector_C_BndEvt__MaxButton_K2Node_ComponentBoundEvent_343_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.BndEvt__MinButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct QuantitySelector_C_BndEvt__MinButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_BndEvt__MinButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on QuantitySelector_C_BndEvt__MinButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(QuantitySelector_C_BndEvt__MinButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on QuantitySelector_C_BndEvt__MinButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(QuantitySelector_C_BndEvt__MinButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'QuantitySelector_C_BndEvt__MinButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.ExecuteUbergraph_QuantitySelector
// 0x0148 (0x0148 - 0x0000)
struct QuantitySelector_C_ExecuteUbergraph_QuantitySelector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button_1;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button_2;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button_3;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleMaxPressed_PassThrough;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button;                 // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleMinPressed_PassThrough;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button_1;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              K2Node_Event_InItem;                               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_TitleText;                            // 0x0080(0x0018)(ConstParm)
	class FText                                   K2Node_Event_ConfirmButtonText;                    // 0x0098(0x0018)(ConstParm)
	class FText                                   K2Node_Event_AdditionalInfoText;                   // 0x00B0(0x0018)(ConstParm)
	int32                                         K2Node_Event_InitialQuantity;                      // 0x00C8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MaximumQuantity;                      // 0x00CC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button_2;               // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button_3;               // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button_4;           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x010C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinValue_MinValue;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector) == 0x000008, "Wrong alignment on QuantitySelector_C_ExecuteUbergraph_QuantitySelector");
static_assert(sizeof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector) == 0x000148, "Wrong size on QuantitySelector_C_ExecuteUbergraph_QuantitySelector");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, EntryPoint) == 0x000000, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_GetCurrentInputType_ReturnValue) == 0x000010, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_DynamicCast_AsIcon_Text_Button) == 0x000018, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_DynamicCast_AsIcon_Text_Button' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_DynamicCast_AsIcon_Text_Button_1) == 0x000028, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_DynamicCast_AsIcon_Text_Button_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_DynamicCast_AsIcon_Text_Button_2) == 0x000038, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_DynamicCast_AsIcon_Text_Button_2' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_DynamicCast_AsIcon_Text_Button_3) == 0x000048, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_DynamicCast_AsIcon_Text_Button_3' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_DynamicCast_bSuccess_3) == 0x000050, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_HandleMaxPressed_PassThrough) == 0x000051, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_HandleMaxPressed_PassThrough' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_IsMobileGame_ReturnValue) == 0x000052, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_ComponentBoundEvent_Button) == 0x000058, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_HandleMinPressed_PassThrough) == 0x000060, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_HandleMinPressed_PassThrough' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_CustomEvent_bNewInputType) == 0x000061, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_ComponentBoundEvent_Button_1) == 0x000068, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000070, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_Event_InItem) == 0x000078, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_Event_InItem' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_Event_TitleText) == 0x000080, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_Event_TitleText' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_Event_ConfirmButtonText) == 0x000098, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_Event_ConfirmButtonText' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_Event_AdditionalInfoText) == 0x0000B0, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_Event_AdditionalInfoText' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_Event_InitialQuantity) == 0x0000C8, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_Event_InitialQuantity' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_Event_MaximumQuantity) == 0x0000CC, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_Event_MaximumQuantity' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_ComponentBoundEvent_Value) == 0x0000D0, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000D4, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000D8, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0000DC, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Round_ReturnValue) == 0x0000E0, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Round_ReturnValue_1) == 0x0000E4, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_ComponentBoundEvent_Button_2) == 0x0000F0, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_ComponentBoundEvent_Button_3) == 0x0000F8, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_DynamicCast_AsIcon_Text_Button_4) == 0x000100, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_DynamicCast_AsIcon_Text_Button_4' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_DynamicCast_bSuccess_4) == 0x000108, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, K2Node_CreateDelegate_OutputDelegate) == 0x00010C, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000118, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00011C, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000120, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000124, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_GetMinValue_MinValue) == 0x000128, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_GetMinValue_MinValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00012C, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000130, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000134, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000138, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00013C, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_ExecuteUbergraph_QuantitySelector, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000140, "Member 'QuantitySelector_C_ExecuteUbergraph_QuantitySelector::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.GetCurrentValue
// 0x0004 (0x0004 - 0x0000)
struct QuantitySelector_C_GetCurrentValue final
{
public:
	int32                                         CurrentValue;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_GetCurrentValue) == 0x000004, "Wrong alignment on QuantitySelector_C_GetCurrentValue");
static_assert(sizeof(QuantitySelector_C_GetCurrentValue) == 0x000004, "Wrong size on QuantitySelector_C_GetCurrentValue");
static_assert(offsetof(QuantitySelector_C_GetCurrentValue, CurrentValue) == 0x000000, "Member 'QuantitySelector_C_GetCurrentValue::CurrentValue' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.GetMinValue
// 0x0014 (0x0014 - 0x0000)
struct QuantitySelector_C_GetMinValue final
{
public:
	int32                                         MinValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_GetMinValue) == 0x000004, "Wrong alignment on QuantitySelector_C_GetMinValue");
static_assert(sizeof(QuantitySelector_C_GetMinValue) == 0x000014, "Wrong size on QuantitySelector_C_GetMinValue");
static_assert(offsetof(QuantitySelector_C_GetMinValue, MinValue) == 0x000000, "Member 'QuantitySelector_C_GetMinValue::MinValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_GetMinValue, Temp_bool_Variable) == 0x000004, "Member 'QuantitySelector_C_GetMinValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_GetMinValue, Temp_int_Variable) == 0x000008, "Member 'QuantitySelector_C_GetMinValue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_GetMinValue, Temp_int_Variable_1) == 0x00000C, "Member 'QuantitySelector_C_GetMinValue::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_GetMinValue, K2Node_Select_Default) == 0x000010, "Member 'QuantitySelector_C_GetMinValue::K2Node_Select_Default' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.HandleChangeInputMode
// 0x0001 (0x0001 - 0x0000)
struct QuantitySelector_C_HandleChangeInputMode final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_HandleChangeInputMode) == 0x000001, "Wrong alignment on QuantitySelector_C_HandleChangeInputMode");
static_assert(sizeof(QuantitySelector_C_HandleChangeInputMode) == 0x000001, "Wrong size on QuantitySelector_C_HandleChangeInputMode");
static_assert(offsetof(QuantitySelector_C_HandleChangeInputMode, bNewInputType) == 0x000000, "Member 'QuantitySelector_C_HandleChangeInputMode::bNewInputType' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.HandleMaxPressed
// 0x0001 (0x0001 - 0x0000)
struct QuantitySelector_C_HandleMaxPressed final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_HandleMaxPressed) == 0x000001, "Wrong alignment on QuantitySelector_C_HandleMaxPressed");
static_assert(sizeof(QuantitySelector_C_HandleMaxPressed) == 0x000001, "Wrong size on QuantitySelector_C_HandleMaxPressed");
static_assert(offsetof(QuantitySelector_C_HandleMaxPressed, Passthrough) == 0x000000, "Member 'QuantitySelector_C_HandleMaxPressed::Passthrough' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.HandleMinPressed
// 0x0008 (0x0008 - 0x0000)
struct QuantitySelector_C_HandleMinPressed final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMinValue_MinValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_HandleMinPressed) == 0x000004, "Wrong alignment on QuantitySelector_C_HandleMinPressed");
static_assert(sizeof(QuantitySelector_C_HandleMinPressed) == 0x000008, "Wrong size on QuantitySelector_C_HandleMinPressed");
static_assert(offsetof(QuantitySelector_C_HandleMinPressed, Passthrough) == 0x000000, "Member 'QuantitySelector_C_HandleMinPressed::Passthrough' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_HandleMinPressed, CallFunc_GetMinValue_MinValue) == 0x000004, "Member 'QuantitySelector_C_HandleMinPressed::CallFunc_GetMinValue_MinValue' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.OnQuantitySelectorInitialized
// 0x0058 (0x0058 - 0x0000)
struct QuantitySelector_C_OnQuantitySelectorInitialized final
{
public:
	class UFortItem*                              InItem;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TitleText;                                         // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   ConfirmButtonText;                                 // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   AdditionalInfoText;                                // 0x0038(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         InitialQuantity;                                   // 0x0050(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaximumQuantity;                                   // 0x0054(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_OnQuantitySelectorInitialized) == 0x000008, "Wrong alignment on QuantitySelector_C_OnQuantitySelectorInitialized");
static_assert(sizeof(QuantitySelector_C_OnQuantitySelectorInitialized) == 0x000058, "Wrong size on QuantitySelector_C_OnQuantitySelectorInitialized");
static_assert(offsetof(QuantitySelector_C_OnQuantitySelectorInitialized, InItem) == 0x000000, "Member 'QuantitySelector_C_OnQuantitySelectorInitialized::InItem' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_OnQuantitySelectorInitialized, TitleText) == 0x000008, "Member 'QuantitySelector_C_OnQuantitySelectorInitialized::TitleText' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_OnQuantitySelectorInitialized, ConfirmButtonText) == 0x000020, "Member 'QuantitySelector_C_OnQuantitySelectorInitialized::ConfirmButtonText' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_OnQuantitySelectorInitialized, AdditionalInfoText) == 0x000038, "Member 'QuantitySelector_C_OnQuantitySelectorInitialized::AdditionalInfoText' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_OnQuantitySelectorInitialized, InitialQuantity) == 0x000050, "Member 'QuantitySelector_C_OnQuantitySelectorInitialized::InitialQuantity' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_OnQuantitySelectorInitialized, MaximumQuantity) == 0x000054, "Member 'QuantitySelector_C_OnQuantitySelectorInitialized::MaximumQuantity' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.SetAdditionalText
// 0x0020 (0x0020 - 0x0000)
struct QuantitySelector_C_SetAdditionalText final
{
public:
	class FText                                   AdditionalInfoText;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_SetAdditionalText) == 0x000008, "Wrong alignment on QuantitySelector_C_SetAdditionalText");
static_assert(sizeof(QuantitySelector_C_SetAdditionalText) == 0x000020, "Wrong size on QuantitySelector_C_SetAdditionalText");
static_assert(offsetof(QuantitySelector_C_SetAdditionalText, AdditionalInfoText) == 0x000000, "Member 'QuantitySelector_C_SetAdditionalText::AdditionalInfoText' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetAdditionalText, Temp_byte_Variable) == 0x000018, "Member 'QuantitySelector_C_SetAdditionalText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetAdditionalText, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'QuantitySelector_C_SetAdditionalText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetAdditionalText, Temp_byte_Variable_1) == 0x00001A, "Member 'QuantitySelector_C_SetAdditionalText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetAdditionalText, Temp_bool_Variable) == 0x00001B, "Member 'QuantitySelector_C_SetAdditionalText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetAdditionalText, K2Node_Select_Default) == 0x00001C, "Member 'QuantitySelector_C_SetAdditionalText::K2Node_Select_Default' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.SetCurrentValue
// 0x003C (0x003C - 0x0000)
struct QuantitySelector_C_SetCurrentValue final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinValue;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinValue_MinValue;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinValue_MinValue_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMinValue_MinValue_2;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_SetCurrentValue) == 0x000004, "Wrong alignment on QuantitySelector_C_SetCurrentValue");
static_assert(sizeof(QuantitySelector_C_SetCurrentValue) == 0x00003C, "Wrong size on QuantitySelector_C_SetCurrentValue");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, NewValue) == 0x000000, "Member 'QuantitySelector_C_SetCurrentValue::NewValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, MinValue) == 0x000004, "Member 'QuantitySelector_C_SetCurrentValue::MinValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_GetMinValue_MinValue) == 0x000014, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_GetMinValue_MinValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000019, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000020, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000024, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000028, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_GetMinValue_MinValue_1) == 0x00002C, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_GetMinValue_MinValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000030, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetCurrentValue, CallFunc_GetMinValue_MinValue_2) == 0x000038, "Member 'QuantitySelector_C_SetCurrentValue::CallFunc_GetMinValue_MinValue_2' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.SetupForInputMode
// 0x0590 (0x0590 - 0x0000)
struct QuantitySelector_C_SetupForInputMode final
{
public:
	bool                                          IsUsingGamepad;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue_1;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_GetBrushForKey_Brush;                     // 0x0020(0x00C0)()
	bool                                          CallFunc_GetBrushForKey_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0xF];                                       // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSliderStyle                           K2Node_MakeStruct_SliderStyle;                     // 0x00F0(0x04A0)()
};
static_assert(alignof(QuantitySelector_C_SetupForInputMode) == 0x000010, "Wrong alignment on QuantitySelector_C_SetupForInputMode");
static_assert(sizeof(QuantitySelector_C_SetupForInputMode) == 0x000590, "Wrong size on QuantitySelector_C_SetupForInputMode");
static_assert(offsetof(QuantitySelector_C_SetupForInputMode, IsUsingGamepad) == 0x000000, "Member 'QuantitySelector_C_SetupForInputMode::IsUsingGamepad' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetupForInputMode, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'QuantitySelector_C_SetupForInputMode::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetupForInputMode, CallFunc_GetCurrentInputType_ReturnValue) == 0x000010, "Member 'QuantitySelector_C_SetupForInputMode::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetupForInputMode, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'QuantitySelector_C_SetupForInputMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetupForInputMode, CallFunc_GetContext_ReturnValue_1) == 0x000018, "Member 'QuantitySelector_C_SetupForInputMode::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetupForInputMode, CallFunc_GetBrushForKey_Brush) == 0x000020, "Member 'QuantitySelector_C_SetupForInputMode::CallFunc_GetBrushForKey_Brush' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetupForInputMode, CallFunc_GetBrushForKey_ReturnValue) == 0x0000E0, "Member 'QuantitySelector_C_SetupForInputMode::CallFunc_GetBrushForKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuantitySelector_C_SetupForInputMode, K2Node_MakeStruct_SliderStyle) == 0x0000F0, "Member 'QuantitySelector_C_SetupForInputMode::K2Node_MakeStruct_SliderStyle' has a wrong offset!");

// Function QuantitySelector.QuantitySelector_C.SliderValueChanged
// 0x0004 (0x0004 - 0x0000)
struct QuantitySelector_C_SliderValueChanged final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuantitySelector_C_SliderValueChanged) == 0x000004, "Wrong alignment on QuantitySelector_C_SliderValueChanged");
static_assert(sizeof(QuantitySelector_C_SliderValueChanged) == 0x000004, "Wrong size on QuantitySelector_C_SliderValueChanged");
static_assert(offsetof(QuantitySelector_C_SliderValueChanged, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'QuantitySelector_C_SliderValueChanged::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

}

