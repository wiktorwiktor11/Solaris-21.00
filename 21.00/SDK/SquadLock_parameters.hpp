#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SquadLock

#include "Basic.hpp"

#include "PawnsInSquadLockVolume_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SquadLockScannerRay_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function SquadLock.SquadLock_C.BlueprintOnInteract
// 0x0010 (0x0010 - 0x0000)
struct SquadLock_C_BlueprintOnInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_BlueprintOnInteract) == 0x000008, "Wrong alignment on SquadLock_C_BlueprintOnInteract");
static_assert(sizeof(SquadLock_C_BlueprintOnInteract) == 0x000010, "Wrong size on SquadLock_C_BlueprintOnInteract");
static_assert(offsetof(SquadLock_C_BlueprintOnInteract, InteractingPawn) == 0x000000, "Member 'SquadLock_C_BlueprintOnInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_BlueprintOnInteract, InteractionBeingAttempted) == 0x000008, "Member 'SquadLock_C_BlueprintOnInteract::InteractionBeingAttempted' has a wrong offset!");

// Function SquadLock.SquadLock_C.CE_AimEye
// 0x0010 (0x0010 - 0x0000)
struct SquadLock_C_CE_AimEye final
{
public:
	class AFortPawn*                              Interacting_Pawn;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_CE_AimEye) == 0x000008, "Wrong alignment on SquadLock_C_CE_AimEye");
static_assert(sizeof(SquadLock_C_CE_AimEye) == 0x000010, "Wrong size on SquadLock_C_CE_AimEye");
static_assert(offsetof(SquadLock_C_CE_AimEye, Interacting_Pawn) == 0x000000, "Member 'SquadLock_C_CE_AimEye::Interacting_Pawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_CE_AimEye, Index_0) == 0x000008, "Member 'SquadLock_C_CE_AimEye::Index_0' has a wrong offset!");

// Function SquadLock.SquadLock_C.CE_EndAimEye
// 0x0010 (0x0010 - 0x0000)
struct SquadLock_C_CE_EndAimEye final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              InFortPawn;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_CE_EndAimEye) == 0x000008, "Wrong alignment on SquadLock_C_CE_EndAimEye");
static_assert(sizeof(SquadLock_C_CE_EndAimEye) == 0x000010, "Wrong size on SquadLock_C_CE_EndAimEye");
static_assert(offsetof(SquadLock_C_CE_EndAimEye, Index_0) == 0x000000, "Member 'SquadLock_C_CE_EndAimEye::Index_0' has a wrong offset!");
static_assert(offsetof(SquadLock_C_CE_EndAimEye, InFortPawn) == 0x000008, "Member 'SquadLock_C_CE_EndAimEye::InFortPawn' has a wrong offset!");

// Function SquadLock.SquadLock_C.CountActiveScanners
// 0x0020 (0x0020 - 0x0000)
struct SquadLock_C_CountActiveScanners final
{
public:
	int32                                         localActiveCount;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_CountActiveScanners) == 0x000004, "Wrong alignment on SquadLock_C_CountActiveScanners");
static_assert(sizeof(SquadLock_C_CountActiveScanners) == 0x000020, "Wrong size on SquadLock_C_CountActiveScanners");
static_assert(offsetof(SquadLock_C_CountActiveScanners, localActiveCount) == 0x000000, "Member 'SquadLock_C_CountActiveScanners::localActiveCount' has a wrong offset!");
static_assert(offsetof(SquadLock_C_CountActiveScanners, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'SquadLock_C_CountActiveScanners::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_CountActiveScanners, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SquadLock_C_CountActiveScanners::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_CountActiveScanners, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'SquadLock_C_CountActiveScanners::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_CountActiveScanners, Temp_int_Variable) == 0x000010, "Member 'SquadLock_C_CountActiveScanners::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_CountActiveScanners, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'SquadLock_C_CountActiveScanners::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_CountActiveScanners, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'SquadLock_C_CountActiveScanners::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_CountActiveScanners, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'SquadLock_C_CountActiveScanners::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function SquadLock.SquadLock_C.EndScan
// 0x0001 (0x0001 - 0x0000)
struct SquadLock_C_EndScan final
{
public:
	bool                                          canceled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_EndScan) == 0x000001, "Wrong alignment on SquadLock_C_EndScan");
static_assert(sizeof(SquadLock_C_EndScan) == 0x000001, "Wrong size on SquadLock_C_EndScan");
static_assert(offsetof(SquadLock_C_EndScan, canceled) == 0x000000, "Member 'SquadLock_C_EndScan::canceled' has a wrong offset!");

// Function SquadLock.SquadLock_C.ExecuteUbergraph_SquadLock
// 0x1278 (0x1278 - 0x0000)
struct SquadLock_C_ExecuteUbergraph_SquadLock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_6;                     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_6;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_7;                     // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_7;               // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_8;                     // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_8;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_3;          // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_3;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_3;                    // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_3;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep_1;                   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult_1;                  // 0x0110(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_2;          // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_2;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_2;                    // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_2;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_1;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerStateAthena*                 K2Node_DynamicCast_AsFort_Player_State_Athena;     // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameModeAthena*                    K2Node_DynamicCast_AsFort_Game_Mode_Athena;        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortPawn*                        K2Node_Event_InteractingPawn;                      // 0x0298(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    K2Node_Event_InteractionBeingAttempted;            // 0x02A0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_CustomEvent_Interacting_Pawn;               // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index_1;                        // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_CustomEvent_InFortPawn_1;                   // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0360(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_9;               // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_9;                     // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_10;                    // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_10;              // 0x036B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSquadLockScannerRay                   K2Node_MakeStruct_SquadLockScannerRay;             // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSquadLockScannerRay                   K2Node_MakeStruct_SquadLockScannerRay_1;           // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSquadLockScannerRay                   K2Node_MakeStruct_SquadLockScannerRay_2;           // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSquadLockScannerRay                   K2Node_MakeStruct_SquadLockScannerRay_3;           // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_11;                    // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A[0x6];                                      // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSquadLockScannerRay                   K2Node_MakeStruct_SquadLockScannerRay_4;           // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x044B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSquadLockScannerRay                   K2Node_MakeStruct_SquadLockScannerRay_5;           // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSquadLockScannerRay                   CallFunc_Array_Get_Item;                           // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x04B0(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSquadLockScannerRay                   CallFunc_Array_Get_Item_1;                         // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x05BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x05BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BF[0x1];                                      // 0x05BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMaterialInstance_ReturnValue;          // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x05C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x05D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_2;                  // 0x05F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_3;                  // 0x0600(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0610(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0620(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_11;              // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_12;                    // 0x0631(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_632[0x2];                                      // 0x0632(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0634(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              CallFunc_Array_Get_Item_2;                         // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Find_Scanner_Slot_For_Pawn_Success;       // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Find_Scanner_Slot_For_Pawn_ScannerIndex;  // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x066D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66E[0x2];                                      // 0x066E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSquadLockScannerRay                   K2Node_MakeStruct_SquadLockScannerRay_6;           // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C[0x4];                                      // 0x068C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSquadLockScannerRay                   K2Node_MakeStruct_SquadLockScannerRay_7;           // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_12;              // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AD[0x3];                                      // 0x06AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x06D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x06F0(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_13;              // 0x07D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D2[0x6];                                      // 0x07D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x07D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x07F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_13;                    // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_InAimRot;                       // 0x0810(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_CustomEvent_LinearColor;                    // 0x0828(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsExit;                         // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_839[0x7];                                      // 0x0839(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0840(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x0858(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x0870(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Get_Scanner_Forward_Rot_NewParam;         // 0x0888(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetAxes_X_1;                              // 0x08A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y_1;                              // 0x08B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z_1;                              // 0x08D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXY_ReturnValue;                // 0x08E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0900(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90C[0x4];                                      // 0x090C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAxes_X_2;                              // 0x0910(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y_2;                              // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z_2;                              // 0x0940(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0958(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0964(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_965[0x3];                                      // 0x0965(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPawnsInSquadLockVolume                CallFunc_Array_Get_Item_3;                         // 0x0968(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0984(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x098C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98D[0x3];                                      // 0x098D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_4;            // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x099C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99D[0x3];                                      // 0x099D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A4[0x4];                                      // 0x09A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_2;         // 0x09A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C4[0x4];                                      // 0x09C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x09C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_3;         // 0x09E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x09F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Next_Unscanned_PawnInVolume_Index_RetIndex; // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A14[0x4];                                      // 0x0A14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0A18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A31[0x7];                                      // 0x0A31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0A38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0A50(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0A5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5D[0x3];                                      // 0x0A5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0A60(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A69[0x3];                                      // 0x0A69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0A6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A74[0x4];                                      // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Get_Scanner_Forward_Rot_NewParam_1;       // 0x0A78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Find_Scanner_Slot_For_Pawn_Success_1;     // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A91[0x3];                                      // 0x0A91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Find_Scanner_Slot_For_Pawn_ScannerIndex_1; // 0x0A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Find_Scanner_Slot_For_Pawn_Success_2;     // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A99[0x3];                                      // 0x0A99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Find_Scanner_Slot_For_Pawn_ScannerIndex_2; // 0x0A9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0AA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0AB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC9[0x7];                                      // 0x0AC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0AD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0AE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0AF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0B10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2C[0x4];                                      // 0x0B2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0B30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0B48(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B51[0x3];                                      // 0x0B51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0B5C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0B68(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0B74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_On;                             // 0x0B75(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B76[0x2];                                      // 0x0B76(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_bIsLocked;                       // 0x0B84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_bIsLocked_1;                     // 0x0B85(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_bIsLocked_2;                     // 0x0B86(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B87[0x1];                                      // 0x0B87(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Get_Scanner_Forward_Rot_NewParam_2;       // 0x0B88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_CustomEvent_InFortPawn;                     // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_InScannedTime;                  // 0x0BC0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewParam;                       // 0x0BC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC5[0x3];                                      // 0x0BC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0BC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0BE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_1;        // 0x0BF8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnsInSquadLockVolume                K2Node_MakeStruct_PawnsInSquadLockVolume;          // 0x0C00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0C18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFortAsyncAction_CurrentPlaylistReady*  CallFunc_PlaylistDataReadyAsync_ReturnValue;       // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0C30(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0C40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C51[0x7];                                      // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0C58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0C68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AFortGameStateAthena*                   Temp_object_Variable;                              // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0C80(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFortPlaylist*                          Temp_object_Variable_1;                            // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0C98(0x0020)()
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0CB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CBC[0x4];                                      // 0x0CBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   K2Node_CustomEvent_GameState;                      // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    K2Node_CustomEvent_Playlist;                       // 0x0CC8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_PlaylistContextTags;            // 0x0CD0(0x0020)(ConstParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_5;            // 0x0CF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF4[0x4];                                      // 0x0CF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              CallFunc_Array_Get_Item_4;                         // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D04[0x4];                                      // 0x0D04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPawnsInSquadLockVolume                K2Node_MakeStruct_PawnsInSquadLockVolume_1;        // 0x0D08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D21[0x3];                                      // 0x0D21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0D24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Pawns_In_Volume_Index_By_Pawn_RetIndex; // 0x0D28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x0D2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2D[0x3];                                      // 0x0D2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0D30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D34[0x4];                                      // 0x0D34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPawnsInSquadLockVolume                CallFunc_Array_Get_Item_5;                         // 0x0D38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0D50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D54[0x4];                                      // 0x0D54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPawnsInSquadLockVolume                CallFunc_Array_Get_Item_6;                         // 0x0D58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0D70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_5;        // 0x0D74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D75[0x3];                                      // 0x0D75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0D7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7D[0x3];                                      // 0x0D7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0D80(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0D8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0D90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0D94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D95[0x3];                                      // 0x0D95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0D98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0D9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0D9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0D9E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9F[0x1];                                      // 0x0D9F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              CallFunc_Array_Get_Item_7;                         // 0x0DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0DB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0DB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0DB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB6[0x2];                                      // 0x0DB6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0DC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC2[0x6];                                      // 0x0DC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0DC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0DE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x0DF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x0E10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x0E28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E41[0x7];                                      // 0x0E41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0E48(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0E58(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0E60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x0E64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E65[0x3];                                      // 0x0E65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0E68(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_2;                  // 0x0F48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F51[0x7];                                      // 0x0F51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0F58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0F68(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0F70(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0F80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F81[0x7];                                      // 0x0F81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0F88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0F90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0F98(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0FA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA4[0x4];                                      // 0x0FA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x0FA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0FB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB9[0x7];                                      // 0x0FB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0FC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn_3;                  // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD9[0x3];                                      // 0x0FD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0FDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0FE0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnsInSquadLockVolume                CallFunc_Array_Get_Item_8;                         // 0x0FE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue;  // 0x1000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x1004(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x100C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_PlaylistTags;                   // 0x1010(0x0020)()
	class UFortPlaylist*                          K2Node_CustomEvent_FortPlaylist;                   // 0x1030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_1;             // 0x1038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x1039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyTags_ReturnValue;                   // 0x103A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103B[0x5];                                     // 0x103B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x1040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x1050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyTags_ReturnValue_1;                 // 0x1060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyTags_ReturnValue_2;                 // 0x1061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyTags_ReturnValue_3;                 // 0x1062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyTags_ReturnValue_4;                 // 0x1063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x1064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1065[0x3];                                     // 0x1065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x1068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x106C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_6;        // 0x1070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1071[0x3];                                     // 0x1071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValueAsInteger_ReturnValue;            // 0x1074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValueAsInteger_ReturnValue_1;          // 0x1078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_7;        // 0x107C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_8;        // 0x107D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_107E[0x2];                                     // 0x107E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x1080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x1090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x10A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x10B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValueAsInteger_ReturnValue_2;          // 0x10C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_9;        // 0x10C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C5[0x3];                                     // 0x10C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValueAsInteger_ReturnValue_3;          // 0x10C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_10;       // 0x10CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10CD[0x3];                                     // 0x10CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x10D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x10E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x10F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x1100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetValueAsInteger_ReturnValue_4;          // 0x1110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1114[0x4];                                     // 0x1114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_4;         // 0x1118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_11;       // 0x1130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1131[0x7];                                     // 0x1131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x1138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x1150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x1168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x116C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x1170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1174[0x4];                                     // 0x1174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_8;           // 0x1178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x1188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x11A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x11B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B1[0x3];                                     // 0x11B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x11B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C4[0x4];                                     // 0x11C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x11C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x11E0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11EC[0x4];                                     // 0x11EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue; // 0x11F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x11F8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1204[0x4];                                     // 0x1204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x1208(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x1210(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddLooseGameplayTags_ReturnValue;         // 0x121C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121D[0x3];                                     // 0x121D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x1220(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x1228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x122C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x122D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x122E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x122F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x1230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x1234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_12;       // 0x1235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x1236(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1237[0x1];                                     // 0x1237(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x1238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x1248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPathName_ReturnValue_1;                // 0x1258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x1268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_ExecuteUbergraph_SquadLock) == 0x000008, "Wrong alignment on SquadLock_C_ExecuteUbergraph_SquadLock");
static_assert(sizeof(SquadLock_C_ExecuteUbergraph_SquadLock) == 0x001278, "Wrong size on SquadLock_C_ExecuteUbergraph_SquadLock");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, EntryPoint) == 0x000000, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::EntryPoint' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable) == 0x000020, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Array_Index_Variable) == 0x000024, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_1) == 0x000028, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_1) == 0x000029, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_2) == 0x00002A, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_2) == 0x00002B, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000030, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_3) == 0x000048, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000050, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_3) == 0x000068, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_4) == 0x000069, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BreakVector_X) == 0x00006C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BreakVector_Y) == 0x000070, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BreakVector_Z) == 0x000074, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_4) == 0x000078, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_5) == 0x000079, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_5) == 0x000084, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_6) == 0x00008C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_6) == 0x000094, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x000098, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000B0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BreakVector_X_1) == 0x0000C8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BreakVector_Y_1) == 0x0000CC, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BreakVector_Z_1) == 0x0000D0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_7) == 0x0000D5, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_7) == 0x0000D6, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_8) == 0x0000D7, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Array_Index_Variable_2) == 0x0000E4, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_8) == 0x0000E8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Array_Index_Variable_3) == 0x0000EC, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OverlappedComponent_3) == 0x0000F0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherActor_3) == 0x0000F8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherComp_3) == 0x000100, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherBodyIndex_3) == 0x000108, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_bFromSweep_1) == 0x00010C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_SweepResult_1) == 0x000110, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OverlappedComponent_2) == 0x0001F0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherActor_2) == 0x0001F8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherComp_2) == 0x000200, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherBodyIndex_2) == 0x000208, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetDisplayName_ReturnValue) == 0x000210, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetDisplayName_ReturnValue_1) == 0x000220, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue) == 0x000230, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000240, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_AsFort_Pawn) == 0x000250, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_AsFort_Pawn_1) == 0x000260, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_AsFort_Pawn_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_bSuccess_1) == 0x000268, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetGameMode_ReturnValue) == 0x000270, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_AsFort_Player_State_Athena) == 0x000278, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_AsFort_Player_State_Athena' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_bSuccess_2) == 0x000280, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_AsFort_Game_Mode_Athena) == 0x000288, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_AsFort_Game_Mode_Athena' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_bSuccess_3) == 0x000290, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_Event_InteractingPawn) == 0x000298, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_Event_InteractionBeingAttempted) == 0x0002A0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_Event_InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0002A8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_Interacting_Pawn) == 0x0002B0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_Interacting_Pawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_Index_1) == 0x0002B8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_Index_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002BC, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002C0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_VectorVector_ReturnValue) == 0x0002D8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_Index) == 0x0002F0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_InFortPawn_1) == 0x0002F8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_InFortPawn_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000300, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000318, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000330, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000348, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000360, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_9) == 0x000368, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_9' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_9) == 0x000369, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_9' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_10) == 0x00036A, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_10' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_10) == 0x00036B, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_10' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000370, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000388, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_VLerp_ReturnValue) == 0x0003A0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_MakeStruct_SquadLockScannerRay) == 0x0003B8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_MakeStruct_SquadLockScannerRay' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_MakeStruct_SquadLockScannerRay_1) == 0x0003D0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_MakeStruct_SquadLockScannerRay_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_MakeStruct_SquadLockScannerRay_2) == 0x0003E8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_MakeStruct_SquadLockScannerRay_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_MakeStruct_SquadLockScannerRay_3) == 0x000400, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_MakeStruct_SquadLockScannerRay_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_AddUnique_ReturnValue) == 0x000418, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00041C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000420, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_AddUnique_ReturnValue_3) == 0x000424, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_11) == 0x000428, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_11' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000429, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_MakeStruct_SquadLockScannerRay_4) == 0x000430, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_MakeStruct_SquadLockScannerRay_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsServer_ReturnValue) == 0x000448, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000449, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Not_PreBool_ReturnValue) == 0x00044A, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BooleanAND_ReturnValue) == 0x00044B, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000450, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_FindLookAtRotation_ReturnValue) == 0x000468, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_MakeStruct_SquadLockScannerRay_5) == 0x000480, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_MakeStruct_SquadLockScannerRay_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Get_Item) == 0x000498, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0004B0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue) == 0x000590, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Loop_Counter_Variable_2) == 0x000594, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Subtract_IntInt_ReturnValue) == 0x000598, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Get_Item_1) == 0x0005A0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue_1) == 0x0005B8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Less_IntInt_ReturnValue) == 0x0005BC, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0005BD, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_RemoveItem_ReturnValue) == 0x0005BE, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetMaterialInstance_ReturnValue) == 0x0005C0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_MakeColor_ReturnValue) == 0x0005C8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_MakeColor_ReturnValue_1) == 0x0005D8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Loop_Counter_Variable_3) == 0x0005E8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_IntInt_ReturnValue_2) == 0x0005EC, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_MakeColor_ReturnValue_2) == 0x0005F0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_MakeColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_MakeColor_ReturnValue_3) == 0x000600, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_MakeColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_SelectColor_ReturnValue) == 0x000610, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_SelectColor_ReturnValue_1) == 0x000620, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_11) == 0x000630, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_11' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_12) == 0x000631, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_12' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate_2) == 0x000634, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000640, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Get_Item_2) == 0x000658, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue_2) == 0x000660, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Find_Scanner_Slot_For_Pawn_Success) == 0x000664, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Find_Scanner_Slot_For_Pawn_Success' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Find_Scanner_Slot_For_Pawn_ScannerIndex) == 0x000668, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Find_Scanner_Slot_For_Pawn_ScannerIndex' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00066C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_HasAuthority_ReturnValue) == 0x00066D, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_MakeStruct_SquadLockScannerRay_6) == 0x000670, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_MakeStruct_SquadLockScannerRay_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Array_Index_Variable_4) == 0x000688, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_MakeStruct_SquadLockScannerRay_7) == 0x000690, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_MakeStruct_SquadLockScannerRay_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Array_Index_Variable_5) == 0x0006A8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_12) == 0x0006AC, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_12' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0006B0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0006B4, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_FloatFloat_ReturnValue) == 0x0006B8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_FClamp_ReturnValue) == 0x0006BC, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetForwardVector_ReturnValue) == 0x0006C0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0006D8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0006F0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0007D0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_Has_Been_Initd_Variable_13) == 0x0007D1, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_Has_Been_Initd_Variable_13' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0007D8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x0007F0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_bool_IsClosed_Variable_13) == 0x000808, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_bool_IsClosed_Variable_13' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_InAimRot) == 0x000810, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_InAimRot' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_LinearColor) == 0x000828, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_LinearColor' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_IsExit) == 0x000838, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_IsExit' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAxes_X) == 0x000840, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAxes_Y) == 0x000858, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAxes_Z) == 0x000870, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Get_Scanner_Forward_Rot_NewParam) == 0x000888, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Get_Scanner_Forward_Rot_NewParam' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAxes_X_1) == 0x0008A0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAxes_X_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAxes_Y_1) == 0x0008B8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAxes_Y_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAxes_Z_1) == 0x0008D0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAxes_Z_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_MakeRotFromXY_ReturnValue) == 0x0008E8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_MakeRotFromXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate_3) == 0x000900, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAxes_X_2) == 0x000910, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAxes_X_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAxes_Y_2) == 0x000928, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAxes_Y_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAxes_Z_2) == 0x000940, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAxes_Z_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000958, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Dot_VectorVector_ReturnValue) == 0x000960, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Less_FloatFloat_ReturnValue) == 0x000964, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Get_Item_3) == 0x000968, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue_3) == 0x000980, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000984, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Max_ReturnValue) == 0x000988, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsValid_ReturnValue_1) == 0x00098C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_AddUnique_ReturnValue_4) == 0x000990, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_AddUnique_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Find_ReturnValue) == 0x000994, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_DegAcos_ReturnValue) == 0x000998, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x00099C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_DegSin_ReturnValue) == 0x0009A0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_FloatToVector_ReturnValue_2) == 0x0009A8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_FloatToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_DegCos_ReturnValue) == 0x0009C0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0009C8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_FloatToVector_ReturnValue_3) == 0x0009E0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_FloatToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x0009F8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Get_Next_Unscanned_PawnInVolume_Index_RetIndex) == 0x000A10, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Get_Next_Unscanned_PawnInVolume_Index_RetIndex' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000A18, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000A30, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000A38, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate_4) == 0x000A50, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_IsEmpty_ReturnValue) == 0x000A5C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000A60, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BooleanOR_ReturnValue) == 0x000A68, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue_4) == 0x000A6C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_RandomInteger_ReturnValue) == 0x000A70, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Get_Scanner_Forward_Rot_NewParam_1) == 0x000A78, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Get_Scanner_Forward_Rot_NewParam_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Find_Scanner_Slot_For_Pawn_Success_1) == 0x000A90, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Find_Scanner_Slot_For_Pawn_Success_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Find_Scanner_Slot_For_Pawn_ScannerIndex_1) == 0x000A94, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Find_Scanner_Slot_For_Pawn_ScannerIndex_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Find_Scanner_Slot_For_Pawn_Success_2) == 0x000A98, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Find_Scanner_Slot_For_Pawn_Success_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Find_Scanner_Slot_For_Pawn_ScannerIndex_2) == 0x000A9C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Find_Scanner_Slot_For_Pawn_ScannerIndex_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Loop_Counter_Variable_4) == 0x000AA0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_IntInt_ReturnValue_3) == 0x000AA4, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_IntToString_ReturnValue) == 0x000AA8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000AB8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsPlaying_ReturnValue) == 0x000AC8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000AD0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000AE0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000AF8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000B10, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Loop_Counter_Variable_5) == 0x000B28, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000B30, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000B48, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Less_IntInt_ReturnValue_1) == 0x000B50, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_IntInt_ReturnValue_4) == 0x000B54, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Array_Index_Variable_6) == 0x000B58, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate_5) == 0x000B5C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate_6) == 0x000B68, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsValid_ReturnValue_2) == 0x000B74, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_On) == 0x000B75, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_On' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_IntInt_ReturnValue_5) == 0x000B78, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Loop_Counter_Variable_6) == 0x000B7C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_IntInt_ReturnValue_6) == 0x000B80, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsLocked_bIsLocked) == 0x000B84, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsLocked_bIsLocked' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsLocked_bIsLocked_1) == 0x000B85, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsLocked_bIsLocked_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsLocked_bIsLocked_2) == 0x000B86, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsLocked_bIsLocked_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Get_Scanner_Forward_Rot_NewParam_2) == 0x000B88, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Get_Scanner_Forward_Rot_NewParam_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue_5) == 0x000BA0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue_6) == 0x000BA4, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000BA8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000BAC, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Max_ReturnValue_1) == 0x000BB0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Max_ReturnValue_2) == 0x000BB4, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_InFortPawn) == 0x000BB8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_InFortPawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_InScannedTime) == 0x000BC0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_InScannedTime' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_NewParam) == 0x000BC4, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000BC8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000BE0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_SpawnSystemAttached_ReturnValue_1) == 0x000BF8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_SpawnSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_MakeStruct_PawnsInSquadLockVolume) == 0x000C00, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_MakeStruct_PawnsInSquadLockVolume' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000C18, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_PlaylistDataReadyAsync_ReturnValue) == 0x000C28, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_PlaylistDataReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000C30, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000C40, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsValid_ReturnValue_3) == 0x000C50, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000C58, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000C68, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_object_Variable) == 0x000C78, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000C80, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_object_Variable_1) == 0x000C90, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_struct_Variable) == 0x000C98, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetTimeSeconds_ReturnValue) == 0x000CB8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_GameState) == 0x000CC0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_GameState' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_Playlist) == 0x000CC8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_Playlist' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_PlaylistContextTags) == 0x000CD0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_PlaylistContextTags' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_AddUnique_ReturnValue_5) == 0x000CF0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_AddUnique_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Get_Item_4) == 0x000CF8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue_7) == 0x000D00, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_MakeStruct_PawnsInSquadLockVolume_1) == 0x000D08, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_MakeStruct_PawnsInSquadLockVolume_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Less_IntInt_ReturnValue_2) == 0x000D20, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Add_ReturnValue) == 0x000D24, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Get_Pawns_In_Volume_Index_By_Pawn_RetIndex) == 0x000D28, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Get_Pawns_In_Volume_Index_By_Pawn_RetIndex' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x000D2C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Array_Index_Variable_7) == 0x000D30, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Get_Item_5) == 0x000D38, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Loop_Counter_Variable_7) == 0x000D50, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Get_Item_6) == 0x000D58, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000D70, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_5) == 0x000D74, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue_8) == 0x000D78, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Less_IntInt_ReturnValue_3) == 0x000D7C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate_7) == 0x000D80, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000D8C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000D90, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000D94, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue_9) == 0x000D98, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Less_IntInt_ReturnValue_4) == 0x000D9C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BooleanOR_ReturnValue_1) == 0x000D9D, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_HasAuthority_ReturnValue_1) == 0x000D9E, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Get_Item_7) == 0x000DA0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000DA8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Length_ReturnValue_10) == 0x000DB0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsValid_ReturnValue_4) == 0x000DB4, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Less_IntInt_ReturnValue_5) == 0x000DB5, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetQuestManager_ReturnValue) == 0x000DB8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000DC0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsValid_ReturnValue_5) == 0x000DC1, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000DC8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000DE0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x000DF8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x000E10, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x000E28, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetValueAsBool_ReturnValue) == 0x000E40, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OverlappedComponent_1) == 0x000E48, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherActor_1) == 0x000E50, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherComp_1) == 0x000E58, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000E60, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_bFromSweep) == 0x000E64, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_SweepResult) == 0x000E68, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_AsFort_Pawn_2) == 0x000F48, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_AsFort_Pawn_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_bSuccess_4) == 0x000F50, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetDisplayName_ReturnValue_2) == 0x000F58, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000F68, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000F70, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsValid_ReturnValue_6) == 0x000F80, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OverlappedComponent) == 0x000F88, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherActor) == 0x000F90, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherComp) == 0x000F98, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_OtherBodyIndex) == 0x000FA0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetDisplayName_ReturnValue_3) == 0x000FA8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000FB8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000FC0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_AsFort_Pawn_3) == 0x000FD0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_AsFort_Pawn_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_DynamicCast_bSuccess_5) == 0x000FD8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Array_Index_Variable_8) == 0x000FDC, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000FE0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Array_Get_Item_8) == 0x000FE8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_RemoveActiveEffectsWithTags_ReturnValue) == 0x001000, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_RemoveActiveEffectsWithTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x001004, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_IntInt_ReturnValue_7) == 0x00100C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_PlaylistTags) == 0x001010, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_PlaylistTags' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CustomEvent_FortPlaylist) == 0x001030, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CustomEvent_FortPlaylist' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetValueAsBool_ReturnValue_1) == 0x001038, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetValueAsBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Less_IntInt_ReturnValue_6) == 0x001039, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_HasAnyTags_ReturnValue) == 0x00103A, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_HasAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_IntToString_ReturnValue_3) == 0x001040, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_10) == 0x001050, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_HasAnyTags_ReturnValue_1) == 0x001060, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_HasAnyTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_HasAnyTags_ReturnValue_2) == 0x001061, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_HasAnyTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_HasAnyTags_ReturnValue_3) == 0x001062, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_HasAnyTags_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_HasAnyTags_ReturnValue_4) == 0x001063, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_HasAnyTags_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BooleanAND_ReturnValue_1) == 0x001064, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Loop_Counter_Variable_8) == 0x001068, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x00106C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_6) == 0x001070, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetValueAsInteger_ReturnValue) == 0x001074, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetValueAsInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetValueAsInteger_ReturnValue_1) == 0x001078, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetValueAsInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_7) == 0x00107C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_8) == 0x00107D, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_IntToString_ReturnValue_4) == 0x001080, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_11) == 0x001090, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0010A0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0010B0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetValueAsInteger_ReturnValue_2) == 0x0010C0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetValueAsInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_9) == 0x0010C4, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetValueAsInteger_ReturnValue_3) == 0x0010C8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetValueAsInteger_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_10) == 0x0010CC, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_IntToString_ReturnValue_6) == 0x0010D0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_13) == 0x0010E0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_IntToString_ReturnValue_7) == 0x0010F0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_14) == 0x001100, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetValueAsInteger_ReturnValue_4) == 0x001110, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetValueAsInteger_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_FloatToVector_ReturnValue_4) == 0x001118, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_FloatToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_11) == 0x001130, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x001138, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Add_VectorVector_ReturnValue_6) == 0x001150, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BreakVector_X_2) == 0x001168, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BreakVector_Y_2) == 0x00116C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_BreakVector_Z_2) == 0x001170, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Conv_IntToString_ReturnValue_8) == 0x001178, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Conv_IntToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_MakeVector_ReturnValue) == 0x001188, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_15) == 0x0011A0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0011B0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_LinearColorLerp_ReturnValue) == 0x0011B4, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_RLerp_ReturnValue) == 0x0011C8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate_8) == 0x0011E0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue) == 0x0011F0, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate_9) == 0x0011F8, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x001208, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, K2Node_CreateDelegate_OutputDelegate_10) == 0x001210, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_AddLooseGameplayTags_ReturnValue) == 0x00121C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_AddLooseGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x001220, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Variable) == 0x001228, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Not_PreBool_ReturnValue_1) == 0x00122C, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Not_PreBool_ReturnValue_2) == 0x00122D, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Not_PreBool_ReturnValue_3) == 0x00122E, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Not_PreBool_ReturnValue_4) == 0x00122F, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, Temp_int_Variable_1) == 0x001230, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsValid_ReturnValue_7) == 0x001234, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GreaterEqual_IntInt_ReturnValue_12) == 0x001235, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GreaterEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_IsValid_ReturnValue_8) == 0x001236, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetPathName_ReturnValue) == 0x001238, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_16) == 0x001248, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_GetPathName_ReturnValue_1) == 0x001258, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_GetPathName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_ExecuteUbergraph_SquadLock, CallFunc_Concat_StrStr_ReturnValue_17) == 0x001268, "Member 'SquadLock_C_ExecuteUbergraph_SquadLock::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");

// Function SquadLock.SquadLock_C.Find Scanner Slot For Pawn
// 0x0028 (0x0028 - 0x0000)
struct SquadLock_C_Find_Scanner_Slot_For_Pawn final
{
public:
	class AFortPawn*                              InFortPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exiting;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ScannerIndex;                                      // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DebugLineColor;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValScannerIndex;                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_Find_Scanner_Slot_For_Pawn) == 0x000008, "Wrong alignment on SquadLock_C_Find_Scanner_Slot_For_Pawn");
static_assert(sizeof(SquadLock_C_Find_Scanner_Slot_For_Pawn) == 0x000028, "Wrong size on SquadLock_C_Find_Scanner_Slot_For_Pawn");
static_assert(offsetof(SquadLock_C_Find_Scanner_Slot_For_Pawn, InFortPawn) == 0x000000, "Member 'SquadLock_C_Find_Scanner_Slot_For_Pawn::InFortPawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Find_Scanner_Slot_For_Pawn, Exiting) == 0x000008, "Member 'SquadLock_C_Find_Scanner_Slot_For_Pawn::Exiting' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Find_Scanner_Slot_For_Pawn, Success) == 0x000009, "Member 'SquadLock_C_Find_Scanner_Slot_For_Pawn::Success' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Find_Scanner_Slot_For_Pawn, ScannerIndex) == 0x00000C, "Member 'SquadLock_C_Find_Scanner_Slot_For_Pawn::ScannerIndex' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Find_Scanner_Slot_For_Pawn, DebugLineColor) == 0x000010, "Member 'SquadLock_C_Find_Scanner_Slot_For_Pawn::DebugLineColor' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Find_Scanner_Slot_For_Pawn, RetValScannerIndex) == 0x000020, "Member 'SquadLock_C_Find_Scanner_Slot_For_Pawn::RetValScannerIndex' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Find_Scanner_Slot_For_Pawn, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'SquadLock_C_Find_Scanner_Slot_For_Pawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Find_Scanner_Slot_For_Pawn, CallFunc_Not_PreBool_ReturnValue_1) == 0x000025, "Member 'SquadLock_C_Find_Scanner_Slot_For_Pawn::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Find_Scanner_Slot_For_Pawn, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'SquadLock_C_Find_Scanner_Slot_For_Pawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.Get Next Unscanned PawnInVolume Index
// 0x0098 (0x0098 - 0x0000)
struct SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index final
{
public:
	int32                                         RetIndex;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomOfUnscannedPawnCount;                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UnscannedPawnCount;                                // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnsInSquadLockVolume                CallFunc_Array_Get_Item;                           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnsInSquadLockVolume                CallFunc_Array_Get_Item_1;                         // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index) == 0x000008, "Wrong alignment on SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index");
static_assert(sizeof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index) == 0x000098, "Wrong size on SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, RetIndex) == 0x000000, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::RetIndex' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CurrentTime) == 0x000004, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CurrentTime' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, RandomOfUnscannedPawnCount) == 0x000008, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::RandomOfUnscannedPawnCount' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, UnscannedPawnCount) == 0x00000C, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::UnscannedPawnCount' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, Temp_int_Array_Index_Variable) == 0x000010, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, Temp_int_Variable) == 0x000020, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_GetTimeSeconds_ReturnValue) == 0x000028, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, Temp_int_Variable_1) == 0x00002C, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_RandomInteger_ReturnValue) == 0x000030, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Array_Get_Item) == 0x000040, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000058, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000060, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000061, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Add_IntInt_ReturnValue_3) == 0x00006C, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000090, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000094, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x000095, "Member 'SquadLock_C_Get_Next_Unscanned_PawnInVolume_Index::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");

// Function SquadLock.SquadLock_C.Get Pawns In Volume Index By Pawn
// 0x0040 (0x0040 - 0x0000)
struct SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn final
{
public:
	class AFortPawn*                              FortPawn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetIndex;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPawnsInSquadLockVolume                CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn) == 0x000008, "Wrong alignment on SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn");
static_assert(sizeof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn) == 0x000040, "Wrong size on SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn");
static_assert(offsetof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn, FortPawn) == 0x000000, "Member 'SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn::FortPawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn, RetIndex) == 0x000008, "Member 'SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn::RetIndex' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn, CallFunc_Array_Get_Item) == 0x000020, "Member 'SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'SquadLock_C_Get_Pawns_In_Volume_Index_By_Pawn::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.Get Scanner Forward Rot
// 0x0090 (0x0090 - 0x0000)
struct SquadLock_C_Get_Scanner_Forward_Rot final
{
public:
	struct FRotator                               NewParam;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SquadLock_C_Get_Scanner_Forward_Rot) == 0x000008, "Wrong alignment on SquadLock_C_Get_Scanner_Forward_Rot");
static_assert(sizeof(SquadLock_C_Get_Scanner_Forward_Rot) == 0x000090, "Wrong size on SquadLock_C_Get_Scanner_Forward_Rot");
static_assert(offsetof(SquadLock_C_Get_Scanner_Forward_Rot, NewParam) == 0x000000, "Member 'SquadLock_C_Get_Scanner_Forward_Rot::NewParam' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Scanner_Forward_Rot, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000018, "Member 'SquadLock_C_Get_Scanner_Forward_Rot::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Scanner_Forward_Rot, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'SquadLock_C_Get_Scanner_Forward_Rot::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Scanner_Forward_Rot, CallFunc_GetRightVector_ReturnValue) == 0x000048, "Member 'SquadLock_C_Get_Scanner_Forward_Rot::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Scanner_Forward_Rot, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000060, "Member 'SquadLock_C_Get_Scanner_Forward_Rot::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Scanner_Forward_Rot, CallFunc_MakeRotFromX_ReturnValue) == 0x000078, "Member 'SquadLock_C_Get_Scanner_Forward_Rot::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.Init Lock Screen Widget
// 0x0040 (0x0040 - 0x0000)
struct SquadLock_C_Init_Lock_Screen_Widget final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Num_Required_Players_GetNumRequiredPlayers; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USquadLock_HoloUI_C*                    K2Node_DynamicCast_AsSquad_Lock_Holo_UI;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_Init_Lock_Screen_Widget) == 0x000008, "Wrong alignment on SquadLock_C_Init_Lock_Screen_Widget");
static_assert(sizeof(SquadLock_C_Init_Lock_Screen_Widget) == 0x000040, "Wrong size on SquadLock_C_Init_Lock_Screen_Widget");
static_assert(offsetof(SquadLock_C_Init_Lock_Screen_Widget, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SquadLock_C_Init_Lock_Screen_Widget::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Init_Lock_Screen_Widget, Temp_bool_IsClosed_Variable) == 0x000001, "Member 'SquadLock_C_Init_Lock_Screen_Widget::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Init_Lock_Screen_Widget, Temp_bool_Has_Been_Initd_Variable) == 0x000002, "Member 'SquadLock_C_Init_Lock_Screen_Widget::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Init_Lock_Screen_Widget, CallFunc_Get_Num_Required_Players_GetNumRequiredPlayers) == 0x000004, "Member 'SquadLock_C_Init_Lock_Screen_Widget::CallFunc_Get_Num_Required_Players_GetNumRequiredPlayers' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Init_Lock_Screen_Widget, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000008, "Member 'SquadLock_C_Init_Lock_Screen_Widget::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Init_Lock_Screen_Widget, K2Node_DynamicCast_AsSquad_Lock_Holo_UI) == 0x000010, "Member 'SquadLock_C_Init_Lock_Screen_Widget::K2Node_DynamicCast_AsSquad_Lock_Holo_UI' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Init_Lock_Screen_Widget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SquadLock_C_Init_Lock_Screen_Widget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Init_Lock_Screen_Widget, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'SquadLock_C_Init_Lock_Screen_Widget::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Init_Lock_Screen_Widget, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'SquadLock_C_Init_Lock_Screen_Widget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.Initialize Scanner Ray
// 0x0028 (0x0028 - 0x0000)
struct SquadLock_C_Initialize_Scanner_Ray final
{
public:
	class UStaticMeshComponent*                   ScannerRayStaticMesh;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ScannerColor_0;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseWidth;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndWidth;                                          // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScanRotAnim;                                       // 0x0024(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_Initialize_Scanner_Ray) == 0x000008, "Wrong alignment on SquadLock_C_Initialize_Scanner_Ray");
static_assert(sizeof(SquadLock_C_Initialize_Scanner_Ray) == 0x000028, "Wrong size on SquadLock_C_Initialize_Scanner_Ray");
static_assert(offsetof(SquadLock_C_Initialize_Scanner_Ray, ScannerRayStaticMesh) == 0x000000, "Member 'SquadLock_C_Initialize_Scanner_Ray::ScannerRayStaticMesh' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Initialize_Scanner_Ray, ScannerColor_0) == 0x000008, "Member 'SquadLock_C_Initialize_Scanner_Ray::ScannerColor_0' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Initialize_Scanner_Ray, BaseWidth) == 0x000018, "Member 'SquadLock_C_Initialize_Scanner_Ray::BaseWidth' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Initialize_Scanner_Ray, EndWidth) == 0x00001C, "Member 'SquadLock_C_Initialize_Scanner_Ray::EndWidth' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Initialize_Scanner_Ray, Angle) == 0x000020, "Member 'SquadLock_C_Initialize_Scanner_Ray::Angle' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Initialize_Scanner_Ray, ScanRotAnim) == 0x000024, "Member 'SquadLock_C_Initialize_Scanner_Ray::ScanRotAnim' has a wrong offset!");

// Function SquadLock.SquadLock_C.IsLocked
// 0x0004 (0x0004 - 0x0000)
struct SquadLock_C_IsLocked final
{
public:
	bool                                          bIsLocked;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_IsLocked) == 0x000001, "Wrong alignment on SquadLock_C_IsLocked");
static_assert(sizeof(SquadLock_C_IsLocked) == 0x000004, "Wrong size on SquadLock_C_IsLocked");
static_assert(offsetof(SquadLock_C_IsLocked, bIsLocked) == 0x000000, "Member 'SquadLock_C_IsLocked::bIsLocked' has a wrong offset!");
static_assert(offsetof(SquadLock_C_IsLocked, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SquadLock_C_IsLocked::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_IsLocked, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'SquadLock_C_IsLocked::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_IsLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'SquadLock_C_IsLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.OneTime_SetAdjustedNumPlayersRequiredToUnlock
// 0x0028 (0x0028 - 0x0000)
struct SquadLock_C_OneTime_SetAdjustedNumPlayersRequiredToUnlock final
{
public:
	struct FGameplayTagContainer                  PlaylistTags;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UFortPlaylist*                          FortPlaylist;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_OneTime_SetAdjustedNumPlayersRequiredToUnlock) == 0x000008, "Wrong alignment on SquadLock_C_OneTime_SetAdjustedNumPlayersRequiredToUnlock");
static_assert(sizeof(SquadLock_C_OneTime_SetAdjustedNumPlayersRequiredToUnlock) == 0x000028, "Wrong size on SquadLock_C_OneTime_SetAdjustedNumPlayersRequiredToUnlock");
static_assert(offsetof(SquadLock_C_OneTime_SetAdjustedNumPlayersRequiredToUnlock, PlaylistTags) == 0x000000, "Member 'SquadLock_C_OneTime_SetAdjustedNumPlayersRequiredToUnlock::PlaylistTags' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OneTime_SetAdjustedNumPlayersRequiredToUnlock, FortPlaylist) == 0x000020, "Member 'SquadLock_C_OneTime_SetAdjustedNumPlayersRequiredToUnlock::FortPlaylist' has a wrong offset!");

// Function SquadLock.SquadLock_C.OnReady_0BAB31FB47344C6E04082EA0DFE1C899
// 0x0030 (0x0030 - 0x0000)
struct SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899 final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899) == 0x000008, "Wrong alignment on SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899");
static_assert(sizeof(SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899) == 0x000030, "Wrong size on SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899");
static_assert(offsetof(SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899, GameState) == 0x000000, "Member 'SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899::GameState' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899, Playlist) == 0x000008, "Member 'SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899::Playlist' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899, PlaylistContextTags) == 0x000010, "Member 'SquadLock_C_OnReady_0BAB31FB47344C6E04082EA0DFE1C899::PlaylistContextTags' has a wrong offset!");

// Function SquadLock.SquadLock_C.OnRep_AdjustedNumPlayersRequiredToUnlock
// 0x0001 (0x0001 - 0x0000)
struct SquadLock_C_OnRep_AdjustedNumPlayersRequiredToUnlock final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_OnRep_AdjustedNumPlayersRequiredToUnlock) == 0x000001, "Wrong alignment on SquadLock_C_OnRep_AdjustedNumPlayersRequiredToUnlock");
static_assert(sizeof(SquadLock_C_OnRep_AdjustedNumPlayersRequiredToUnlock) == 0x000001, "Wrong size on SquadLock_C_OnRep_AdjustedNumPlayersRequiredToUnlock");
static_assert(offsetof(SquadLock_C_OnRep_AdjustedNumPlayersRequiredToUnlock, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SquadLock_C_OnRep_AdjustedNumPlayersRequiredToUnlock::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.OnRep_EndType
// 0x0001 (0x0001 - 0x0000)
struct SquadLock_C_OnRep_EndType final
{
public:
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_OnRep_EndType) == 0x000001, "Wrong alignment on SquadLock_C_OnRep_EndType");
static_assert(sizeof(SquadLock_C_OnRep_EndType) == 0x000001, "Wrong size on SquadLock_C_OnRep_EndType");
static_assert(offsetof(SquadLock_C_OnRep_EndType, K2Node_SwitchInteger_CmpSuccess) == 0x000000, "Member 'SquadLock_C_OnRep_EndType::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function SquadLock.SquadLock_C.OnRep_NumPendingPlayersInRange
// 0x0090 (0x0090 - 0x0000)
struct SquadLock_C_OnRep_NumPendingPlayersInRange final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_OnRep_NumPendingPlayersInRange) == 0x000008, "Wrong alignment on SquadLock_C_OnRep_NumPendingPlayersInRange");
static_assert(sizeof(SquadLock_C_OnRep_NumPendingPlayersInRange) == 0x000090, "Wrong size on SquadLock_C_OnRep_NumPendingPlayersInRange");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Less_IntInt_ReturnValue) == 0x000001, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000020, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000068, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000080, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPendingPlayersInRange, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'SquadLock_C_OnRep_NumPendingPlayersInRange::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.OnRep_NumPlayersInRange
// 0x00B0 (0x00B0 - 0x0000)
struct SquadLock_C_OnRep_NumPlayersInRange final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Num_Required_Players_GetNumRequiredPlayers; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_OnRep_NumPlayersInRange) == 0x000008, "Wrong alignment on SquadLock_C_OnRep_NumPlayersInRange");
static_assert(sizeof(SquadLock_C_OnRep_NumPlayersInRange) == 0x0000B0, "Wrong size on SquadLock_C_OnRep_NumPlayersInRange");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000018, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000060, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Not_PreBool_ReturnValue) == 0x000075, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Greater_IntInt_ReturnValue) == 0x000076, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_IsValid_ReturnValue_3) == 0x000090, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000098, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x0000A0, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Get_Num_Required_Players_GetNumRequiredPlayers) == 0x0000A8, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Get_Num_Required_Players_GetNumRequiredPlayers' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_OnRep_NumPlayersInRange, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AD, "Member 'SquadLock_C_OnRep_NumPlayersInRange::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function SquadLock.SquadLock_C.Ping if Needed
// 0x0080 (0x0080 - 0x0000)
struct SquadLock_C_Ping_if_Needed final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPawnsInSquadLockVolume                CallFunc_Array_Get_Item;                           // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAthenaMarkerComponent*                 CallFunc_GetMarkerComponent_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarkerID                              CallFunc_MarkActorOnClient_ReturnValue;            // 0x0074(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_Ping_if_Needed) == 0x000008, "Wrong alignment on SquadLock_C_Ping_if_Needed");
static_assert(sizeof(SquadLock_C_Ping_if_Needed) == 0x000080, "Wrong size on SquadLock_C_Ping_if_Needed");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'SquadLock_C_Ping_if_Needed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, Temp_int_Array_Index_Variable) == 0x000008, "Member 'SquadLock_C_Ping_if_Needed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, Temp_bool_Has_Been_Initd_Variable) == 0x00000C, "Member 'SquadLock_C_Ping_if_Needed::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, Temp_bool_IsClosed_Variable) == 0x00000D, "Member 'SquadLock_C_Ping_if_Needed::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_Array_Get_Item) == 0x000010, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000048, "Member 'SquadLock_C_Ping_if_Needed::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'SquadLock_C_Ping_if_Needed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_GetMarkerComponent_ReturnValue) == 0x000068, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_GetMarkerComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_IsLocallyControlled_ReturnValue) == 0x000071, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Ping_if_Needed, CallFunc_MarkActorOnClient_ReturnValue) == 0x000074, "Member 'SquadLock_C_Ping_if_Needed::CallFunc_MarkActorOnClient_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.Scanner Collis End Overlap
// 0x0020 (0x0020 - 0x0000)
struct SquadLock_C_Scanner_Collis_End_Overlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_Scanner_Collis_End_Overlap) == 0x000008, "Wrong alignment on SquadLock_C_Scanner_Collis_End_Overlap");
static_assert(sizeof(SquadLock_C_Scanner_Collis_End_Overlap) == 0x000020, "Wrong size on SquadLock_C_Scanner_Collis_End_Overlap");
static_assert(offsetof(SquadLock_C_Scanner_Collis_End_Overlap, OverlappedComponent) == 0x000000, "Member 'SquadLock_C_Scanner_Collis_End_Overlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Scanner_Collis_End_Overlap, OtherActor) == 0x000008, "Member 'SquadLock_C_Scanner_Collis_End_Overlap::OtherActor' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Scanner_Collis_End_Overlap, OtherComp) == 0x000010, "Member 'SquadLock_C_Scanner_Collis_End_Overlap::OtherComp' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Scanner_Collis_End_Overlap, OtherBodyIndex) == 0x000018, "Member 'SquadLock_C_Scanner_Collis_End_Overlap::OtherBodyIndex' has a wrong offset!");

// Function SquadLock.SquadLock_C.Scanner Collis Overlap
// 0x0100 (0x0100 - 0x0000)
struct SquadLock_C_Scanner_Collis_Overlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SquadLock_C_Scanner_Collis_Overlap) == 0x000008, "Wrong alignment on SquadLock_C_Scanner_Collis_Overlap");
static_assert(sizeof(SquadLock_C_Scanner_Collis_Overlap) == 0x000100, "Wrong size on SquadLock_C_Scanner_Collis_Overlap");
static_assert(offsetof(SquadLock_C_Scanner_Collis_Overlap, OverlappedComponent) == 0x000000, "Member 'SquadLock_C_Scanner_Collis_Overlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Scanner_Collis_Overlap, OtherActor) == 0x000008, "Member 'SquadLock_C_Scanner_Collis_Overlap::OtherActor' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Scanner_Collis_Overlap, OtherComp) == 0x000010, "Member 'SquadLock_C_Scanner_Collis_Overlap::OtherComp' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Scanner_Collis_Overlap, OtherBodyIndex) == 0x000018, "Member 'SquadLock_C_Scanner_Collis_Overlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Scanner_Collis_Overlap, bFromSweep) == 0x00001C, "Member 'SquadLock_C_Scanner_Collis_Overlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Scanner_Collis_Overlap, SweepResult) == 0x000020, "Member 'SquadLock_C_Scanner_Collis_Overlap::SweepResult' has a wrong offset!");

// Function SquadLock.SquadLock_C.SetScannerColor
// 0x0060 (0x0060 - 0x0000)
struct SquadLock_C_SetScannerColor final
{
public:
	class UStaticMeshComponent*                   ScannerRayStaticMesh;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InScannerColor;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0020(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue_1;                // 0x0040(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_SetScannerColor) == 0x000010, "Wrong alignment on SquadLock_C_SetScannerColor");
static_assert(sizeof(SquadLock_C_SetScannerColor) == 0x000060, "Wrong size on SquadLock_C_SetScannerColor");
static_assert(offsetof(SquadLock_C_SetScannerColor, ScannerRayStaticMesh) == 0x000000, "Member 'SquadLock_C_SetScannerColor::ScannerRayStaticMesh' has a wrong offset!");
static_assert(offsetof(SquadLock_C_SetScannerColor, InScannerColor) == 0x000008, "Member 'SquadLock_C_SetScannerColor::InScannerColor' has a wrong offset!");
static_assert(offsetof(SquadLock_C_SetScannerColor, CallFunc_MakeVector4_ReturnValue) == 0x000020, "Member 'SquadLock_C_SetScannerColor::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_SetScannerColor, CallFunc_MakeVector4_ReturnValue_1) == 0x000040, "Member 'SquadLock_C_SetScannerColor::CallFunc_MakeVector4_ReturnValue_1' has a wrong offset!");

// Function SquadLock.SquadLock_C.SetScannerPower
// 0x0001 (0x0001 - 0x0000)
struct SquadLock_C_SetScannerPower final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_SetScannerPower) == 0x000001, "Wrong alignment on SquadLock_C_SetScannerPower");
static_assert(sizeof(SquadLock_C_SetScannerPower) == 0x000001, "Wrong size on SquadLock_C_SetScannerPower");
static_assert(offsetof(SquadLock_C_SetScannerPower, On) == 0x000000, "Member 'SquadLock_C_SetScannerPower::On' has a wrong offset!");

// Function SquadLock.SquadLock_C.SetScanningActive
// 0x0020 (0x0020 - 0x0000)
struct SquadLock_C_SetScanningActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_SetScanningActive) == 0x000008, "Wrong alignment on SquadLock_C_SetScanningActive");
static_assert(sizeof(SquadLock_C_SetScanningActive) == 0x000020, "Wrong size on SquadLock_C_SetScanningActive");
static_assert(offsetof(SquadLock_C_SetScanningActive, Active) == 0x000000, "Member 'SquadLock_C_SetScanningActive::Active' has a wrong offset!");
static_assert(offsetof(SquadLock_C_SetScanningActive, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'SquadLock_C_SetScanningActive::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.SetupAndStartScannerAimInterpolation
// 0x0030 (0x0030 - 0x0000)
struct SquadLock_C_SetupAndStartScannerAimInterpolation final
{
public:
	struct FRotator                               InAimRot;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           LinearColor;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExit;                                            // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_SetupAndStartScannerAimInterpolation) == 0x000008, "Wrong alignment on SquadLock_C_SetupAndStartScannerAimInterpolation");
static_assert(sizeof(SquadLock_C_SetupAndStartScannerAimInterpolation) == 0x000030, "Wrong size on SquadLock_C_SetupAndStartScannerAimInterpolation");
static_assert(offsetof(SquadLock_C_SetupAndStartScannerAimInterpolation, InAimRot) == 0x000000, "Member 'SquadLock_C_SetupAndStartScannerAimInterpolation::InAimRot' has a wrong offset!");
static_assert(offsetof(SquadLock_C_SetupAndStartScannerAimInterpolation, LinearColor) == 0x000018, "Member 'SquadLock_C_SetupAndStartScannerAimInterpolation::LinearColor' has a wrong offset!");
static_assert(offsetof(SquadLock_C_SetupAndStartScannerAimInterpolation, IsExit) == 0x000028, "Member 'SquadLock_C_SetupAndStartScannerAimInterpolation::IsExit' has a wrong offset!");

// Function SquadLock.SquadLock_C.SpawnScannedPawnParticles
// 0x0010 (0x0010 - 0x0000)
struct SquadLock_C_SpawnScannedPawnParticles final
{
public:
	class AFortPawn*                              InFortPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InScannedTime;                                     // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_SpawnScannedPawnParticles) == 0x000008, "Wrong alignment on SquadLock_C_SpawnScannedPawnParticles");
static_assert(sizeof(SquadLock_C_SpawnScannedPawnParticles) == 0x000010, "Wrong size on SquadLock_C_SpawnScannedPawnParticles");
static_assert(offsetof(SquadLock_C_SpawnScannedPawnParticles, InFortPawn) == 0x000000, "Member 'SquadLock_C_SpawnScannedPawnParticles::InFortPawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_SpawnScannedPawnParticles, InScannedTime) == 0x000008, "Member 'SquadLock_C_SpawnScannedPawnParticles::InScannedTime' has a wrong offset!");
static_assert(offsetof(SquadLock_C_SpawnScannedPawnParticles, NewParam) == 0x00000C, "Member 'SquadLock_C_SpawnScannedPawnParticles::NewParam' has a wrong offset!");

// Function SquadLock.SquadLock_C.TeamupVolumeEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct SquadLock_C_TeamupVolumeEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_TeamupVolumeEndOverlap) == 0x000008, "Wrong alignment on SquadLock_C_TeamupVolumeEndOverlap");
static_assert(sizeof(SquadLock_C_TeamupVolumeEndOverlap) == 0x000020, "Wrong size on SquadLock_C_TeamupVolumeEndOverlap");
static_assert(offsetof(SquadLock_C_TeamupVolumeEndOverlap, OverlappedComponent) == 0x000000, "Member 'SquadLock_C_TeamupVolumeEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SquadLock_C_TeamupVolumeEndOverlap, OtherActor) == 0x000008, "Member 'SquadLock_C_TeamupVolumeEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(SquadLock_C_TeamupVolumeEndOverlap, OtherComp) == 0x000010, "Member 'SquadLock_C_TeamupVolumeEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(SquadLock_C_TeamupVolumeEndOverlap, OtherBodyIndex) == 0x000018, "Member 'SquadLock_C_TeamupVolumeEndOverlap::OtherBodyIndex' has a wrong offset!");

// Function SquadLock.SquadLock_C.TeamupVolumeStartOverlap
// 0x0100 (0x0100 - 0x0000)
struct SquadLock_C_TeamupVolumeStartOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SquadLock_C_TeamupVolumeStartOverlap) == 0x000008, "Wrong alignment on SquadLock_C_TeamupVolumeStartOverlap");
static_assert(sizeof(SquadLock_C_TeamupVolumeStartOverlap) == 0x000100, "Wrong size on SquadLock_C_TeamupVolumeStartOverlap");
static_assert(offsetof(SquadLock_C_TeamupVolumeStartOverlap, OverlappedComponent) == 0x000000, "Member 'SquadLock_C_TeamupVolumeStartOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SquadLock_C_TeamupVolumeStartOverlap, OtherActor) == 0x000008, "Member 'SquadLock_C_TeamupVolumeStartOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(SquadLock_C_TeamupVolumeStartOverlap, OtherComp) == 0x000010, "Member 'SquadLock_C_TeamupVolumeStartOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(SquadLock_C_TeamupVolumeStartOverlap, OtherBodyIndex) == 0x000018, "Member 'SquadLock_C_TeamupVolumeStartOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(SquadLock_C_TeamupVolumeStartOverlap, bFromSweep) == 0x00001C, "Member 'SquadLock_C_TeamupVolumeStartOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(SquadLock_C_TeamupVolumeStartOverlap, SweepResult) == 0x000020, "Member 'SquadLock_C_TeamupVolumeStartOverlap::SweepResult' has a wrong offset!");

// Function SquadLock.SquadLock_C.UpdatePawnCounts
// 0x00C0 (0x00C0 - 0x0000)
struct SquadLock_C_UpdatePawnCounts final
{
public:
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Players_In_Range_and_Total_Required_To_Unlock_NumPlayersnRange; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Players_In_Range_and_Total_Required_To_Unlock_NumPlayersRequired; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Players_In_Range_and_Total_Required_To_Unlock_NumUnscannedPlayersInRange; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_UpdatePawnCounts) == 0x000008, "Wrong alignment on SquadLock_C_UpdatePawnCounts");
static_assert(sizeof(SquadLock_C_UpdatePawnCounts) == 0x0000C0, "Wrong size on SquadLock_C_UpdatePawnCounts");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Concat_StrStr_ReturnValue) == 0x000000, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_IsServer_ReturnValue) == 0x000010, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Get_Players_In_Range_and_Total_Required_To_Unlock_NumPlayersnRange) == 0x000014, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Get_Players_In_Range_and_Total_Required_To_Unlock_NumPlayersnRange' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Get_Players_In_Range_and_Total_Required_To_Unlock_NumPlayersRequired) == 0x000018, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Get_Players_In_Range_and_Total_Required_To_Unlock_NumPlayersRequired' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Get_Players_In_Range_and_Total_Required_To_Unlock_NumUnscannedPlayersInRange) == 0x00001C, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Get_Players_In_Range_and_Total_Required_To_Unlock_NumUnscannedPlayersInRange' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000030, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000068, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Greater_IntInt_ReturnValue) == 0x000069, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000070, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000088, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000098, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000A8, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UpdatePawnCounts, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000B8, "Member 'SquadLock_C_UpdatePawnCounts::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function SquadLock.SquadLock_C.UserConstructionScript
// 0x0090 (0x0090 - 0x0000)
struct SquadLock_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_UserConstructionScript) == 0x000008, "Wrong alignment on SquadLock_C_UserConstructionScript");
static_assert(sizeof(SquadLock_C_UserConstructionScript) == 0x000090, "Wrong size on SquadLock_C_UserConstructionScript");
static_assert(offsetof(SquadLock_C_UserConstructionScript, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000000, "Member 'SquadLock_C_UserConstructionScript::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UserConstructionScript, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000018, "Member 'SquadLock_C_UserConstructionScript::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'SquadLock_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UserConstructionScript, CallFunc_GetForwardVector_ReturnValue) == 0x000048, "Member 'SquadLock_C_UserConstructionScript::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'SquadLock_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'SquadLock_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.BlueprintCanInteract
// 0x0010 (0x0010 - 0x0000)
struct SquadLock_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             InteractionType;                                   // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_BlueprintCanInteract) == 0x000008, "Wrong alignment on SquadLock_C_BlueprintCanInteract");
static_assert(sizeof(SquadLock_C_BlueprintCanInteract) == 0x000010, "Wrong size on SquadLock_C_BlueprintCanInteract");
static_assert(offsetof(SquadLock_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'SquadLock_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_BlueprintCanInteract, InteractionBeingAttempted) == 0x000008, "Member 'SquadLock_C_BlueprintCanInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(SquadLock_C_BlueprintCanInteract, InteractionType) == 0x000009, "Member 'SquadLock_C_BlueprintCanInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(SquadLock_C_BlueprintCanInteract, ReturnValue) == 0x00000A, "Member 'SquadLock_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.BlueprintGetFailedInteractionString
// 0x0028 (0x0028 - 0x0000)
struct SquadLock_C_BlueprintGetFailedInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(SquadLock_C_BlueprintGetFailedInteractionString) == 0x000008, "Wrong alignment on SquadLock_C_BlueprintGetFailedInteractionString");
static_assert(sizeof(SquadLock_C_BlueprintGetFailedInteractionString) == 0x000028, "Wrong size on SquadLock_C_BlueprintGetFailedInteractionString");
static_assert(offsetof(SquadLock_C_BlueprintGetFailedInteractionString, InteractingPawn) == 0x000000, "Member 'SquadLock_C_BlueprintGetFailedInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_BlueprintGetFailedInteractionString, InteractionBeingAttempted) == 0x000008, "Member 'SquadLock_C_BlueprintGetFailedInteractionString::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(SquadLock_C_BlueprintGetFailedInteractionString, ReturnValue) == 0x000010, "Member 'SquadLock_C_BlueprintGetFailedInteractionString::ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.BlueprintGetInteractionString
// 0x0028 (0x0028 - 0x0000)
struct SquadLock_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(SquadLock_C_BlueprintGetInteractionString) == 0x000008, "Wrong alignment on SquadLock_C_BlueprintGetInteractionString");
static_assert(sizeof(SquadLock_C_BlueprintGetInteractionString) == 0x000028, "Wrong size on SquadLock_C_BlueprintGetInteractionString");
static_assert(offsetof(SquadLock_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'SquadLock_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(SquadLock_C_BlueprintGetInteractionString, InteractionBeingAttempted) == 0x000008, "Member 'SquadLock_C_BlueprintGetInteractionString::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(SquadLock_C_BlueprintGetInteractionString, ReturnValue) == 0x000010, "Member 'SquadLock_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.Get Num Required Players
// 0x0008 (0x0008 - 0x0000)
struct SquadLock_C_Get_Num_Required_Players final
{
public:
	int32                                         GetNumRequiredPlayers;                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_Get_Num_Required_Players) == 0x000004, "Wrong alignment on SquadLock_C_Get_Num_Required_Players");
static_assert(sizeof(SquadLock_C_Get_Num_Required_Players) == 0x000008, "Wrong size on SquadLock_C_Get_Num_Required_Players");
static_assert(offsetof(SquadLock_C_Get_Num_Required_Players, GetNumRequiredPlayers) == 0x000000, "Member 'SquadLock_C_Get_Num_Required_Players::GetNumRequiredPlayers' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Num_Required_Players, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'SquadLock_C_Get_Num_Required_Players::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.Get Players In Range and Total Required To Unlock
// 0x0020 (0x0020 - 0x0000)
struct SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock final
{
public:
	int32                                         NumPlayersnRange;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumPlayersRequired;                                // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumUnscannedPlayersInRange;                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumSquadMembersGathered;                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Num_Required_Players_GetNumRequiredPlayers; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Present_Pawn_Counts_RetVal_ScannedPawnCount; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Present_Pawn_Counts_RetVal_PendingScannedPawnCount; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock) == 0x000004, "Wrong alignment on SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock");
static_assert(sizeof(SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock) == 0x000020, "Wrong size on SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock");
static_assert(offsetof(SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock, NumPlayersnRange) == 0x000000, "Member 'SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock::NumPlayersnRange' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock, NumPlayersRequired) == 0x000004, "Member 'SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock::NumPlayersRequired' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock, NumUnscannedPlayersInRange) == 0x000008, "Member 'SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock::NumUnscannedPlayersInRange' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock, NumSquadMembersGathered) == 0x00000C, "Member 'SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock::NumSquadMembersGathered' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock, CallFunc_Get_Num_Required_Players_GetNumRequiredPlayers) == 0x000010, "Member 'SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock::CallFunc_Get_Num_Required_Players_GetNumRequiredPlayers' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock, CallFunc_GetTimeSeconds_ReturnValue) == 0x000014, "Member 'SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock, CallFunc_Get_Present_Pawn_Counts_RetVal_ScannedPawnCount) == 0x000018, "Member 'SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock::CallFunc_Get_Present_Pawn_Counts_RetVal_ScannedPawnCount' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock, CallFunc_Get_Present_Pawn_Counts_RetVal_PendingScannedPawnCount) == 0x00001C, "Member 'SquadLock_C_Get_Players_In_Range_and_Total_Required_To_Unlock::CallFunc_Get_Present_Pawn_Counts_RetVal_PendingScannedPawnCount' has a wrong offset!");

// Function SquadLock.SquadLock_C.Get Present Pawn Counts
// 0x0060 (0x0060 - 0x0000)
struct SquadLock_C_Get_Present_Pawn_Counts final
{
public:
	float                                         CurrentTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetVal_ScannedPawnCount;                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetVal_PendingScannedPawnCount;                    // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_PendingPawnCount;                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_ScannedPawnCount;                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPawnsInSquadLockVolume                CallFunc_Array_Get_Item;                           // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_Get_Present_Pawn_Counts) == 0x000008, "Wrong alignment on SquadLock_C_Get_Present_Pawn_Counts");
static_assert(sizeof(SquadLock_C_Get_Present_Pawn_Counts) == 0x000060, "Wrong size on SquadLock_C_Get_Present_Pawn_Counts");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, CurrentTime) == 0x000000, "Member 'SquadLock_C_Get_Present_Pawn_Counts::CurrentTime' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, RetVal_ScannedPawnCount) == 0x000004, "Member 'SquadLock_C_Get_Present_Pawn_Counts::RetVal_ScannedPawnCount' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, RetVal_PendingScannedPawnCount) == 0x000008, "Member 'SquadLock_C_Get_Present_Pawn_Counts::RetVal_PendingScannedPawnCount' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, Local_PendingPawnCount) == 0x00000C, "Member 'SquadLock_C_Get_Present_Pawn_Counts::Local_PendingPawnCount' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, Local_ScannedPawnCount) == 0x000010, "Member 'SquadLock_C_Get_Present_Pawn_Counts::Local_ScannedPawnCount' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, Temp_int_Variable) == 0x000014, "Member 'SquadLock_C_Get_Present_Pawn_Counts::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, Temp_int_Variable_1) == 0x000018, "Member 'SquadLock_C_Get_Present_Pawn_Counts::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'SquadLock_C_Get_Present_Pawn_Counts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'SquadLock_C_Get_Present_Pawn_Counts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, Temp_int_Array_Index_Variable) == 0x000024, "Member 'SquadLock_C_Get_Present_Pawn_Counts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'SquadLock_C_Get_Present_Pawn_Counts::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'SquadLock_C_Get_Present_Pawn_Counts::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'SquadLock_C_Get_Present_Pawn_Counts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, CallFunc_Array_Get_Item) == 0x000038, "Member 'SquadLock_C_Get_Present_Pawn_Counts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'SquadLock_C_Get_Present_Pawn_Counts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'SquadLock_C_Get_Present_Pawn_Counts::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadLock_C_Get_Present_Pawn_Counts, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'SquadLock_C_Get_Present_Pawn_Counts::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SquadLock.SquadLock_C.GetMarkerDetailsId
// 0x0004 (0x0004 - 0x0000)
struct SquadLock_C_GetMarkerDetailsId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadLock_C_GetMarkerDetailsId) == 0x000004, "Wrong alignment on SquadLock_C_GetMarkerDetailsId");
static_assert(sizeof(SquadLock_C_GetMarkerDetailsId) == 0x000004, "Wrong size on SquadLock_C_GetMarkerDetailsId");
static_assert(offsetof(SquadLock_C_GetMarkerDetailsId, ReturnValue) == 0x000000, "Member 'SquadLock_C_GetMarkerDetailsId::ReturnValue' has a wrong offset!");

}

