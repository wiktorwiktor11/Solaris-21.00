#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_IGiveSneakySnowman

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Athena_IGiveSneakySnowman.Athena_IGiveSneakySnowman_C.GetMaterialInt
// 0x0004 (0x0004 - 0x0000)
struct Athena_IGiveSneakySnowman_C_GetMaterialInt final
{
public:
	int32                                         MatInt;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Athena_IGiveSneakySnowman_C_GetMaterialInt) == 0x000004, "Wrong alignment on Athena_IGiveSneakySnowman_C_GetMaterialInt");
static_assert(sizeof(Athena_IGiveSneakySnowman_C_GetMaterialInt) == 0x000004, "Wrong size on Athena_IGiveSneakySnowman_C_GetMaterialInt");
static_assert(offsetof(Athena_IGiveSneakySnowman_C_GetMaterialInt, MatInt) == 0x000000, "Member 'Athena_IGiveSneakySnowman_C_GetMaterialInt::MatInt' has a wrong offset!");

// Function Athena_IGiveSneakySnowman.Athena_IGiveSneakySnowman_C.GetNewSnowmanTransform
// 0x0060 (0x0060 - 0x0000)
struct Athena_IGiveSneakySnowman_C_GetNewSnowmanTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Athena_IGiveSneakySnowman_C_GetNewSnowmanTransform) == 0x000010, "Wrong alignment on Athena_IGiveSneakySnowman_C_GetNewSnowmanTransform");
static_assert(sizeof(Athena_IGiveSneakySnowman_C_GetNewSnowmanTransform) == 0x000060, "Wrong size on Athena_IGiveSneakySnowman_C_GetNewSnowmanTransform");
static_assert(offsetof(Athena_IGiveSneakySnowman_C_GetNewSnowmanTransform, Transform) == 0x000000, "Member 'Athena_IGiveSneakySnowman_C_GetNewSnowmanTransform::Transform' has a wrong offset!");

// Function Athena_IGiveSneakySnowman.Athena_IGiveSneakySnowman_C.MovePlayer
// 0x0008 (0x0008 - 0x0000)
struct Athena_IGiveSneakySnowman_C_MovePlayer final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Athena_IGiveSneakySnowman_C_MovePlayer) == 0x000008, "Wrong alignment on Athena_IGiveSneakySnowman_C_MovePlayer");
static_assert(sizeof(Athena_IGiveSneakySnowman_C_MovePlayer) == 0x000008, "Wrong size on Athena_IGiveSneakySnowman_C_MovePlayer");
static_assert(offsetof(Athena_IGiveSneakySnowman_C_MovePlayer, Player) == 0x000000, "Member 'Athena_IGiveSneakySnowman_C_MovePlayer::Player' has a wrong offset!");

}

