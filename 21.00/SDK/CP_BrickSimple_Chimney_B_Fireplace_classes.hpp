#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CP_BrickSimple_Chimney_B_Fireplace

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CP_BrickSimple_Chimney_B_Fireplace.CP_BrickSimple_Chimney_B_Fireplace_C
// 0x0028 (0x0E98 - 0x0E70)
class ACP_BrickSimple_Chimney_B_Fireplace_C final : public ABuildingProp
{
public:
	class UParticleSystemComponent*               P_TransylvaniaFireplace;                           // 0x0E70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0E78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0E80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BloomPlane;                                        // 0x0E88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0E90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CP_BrickSimple_Chimney_B_Fireplace_C">();
	}
	static class ACP_BrickSimple_Chimney_B_Fireplace_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACP_BrickSimple_Chimney_B_Fireplace_C>();
	}
};
static_assert(alignof(ACP_BrickSimple_Chimney_B_Fireplace_C) == 0x000008, "Wrong alignment on ACP_BrickSimple_Chimney_B_Fireplace_C");
static_assert(sizeof(ACP_BrickSimple_Chimney_B_Fireplace_C) == 0x000E98, "Wrong size on ACP_BrickSimple_Chimney_B_Fireplace_C");
static_assert(offsetof(ACP_BrickSimple_Chimney_B_Fireplace_C, P_TransylvaniaFireplace) == 0x000E70, "Member 'ACP_BrickSimple_Chimney_B_Fireplace_C::P_TransylvaniaFireplace' has a wrong offset!");
static_assert(offsetof(ACP_BrickSimple_Chimney_B_Fireplace_C, PointLight) == 0x000E78, "Member 'ACP_BrickSimple_Chimney_B_Fireplace_C::PointLight' has a wrong offset!");
static_assert(offsetof(ACP_BrickSimple_Chimney_B_Fireplace_C, Audio) == 0x000E80, "Member 'ACP_BrickSimple_Chimney_B_Fireplace_C::Audio' has a wrong offset!");
static_assert(offsetof(ACP_BrickSimple_Chimney_B_Fireplace_C, BloomPlane) == 0x000E88, "Member 'ACP_BrickSimple_Chimney_B_Fireplace_C::BloomPlane' has a wrong offset!");
static_assert(offsetof(ACP_BrickSimple_Chimney_B_Fireplace_C, SpotLight) == 0x000E90, "Member 'ACP_BrickSimple_Chimney_B_Fireplace_C::SpotLight' has a wrong offset!");

}

