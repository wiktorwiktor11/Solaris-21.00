#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortFeatUpdatesLog

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DynamicQuestUpdateInfo_structs.hpp"


namespace SDK::Params
{

// Function FortFeatUpdatesLog.FortFeatUpdatesLog_C.CreateAnnouncementUpdate
// 0x0008 (0x0008 - 0x0000)
struct FortFeatUpdatesLog_C_CreateAnnouncementUpdate final
{
public:
	const class UFortQuestObjectiveInfo*          QuestItemToCheck;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortFeatUpdatesLog_C_CreateAnnouncementUpdate) == 0x000008, "Wrong alignment on FortFeatUpdatesLog_C_CreateAnnouncementUpdate");
static_assert(sizeof(FortFeatUpdatesLog_C_CreateAnnouncementUpdate) == 0x000008, "Wrong size on FortFeatUpdatesLog_C_CreateAnnouncementUpdate");
static_assert(offsetof(FortFeatUpdatesLog_C_CreateAnnouncementUpdate, QuestItemToCheck) == 0x000000, "Member 'FortFeatUpdatesLog_C_CreateAnnouncementUpdate::QuestItemToCheck' has a wrong offset!");

// Function FortFeatUpdatesLog.FortFeatUpdatesLog_C.ExecuteUbergraph_FortFeatUpdatesLog
// 0x00D0 (0x00D0 - 0x0000)
struct FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortQuestObjectiveInfo*          K2Node_Event_QuestItemToCheck;                     // 0x0078(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         CallFunc_GetOwningQuest_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDynamicQuestUpdateInfo                K2Node_MakeStruct_DynamicQuestUpdateInfo;          // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAnnounce_QuestUpdate_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerController*>          K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
};
static_assert(alignof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog) == 0x000010, "Wrong alignment on FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog");
static_assert(sizeof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog) == 0x0000D0, "Wrong size on FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, EntryPoint) == 0x000000, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::EntryPoint' has a wrong offset!");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, K2Node_Event_QuestItemToCheck) == 0x000078, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::K2Node_Event_QuestItemToCheck' has a wrong offset!");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, CallFunc_GetOwningQuest_ReturnValue) == 0x000080, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::CallFunc_GetOwningQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, K2Node_MakeStruct_DynamicQuestUpdateInfo) == 0x000088, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::K2Node_MakeStruct_DynamicQuestUpdateInfo' has a wrong offset!");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000A0, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, K2Node_DynamicCast_AsFort_Player_Controller) == 0x0000A8, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog, K2Node_MakeArray_Array) == 0x0000B8, "Member 'FortFeatUpdatesLog_C_ExecuteUbergraph_FortFeatUpdatesLog::K2Node_MakeArray_Array' has a wrong offset!");

}

