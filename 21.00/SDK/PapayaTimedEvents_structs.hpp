#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PapayaTimedEvents

#include "Basic.hpp"

#include "NetCore_structs.hpp"


namespace SDK
{

// ScriptStruct PapayaTimedEvents.MediaTimeEventItem
// 0x002C (0x0038 - 0x000C)
struct FMediaTimeEventItem final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EventName;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Time;                                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Parameter;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMediaTimeEventItem) == 0x000008, "Wrong alignment on FMediaTimeEventItem");
static_assert(sizeof(FMediaTimeEventItem) == 0x000038, "Wrong size on FMediaTimeEventItem");
static_assert(offsetof(FMediaTimeEventItem, EventName) == 0x000010, "Member 'FMediaTimeEventItem::EventName' has a wrong offset!");
static_assert(offsetof(FMediaTimeEventItem, Time) == 0x000020, "Member 'FMediaTimeEventItem::Time' has a wrong offset!");
static_assert(offsetof(FMediaTimeEventItem, Parameter) == 0x000028, "Member 'FMediaTimeEventItem::Parameter' has a wrong offset!");

// ScriptStruct PapayaTimedEvents.MediaTimeEventArray
// 0x0010 (0x0118 - 0x0108)
struct FMediaTimeEventArray final : public FFastArraySerializer
{
public:
	TArray<struct FMediaTimeEventItem>            Items;                                             // 0x0108(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMediaTimeEventArray) == 0x000008, "Wrong alignment on FMediaTimeEventArray");
static_assert(sizeof(FMediaTimeEventArray) == 0x000118, "Wrong size on FMediaTimeEventArray");
static_assert(offsetof(FMediaTimeEventArray, Items) == 0x000108, "Member 'FMediaTimeEventArray::Items' has a wrong offset!");

}

