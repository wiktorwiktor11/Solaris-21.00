#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryEquipSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaInventoryEquipSlot.AthenaInventoryEquipSlot_C
// 0x0070 (0x1130 - 0x10C0)
class UAthenaInventoryEquipSlot_C final : public UAthenaInventoryQuickBarSlotButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x10C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UnderlineSelect;                                   // 0x10C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EmptySlotSelect;                                   // 0x10D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Scale;                                             // 0x10D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EmptySlotHover;                                    // 0x10E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_153;                                        // 0x10E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EmptyImage;                                        // 0x10F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaGadgetFuelGauge_C*               JetpackFuelGauge;                                  // 0x10F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayExtensionWidgets;                           // 0x1100(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_InputAction;                              // 0x1108(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SlotSizeBox;                                       // 0x1110(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SwapTargetIndicator;                               // 0x1118(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsSwapOrigin;                                     // 0x1120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasValidItem;                                     // 0x1121(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSwapTarget;                                     // 0x1122(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSelected;                                       // 0x1123(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SingleSlotSize;                                    // 0x1124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnDeselected();
	void BP_OnHovered();
	void BP_OnSelected();
	void BP_OnUnhovered();
	bool CanEquipFortItem(class UObject* Object);
	void ExecuteUbergraph_AthenaInventoryEquipSlot(int32 EntryPoint);
	void Hide_Athena_Gadget_Fuel_Widget();
	void OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	bool OnDragOver(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnExtensionWidgetAdded(const EUIExtensionSlot ExtensionSlot, class UUserWidget* ExtensionWidget);
	struct FEventReply OnMouseButtonDown_Border(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnOwnerDeactivated();
	void OnSlottedItemChanged(const class UFortItem* SlottedItem);
	void OnSwapComplete();
	void OnSwapStarted();
	void ResetAnims();
	void Show_Athena_Gadget_Fuel_Widget(class UFortItem* Item);
	void ShowHoveredState();
	void ShowSelectedState();
	void Update_Athena_Gadget_Fuel_Widget(class UFortItem* ItemInSlot);
	void UpdateSlotSize(class UFortItem* Item);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaInventoryEquipSlot_C">();
	}
	static class UAthenaInventoryEquipSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaInventoryEquipSlot_C>();
	}
};
static_assert(alignof(UAthenaInventoryEquipSlot_C) == 0x000010, "Wrong alignment on UAthenaInventoryEquipSlot_C");
static_assert(sizeof(UAthenaInventoryEquipSlot_C) == 0x001130, "Wrong size on UAthenaInventoryEquipSlot_C");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, UberGraphFrame) == 0x0010C0, "Member 'UAthenaInventoryEquipSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, UnderlineSelect) == 0x0010C8, "Member 'UAthenaInventoryEquipSlot_C::UnderlineSelect' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, EmptySlotSelect) == 0x0010D0, "Member 'UAthenaInventoryEquipSlot_C::EmptySlotSelect' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, Scale) == 0x0010D8, "Member 'UAthenaInventoryEquipSlot_C::Scale' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, EmptySlotHover) == 0x0010E0, "Member 'UAthenaInventoryEquipSlot_C::EmptySlotHover' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, Border_153) == 0x0010E8, "Member 'UAthenaInventoryEquipSlot_C::Border_153' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, EmptyImage) == 0x0010F0, "Member 'UAthenaInventoryEquipSlot_C::EmptyImage' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, JetpackFuelGauge) == 0x0010F8, "Member 'UAthenaInventoryEquipSlot_C::JetpackFuelGauge' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, OverlayExtensionWidgets) == 0x001100, "Member 'UAthenaInventoryEquipSlot_C::OverlayExtensionWidgets' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, ScaleBox_InputAction) == 0x001108, "Member 'UAthenaInventoryEquipSlot_C::ScaleBox_InputAction' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, SlotSizeBox) == 0x001110, "Member 'UAthenaInventoryEquipSlot_C::SlotSizeBox' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, SwapTargetIndicator) == 0x001118, "Member 'UAthenaInventoryEquipSlot_C::SwapTargetIndicator' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, bIsSwapOrigin) == 0x001120, "Member 'UAthenaInventoryEquipSlot_C::bIsSwapOrigin' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, bHasValidItem) == 0x001121, "Member 'UAthenaInventoryEquipSlot_C::bHasValidItem' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, bIsSwapTarget) == 0x001122, "Member 'UAthenaInventoryEquipSlot_C::bIsSwapTarget' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, bIsSelected) == 0x001123, "Member 'UAthenaInventoryEquipSlot_C::bIsSelected' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryEquipSlot_C, SingleSlotSize) == 0x001124, "Member 'UAthenaInventoryEquipSlot_C::SingleSlotSize' has a wrong offset!");

}

