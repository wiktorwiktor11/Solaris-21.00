#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ZipLine_Pole_Apollo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "IgnorePlayerStruct_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C
// 0x0060 (0x0ED0 - 0x0E70)
class AZipLine_Pole_Apollo_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class AFortPlayerPawn*>                PawnsOverlappingLarge;                             // 0x0E78(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTimerHandle                           OverlapTimer;                                      // 0x0E88(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimerSecondsInterval;                              // 0x0E90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E94[0x4];                                      // 0x0E94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZipLine_Pole_Capsules_C*               ZiplineCapulseActor;                               // 0x0E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableCollisionCompletely;                        // 0x0EA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA1[0x7];                                      // 0x0EA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIgnorePlayerStruct>            PlayersIgnoringPole;                               // 0x0EA8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         PlayersIgnoringPoleIndex;                          // 0x0EB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IgnorePoleCollisionForXSeconds;                    // 0x0EBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CurFortPlayerPawn;                                 // 0x0EC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimerCount;                                        // 0x0EC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0ECC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void updateZiplinePoleCollisionWithOverlappingPawns();
	void UnbindZiplineStateChanged(class AFortPlayerPawn* InFortPlayerPawn);
	void RemovePawnFromPawnsOverlappingLarge(class AFortPlayerPawn* PlayerPawn);
	void Remove_Ignore_Player(class AFortPlayerPawn* InFortPlayerPawn);
	void ReceiveBeginPlay();
	void PlayerEndOverlappingLargeCapsule(class AFortPlayerPawn* FortPlayerPawn);
	void PlayerBeginOverlappingLargeCapsule(class AFortPlayerPawn* FortPlayerPawn);
	void pawnZiplineStateChanged(bool bIsZiplining);
	void FindInIgnorePlayers(class AFortPlayerPawn* InFortPlayerPawn, int32* Index_0);
	void ExecuteUbergraph_ZipLine_Pole_Apollo(int32 EntryPoint);
	void Actor_Hit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ZipLine_Pole_Apollo_C">();
	}
	static class AZipLine_Pole_Apollo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZipLine_Pole_Apollo_C>();
	}
};
static_assert(alignof(AZipLine_Pole_Apollo_C) == 0x000008, "Wrong alignment on AZipLine_Pole_Apollo_C");
static_assert(sizeof(AZipLine_Pole_Apollo_C) == 0x000ED0, "Wrong size on AZipLine_Pole_Apollo_C");
static_assert(offsetof(AZipLine_Pole_Apollo_C, UberGraphFrame) == 0x000E70, "Member 'AZipLine_Pole_Apollo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, PawnsOverlappingLarge) == 0x000E78, "Member 'AZipLine_Pole_Apollo_C::PawnsOverlappingLarge' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, OverlapTimer) == 0x000E88, "Member 'AZipLine_Pole_Apollo_C::OverlapTimer' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, TimerSecondsInterval) == 0x000E90, "Member 'AZipLine_Pole_Apollo_C::TimerSecondsInterval' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, ZiplineCapulseActor) == 0x000E98, "Member 'AZipLine_Pole_Apollo_C::ZiplineCapulseActor' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, DisableCollisionCompletely) == 0x000EA0, "Member 'AZipLine_Pole_Apollo_C::DisableCollisionCompletely' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, PlayersIgnoringPole) == 0x000EA8, "Member 'AZipLine_Pole_Apollo_C::PlayersIgnoringPole' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, PlayersIgnoringPoleIndex) == 0x000EB8, "Member 'AZipLine_Pole_Apollo_C::PlayersIgnoringPoleIndex' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, IgnorePoleCollisionForXSeconds) == 0x000EBC, "Member 'AZipLine_Pole_Apollo_C::IgnorePoleCollisionForXSeconds' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, CurFortPlayerPawn) == 0x000EC0, "Member 'AZipLine_Pole_Apollo_C::CurFortPlayerPawn' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, TimerCount) == 0x000EC8, "Member 'AZipLine_Pole_Apollo_C::TimerCount' has a wrong offset!");
static_assert(offsetof(AZipLine_Pole_Apollo_C, Debug) == 0x000ECC, "Member 'AZipLine_Pole_Apollo_C::Debug' has a wrong offset!");

}

