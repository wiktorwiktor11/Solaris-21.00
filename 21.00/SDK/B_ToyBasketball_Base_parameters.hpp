#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ToyBasketball_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function B_ToyBasketball_Base.B_ToyBasketball_Base_C.BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0110 (0x0110 - 0x0000)
struct B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000110, "Wrong size on B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent_0) == 0x000000, "Member 'B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent_0' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'B_ToyBasketball_Base_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function B_ToyBasketball_Base.B_ToyBasketball_Base_C.ExecuteUbergraph_B_ToyBasketball_Base
// 0x0380 (0x0380 - 0x0000)
struct B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  K2Node_Event_OwningPC;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NumTimesSummoned;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0060)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0150(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Event_StartPos;                             // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_EndPos;                               // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0290(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base) == 0x000010, "Wrong alignment on B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base");
static_assert(sizeof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base) == 0x000380, "Wrong size on B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, EntryPoint) == 0x000000, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, K2Node_Event_OwningPC) == 0x000008, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::K2Node_Event_OwningPC' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, K2Node_Event_NumTimesSummoned) == 0x000010, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::K2Node_Event_NumTimesSummoned' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_VLerp_ReturnValue) == 0x000018, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_BreakTransform_Location) == 0x000090, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_BreakTransform_Scale) == 0x0000C0, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0000D8, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000150, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, K2Node_Event_StartPos) == 0x000230, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::K2Node_Event_StartPos' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, K2Node_Event_EndPos) == 0x000248, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::K2Node_Event_EndPos' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, K2Node_ComponentBoundEvent_HitComponent) == 0x000260, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x000268, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, K2Node_ComponentBoundEvent_OtherComp) == 0x000270, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000278, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, K2Node_ComponentBoundEvent_Hit) == 0x000290, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base, CallFunc_IsValid_ReturnValue) == 0x000370, "Member 'B_ToyBasketball_Base_C_ExecuteUbergraph_B_ToyBasketball_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_ToyBasketball_Base.B_ToyBasketball_Base_C.InitializeToyInstance
// 0x0010 (0x0010 - 0x0000)
struct B_ToyBasketball_Base_C_InitializeToyInstance final
{
public:
	class AFortPlayerController*                  OwningPC;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumTimesSummoned;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ToyBasketball_Base_C_InitializeToyInstance) == 0x000008, "Wrong alignment on B_ToyBasketball_Base_C_InitializeToyInstance");
static_assert(sizeof(B_ToyBasketball_Base_C_InitializeToyInstance) == 0x000010, "Wrong size on B_ToyBasketball_Base_C_InitializeToyInstance");
static_assert(offsetof(B_ToyBasketball_Base_C_InitializeToyInstance, OwningPC) == 0x000000, "Member 'B_ToyBasketball_Base_C_InitializeToyInstance::OwningPC' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_InitializeToyInstance, NumTimesSummoned) == 0x000008, "Member 'B_ToyBasketball_Base_C_InitializeToyInstance::NumTimesSummoned' has a wrong offset!");

// Function B_ToyBasketball_Base.B_ToyBasketball_Base_C.OnHitTarget
// 0x0030 (0x0030 - 0x0000)
struct B_ToyBasketball_Base_C_OnHitTarget final
{
public:
	struct FVector                                StartPos;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPos;                                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ToyBasketball_Base_C_OnHitTarget) == 0x000008, "Wrong alignment on B_ToyBasketball_Base_C_OnHitTarget");
static_assert(sizeof(B_ToyBasketball_Base_C_OnHitTarget) == 0x000030, "Wrong size on B_ToyBasketball_Base_C_OnHitTarget");
static_assert(offsetof(B_ToyBasketball_Base_C_OnHitTarget, StartPos) == 0x000000, "Member 'B_ToyBasketball_Base_C_OnHitTarget::StartPos' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_OnHitTarget, EndPos) == 0x000018, "Member 'B_ToyBasketball_Base_C_OnHitTarget::EndPos' has a wrong offset!");

// Function B_ToyBasketball_Base.B_ToyBasketball_Base_C.PlayScoringCueAndDestruct
// 0x0050 (0x0050 - 0x0000)
struct B_ToyBasketball_Base_C_PlayScoringCueAndDestruct final
{
public:
	int32                                         ScoreAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetStartPos;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetEndPos;                                      // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CueToPlay;                                         // 0x0038(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct) == 0x000008, "Wrong alignment on B_ToyBasketball_Base_C_PlayScoringCueAndDestruct");
static_assert(sizeof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct) == 0x000050, "Wrong size on B_ToyBasketball_Base_C_PlayScoringCueAndDestruct");
static_assert(offsetof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct, ScoreAmount) == 0x000000, "Member 'B_ToyBasketball_Base_C_PlayScoringCueAndDestruct::ScoreAmount' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct, TargetStartPos) == 0x000008, "Member 'B_ToyBasketball_Base_C_PlayScoringCueAndDestruct::TargetStartPos' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct, TargetEndPos) == 0x000020, "Member 'B_ToyBasketball_Base_C_PlayScoringCueAndDestruct::TargetEndPos' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct, CueToPlay) == 0x000038, "Member 'B_ToyBasketball_Base_C_PlayScoringCueAndDestruct::CueToPlay' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct, Temp_int_Variable) == 0x00003C, "Member 'B_ToyBasketball_Base_C_PlayScoringCueAndDestruct::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct, Temp_bool_Variable) == 0x000040, "Member 'B_ToyBasketball_Base_C_PlayScoringCueAndDestruct::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000041, "Member 'B_ToyBasketball_Base_C_PlayScoringCueAndDestruct::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct, K2Node_Select_Default) == 0x000044, "Member 'B_ToyBasketball_Base_C_PlayScoringCueAndDestruct::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_ToyBasketball_Base_C_PlayScoringCueAndDestruct, CallFunc_Array_Get_Item) == 0x000048, "Member 'B_ToyBasketball_Base_C_PlayScoringCueAndDestruct::CallFunc_Array_Get_Item' has a wrong offset!");

}

