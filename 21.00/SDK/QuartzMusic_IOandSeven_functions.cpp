#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuartzMusic_IOandSeven

#include "Basic.hpp"

#include "QuartzMusic_IOandSeven_classes.hpp"
#include "QuartzMusic_IOandSeven_parameters.hpp"


namespace SDK
{

// Function QuartzMusic_IOandSeven.QuartzMusic_IOandSeven_C.OnDataTrackerUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void UQuartzMusic_IOandSeven_C::OnDataTrackerUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuartzMusic_IOandSeven_C", "OnDataTrackerUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuartzMusic_IOandSeven.QuartzMusic_IOandSeven_C.MIx State
// (BlueprintCallable, BlueprintEvent)

void UQuartzMusic_IOandSeven_C::MIx_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuartzMusic_IOandSeven_C", "MIx State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuartzMusic_IOandSeven.QuartzMusic_IOandSeven_C.GetUnawareValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UQuartzMusic_IOandSeven_C::GetUnawareValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuartzMusic_IOandSeven_C", "GetUnawareValue");

	Params::QuartzMusic_IOandSeven_C_GetUnawareValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function QuartzMusic_IOandSeven.QuartzMusic_IOandSeven_C.GetSevenValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UQuartzMusic_IOandSeven_C::GetSevenValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuartzMusic_IOandSeven_C", "GetSevenValue");

	Params::QuartzMusic_IOandSeven_C_GetSevenValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function QuartzMusic_IOandSeven.QuartzMusic_IOandSeven_C.GetIOValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UQuartzMusic_IOandSeven_C::GetIOValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuartzMusic_IOandSeven_C", "GetIOValue");

	Params::QuartzMusic_IOandSeven_C_GetIOValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function QuartzMusic_IOandSeven.QuartzMusic_IOandSeven_C.GetDataTrackerParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   DataTrackerIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReleaseSpeed                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuartzMusic_IOandSeven_C::GetDataTrackerParameter(int32 DataTrackerIndex, float* ReleaseSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuartzMusic_IOandSeven_C", "GetDataTrackerParameter");

	Params::QuartzMusic_IOandSeven_C_GetDataTrackerParameter Parms{};

	Parms.DataTrackerIndex = DataTrackerIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (ReleaseSpeed != nullptr)
		*ReleaseSpeed = Parms.ReleaseSpeed;
}


// Function QuartzMusic_IOandSeven.QuartzMusic_IOandSeven_C.GetBaseValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UQuartzMusic_IOandSeven_C::GetBaseValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuartzMusic_IOandSeven_C", "GetBaseValue");

	Params::QuartzMusic_IOandSeven_C_GetBaseValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function QuartzMusic_IOandSeven.QuartzMusic_IOandSeven_C.Get Boss Value
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UQuartzMusic_IOandSeven_C::Get_Boss_Value()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuartzMusic_IOandSeven_C", "Get Boss Value");

	Params::QuartzMusic_IOandSeven_C_Get_Boss_Value Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function QuartzMusic_IOandSeven.QuartzMusic_IOandSeven_C.ExecuteUbergraph_QuartzMusic_IOandSeven
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuartzMusic_IOandSeven_C::ExecuteUbergraph_QuartzMusic_IOandSeven(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuartzMusic_IOandSeven_C", "ExecuteUbergraph_QuartzMusic_IOandSeven");

	Params::QuartzMusic_IOandSeven_C_ExecuteUbergraph_QuartzMusic_IOandSeven Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

