#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerRiderComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PlayerRiderComponent.PlayerRiderComponent_C.EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6
// 0x00B0 (0x00B0 - 0x0000)
struct PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6");
static_assert(sizeof(PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6) == 0x0000B0, "Wrong size on PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6");
static_assert(offsetof(PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6, Payload) == 0x000000, "Member 'PlayerRiderComponent_C_EventReceived_3DA19BC649FB853BA2CC0FADFF8D08F6::Payload' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.EventReceived_E5B5FB5340DB5660002329825657B406
// 0x00B0 (0x00B0 - 0x0000)
struct PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406");
static_assert(sizeof(PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406) == 0x0000B0, "Wrong size on PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406");
static_assert(offsetof(PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406, Payload) == 0x000000, "Member 'PlayerRiderComponent_C_EventReceived_E5B5FB5340DB5660002329825657B406::Payload' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.ExecuteUbergraph_PlayerRiderComponent
// 0x0770 (0x0770 - 0x0000)
struct PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0010(0x00B0)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00D0(0x00B0)()
	struct FGameplayEventData                     K2Node_CustomEvent_Payload_1;                      // 0x0180(0x00B0)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URidableComponent*                      K2Node_Event_Ridable_1;                            // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URidableComponent*                      K2Node_Event_Ridable;                              // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue; // 0x0278(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0280(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_TargetObject;                   // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UseAltRidingMessage;            // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRidingGeneric_Interafce_C> K2Node_DynamicCast_AsRiding_Generic_Interafce;     // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ToggleRiding_bChangedRiding;              // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_targetHealth;                   // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Name;                           // 0x0378(0x0018)()
	struct FSlateBrush                            K2Node_CustomEvent_Icon;                           // 0x0390(0x00C0)()
	class AActor*                                 K2Node_CustomEvent_Ridable_1;                      // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Ridable;                        // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0460(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopRidingActor_ReturnValue;              // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x047B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0488(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityAsync_WaitGameplayEvent*        CallFunc_WaitGameplayEventToActor_ReturnValue;     // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityAsync_WaitGameplayEvent*        CallFunc_WaitGameplayEventToActor_ReturnValue_1;   // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x04BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopRidingActor_ReturnValue_1;            // 0x04BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable_1;                            // 0x04C8(0x00B0)()
	class UAbilityAsync_WaitGameplayTagAdded*     CallFunc_WaitGameplayTagAddToActor_ReturnValue;    // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityAsync_WaitGameplayTagAdded*     CallFunc_WaitGameplayTagAddToActor_ReturnValue_1;  // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0598(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x05A8(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x068A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68B[0x1];                                      // 0x068B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0708(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0740(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestIfValidForRidingAttempt_Success;      // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_759[0x7];                                      // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_TestIfValidForRidingAttempt_TargetObject; // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TestIfValidForRidingAttempt_UseAltRidingMessage; // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent) == 0x000010, "Wrong alignment on PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent");
static_assert(sizeof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent) == 0x000770, "Wrong size on PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, EntryPoint) == 0x000000, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Payload) == 0x000010, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_struct_Variable) == 0x0000D0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Payload_1) == 0x000180, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Payload_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue) == 0x000230, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_bool_IsClosed_Variable) == 0x000238, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue) == 0x000239, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_HasAuthority_ReturnValue) == 0x00023A, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_bool_Has_Been_Initd_Variable) == 0x00023B, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_Event_Ridable_1) == 0x000240, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_Event_Ridable_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_Event_Ridable) == 0x000248, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_Event_Ridable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000250, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsFort_Pawn) == 0x000258, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess) == 0x000260, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000268, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x000270, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue) == 0x000278, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BP_FortApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000280, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_3) == 0x000290, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x000298, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0002A0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_1) == 0x0002A8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetVelocity_ReturnValue) == 0x0002B0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002C8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_Normal_ReturnValue) == 0x0002E0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0002F8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_TargetObject) == 0x000310, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_TargetObject' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_UseAltRidingMessage) == 0x000318, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_UseAltRidingMessage' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000320, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_Add_VectorVector_ReturnValue) == 0x000338, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsRiding_Generic_Interafce) == 0x000350, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsRiding_Generic_Interafce' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_2) == 0x000360, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_AsActor) == 0x000368, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_DynamicCast_bSuccess_3) == 0x000370, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_ToggleRiding_bChangedRiding) == 0x000371, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_ToggleRiding_bChangedRiding' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_targetHealth) == 0x000374, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_targetHealth' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Name) == 0x000378, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Icon) == 0x000390, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Ridable_1) == 0x000450, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Ridable_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Ridable) == 0x000458, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Ridable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x000460, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_Character) == 0x000470, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_PrevMovementMode) == 0x000478, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CustomEvent_PreviousCustomMode) == 0x000479, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_StopRidingActor_ReturnValue) == 0x00047A, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_StopRidingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_1) == 0x00047B, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_2) == 0x00047C, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_4) == 0x000480, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x000488, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_WaitGameplayEventToActor_ReturnValue) == 0x000498, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_WaitGameplayEventToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_3) == 0x0004A0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_WaitGameplayEventToActor_ReturnValue_1) == 0x0004A8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_WaitGameplayEventToActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_5) == 0x0004B0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_4) == 0x0004B8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_HasAuthority_ReturnValue_1) == 0x0004B9, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_5) == 0x0004BA, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_StopRidingActor_ReturnValue_1) == 0x0004BB, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_StopRidingActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_GetOwner_ReturnValue_6) == 0x0004C0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_struct_Variable_1) == 0x0004C8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_WaitGameplayTagAddToActor_ReturnValue) == 0x000578, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_WaitGameplayTagAddToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_6) == 0x000580, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_WaitGameplayTagAddToActor_ReturnValue_1) == 0x000588, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_WaitGameplayTagAddToActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_IsValid_ReturnValue_7) == 0x000590, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, Temp_object_Variable) == 0x000598, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_SphereTraceSingle_OutHit) == 0x0005A8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_SphereTraceSingle_ReturnValue) == 0x000688, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_bBlockingHit) == 0x000689, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_bInitialOverlap) == 0x00068A, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_Time) == 0x00068C, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_Distance) == 0x000690, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_Location) == 0x000698, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_ImpactPoint) == 0x0006B0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_Normal) == 0x0006C8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_ImpactNormal) == 0x0006E0, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_PhysMat) == 0x0006F8, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_HitActor) == 0x000700, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_HitComponent) == 0x000708, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_HitBoneName) == 0x000710, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_BoneName) == 0x000714, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_HitItem) == 0x000718, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_ElementIndex) == 0x00071C, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_FaceIndex) == 0x000720, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_TraceStart) == 0x000728, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_BreakHitResult_TraceEnd) == 0x000740, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_TestIfValidForRidingAttempt_Success) == 0x000758, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_TestIfValidForRidingAttempt_Success' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_TestIfValidForRidingAttempt_TargetObject) == 0x000760, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_TestIfValidForRidingAttempt_TargetObject' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent, CallFunc_TestIfValidForRidingAttempt_UseAltRidingMessage) == 0x000768, "Member 'PlayerRiderComponent_C_ExecuteUbergraph_PlayerRiderComponent::CallFunc_TestIfValidForRidingAttempt_UseAltRidingMessage' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.GetJumpInfo
// 0x0038 (0x0038 - 0x0000)
struct PlayerRiderComponent_C_GetJumpInfo final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        TargetActorComponent;                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpAttach_GroundHeightMin;                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpAttach_GroundHeightBuffer;                     // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAltRidingMessage;                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCreatureBaseNonRidableComponent_C*     CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreatureBaseRidableComponent_C*        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_GetJumpInfo) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_GetJumpInfo");
static_assert(sizeof(PlayerRiderComponent_C_GetJumpInfo) == 0x000038, "Wrong size on PlayerRiderComponent_C_GetJumpInfo");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, TargetActor) == 0x000000, "Member 'PlayerRiderComponent_C_GetJumpInfo::TargetActor' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, TargetActorComponent) == 0x000008, "Member 'PlayerRiderComponent_C_GetJumpInfo::TargetActorComponent' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, JumpAttach_GroundHeightMin) == 0x000010, "Member 'PlayerRiderComponent_C_GetJumpInfo::JumpAttach_GroundHeightMin' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, JumpAttach_GroundHeightBuffer) == 0x000014, "Member 'PlayerRiderComponent_C_GetJumpInfo::JumpAttach_GroundHeightBuffer' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, UseAltRidingMessage) == 0x000018, "Member 'PlayerRiderComponent_C_GetJumpInfo::UseAltRidingMessage' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'PlayerRiderComponent_C_GetJumpInfo::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000028, "Member 'PlayerRiderComponent_C_GetJumpInfo::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'PlayerRiderComponent_C_GetJumpInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetJumpInfo, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'PlayerRiderComponent_C_GetJumpInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.GetRidingInfoFromTarget
// 0x000C (0x000C - 0x0000)
struct PlayerRiderComponent_C_GetRidingInfoFromTarget final
{
public:
	float                                         JumpAttachGroundHeightMin;                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpAttachGroundHeightBuffer;                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsesAltRidingMessage;                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_GetRidingInfoFromTarget) == 0x000004, "Wrong alignment on PlayerRiderComponent_C_GetRidingInfoFromTarget");
static_assert(sizeof(PlayerRiderComponent_C_GetRidingInfoFromTarget) == 0x00000C, "Wrong size on PlayerRiderComponent_C_GetRidingInfoFromTarget");
static_assert(offsetof(PlayerRiderComponent_C_GetRidingInfoFromTarget, JumpAttachGroundHeightMin) == 0x000000, "Member 'PlayerRiderComponent_C_GetRidingInfoFromTarget::JumpAttachGroundHeightMin' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetRidingInfoFromTarget, JumpAttachGroundHeightBuffer) == 0x000004, "Member 'PlayerRiderComponent_C_GetRidingInfoFromTarget::JumpAttachGroundHeightBuffer' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_GetRidingInfoFromTarget, UsesAltRidingMessage) == 0x000008, "Member 'PlayerRiderComponent_C_GetRidingInfoFromTarget::UsesAltRidingMessage' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.HandleStartedRiding
// 0x0008 (0x0008 - 0x0000)
struct PlayerRiderComponent_C_HandleStartedRiding final
{
public:
	class URidableComponent*                      Ridable;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_HandleStartedRiding) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_HandleStartedRiding");
static_assert(sizeof(PlayerRiderComponent_C_HandleStartedRiding) == 0x000008, "Wrong size on PlayerRiderComponent_C_HandleStartedRiding");
static_assert(offsetof(PlayerRiderComponent_C_HandleStartedRiding, Ridable) == 0x000000, "Member 'PlayerRiderComponent_C_HandleStartedRiding::Ridable' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.HandleStoppedRiding
// 0x0008 (0x0008 - 0x0000)
struct PlayerRiderComponent_C_HandleStoppedRiding final
{
public:
	class URidableComponent*                      Ridable;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_HandleStoppedRiding) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_HandleStoppedRiding");
static_assert(sizeof(PlayerRiderComponent_C_HandleStoppedRiding) == 0x000008, "Wrong size on PlayerRiderComponent_C_HandleStoppedRiding");
static_assert(offsetof(PlayerRiderComponent_C_HandleStoppedRiding, Ridable) == 0x000000, "Member 'PlayerRiderComponent_C_HandleStoppedRiding::Ridable' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.MovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct PlayerRiderComponent_C_MovementModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_MovementModeChanged) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_MovementModeChanged");
static_assert(sizeof(PlayerRiderComponent_C_MovementModeChanged) == 0x000010, "Wrong size on PlayerRiderComponent_C_MovementModeChanged");
static_assert(offsetof(PlayerRiderComponent_C_MovementModeChanged, Character) == 0x000000, "Member 'PlayerRiderComponent_C_MovementModeChanged::Character' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_MovementModeChanged, PrevMovementMode) == 0x000008, "Member 'PlayerRiderComponent_C_MovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_MovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'PlayerRiderComponent_C_MovementModeChanged::PreviousCustomMode' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.RiderUIEndClient
// 0x0008 (0x0008 - 0x0000)
struct PlayerRiderComponent_C_RiderUIEndClient final
{
public:
	class AActor*                                 Ridable;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_RiderUIEndClient) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_RiderUIEndClient");
static_assert(sizeof(PlayerRiderComponent_C_RiderUIEndClient) == 0x000008, "Wrong size on PlayerRiderComponent_C_RiderUIEndClient");
static_assert(offsetof(PlayerRiderComponent_C_RiderUIEndClient, Ridable) == 0x000000, "Member 'PlayerRiderComponent_C_RiderUIEndClient::Ridable' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.RiderUIStartClient
// 0x00F0 (0x00F0 - 0x0000)
struct PlayerRiderComponent_C_RiderUIStartClient final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Icon;                                              // 0x0020(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 Ridable;                                           // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_RiderUIStartClient) == 0x000010, "Wrong alignment on PlayerRiderComponent_C_RiderUIStartClient");
static_assert(sizeof(PlayerRiderComponent_C_RiderUIStartClient) == 0x0000F0, "Wrong size on PlayerRiderComponent_C_RiderUIStartClient");
static_assert(offsetof(PlayerRiderComponent_C_RiderUIStartClient, Name_0) == 0x000000, "Member 'PlayerRiderComponent_C_RiderUIStartClient::Name_0' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_RiderUIStartClient, Icon) == 0x000020, "Member 'PlayerRiderComponent_C_RiderUIStartClient::Icon' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_RiderUIStartClient, Ridable) == 0x0000E0, "Member 'PlayerRiderComponent_C_RiderUIStartClient::Ridable' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.SetTargetHealth
// 0x0004 (0x0004 - 0x0000)
struct PlayerRiderComponent_C_SetTargetHealth final
{
public:
	float                                         targetHealth_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_SetTargetHealth) == 0x000004, "Wrong alignment on PlayerRiderComponent_C_SetTargetHealth");
static_assert(sizeof(PlayerRiderComponent_C_SetTargetHealth) == 0x000004, "Wrong size on PlayerRiderComponent_C_SetTargetHealth");
static_assert(offsetof(PlayerRiderComponent_C_SetTargetHealth, targetHealth_0) == 0x000000, "Member 'PlayerRiderComponent_C_SetTargetHealth::targetHealth_0' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.TestIfValidForRidingAttempt
// 0x00D0 (0x00D0 - 0x0000)
struct PlayerRiderComponent_C_TestIfValidForRidingAttempt final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                TargetObject;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAltRidingMessage;                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_DynamicCast_AsFort_AIPawn;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_GetJumpInfo_TargetActorComponent;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetJumpInfo_JumpAttach_GroundHeightMin;   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetJumpInfo_JumpAttach_GroundHeightBuffer; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJumpInfo_UseAltRidingMessage;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_TestIfValidForRidingAttempt) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_TestIfValidForRidingAttempt");
static_assert(sizeof(PlayerRiderComponent_C_TestIfValidForRidingAttempt) == 0x0000D0, "Wrong size on PlayerRiderComponent_C_TestIfValidForRidingAttempt");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, Object) == 0x000000, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::Object' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, Success) == 0x000008, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::Success' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, TargetObject) == 0x000010, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::TargetObject' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, UseAltRidingMessage) == 0x000018, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::UseAltRidingMessage' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, Temp_bool_Variable) == 0x000019, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, K2Node_DynamicCast_AsFort_AIPawn) == 0x000020, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::K2Node_DynamicCast_AsFort_AIPawn' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetJumpInfo_TargetActorComponent) == 0x000048, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetJumpInfo_TargetActorComponent' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetJumpInfo_JumpAttach_GroundHeightMin) == 0x000050, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetJumpInfo_JumpAttach_GroundHeightMin' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetJumpInfo_JumpAttach_GroundHeightBuffer) == 0x000054, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetJumpInfo_JumpAttach_GroundHeightBuffer' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetJumpInfo_UseAltRidingMessage) == 0x000058, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetJumpInfo_UseAltRidingMessage' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_X) == 0x00005C, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Y) == 0x000060, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Z) == 0x000064, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, K2Node_Select_Default) == 0x000070, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000078, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00007C, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_X_1) == 0x000084, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Y_1) == 0x000088, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Z_1) == 0x00008C, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x000090, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000094, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000098, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_X_2) == 0x0000B0, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Y_2) == 0x0000B4, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BreakVector_Z_2) == 0x0000B8, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000C0, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0000C4, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C8, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BooleanAND_ReturnValue) == 0x0000C9, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_TestIfValidForRidingAttempt, CallFunc_BooleanAND_ReturnValue_1) == 0x0000CA, "Member 'PlayerRiderComponent_C_TestIfValidForRidingAttempt::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.ToggleRiding
// 0x0068 (0x0068 - 0x0000)
struct PlayerRiderComponent_C_ToggleRiding final
{
public:
	class AActor*                                 PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRide;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChangedRiding;                                    // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URiderComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopRidingActor_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartRidingActor_ReturnValue;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UControllingRiderComponent*             K2Node_DynamicCast_AsControlling_Rider_Component;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_ToggleRiding) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_ToggleRiding");
static_assert(sizeof(PlayerRiderComponent_C_ToggleRiding) == 0x000068, "Wrong size on PlayerRiderComponent_C_ToggleRiding");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, PlayerPawn) == 0x000000, "Member 'PlayerRiderComponent_C_ToggleRiding::PlayerPawn' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, Target) == 0x000008, "Member 'PlayerRiderComponent_C_ToggleRiding::Target' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, ShouldRide) == 0x000010, "Member 'PlayerRiderComponent_C_ToggleRiding::ShouldRide' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, bChangedRiding) == 0x000011, "Member 'PlayerRiderComponent_C_ToggleRiding::bChangedRiding' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000018, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1) == 0x000030, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000050, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_StopRidingActor_ReturnValue) == 0x000051, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_StopRidingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_StartRidingActor_ReturnValue) == 0x000052, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_StartRidingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_AsControlling_Rider_Component) == 0x000058, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_AsControlling_Rider_Component' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'PlayerRiderComponent_C_ToggleRiding::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, Temp_bool_Variable) == 0x000062, "Member 'PlayerRiderComponent_C_ToggleRiding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000063, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_Not_PreBool_ReturnValue) == 0x000064, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, Temp_bool_Variable_1) == 0x000065, "Member 'PlayerRiderComponent_C_ToggleRiding::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRiding, CallFunc_Not_PreBool_ReturnValue_1) == 0x000066, "Member 'PlayerRiderComponent_C_ToggleRiding::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function PlayerRiderComponent.PlayerRiderComponent_C.ToggleRidingOnServer
// 0x0010 (0x0010 - 0x0000)
struct PlayerRiderComponent_C_ToggleRidingOnServer final
{
public:
	class UObject*                                TargetObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAltRidingMessage;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerRiderComponent_C_ToggleRidingOnServer) == 0x000008, "Wrong alignment on PlayerRiderComponent_C_ToggleRidingOnServer");
static_assert(sizeof(PlayerRiderComponent_C_ToggleRidingOnServer) == 0x000010, "Wrong size on PlayerRiderComponent_C_ToggleRidingOnServer");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRidingOnServer, TargetObject) == 0x000000, "Member 'PlayerRiderComponent_C_ToggleRidingOnServer::TargetObject' has a wrong offset!");
static_assert(offsetof(PlayerRiderComponent_C_ToggleRidingOnServer, UseAltRidingMessage) == 0x000008, "Member 'PlayerRiderComponent_C_ToggleRidingOnServer::UseAltRidingMessage' has a wrong offset!");

}

