#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_Prop_SneakySnowmanV2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Athena_Prop_SneakySnowmanV2.Athena_Prop_SneakySnowmanV2_C
// 0x0158 (0x0FC8 - 0x0E70)
class AAthena_Prop_SneakySnowmanV2_C : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      OverlapCheck;                                      // 0x0E78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_RotationAlpha_4116426F45EB954F1A0ACDA6058E6CCC; // 0x0E80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_4116426F45EB954F1A0ACDA6058E6CCC; // 0x0E84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E85[0x3];                                      // 0x0E85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0E88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_ApplyEnemySnowman;                              // 0x0E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         ShouldSnowmanEnemies;                              // 0x0E98(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPickupAthena*                      PickupAthena;                                      // 0x0EC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Ignored_Actors;                                    // 0x0EC8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      LineTraceObjects;                                  // 0x0ED8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          DestroyAfterHit;                                   // 0x0EE8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE9[0x3];                                      // 0x0EE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InitialGravityScale;                               // 0x0EEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GamestateLoaded;                                   // 0x0EF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF1[0x7];                                      // 0x0EF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0EF8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         FallHeightToDestroy;                               // 0x0F08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ShouldSpawnSnowball;                               // 0x0F30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Dead;                                              // 0x0F58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F59[0x7];                                      // 0x0F59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartLocation;                                     // 0x0F60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0F78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ApplicationEffect;                                 // 0x0F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Jumpinto;                                          // 0x0F98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             JumpInSound;                                       // 0x0FA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaterTraceRadius;                                  // 0x0FA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LandscapeExtinguishRadius;                         // 0x0FAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaterMagnitude;                                    // 0x0FB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB4[0x4];                                      // 0x0FB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      WaterTraceObjectTypes;                             // 0x0FB8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Apply_Water_In_Radius();
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted);
	void BndEvt__OverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void DisableCollision();
	void ExecuteUbergraph_Athena_Prop_SneakySnowmanV2(int32 EntryPoint);
	void GetMaterialInt(int32* MatInt);
	void GetNewSnowmanTransform(struct FTransform* Transform);
	void MovePlayer(class AActor* Player);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnGaveSneakySnowman();
	void OnRep_bSimulationRunning();
	void OnSpawned_NotOnPawn();
	void OnStartedJumpingIn();
	void OnTookSneakySnowman();
	void PlaylistLoaded(class FName PlaylistName, const struct FGameplayTagContainer& PlaylistContextTags);
	void ReceiveBeginPlay();
	void SpawnParticles();
	void SpawnParticlesMulticast();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeout();
	void TraceStartAndEnd(struct FVector* Start, struct FVector* End);
	void UserConstructionScript();
	void WobbleAnims();
	void WorldPropSupportDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Athena_Prop_SneakySnowmanV2_C">();
	}
	static class AAthena_Prop_SneakySnowmanV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthena_Prop_SneakySnowmanV2_C>();
	}
};
static_assert(alignof(AAthena_Prop_SneakySnowmanV2_C) == 0x000008, "Wrong alignment on AAthena_Prop_SneakySnowmanV2_C");
static_assert(sizeof(AAthena_Prop_SneakySnowmanV2_C) == 0x000FC8, "Wrong size on AAthena_Prop_SneakySnowmanV2_C");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, UberGraphFrame) == 0x000E70, "Member 'AAthena_Prop_SneakySnowmanV2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, OverlapCheck) == 0x000E78, "Member 'AAthena_Prop_SneakySnowmanV2_C::OverlapCheck' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Timeline_0_RotationAlpha_4116426F45EB954F1A0ACDA6058E6CCC) == 0x000E80, "Member 'AAthena_Prop_SneakySnowmanV2_C::Timeline_0_RotationAlpha_4116426F45EB954F1A0ACDA6058E6CCC' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Timeline_0__Direction_4116426F45EB954F1A0ACDA6058E6CCC) == 0x000E84, "Member 'AAthena_Prop_SneakySnowmanV2_C::Timeline_0__Direction_4116426F45EB954F1A0ACDA6058E6CCC' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Timeline_0) == 0x000E88, "Member 'AAthena_Prop_SneakySnowmanV2_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, GE_ApplyEnemySnowman) == 0x000E90, "Member 'AAthena_Prop_SneakySnowmanV2_C::GE_ApplyEnemySnowman' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, ShouldSnowmanEnemies) == 0x000E98, "Member 'AAthena_Prop_SneakySnowmanV2_C::ShouldSnowmanEnemies' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, PickupAthena) == 0x000EC0, "Member 'AAthena_Prop_SneakySnowmanV2_C::PickupAthena' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Ignored_Actors) == 0x000EC8, "Member 'AAthena_Prop_SneakySnowmanV2_C::Ignored_Actors' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, LineTraceObjects) == 0x000ED8, "Member 'AAthena_Prop_SneakySnowmanV2_C::LineTraceObjects' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, DestroyAfterHit) == 0x000EE8, "Member 'AAthena_Prop_SneakySnowmanV2_C::DestroyAfterHit' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, InitialGravityScale) == 0x000EEC, "Member 'AAthena_Prop_SneakySnowmanV2_C::InitialGravityScale' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, GamestateLoaded) == 0x000EF0, "Member 'AAthena_Prop_SneakySnowmanV2_C::GamestateLoaded' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, ObjectTypes) == 0x000EF8, "Member 'AAthena_Prop_SneakySnowmanV2_C::ObjectTypes' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, FallHeightToDestroy) == 0x000F08, "Member 'AAthena_Prop_SneakySnowmanV2_C::FallHeightToDestroy' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, ShouldSpawnSnowball) == 0x000F30, "Member 'AAthena_Prop_SneakySnowmanV2_C::ShouldSpawnSnowball' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Dead) == 0x000F58, "Member 'AAthena_Prop_SneakySnowmanV2_C::Dead' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, StartLocation) == 0x000F60, "Member 'AAthena_Prop_SneakySnowmanV2_C::StartLocation' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, EndLocation) == 0x000F78, "Member 'AAthena_Prop_SneakySnowmanV2_C::EndLocation' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, ApplicationEffect) == 0x000F90, "Member 'AAthena_Prop_SneakySnowmanV2_C::ApplicationEffect' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Jumpinto) == 0x000F98, "Member 'AAthena_Prop_SneakySnowmanV2_C::Jumpinto' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, JumpInSound) == 0x000FA0, "Member 'AAthena_Prop_SneakySnowmanV2_C::JumpInSound' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, WaterTraceRadius) == 0x000FA8, "Member 'AAthena_Prop_SneakySnowmanV2_C::WaterTraceRadius' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, LandscapeExtinguishRadius) == 0x000FAC, "Member 'AAthena_Prop_SneakySnowmanV2_C::LandscapeExtinguishRadius' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, WaterMagnitude) == 0x000FB0, "Member 'AAthena_Prop_SneakySnowmanV2_C::WaterMagnitude' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, WaterTraceObjectTypes) == 0x000FB8, "Member 'AAthena_Prop_SneakySnowmanV2_C::WaterTraceObjectTypes' has a wrong offset!");

}

