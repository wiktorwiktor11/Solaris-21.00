#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassS21UI

#include "Basic.hpp"

#include "BattlePassS21UI_classes.hpp"
#include "BattlePassS21UI_parameters.hpp"


namespace SDK
{

// Function BattlePassS21UI.FortBattlePassTutorialTooltipS21.HideTooltip
// (Event, Protected, BlueprintEvent)

void UFortBattlePassTutorialTooltipS21::HideTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassTutorialTooltipS21", "HideTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS21UI.FortBattlePassTutorialTooltipS21.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)

void UFortBattlePassTutorialTooltipS21::SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassTutorialTooltipS21", "SetText");

	Params::FortBattlePassTutorialTooltipS21_SetText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS21UI.FortBattlePassTutorialTooltipS21.ShowTooltip
// (Event, Protected, BlueprintEvent)

void UFortBattlePassTutorialTooltipS21::ShowTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassTutorialTooltipS21", "ShowTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS21UI.BattlePassLandingPageS21.OnBattlePassGiftingAllowed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bGiftingAllowed                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassLandingPageS21::OnBattlePassGiftingAllowed(const bool bGiftingAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassLandingPageS21", "OnBattlePassGiftingAllowed");

	Params::BattlePassLandingPageS21_OnBattlePassGiftingAllowed Parms{};

	Parms.bGiftingAllowed = bGiftingAllowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassLandingPageS21.OnBattlePassOwned
// (Event, Public, BlueprintEvent)

void UBattlePassLandingPageS21::OnBattlePassOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassLandingPageS21", "OnBattlePassOwned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS21UI.BattlePassLandingPageS21.OnBattlePassSubscriptionAllowed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSubscriptionAllowed                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassLandingPageS21::OnBattlePassSubscriptionAllowed(const bool bSubscriptionAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassLandingPageS21", "OnBattlePassSubscriptionAllowed");

	Params::BattlePassLandingPageS21_OnBattlePassSubscriptionAllowed Parms{};

	Parms.bSubscriptionAllowed = bSubscriptionAllowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassRewardPageS21.OnInitForPageType
// (Event, Public, BlueprintEvent)
// Parameters:
// ERewardPageType                         InRewardPageType                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS21::OnInitForPageType(const ERewardPageType InRewardPageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS21", "OnInitForPageType");

	Params::BattlePassRewardPageS21_OnInitForPageType Parms{};

	Parms.InRewardPageType = InRewardPageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassRewardPageS21.OnInputMethodChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECommonInputType                        InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS21::OnInputMethodChanged(const ECommonInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS21", "OnInputMethodChanged");

	Params::BattlePassRewardPageS21_OnInputMethodChanged Parms{};

	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassRewardPageS21.OnPageChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   PageNumber                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS21::OnPageChanged(const int32 PageNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS21", "OnPageChanged");

	Params::BattlePassRewardPageS21_OnPageChanged Parms{};

	Parms.PageNumber = PageNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.HandleClaimRewardComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   OfferTemplateIdList                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::HandleClaimRewardComplete(const bool bSuccess, const TArray<class FString>& OfferTemplateIdList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "HandleClaimRewardComplete");

	Params::BattlePassScreenS21_HandleClaimRewardComplete Parms{};

	Parms.bSuccess = bSuccess;
	Parms.OfferTemplateIdList = std::move(OfferTemplateIdList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS21UI.BattlePassScreenS21.HandleSwitcherVisibilityShown
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS21::HandleSwitcherVisibilityShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "HandleSwitcherVisibilityShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS21UI.BattlePassScreenS21.OnBattlePassOwned
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenS21::OnBattlePassOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnBattlePassOwned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS21UI.BattlePassScreenS21.OnInsufficientFunds
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBattlePassCurrencyType                 CurrencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::OnInsufficientFunds(const EBattlePassCurrencyType CurrencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnInsufficientFunds");

	Params::BattlePassScreenS21_OnInsufficientFunds Parms{};

	Parms.CurrencyType = CurrencyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.OnInsufficientResource
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortPersistentResourceItemDefinition*PersistentResource                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::OnInsufficientResource(const class UFortPersistentResourceItemDefinition* PersistentResource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnInsufficientResource");

	Params::BattlePassScreenS21_OnInsufficientResource Parms{};

	Parms.PersistentResource = PersistentResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.OnItemDelayed
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTimespan                        Delay                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::OnItemDelayed(const struct FTimespan& Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnItemDelayed");

	Params::BattlePassScreenS21_OnItemDelayed Parms{};

	Parms.Delay = std::move(Delay);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.OnLevelChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::OnLevelChanged(const int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnLevelChanged");

	Params::BattlePassScreenS21_OnLevelChanged Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.OnSetClaimedRewardInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::OnSetClaimedRewardInfo(const int32 OwnedRewards, const int32 TotalRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnSetClaimedRewardInfo");

	Params::BattlePassScreenS21_OnSetClaimedRewardInfo Parms{};

	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.OnSetDynamicInput
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBattlePassInputs                       InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBattlePassInputData*             InputData                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::OnSetDynamicInput(const EBattlePassInputs InputType, const class UBattlePassInputData* InputData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnSetDynamicInput");

	Params::BattlePassScreenS21_OnSetDynamicInput Parms{};

	Parms.InputType = InputType;
	Parms.InputData = InputData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.OnSetItemPrice
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Cost                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBattlePassCurrencyType                 CurrencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::OnSetItemPrice(const int32 Cost, const EBattlePassCurrencyType CurrencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnSetItemPrice");

	Params::BattlePassScreenS21_OnSetItemPrice Parms{};

	Parms.Cost = Cost;
	Parms.CurrencyType = CurrencyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.OnSetPrerequisiteInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NeededRewards                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowPrerequisiteLock                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::OnSetPrerequisiteInfo(const class FText& Description, const int32 OwnedRewards, const int32 NeededRewards, const bool bShowPrerequisiteLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnSetPrerequisiteInfo");

	Params::BattlePassScreenS21_OnSetPrerequisiteInfo Parms{};

	Parms.Description = std::move(Description);
	Parms.OwnedRewards = OwnedRewards;
	Parms.NeededRewards = NeededRewards;
	Parms.bShowPrerequisiteLock = bShowPrerequisiteLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.OnSetResourcePrice
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Cost                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPersistentResourceItemDefinition*PersistentResource                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::OnSetResourcePrice(const int32 Cost, const class UFortPersistentResourceItemDefinition* PersistentResource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnSetResourcePrice");

	Params::BattlePassScreenS21_OnSetResourcePrice Parms{};

	Parms.Cost = Cost;
	Parms.PersistentResource = PersistentResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.OnTransitionItemDetails
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bTransitionForward                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS21::OnTransitionItemDetails(const bool bTransitionForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OnTransitionItemDetails");

	Params::BattlePassScreenS21_OnTransitionItemDetails Parms{};

	Parms.bTransitionForward = bTransitionForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.BattlePassScreenS21.OverviewShowAnimationFinished
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS21::OverviewShowAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "OverviewShowAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS21UI.BattlePassScreenS21.GetQuestPageDelay
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UBattlePassScreenS21::GetQuestPageDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "GetQuestPageDelay");

	Params::BattlePassScreenS21_GetQuestPageDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS21UI.BattlePassScreenS21.IsSeasonalCustomizationItemOwned
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassScreenS21::IsSeasonalCustomizationItemOwned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS21", "IsSeasonalCustomizationItemOwned");

	Params::BattlePassScreenS21_IsSeasonalCustomizationItemOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS21UI.FortBattlePassResourcesWidgetS21.OnBattleStarRewardsSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Rewards                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBattlePassResourcesWidgetS21::OnBattleStarRewardsSet(const int32 Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassResourcesWidgetS21", "OnBattleStarRewardsSet");

	Params::FortBattlePassResourcesWidgetS21_OnBattleStarRewardsSet Parms{};

	Parms.Rewards = Rewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS21UI.FortBattlePassResourcesWidgetS21.OnStylePointsRewardsSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Rewards                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBattlePassResourcesWidgetS21::OnStylePointsRewardsSet(const int32 Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassResourcesWidgetS21", "OnStylePointsRewardsSet");

	Params::FortBattlePassResourcesWidgetS21_OnStylePointsRewardsSet Parms{};

	Parms.Rewards = Rewards;

	UObject::ProcessEvent(Func, &Parms);
}

}

