#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Parallel_Graffiti

#include "Basic.hpp"

#include "Parent_BuildingWall_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Parallel_Graffiti.Parallel_Graffiti_C
// 0x0028 (0x0FD8 - 0x0FB0)
class AParallel_Graffiti_C final : public AParent_BuildingWall_C
{
public:
	float                                         Graffiti_FlipBookSet;                              // 0x0FB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB4[0x4];                                      // 0x0FB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Graffiti;                                          // 0x0FB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     GraffitiMaterial;                                  // 0x0FC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0FC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BackgroundGraffitiScale;                           // 0x0FCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Background_Graffiti__Decal_;                       // 0x0FD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Parallel_Graffiti_C">();
	}
	static class AParallel_Graffiti_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AParallel_Graffiti_C>();
	}
};
static_assert(alignof(AParallel_Graffiti_C) == 0x000008, "Wrong alignment on AParallel_Graffiti_C");
static_assert(sizeof(AParallel_Graffiti_C) == 0x000FD8, "Wrong size on AParallel_Graffiti_C");
static_assert(offsetof(AParallel_Graffiti_C, Graffiti_FlipBookSet) == 0x000FB0, "Member 'AParallel_Graffiti_C::Graffiti_FlipBookSet' has a wrong offset!");
static_assert(offsetof(AParallel_Graffiti_C, Graffiti) == 0x000FB8, "Member 'AParallel_Graffiti_C::Graffiti' has a wrong offset!");
static_assert(offsetof(AParallel_Graffiti_C, GraffitiMaterial) == 0x000FC0, "Member 'AParallel_Graffiti_C::GraffitiMaterial' has a wrong offset!");
static_assert(offsetof(AParallel_Graffiti_C, Value) == 0x000FC8, "Member 'AParallel_Graffiti_C::Value' has a wrong offset!");
static_assert(offsetof(AParallel_Graffiti_C, BackgroundGraffitiScale) == 0x000FCC, "Member 'AParallel_Graffiti_C::BackgroundGraffitiScale' has a wrong offset!");
static_assert(offsetof(AParallel_Graffiti_C, Background_Graffiti__Decal_) == 0x000FD0, "Member 'AParallel_Graffiti_C::Background_Graffiti__Decal_' has a wrong offset!");

}

