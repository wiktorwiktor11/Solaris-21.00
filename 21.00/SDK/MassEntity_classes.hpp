#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MassEntity

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "MassEntity_structs.hpp"
#include "StructUtils_structs.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class MassEntity.MassModuleSettings
// 0x0000 (0x0028 - 0x0028)
class UMassModuleSettings : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassModuleSettings">();
	}
	static class UMassModuleSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassModuleSettings>();
	}
};
static_assert(alignof(UMassModuleSettings) == 0x000008, "Wrong alignment on UMassModuleSettings");
static_assert(sizeof(UMassModuleSettings) == 0x000028, "Wrong size on UMassModuleSettings");

// Class MassEntity.MassEntitySettings
// 0x0148 (0x0170 - 0x0028)
class UMassEntitySettings final : public UMassModuleSettings
{
public:
	class FString                                 DumpDependencyGraphFileName;                       // 0x0028(0x0010)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassProcessingPhaseConfig             ProcessingPhasesConfig[0x6];                       // 0x0038(0x0030)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UMassProcessor*>                 ProcessorCDOs;                                     // 0x0158(0x0010)(Edit, ExportObject, EditFixedSize, ZeroConstructor, Transient, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_168[0x8];                                      // 0x0168(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassEntitySettings">();
	}
	static class UMassEntitySettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassEntitySettings>();
	}
};
static_assert(alignof(UMassEntitySettings) == 0x000008, "Wrong alignment on UMassEntitySettings");
static_assert(sizeof(UMassEntitySettings) == 0x000170, "Wrong size on UMassEntitySettings");
static_assert(offsetof(UMassEntitySettings, DumpDependencyGraphFileName) == 0x000028, "Member 'UMassEntitySettings::DumpDependencyGraphFileName' has a wrong offset!");
static_assert(offsetof(UMassEntitySettings, ProcessingPhasesConfig) == 0x000038, "Member 'UMassEntitySettings::ProcessingPhasesConfig' has a wrong offset!");
static_assert(offsetof(UMassEntitySettings, ProcessorCDOs) == 0x000158, "Member 'UMassEntitySettings::ProcessorCDOs' has a wrong offset!");

// Class MassEntity.MassEntitySubsystem
// 0x02A8 (0x02D8 - 0x0030)
class UMassEntitySubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0xE8];                                      // 0x0030(0x00E8)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstSharedStruct>             ConstSharedFragments;                              // 0x0118(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x50];                                     // 0x0128(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSharedStruct>                  SharedFragments;                                   // 0x0178(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_188[0x50];                                     // 0x0188(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMassObserverManager                   ObserverManager;                                   // 0x01D8(0x0100)(Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassEntitySubsystem">();
	}
	static class UMassEntitySubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassEntitySubsystem>();
	}
};
static_assert(alignof(UMassEntitySubsystem) == 0x000008, "Wrong alignment on UMassEntitySubsystem");
static_assert(sizeof(UMassEntitySubsystem) == 0x0002D8, "Wrong size on UMassEntitySubsystem");
static_assert(offsetof(UMassEntitySubsystem, ConstSharedFragments) == 0x000118, "Member 'UMassEntitySubsystem::ConstSharedFragments' has a wrong offset!");
static_assert(offsetof(UMassEntitySubsystem, SharedFragments) == 0x000178, "Member 'UMassEntitySubsystem::SharedFragments' has a wrong offset!");
static_assert(offsetof(UMassEntitySubsystem, ObserverManager) == 0x0001D8, "Member 'UMassEntitySubsystem::ObserverManager' has a wrong offset!");

// Class MassEntity.MassProcessor
// 0x0058 (0x0080 - 0x0028)
class UMassProcessor : public UObject
{
public:
	int32                                         ExecutionFlags;                                    // 0x0028(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMassProcessingPhase                          ProcessingPhase;                                   // 0x002C(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMassProcessorExecutionOrder           ExecutionOrder;                                    // 0x0030(0x0028)(Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          bAutoRegisterWithProcessingPhases;                 // 0x0058(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_59[0x1];                                       // 0x0059(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bRequiresGameThreadExecution;                      // 0x005A(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5B[0x25];                                      // 0x005B(0x0025)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassProcessor">();
	}
	static class UMassProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassProcessor>();
	}
};
static_assert(alignof(UMassProcessor) == 0x000008, "Wrong alignment on UMassProcessor");
static_assert(sizeof(UMassProcessor) == 0x000080, "Wrong size on UMassProcessor");
static_assert(offsetof(UMassProcessor, ExecutionFlags) == 0x000028, "Member 'UMassProcessor::ExecutionFlags' has a wrong offset!");
static_assert(offsetof(UMassProcessor, ProcessingPhase) == 0x00002C, "Member 'UMassProcessor::ProcessingPhase' has a wrong offset!");
static_assert(offsetof(UMassProcessor, ExecutionOrder) == 0x000030, "Member 'UMassProcessor::ExecutionOrder' has a wrong offset!");
static_assert(offsetof(UMassProcessor, bAutoRegisterWithProcessingPhases) == 0x000058, "Member 'UMassProcessor::bAutoRegisterWithProcessingPhases' has a wrong offset!");
static_assert(offsetof(UMassProcessor, bRequiresGameThreadExecution) == 0x00005A, "Member 'UMassProcessor::bRequiresGameThreadExecution' has a wrong offset!");

// Class MassEntity.MassObserverProcessor
// 0x0008 (0x0088 - 0x0080)
class UMassObserverProcessor : public UMassProcessor
{
public:
	class UScriptStruct*                          FragmentType;                                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassObserverProcessor">();
	}
	static class UMassObserverProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassObserverProcessor>();
	}
};
static_assert(alignof(UMassObserverProcessor) == 0x000008, "Wrong alignment on UMassObserverProcessor");
static_assert(sizeof(UMassObserverProcessor) == 0x000088, "Wrong size on UMassObserverProcessor");
static_assert(offsetof(UMassObserverProcessor, FragmentType) == 0x000080, "Member 'UMassObserverProcessor::FragmentType' has a wrong offset!");

// Class MassEntity.MassFragmentInitializer
// 0x0000 (0x0088 - 0x0088)
class UMassFragmentInitializer final : public UMassObserverProcessor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassFragmentInitializer">();
	}
	static class UMassFragmentInitializer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassFragmentInitializer>();
	}
};
static_assert(alignof(UMassFragmentInitializer) == 0x000008, "Wrong alignment on UMassFragmentInitializer");
static_assert(sizeof(UMassFragmentInitializer) == 0x000088, "Wrong size on UMassFragmentInitializer");

// Class MassEntity.MassFragmentDeinitializer
// 0x0000 (0x0088 - 0x0088)
class UMassFragmentDeinitializer final : public UMassObserverProcessor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassFragmentDeinitializer">();
	}
	static class UMassFragmentDeinitializer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassFragmentDeinitializer>();
	}
};
static_assert(alignof(UMassFragmentDeinitializer) == 0x000008, "Wrong alignment on UMassFragmentDeinitializer");
static_assert(sizeof(UMassFragmentDeinitializer) == 0x000088, "Wrong size on UMassFragmentDeinitializer");

// Class MassEntity.MassObserverRegistry
// 0x00A0 (0x00C8 - 0x0028)
class UMassObserverRegistry final : public UObject
{
public:
	TMap<class UScriptStruct*, struct FMassProcessorClassCollection> FragmentInitializersMap;                           // 0x0028(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<class UScriptStruct*, struct FMassProcessorClassCollection> FragmentDeinitializersMap;                         // 0x0078(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassObserverRegistry">();
	}
	static class UMassObserverRegistry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassObserverRegistry>();
	}
};
static_assert(alignof(UMassObserverRegistry) == 0x000008, "Wrong alignment on UMassObserverRegistry");
static_assert(sizeof(UMassObserverRegistry) == 0x0000C8, "Wrong size on UMassObserverRegistry");
static_assert(offsetof(UMassObserverRegistry, FragmentInitializersMap) == 0x000028, "Member 'UMassObserverRegistry::FragmentInitializersMap' has a wrong offset!");
static_assert(offsetof(UMassObserverRegistry, FragmentDeinitializersMap) == 0x000078, "Member 'UMassObserverRegistry::FragmentDeinitializersMap' has a wrong offset!");

// Class MassEntity.MassProcessingPhaseManager
// 0x02E0 (0x0308 - 0x0028)
class UMassProcessingPhaseManager final : public UObject
{
public:
	struct FMassProcessingPhase                   ProcessingPhases[0x6];                             // 0x0028(0x0078)(Edit, EditConst, Protected, NativeAccessSpecifierProtected)
	class UMassEntitySubsystem*                   EntitySubsystem;                                   // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_300[0x8];                                      // 0x0300(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassProcessingPhaseManager">();
	}
	static class UMassProcessingPhaseManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassProcessingPhaseManager>();
	}
};
static_assert(alignof(UMassProcessingPhaseManager) == 0x000008, "Wrong alignment on UMassProcessingPhaseManager");
static_assert(sizeof(UMassProcessingPhaseManager) == 0x000308, "Wrong size on UMassProcessingPhaseManager");
static_assert(offsetof(UMassProcessingPhaseManager, ProcessingPhases) == 0x000028, "Member 'UMassProcessingPhaseManager::ProcessingPhases' has a wrong offset!");
static_assert(offsetof(UMassProcessingPhaseManager, EntitySubsystem) == 0x0002F8, "Member 'UMassProcessingPhaseManager::EntitySubsystem' has a wrong offset!");

// Class MassEntity.MassCompositeProcessor
// 0x0040 (0x00C0 - 0x0080)
class UMassCompositeProcessor final : public UMassProcessor
{
public:
	struct FMassRuntimePipeline                   ChildPipeline;                                     // 0x0080(0x0010)(Edit, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   GroupName;                                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_94[0x2C];                                      // 0x0094(0x002C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassCompositeProcessor">();
	}
	static class UMassCompositeProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassCompositeProcessor>();
	}
};
static_assert(alignof(UMassCompositeProcessor) == 0x000008, "Wrong alignment on UMassCompositeProcessor");
static_assert(sizeof(UMassCompositeProcessor) == 0x0000C0, "Wrong size on UMassCompositeProcessor");
static_assert(offsetof(UMassCompositeProcessor, ChildPipeline) == 0x000080, "Member 'UMassCompositeProcessor::ChildPipeline' has a wrong offset!");
static_assert(offsetof(UMassCompositeProcessor, GroupName) == 0x000090, "Member 'UMassCompositeProcessor::GroupName' has a wrong offset!");

// Class MassEntity.MassSchematic
// 0x0010 (0x0040 - 0x0030)
class UMassSchematic final : public UDataAsset
{
public:
	TArray<class UMassProcessor*>                 Processors;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassSchematic">();
	}
	static class UMassSchematic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassSchematic>();
	}
};
static_assert(alignof(UMassSchematic) == 0x000008, "Wrong alignment on UMassSchematic");
static_assert(sizeof(UMassSchematic) == 0x000040, "Wrong size on UMassSchematic");
static_assert(offsetof(UMassSchematic, Processors) == 0x000030, "Member 'UMassSchematic::Processors' has a wrong offset!");

// Class MassEntity.MassSettings
// 0x0050 (0x0080 - 0x0030)
class UMassSettings final : public UDeveloperSettings
{
public:
	TMap<class FName, class UMassModuleSettings*> ModuleSettings;                                    // 0x0030(0x0050)(Edit, EditFixedSize, EditConst, NoClear, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassSettings">();
	}
	static class UMassSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassSettings>();
	}
};
static_assert(alignof(UMassSettings) == 0x000008, "Wrong alignment on UMassSettings");
static_assert(sizeof(UMassSettings) == 0x000080, "Wrong size on UMassSettings");
static_assert(offsetof(UMassSettings, ModuleSettings) == 0x000030, "Member 'UMassSettings::ModuleSettings' has a wrong offset!");

}

