#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SprayDecal

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SprayDecal.BP_SprayDecal_C
// 0x00B8 (0x0E40 - 0x0D88)
class ABP_SprayDecal_C final : public AFortSprayDecalInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D88(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         DecalFadeoutTime;                                  // 0x0D90(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D94[0x4];                                      // 0x0D94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        EmissiveDecal;                                     // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               EmissiveDecalMID;                                  // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalSize;                                         // 0x0DA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_DAC[0x4];                                      // 0x0DAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     EmissiveMatSource;                                 // 0x0DB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalDepth;                                        // 0x0DB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DBC[0x4];                                      // 0x0DBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaSprayItemDefinition*             SprayAsset;                                        // 0x0DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         LoadsOutstanding;                                  // 0x0DC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DCC[0x4];                                      // 0x0DCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              DecalTextureOverrideSoft;                          // 0x0DD0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UTexture2D*                             DecalTextureOverride;                              // 0x0DF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BannerPrimaryColor;                                // 0x0E00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BannerSecondaryColor;                              // 0x0E10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  SpawningPlayerController;                          // 0x0E20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class AActor*>                         NearbyBuildingActors;                              // 0x0E28(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         SpawnStartTimeDelay;                               // 0x0E38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFrontEndPreview;                                // 0x0E3C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bDestroyOnTrapPlaced;                              // 0x0E3D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddBoxCollisionForCreative();
	void CreateDecalComponents();
	void ExecuteUbergraph_BP_SprayDecal(int32 EntryPoint);
	void FindNearbyBuildingActorsAndBindDelegates();
	struct FUniqueNetIdRepl GetInstigatorPlayerId();
	void OnBounceOccurs();
	void OnLoaded_F8AB699B4D8DD22B5A0409B608B7D6FA(class UObject* Loaded);
	void OnLoaded_F925FF00475A018319C73E9FB1540BC6(class UObject* Loaded);
	void OnNearbyTrapPlaced(class ABuildingTrap* Trap, bool bDetatched);
	void OnNearbyWallDamaged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnNearbyWallDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnReady_B252FED346EAB98D54D786BD15C1CC7B(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnRep_DecalFadeoutTime();
	void OnSprayAssetReplicatedDown();
	void OnSprayInfoReady();
	void OnWallDestoryed(class AActor* DestroyedActor);
	void PostLevelSaveSpawnCleanup();
	void ReceiveBeginPlay();
	void StartSprayFadeOutDueToNewPlacement();
	void UnbindAndClearNearbyBuildingActors();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SprayDecal_C">();
	}
	static class ABP_SprayDecal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SprayDecal_C>();
	}
};
static_assert(alignof(ABP_SprayDecal_C) == 0x000008, "Wrong alignment on ABP_SprayDecal_C");
static_assert(sizeof(ABP_SprayDecal_C) == 0x000E40, "Wrong size on ABP_SprayDecal_C");
static_assert(offsetof(ABP_SprayDecal_C, UberGraphFrame) == 0x000D88, "Member 'ABP_SprayDecal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, DecalFadeoutTime) == 0x000D90, "Member 'ABP_SprayDecal_C::DecalFadeoutTime' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, EmissiveDecal) == 0x000D98, "Member 'ABP_SprayDecal_C::EmissiveDecal' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, EmissiveDecalMID) == 0x000DA0, "Member 'ABP_SprayDecal_C::EmissiveDecalMID' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, DecalSize) == 0x000DA8, "Member 'ABP_SprayDecal_C::DecalSize' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, EmissiveMatSource) == 0x000DB0, "Member 'ABP_SprayDecal_C::EmissiveMatSource' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, DecalDepth) == 0x000DB8, "Member 'ABP_SprayDecal_C::DecalDepth' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, SprayAsset) == 0x000DC0, "Member 'ABP_SprayDecal_C::SprayAsset' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, LoadsOutstanding) == 0x000DC8, "Member 'ABP_SprayDecal_C::LoadsOutstanding' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, DecalTextureOverrideSoft) == 0x000DD0, "Member 'ABP_SprayDecal_C::DecalTextureOverrideSoft' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, DecalTextureOverride) == 0x000DF8, "Member 'ABP_SprayDecal_C::DecalTextureOverride' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, BannerPrimaryColor) == 0x000E00, "Member 'ABP_SprayDecal_C::BannerPrimaryColor' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, BannerSecondaryColor) == 0x000E10, "Member 'ABP_SprayDecal_C::BannerSecondaryColor' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, SpawningPlayerController) == 0x000E20, "Member 'ABP_SprayDecal_C::SpawningPlayerController' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, NearbyBuildingActors) == 0x000E28, "Member 'ABP_SprayDecal_C::NearbyBuildingActors' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, SpawnStartTimeDelay) == 0x000E38, "Member 'ABP_SprayDecal_C::SpawnStartTimeDelay' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, bIsFrontEndPreview) == 0x000E3C, "Member 'ABP_SprayDecal_C::bIsFrontEndPreview' has a wrong offset!");
static_assert(offsetof(ABP_SprayDecal_C, bDestroyOnTrapPlaced) == 0x000E3D, "Member 'ABP_SprayDecal_C::bDestroyOnTrapPlaced' has a wrong offset!");

}

