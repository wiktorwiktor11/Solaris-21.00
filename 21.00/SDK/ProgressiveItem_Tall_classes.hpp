#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveItem_Tall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "BattlePassBase_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CrewUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ProgressiveItem_Tall.ProgressiveItem_Tall_C
// 0x0160 (0x11D0 - 0x1070)
class UProgressiveItem_Tall_C final : public UFortProgressiveSetTile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1070(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UnHovered_Subbed;                                  // 0x1078(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hovered_Subbed;                                    // 0x1080(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnHovered_UnSubbed;                                // 0x1088(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hovered_UnSubbed;                                  // 0x1090(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x1098(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_32;                                          // 0x10A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_86;                                          // 0x10A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Background;                                  // 0x10B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_CompletedCheck;                              // 0x10B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Dimmer;                                      // 0x10C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Gradient;                                    // 0x10C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortLazyImage*                         Image_Item;                                        // 0x10D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_InspectionText;                            // 0x10D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              Switcher_CheckDelay;                               // 0x10E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Stages;                                       // 0x10E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Text_Subtitle;                                     // 0x10F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaItemShopReactiveTileText*        TileText_ItemName;                                 // 0x10F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ETextJustify                                  TileTextJustification;                             // 0x1100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_1101[0x7];                                     // 0x1101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Material;                                          // 0x1108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              In_Size;                                           // 0x1110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Extra_Space;                                       // 0x1120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_1124[0x4];                                     // 0x1124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Empty_text;                                        // 0x1128(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsDisabled;                                        // 0x1140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1141[0x7];                                     // 0x1141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FBattlePassLandingPageButtonDisplayDetails& DisplayInfo)> OnShowButtonDetails;                               // 0x1148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HasExtraLock;                                      // 0x1158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1159[0x7];                                     // 0x1159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressiveSetInfo                    SetInfo;                                           // 0x1160(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Subscribed;                                        // 0x11C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnDeselected();
	void BP_OnInitializeSetInfo(const struct FProgressiveSetInfo& InSetInfo, const class FText& BottomText, const class FText& BottomSubtext, const bool bSubscribed);
	void BP_OnSelected();
	void ExecuteUbergraph_ProgressiveItem_Tall(int32 EntryPoint);
	void Play_intro();
	void PreConstruct(bool IsDesignTime);
	void UpdateVisualState(bool Hover, bool Subbed, bool Completed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ProgressiveItem_Tall_C">();
	}
	static class UProgressiveItem_Tall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProgressiveItem_Tall_C>();
	}
};
static_assert(alignof(UProgressiveItem_Tall_C) == 0x000010, "Wrong alignment on UProgressiveItem_Tall_C");
static_assert(sizeof(UProgressiveItem_Tall_C) == 0x0011D0, "Wrong size on UProgressiveItem_Tall_C");
static_assert(offsetof(UProgressiveItem_Tall_C, UberGraphFrame) == 0x001070, "Member 'UProgressiveItem_Tall_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, UnHovered_Subbed) == 0x001078, "Member 'UProgressiveItem_Tall_C::UnHovered_Subbed' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Hovered_Subbed) == 0x001080, "Member 'UProgressiveItem_Tall_C::Hovered_Subbed' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, UnHovered_UnSubbed) == 0x001088, "Member 'UProgressiveItem_Tall_C::UnHovered_UnSubbed' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Hovered_UnSubbed) == 0x001090, "Member 'UProgressiveItem_Tall_C::Hovered_UnSubbed' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image) == 0x001098, "Member 'UProgressiveItem_Tall_C::Image' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_32) == 0x0010A0, "Member 'UProgressiveItem_Tall_C::Image_32' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_86) == 0x0010A8, "Member 'UProgressiveItem_Tall_C::Image_86' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_Background) == 0x0010B0, "Member 'UProgressiveItem_Tall_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_CompletedCheck) == 0x0010B8, "Member 'UProgressiveItem_Tall_C::Image_CompletedCheck' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_Dimmer) == 0x0010C0, "Member 'UProgressiveItem_Tall_C::Image_Dimmer' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_Gradient) == 0x0010C8, "Member 'UProgressiveItem_Tall_C::Image_Gradient' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Image_Item) == 0x0010D0, "Member 'UProgressiveItem_Tall_C::Image_Item' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Overlay_InspectionText) == 0x0010D8, "Member 'UProgressiveItem_Tall_C::Overlay_InspectionText' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Switcher_CheckDelay) == 0x0010E0, "Member 'UProgressiveItem_Tall_C::Switcher_CheckDelay' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Text_Stages) == 0x0010E8, "Member 'UProgressiveItem_Tall_C::Text_Stages' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Text_Subtitle) == 0x0010F0, "Member 'UProgressiveItem_Tall_C::Text_Subtitle' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, TileText_ItemName) == 0x0010F8, "Member 'UProgressiveItem_Tall_C::TileText_ItemName' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, TileTextJustification) == 0x001100, "Member 'UProgressiveItem_Tall_C::TileTextJustification' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Material) == 0x001108, "Member 'UProgressiveItem_Tall_C::Material' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, In_Size) == 0x001110, "Member 'UProgressiveItem_Tall_C::In_Size' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Extra_Space) == 0x001120, "Member 'UProgressiveItem_Tall_C::Extra_Space' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Empty_text) == 0x001128, "Member 'UProgressiveItem_Tall_C::Empty_text' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, IsDisabled) == 0x001140, "Member 'UProgressiveItem_Tall_C::IsDisabled' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, OnShowButtonDetails) == 0x001148, "Member 'UProgressiveItem_Tall_C::OnShowButtonDetails' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, HasExtraLock) == 0x001158, "Member 'UProgressiveItem_Tall_C::HasExtraLock' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, SetInfo) == 0x001160, "Member 'UProgressiveItem_Tall_C::SetInfo' has a wrong offset!");
static_assert(offsetof(UProgressiveItem_Tall_C, Subscribed) == 0x0011C8, "Member 'UProgressiveItem_Tall_C::Subscribed' has a wrong offset!");

}

