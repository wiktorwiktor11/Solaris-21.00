#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WildWest_TowerClock

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WildWest_TowerClock.WildWest_TowerClock_C.ExecuteUbergraph_WildWest_TowerClock
// 0x0010 (0x0010 - 0x0000)
struct WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock) == 0x000008, "Wrong alignment on WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock");
static_assert(sizeof(WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock) == 0x000010, "Wrong size on WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock");
static_assert(offsetof(WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock, EntryPoint) == 0x000000, "Member 'WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock::EntryPoint' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'WildWest_TowerClock_C_ExecuteUbergraph_WildWest_TowerClock::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function WildWest_TowerClock.WildWest_TowerClock_C.UpdateTime
// 0x0218 (0x0218 - 0x0000)
struct WildWest_TowerClock_C_UpdateTime final
{
public:
	float                                         CallFunc_GetTimeOfDay_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeOfDay_ReturnValue_1;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0058(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0138(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WildWest_TowerClock_C_UpdateTime) == 0x000008, "Wrong alignment on WildWest_TowerClock_C_UpdateTime");
static_assert(sizeof(WildWest_TowerClock_C_UpdateTime) == 0x000218, "Wrong size on WildWest_TowerClock_C_UpdateTime");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_GetTimeOfDay_ReturnValue) == 0x000000, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_GetTimeOfDay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_GetTimeOfDay_ReturnValue_1) == 0x000004, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_GetTimeOfDay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_FMod_Remainder) == 0x000008, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_FMod_ReturnValue) == 0x00000C, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000020, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_MakeRotator_ReturnValue_1) == 0x000040, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000058, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WildWest_TowerClock_C_UpdateTime, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000138, "Member 'WildWest_TowerClock_C_UpdateTime::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

}

