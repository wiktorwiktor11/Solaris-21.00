#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Generic_EffectiveHealingShielding_Parent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Generic_EffectiveHealingShielding_Parent.GA_Generic_EffectiveHealingShielding_Parent_C
// 0x0180 (0x0C90 - 0x0B10)
class UGA_Generic_EffectiveHealingShielding_Parent_C : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 GE_Heal;                                           // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Heal_Amount;                                       // 0x0B20(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Heal_Cap;                                          // 0x0B48(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         bHealOverflowsIntoShields;                         // 0x0B70(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Shield_Amount;                                     // 0x0B98(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Shield_Cap;                                        // 0x0BC0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPawn*                              Pawn;                                              // 0x0BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_GC_Heal;                                       // 0x0BF0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag_GC_Shield;                                     // 0x0BF4(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Duration;                                          // 0x0BF8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         TickTime;                                          // 0x0C20(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          EndAbilityAfterHeal;                               // 0x0C48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C49[0x7];                                      // 0x0C49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  QuestSourceTags;                                   // 0x0C50(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  QuestTargetTags;                                   // 0x0C70(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void Heal();
	void GetMagnitudes(float* HealMagnitude, float* ShieldMagnitude, bool* ApplyEffect, bool* RestoredHealth, bool* RestoredShields);
	void ExecuteUbergraph_GA_Generic_EffectiveHealingShielding_Parent(int32 EntryPoint);
	void DurationExpired();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Generic_EffectiveHealingShielding_Parent_C">();
	}
	static class UGA_Generic_EffectiveHealingShielding_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Generic_EffectiveHealingShielding_Parent_C>();
	}
};
static_assert(alignof(UGA_Generic_EffectiveHealingShielding_Parent_C) == 0x000008, "Wrong alignment on UGA_Generic_EffectiveHealingShielding_Parent_C");
static_assert(sizeof(UGA_Generic_EffectiveHealingShielding_Parent_C) == 0x000C90, "Wrong size on UGA_Generic_EffectiveHealingShielding_Parent_C");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, UberGraphFrame) == 0x000B10, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, GE_Heal) == 0x000B18, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::GE_Heal' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, Heal_Amount) == 0x000B20, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::Heal_Amount' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, Heal_Cap) == 0x000B48, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::Heal_Cap' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, bHealOverflowsIntoShields) == 0x000B70, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::bHealOverflowsIntoShields' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, Shield_Amount) == 0x000B98, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::Shield_Amount' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, Shield_Cap) == 0x000BC0, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::Shield_Cap' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, Pawn) == 0x000BE8, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::Pawn' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, Tag_GC_Heal) == 0x000BF0, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::Tag_GC_Heal' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, Tag_GC_Shield) == 0x000BF4, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::Tag_GC_Shield' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, Duration) == 0x000BF8, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::Duration' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, TickTime) == 0x000C20, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::TickTime' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, EndAbilityAfterHeal) == 0x000C48, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::EndAbilityAfterHeal' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, QuestSourceTags) == 0x000C50, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::QuestSourceTags' has a wrong offset!");
static_assert(offsetof(UGA_Generic_EffectiveHealingShielding_Parent_C, QuestTargetTags) == 0x000C70, "Member 'UGA_Generic_EffectiveHealingShielding_Parent_C::QuestTargetTags' has a wrong offset!");

}

