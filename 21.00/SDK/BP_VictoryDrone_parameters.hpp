#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VictoryDrone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VictoryDrone.BP_VictoryDrone_C.Added Death Audio
// 0x0030 (0x0030 - 0x0000)
struct BP_VictoryDrone_C_Added_Death_Audio final
{
public:
	class USoundBase*                             Sound_to_Spawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VictoryDrone_C_Added_Death_Audio) == 0x000008, "Wrong alignment on BP_VictoryDrone_C_Added_Death_Audio");
static_assert(sizeof(BP_VictoryDrone_C_Added_Death_Audio) == 0x000030, "Wrong size on BP_VictoryDrone_C_Added_Death_Audio");
static_assert(offsetof(BP_VictoryDrone_C_Added_Death_Audio, Sound_to_Spawn) == 0x000000, "Member 'BP_VictoryDrone_C_Added_Death_Audio::Sound_to_Spawn' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Added_Death_Audio, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_VictoryDrone_C_Added_Death_Audio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Added_Death_Audio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_VictoryDrone_C_Added_Death_Audio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Added_Death_Audio, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000028, "Member 'BP_VictoryDrone_C_Added_Death_Audio::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

// Function BP_VictoryDrone.BP_VictoryDrone_C.Decoy FX Parameters
// 0x0800 (0x0800 - 0x0000)
struct BP_VictoryDrone_C_Decoy_FX_Parameters final
{
public:
	TArray<struct FParticleSysParam>              Instance_Parameters;                               // 0x0000(0x0010)(Parm, OutParm)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x0010(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_1;              // 0x00F0(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_2;              // 0x01D0(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_3;              // 0x02B0(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_4;              // 0x0390(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_5;              // 0x0470(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_6;              // 0x0550(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_7;              // 0x0630(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_8;              // 0x0710(0x00E0)(IsPlainOldData, NoDestructor)
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x07F0(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_VictoryDrone_C_Decoy_FX_Parameters) == 0x000010, "Wrong alignment on BP_VictoryDrone_C_Decoy_FX_Parameters");
static_assert(sizeof(BP_VictoryDrone_C_Decoy_FX_Parameters) == 0x000800, "Wrong size on BP_VictoryDrone_C_Decoy_FX_Parameters");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, Instance_Parameters) == 0x000000, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::Instance_Parameters' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, K2Node_MakeStruct_ParticleSysParam) == 0x000010, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_1) == 0x0000F0, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_2) == 0x0001D0, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_2' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_3) == 0x0002B0, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_3' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_4) == 0x000390, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_4' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_5) == 0x000470, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_5' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_6) == 0x000550, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_6' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_7) == 0x000630, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_7' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_8) == 0x000710, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_8' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_Decoy_FX_Parameters, K2Node_MakeArray_Array) == 0x0007F0, "Member 'BP_VictoryDrone_C_Decoy_FX_Parameters::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_VictoryDrone.BP_VictoryDrone_C.ExecuteUbergraph_BP_VictoryDrone
// 0x00B8 (0x00B8 - 0x0000)
struct BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone) == 0x000008, "Wrong alignment on BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone");
static_assert(sizeof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone) == 0x0000B8, "Wrong size on BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, EntryPoint) == 0x000000, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, Temp_float_Variable) == 0x000020, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, Temp_bool_Variable) == 0x000024, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, Temp_object_Variable) == 0x000028, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, K2Node_CustomEvent_Montage) == 0x000030, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, K2Node_CustomEvent_bInterrupted) == 0x000038, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::K2Node_CustomEvent_bInterrupted' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, Temp_float_Variable_1) == 0x000040, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000048, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, CallFunc_BreakRotator_Roll) == 0x000060, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, CallFunc_BreakRotator_Pitch) == 0x000064, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, CallFunc_BreakRotator_Yaw) == 0x000068, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000088, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, CallFunc_GetMaterial_ReturnValue) == 0x000090, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000098, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x0000A4, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, Temp_bool_Variable_1) == 0x0000A9, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, K2Node_Select_Default) == 0x0000AC, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone, K2Node_Select_Default_1) == 0x0000B0, "Member 'BP_VictoryDrone_C_ExecuteUbergraph_BP_VictoryDrone::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_VictoryDrone.BP_VictoryDrone_C.NotifyTeleportFinishedTriggered
// 0x0001 (0x0001 - 0x0000)
struct BP_VictoryDrone_C_NotifyTeleportFinishedTriggered final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VictoryDrone_C_NotifyTeleportFinishedTriggered) == 0x000001, "Wrong alignment on BP_VictoryDrone_C_NotifyTeleportFinishedTriggered");
static_assert(sizeof(BP_VictoryDrone_C_NotifyTeleportFinishedTriggered) == 0x000001, "Wrong size on BP_VictoryDrone_C_NotifyTeleportFinishedTriggered");
static_assert(offsetof(BP_VictoryDrone_C_NotifyTeleportFinishedTriggered, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_VictoryDrone_C_NotifyTeleportFinishedTriggered::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_VictoryDrone.BP_VictoryDrone_C.NPC FX Parameters
// 0x0800 (0x0800 - 0x0000)
struct BP_VictoryDrone_C_NPC_FX_Parameters final
{
public:
	TArray<struct FParticleSysParam>              Instance_Parameters;                               // 0x0000(0x0010)(Parm, OutParm)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x0010(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_1;              // 0x00F0(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_2;              // 0x01D0(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_3;              // 0x02B0(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_4;              // 0x0390(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_5;              // 0x0470(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_6;              // 0x0550(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_7;              // 0x0630(0x00E0)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam_8;              // 0x0710(0x00E0)(IsPlainOldData, NoDestructor)
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x07F0(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_VictoryDrone_C_NPC_FX_Parameters) == 0x000010, "Wrong alignment on BP_VictoryDrone_C_NPC_FX_Parameters");
static_assert(sizeof(BP_VictoryDrone_C_NPC_FX_Parameters) == 0x000800, "Wrong size on BP_VictoryDrone_C_NPC_FX_Parameters");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, Instance_Parameters) == 0x000000, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::Instance_Parameters' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, K2Node_MakeStruct_ParticleSysParam) == 0x000010, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_1) == 0x0000F0, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_2) == 0x0001D0, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_2' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_3) == 0x0002B0, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_3' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_4) == 0x000390, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_4' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_5) == 0x000470, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_5' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_6) == 0x000550, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_6' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_7) == 0x000630, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_7' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, K2Node_MakeStruct_ParticleSysParam_8) == 0x000710, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::K2Node_MakeStruct_ParticleSysParam_8' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_NPC_FX_Parameters, K2Node_MakeArray_Array) == 0x0007F0, "Member 'BP_VictoryDrone_C_NPC_FX_Parameters::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_VictoryDrone.BP_VictoryDrone_C.OnSpawnOutAnimEnded
// 0x0010 (0x0010 - 0x0000)
struct BP_VictoryDrone_C_OnSpawnOutAnimEnded final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VictoryDrone_C_OnSpawnOutAnimEnded) == 0x000008, "Wrong alignment on BP_VictoryDrone_C_OnSpawnOutAnimEnded");
static_assert(sizeof(BP_VictoryDrone_C_OnSpawnOutAnimEnded) == 0x000010, "Wrong size on BP_VictoryDrone_C_OnSpawnOutAnimEnded");
static_assert(offsetof(BP_VictoryDrone_C_OnSpawnOutAnimEnded, Montage) == 0x000000, "Member 'BP_VictoryDrone_C_OnSpawnOutAnimEnded::Montage' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_OnSpawnOutAnimEnded, bInterrupted) == 0x000008, "Member 'BP_VictoryDrone_C_OnSpawnOutAnimEnded::bInterrupted' has a wrong offset!");

// Function BP_VictoryDrone.BP_VictoryDrone_C.PlaySpawnAnim
// 0x00D8 (0x00D8 - 0x0000)
struct BP_VictoryDrone_C_PlaySpawnAnim final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewLocalVar_0;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_2;       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_3;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_4;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        K2Node_Select_Default_1;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        K2Node_Select_Default_2;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        K2Node_Select_Default_3;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VictoryDrone_C_PlaySpawnAnim) == 0x000008, "Wrong alignment on BP_VictoryDrone_C_PlaySpawnAnim");
static_assert(sizeof(BP_VictoryDrone_C_PlaySpawnAnim) == 0x0000D8, "Wrong size on BP_VictoryDrone_C_PlaySpawnAnim");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, Montage) == 0x000000, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::Montage' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, NewLocalVar_0) == 0x000008, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, Temp_bool_Variable) == 0x00000C, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, Temp_object_Variable) == 0x000010, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, Temp_object_Variable_1) == 0x000018, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, Temp_bool_Variable_1) == 0x000020, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, Temp_object_Variable_2) == 0x000028, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, CallFunc_GetSocketLocation_ReturnValue) == 0x000030, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000048, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, Temp_bool_Variable_2) == 0x000050, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000058, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000060, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000078, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000080, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, CallFunc_SpawnEmitterAttached_ReturnValue_2) == 0x000088, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::CallFunc_SpawnEmitterAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, Temp_object_Variable_3) == 0x000090, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, Temp_object_Variable_4) == 0x000098, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, CallFunc_GetAnimInstance_ReturnValue) == 0x0000A0, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, K2Node_Select_Default) == 0x0000A8, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, Temp_bool_Variable_3) == 0x0000B0, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, K2Node_Select_Default_1) == 0x0000C0, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, K2Node_Select_Default_2) == 0x0000C8, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_VictoryDrone_C_PlaySpawnAnim, K2Node_Select_Default_3) == 0x0000D0, "Member 'BP_VictoryDrone_C_PlaySpawnAnim::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_VictoryDrone.BP_VictoryDrone_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VictoryDrone_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VictoryDrone_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VictoryDrone_C_ReceiveTick");
static_assert(sizeof(BP_VictoryDrone_C_ReceiveTick) == 0x000004, "Wrong size on BP_VictoryDrone_C_ReceiveTick");
static_assert(offsetof(BP_VictoryDrone_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VictoryDrone_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

