#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BuildingActorLootDropOnDeathComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BuildingActorLootDropOnDeathComponent.BuildingActorLootDropOnDeathComponent_C
// 0x0038 (0x00D8 - 0x00A0)
class UBuildingActorLootDropOnDeathComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   LootOnExplodePackage;                              // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OffsetLocation;                                    // 0x00B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingActor*                         BuildingActorOwner;                                // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AthenaOnly;                                        // 0x00D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BuildingActorLootDropOnDeathComponent(int32 EntryPoint);
	struct FVector MakeRelativeOffset(class AActor* Target, const struct FVector& InVec);
	void OnDied_Event(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BuildingActorLootDropOnDeathComponent_C">();
	}
	static class UBuildingActorLootDropOnDeathComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBuildingActorLootDropOnDeathComponent_C>();
	}
};
static_assert(alignof(UBuildingActorLootDropOnDeathComponent_C) == 0x000008, "Wrong alignment on UBuildingActorLootDropOnDeathComponent_C");
static_assert(sizeof(UBuildingActorLootDropOnDeathComponent_C) == 0x0000D8, "Wrong size on UBuildingActorLootDropOnDeathComponent_C");
static_assert(offsetof(UBuildingActorLootDropOnDeathComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBuildingActorLootDropOnDeathComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBuildingActorLootDropOnDeathComponent_C, LootOnExplodePackage) == 0x0000A8, "Member 'UBuildingActorLootDropOnDeathComponent_C::LootOnExplodePackage' has a wrong offset!");
static_assert(offsetof(UBuildingActorLootDropOnDeathComponent_C, OffsetLocation) == 0x0000B0, "Member 'UBuildingActorLootDropOnDeathComponent_C::OffsetLocation' has a wrong offset!");
static_assert(offsetof(UBuildingActorLootDropOnDeathComponent_C, BuildingActorOwner) == 0x0000C8, "Member 'UBuildingActorLootDropOnDeathComponent_C::BuildingActorOwner' has a wrong offset!");
static_assert(offsetof(UBuildingActorLootDropOnDeathComponent_C, Enabled) == 0x0000D0, "Member 'UBuildingActorLootDropOnDeathComponent_C::Enabled' has a wrong offset!");
static_assert(offsetof(UBuildingActorLootDropOnDeathComponent_C, AthenaOnly) == 0x0000D1, "Member 'UBuildingActorLootDropOnDeathComponent_C::AthenaOnly' has a wrong offset!");

}

