#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Petrol

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Petrol.B_Prj_Petrol_C
// 0x0098 (0x0AD0 - 0x0A38)
class AB_Prj_Petrol_C final : public AFortProjectilePetrol
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A38(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Petrol_Prj_Trail;                                // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABGA_Petrol_Pickup_C*                   ClosestPetrolPickupBGA;                            // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_Petrol_Pickup_C*                   NullBGA;                                           // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShortestDistance;                                  // 0x0A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClosestPetrolPickupBGAIndex;                       // 0x0A64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         HitActors;                                         // 0x0A68(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FScalableFloat                         OverrideFuelToAddToPetrolPickup;                   // 0x0A78(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         FuelToAddToPetrolPickup;                           // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA4[0x4];                                      // 0x0AA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Hotfix_RefillVehicleAmount;                        // 0x0AA8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Check_If_NoFuel_Tag_Present(class AFortAthenaVehicle* Vehicle_Actor);
	void ExecuteUbergraph_B_Prj_Petrol(int32 EntryPoint);
	void OnExploded(const TArray<class AActor*>& HitActors_0, const TArray<struct FHitResult>& HitResults);
	void OnStop(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Petrol_C">();
	}
	static class AB_Prj_Petrol_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Petrol_C>();
	}
};
static_assert(alignof(AB_Prj_Petrol_C) == 0x000008, "Wrong alignment on AB_Prj_Petrol_C");
static_assert(sizeof(AB_Prj_Petrol_C) == 0x000AD0, "Wrong size on AB_Prj_Petrol_C");
static_assert(offsetof(AB_Prj_Petrol_C, UberGraphFrame) == 0x000A38, "Member 'AB_Prj_Petrol_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Petrol_C, P_Petrol_Prj_Trail) == 0x000A40, "Member 'AB_Prj_Petrol_C::P_Petrol_Prj_Trail' has a wrong offset!");
static_assert(offsetof(AB_Prj_Petrol_C, StaticMesh) == 0x000A48, "Member 'AB_Prj_Petrol_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Petrol_C, ClosestPetrolPickupBGA) == 0x000A50, "Member 'AB_Prj_Petrol_C::ClosestPetrolPickupBGA' has a wrong offset!");
static_assert(offsetof(AB_Prj_Petrol_C, NullBGA) == 0x000A58, "Member 'AB_Prj_Petrol_C::NullBGA' has a wrong offset!");
static_assert(offsetof(AB_Prj_Petrol_C, ShortestDistance) == 0x000A60, "Member 'AB_Prj_Petrol_C::ShortestDistance' has a wrong offset!");
static_assert(offsetof(AB_Prj_Petrol_C, ClosestPetrolPickupBGAIndex) == 0x000A64, "Member 'AB_Prj_Petrol_C::ClosestPetrolPickupBGAIndex' has a wrong offset!");
static_assert(offsetof(AB_Prj_Petrol_C, HitActors) == 0x000A68, "Member 'AB_Prj_Petrol_C::HitActors' has a wrong offset!");
static_assert(offsetof(AB_Prj_Petrol_C, OverrideFuelToAddToPetrolPickup) == 0x000A78, "Member 'AB_Prj_Petrol_C::OverrideFuelToAddToPetrolPickup' has a wrong offset!");
static_assert(offsetof(AB_Prj_Petrol_C, FuelToAddToPetrolPickup) == 0x000AA0, "Member 'AB_Prj_Petrol_C::FuelToAddToPetrolPickup' has a wrong offset!");
static_assert(offsetof(AB_Prj_Petrol_C, Hotfix_RefillVehicleAmount) == 0x000AA8, "Member 'AB_Prj_Petrol_C::Hotfix_RefillVehicleAmount' has a wrong offset!");

}

