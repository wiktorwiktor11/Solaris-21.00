#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Scoreboard_UI

#include "Basic.hpp"

#include "Scoreboard_UI_classes.hpp"
#include "Scoreboard_UI_parameters.hpp"


namespace SDK
{

// Function Scoreboard_UI.Scoreboard_UI_C.AnimateBacking
// (Public, BlueprintCallable, BlueprintEvent)

void UScoreboard_UI_C::AnimateBacking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "AnimateBacking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scoreboard_UI.Scoreboard_UI_C.DoHideUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UScoreboard_UI_C::DoHideUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "DoHideUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scoreboard_UI.Scoreboard_UI_C.DoShowUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UScoreboard_UI_C::DoShowUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "DoShowUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scoreboard_UI.Scoreboard_UI_C.ExecuteUbergraph_Scoreboard_UI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::ExecuteUbergraph_Scoreboard_UI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "ExecuteUbergraph_Scoreboard_UI");

	Params::Scoreboard_UI_C_ExecuteUbergraph_Scoreboard_UI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.FullscreenMapToggle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFullscreenMapVisible                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::FullscreenMapToggle(bool bFullscreenMapVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "FullscreenMapToggle");

	Params::Scoreboard_UI_C_FullscreenMapToggle Parms{};

	Parms.bFullscreenMapVisible = bFullscreenMapVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.GetScoreboardStateNames
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FText>                     OutNames                                               (Parm, OutParm)

void UScoreboard_UI_C::GetScoreboardStateNames(TArray<class FText>* OutNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "GetScoreboardStateNames");

	Params::Scoreboard_UI_C_GetScoreboardStateNames Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function Scoreboard_UI.Scoreboard_UI_C.GetTargetPlayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::GetTargetPlayerState(class APlayerState** PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "GetTargetPlayerState");

	Params::Scoreboard_UI_C_GetTargetPlayerState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerState != nullptr)
		*PlayerState = Parms.PlayerState;
}


// Function Scoreboard_UI.Scoreboard_UI_C.GetTargetScoreRow
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     TargetPlayerState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::GetTargetScoreRow(class APlayerState* TargetPlayerState, class UWidget** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "GetTargetScoreRow");

	Params::Scoreboard_UI_C_GetTargetScoreRow Parms{};

	Parms.TargetPlayerState = TargetPlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function Scoreboard_UI.Scoreboard_UI_C.HandleScoreboardColumnsData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     ScoreboardStatNames                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bTeamGame                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDisplayingWins                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::HandleScoreboardColumnsData(TArray<class FText>& ScoreboardStatNames, bool bTeamGame, bool bDisplayingWins)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "HandleScoreboardColumnsData");

	Params::Scoreboard_UI_C_HandleScoreboardColumnsData Parms{};

	Parms.ScoreboardStatNames = std::move(ScoreboardStatNames);
	Parms.bTeamGame = bTeamGame;
	Parms.bDisplayingWins = bDisplayingWins;

	UObject::ProcessEvent(Func, &Parms);

	ScoreboardStatNames = std::move(Parms.ScoreboardStatNames);
}


// Function Scoreboard_UI.Scoreboard_UI_C.HideMinigameEndUI
// (BlueprintCallable, BlueprintEvent)

void UScoreboard_UI_C::HideMinigameEndUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "HideMinigameEndUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scoreboard_UI.Scoreboard_UI_C.HideUnusedRows
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTeamGame                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumBuckets                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::HideUnusedRows(bool bTeamGame, int32 NumBuckets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "HideUnusedRows");

	Params::Scoreboard_UI_C_HideUnusedRows Parms{};

	Parms.bTeamGame = bTeamGame;
	Parms.NumBuckets = NumBuckets;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.HideWinnerDisplay
// (Public, BlueprintCallable, BlueprintEvent)

void UScoreboard_UI_C::HideWinnerDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "HideWinnerDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scoreboard_UI.Scoreboard_UI_C.IntroAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UScoreboard_UI_C::IntroAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "IntroAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scoreboard_UI.Scoreboard_UI_C.IsMinigameTeamBased
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AFortMinigame*                    MinigameToCheck                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UScoreboard_UI_C::IsMinigameTeamBased(class AFortMinigame* MinigameToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "IsMinigameTeamBased");

	Params::Scoreboard_UI_C_IsMinigameTeamBased Parms{};

	Parms.MinigameToCheck = MinigameToCheck;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Scoreboard_UI.Scoreboard_UI_C.MakePlayerScoreboardRow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMinigameScoreboardPlayerRow     PlayerRow                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowWins                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumPlayers                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Standing                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UScoreboard_UI_Row_C*             ScoreboardRow                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::MakePlayerScoreboardRow(const struct FMinigameScoreboardPlayerRow& PlayerRow, int32 PlayerIndex, bool ShowWins, int32 NumPlayers, int32 Standing, class UScoreboard_UI_Row_C** ScoreboardRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "MakePlayerScoreboardRow");

	Params::Scoreboard_UI_C_MakePlayerScoreboardRow Parms{};

	Parms.PlayerRow = std::move(PlayerRow);
	Parms.PlayerIndex = PlayerIndex;
	Parms.ShowWins = ShowWins;
	Parms.NumPlayers = NumPlayers;
	Parms.Standing = Standing;

	UObject::ProcessEvent(Func, &Parms);

	if (ScoreboardRow != nullptr)
		*ScoreboardRow = Parms.ScoreboardRow;
}


// Function Scoreboard_UI.Scoreboard_UI_C.MakeTeamScoreboardRow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMinigameScoreboardBucketRow     MinigameScoreboardBucketRow                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsRoundsGame_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UScoreboard_Team_Widget_C*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UScoreboard_Team_Widget_C* UScoreboard_UI_C::MakeTeamScoreboardRow(const struct FMinigameScoreboardBucketRow& MinigameScoreboardBucketRow, bool IsRoundsGame_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "MakeTeamScoreboardRow");

	Params::Scoreboard_UI_C_MakeTeamScoreboardRow Parms{};

	Parms.MinigameScoreboardBucketRow = std::move(MinigameScoreboardBucketRow);
	Parms.IsRoundsGame_0 = IsRoundsGame_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Scoreboard_UI.Scoreboard_UI_C.OnDisplayLeavingVolumeUI
// (BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::OnDisplayLeavingVolumeUI(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "OnDisplayLeavingVolumeUI");

	Params::Scoreboard_UI_C_OnDisplayLeavingVolumeUI Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.OnDisplayMinigameEndUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::OnDisplayMinigameEndUI(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "OnDisplayMinigameEndUI");

	Params::Scoreboard_UI_C_OnDisplayMinigameEndUI Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "PreConstruct");

	Params::Scoreboard_UI_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.ResetScoreDisplays
// (Public, BlueprintCallable, BlueprintEvent)

void UScoreboard_UI_C::ResetScoreDisplays()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "ResetScoreDisplays");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scoreboard_UI.Scoreboard_UI_C.SetCountdownText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UScoreboard_UI_C::SetCountdownText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "SetCountdownText");

	Params::Scoreboard_UI_C_SetCountdownText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.SetIsCareerScoreboard
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::SetIsCareerScoreboard(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "SetIsCareerScoreboard");

	Params::Scoreboard_UI_C_SetIsCareerScoreboard Parms{};

	Parms.bInValue = bInValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.SetStatsColumns
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UScoreboard_UI_C::SetStatsColumns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "SetStatsColumns");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scoreboard_UI.Scoreboard_UI_C.ShowMinigameEndUI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowGameTotals                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMinigameScoreboardStates               ScoreboardState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DisplayTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::ShowMinigameEndUI(bool ShowGameTotals, EMinigameScoreboardStates ScoreboardState, float DisplayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "ShowMinigameEndUI");

	Params::Scoreboard_UI_C_ShowMinigameEndUI Parms{};

	Parms.ShowGameTotals = ShowGameTotals;
	Parms.ScoreboardState = ScoreboardState;
	Parms.DisplayTime = DisplayTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.ShowTargetPlayerStateInScrollBox
// (Public, BlueprintCallable, BlueprintEvent)

void UScoreboard_UI_C::ShowTargetPlayerStateInScrollBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "ShowTargetPlayerStateInScrollBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scoreboard_UI.Scoreboard_UI_C.ShowWinnerDisplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Winner_Name                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Win_Description                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    GameHasWinner                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::ShowWinnerDisplay(const class FText& Winner_Name, const class FText& Win_Description, bool GameHasWinner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "ShowWinnerDisplay");

	Params::Scoreboard_UI_C_ShowWinnerDisplay Parms{};

	Parms.Winner_Name = std::move(Winner_Name);
	Parms.Win_Description = std::move(Win_Description);
	Parms.GameHasWinner = GameHasWinner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.ShowWinsColumn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UScoreboard_UI_C::ShowWinsColumn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "ShowWinsColumn");

	Params::Scoreboard_UI_C_ShowWinsColumn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Scoreboard_UI.Scoreboard_UI_C.UpdateActiveStats
// (BlueprintCallable, BlueprintEvent)

void UScoreboard_UI_C::UpdateActiveStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "UpdateActiveStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Scoreboard_UI.Scoreboard_UI_C.UpdateRoundDisplay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    GameEnd                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMinigameScoreboardStates               ScoreboardState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::UpdateRoundDisplay(bool GameEnd, EMinigameScoreboardStates ScoreboardState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "UpdateRoundDisplay");

	Params::Scoreboard_UI_C_UpdateRoundDisplay Parms{};

	Parms.GameEnd = GameEnd;
	Parms.ScoreboardState = ScoreboardState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Scoreboard_UI.Scoreboard_UI_C.UpdateStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowGameTotals                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMinigameScoreboardStates               ScoreboardState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScoreboard_UI_C::UpdateStats(bool ShowGameTotals, EMinigameScoreboardStates ScoreboardState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scoreboard_UI_C", "UpdateStats");

	Params::Scoreboard_UI_C_UpdateStats Parms{};

	Parms.ShowGameTotals = ShowGameTotals;
	Parms.ScoreboardState = ScoreboardState;

	UObject::ProcessEvent(Func, &Parms);
}

}

