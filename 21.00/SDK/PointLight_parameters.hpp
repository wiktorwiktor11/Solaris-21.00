#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PointLight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PointLight_structs.hpp"


namespace SDK::Params
{

// Function PointLight.PointLightNativeComponent.StartRhythmUpdate
// 0x0010 (0x0010 - 0x0000)
struct PointLightNativeComponent_StartRhythmUpdate final
{
public:
	struct FTimerHandle                           TimerHandle;                                       // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rate;                                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PointLightNativeComponent_StartRhythmUpdate) == 0x000008, "Wrong alignment on PointLightNativeComponent_StartRhythmUpdate");
static_assert(sizeof(PointLightNativeComponent_StartRhythmUpdate) == 0x000010, "Wrong size on PointLightNativeComponent_StartRhythmUpdate");
static_assert(offsetof(PointLightNativeComponent_StartRhythmUpdate, TimerHandle) == 0x000000, "Member 'PointLightNativeComponent_StartRhythmUpdate::TimerHandle' has a wrong offset!");
static_assert(offsetof(PointLightNativeComponent_StartRhythmUpdate, Rate) == 0x000008, "Member 'PointLightNativeComponent_StartRhythmUpdate::Rate' has a wrong offset!");

// Function PointLight.PointLightNativeComponent.StartShortCircuitUpdate
// 0x0008 (0x0008 - 0x0000)
struct PointLightNativeComponent_StartShortCircuitUpdate final
{
public:
	class UTimelineComponent*                     ShortCircuitTimeline;                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PointLightNativeComponent_StartShortCircuitUpdate) == 0x000008, "Wrong alignment on PointLightNativeComponent_StartShortCircuitUpdate");
static_assert(sizeof(PointLightNativeComponent_StartShortCircuitUpdate) == 0x000008, "Wrong size on PointLightNativeComponent_StartShortCircuitUpdate");
static_assert(offsetof(PointLightNativeComponent_StartShortCircuitUpdate, ShortCircuitTimeline) == 0x000000, "Member 'PointLightNativeComponent_StartShortCircuitUpdate::ShortCircuitTimeline' has a wrong offset!");

// Function PointLight.PointLightNativeComponent.UpdateDeviceSettings
// 0x0038 (0x0038 - 0x0000)
struct PointLightNativeComponent_UpdateDeviceSettings final
{
public:
	struct FPointLightRhythmParameters            RhythmParameters;                                  // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(PointLightNativeComponent_UpdateDeviceSettings) == 0x000008, "Wrong alignment on PointLightNativeComponent_UpdateDeviceSettings");
static_assert(sizeof(PointLightNativeComponent_UpdateDeviceSettings) == 0x000038, "Wrong size on PointLightNativeComponent_UpdateDeviceSettings");
static_assert(offsetof(PointLightNativeComponent_UpdateDeviceSettings, RhythmParameters) == 0x000000, "Member 'PointLightNativeComponent_UpdateDeviceSettings::RhythmParameters' has a wrong offset!");

}

