#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Artemis_BoatSpline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Artemis_BoatSpline.Artemis_BoatSpline_C
// 0x0020 (0x0290 - 0x0270)
class AArtemis_BoatSpline_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       BoatSpline;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABuildingFoundation*                    BoatFoundation;                                    // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SnapToFortniteGrid(const struct FVector& Location, struct FVector* NewLocation);
	void ReceiveBeginPlay();
	void OnReady_C2E712E747854352C550DFAB72482F44(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void GetGridRotationOnSpline(float ForwardVectorYawRotation, class USplineComponent* Spline, int32 SplinePoint, struct FRotator* Rotation, float* Z__Yaw_);
	void ExecuteUbergraph_Artemis_BoatSpline(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Artemis_BoatSpline_C">();
	}
	static class AArtemis_BoatSpline_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AArtemis_BoatSpline_C>();
	}
};
static_assert(alignof(AArtemis_BoatSpline_C) == 0x000008, "Wrong alignment on AArtemis_BoatSpline_C");
static_assert(sizeof(AArtemis_BoatSpline_C) == 0x000290, "Wrong size on AArtemis_BoatSpline_C");
static_assert(offsetof(AArtemis_BoatSpline_C, UberGraphFrame) == 0x000270, "Member 'AArtemis_BoatSpline_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AArtemis_BoatSpline_C, BoatSpline) == 0x000278, "Member 'AArtemis_BoatSpline_C::BoatSpline' has a wrong offset!");
static_assert(offsetof(AArtemis_BoatSpline_C, DefaultSceneRoot) == 0x000280, "Member 'AArtemis_BoatSpline_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AArtemis_BoatSpline_C, BoatFoundation) == 0x000288, "Member 'AArtemis_BoatSpline_C::BoatFoundation' has a wrong offset!");

}

