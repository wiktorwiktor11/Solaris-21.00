#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Artemis_Daisy_Cap_A_Small_Bounce

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "DaisyBouceHeightsEnum_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Artemis_Daisy_Cap_A_Small_Bounce.Artemis_Daisy_Cap_A_Small_Bounce_C
// 0x0170 (0x0FE0 - 0x0E70)
class AArtemis_Daisy_Cap_A_Small_Bounce_C : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        AudioAmbLoop;                                      // 0x0E78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       PlayerBlockingCollision;                           // 0x0E80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Daisy_Mushroom_LightBeam;                       // 0x0E88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Jump_Collision;                                    // 0x0E90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_TintColor_942C857B40CD88E33427BC9BC4E902E5; // 0x0E98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_FadeOut_942C857B40CD88E33427BC9BC4E902E5; // 0x0E9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_942C857B40CD88E33427BC9BC4E902E5; // 0x0EA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA1[0x7];                                      // 0x0EA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x0EA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaterialEmissive_FadeIn_34AAA5744175A9D98D8B0C8730493B9D; // 0x0EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaterialEmissive_TintColor_34AAA5744175A9D98D8B0C8730493B9D; // 0x0EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MaterialEmissive__Direction_34AAA5744175A9D98D8B0C8730493B9D; // 0x0EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB9[0x7];                                      // 0x0EB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MaterialEmissive;                                  // 0x0EC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Bounce_Emissive_Scale_Z_B05F57B94DD98DE15F23BBB460A74175; // 0x0EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Bounce_Emissive_Scale_XY_B05F57B94DD98DE15F23BBB460A74175; // 0x0ECC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Bounce_Emissive_Emissive_Mult_B05F57B94DD98DE15F23BBB460A74175; // 0x0ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Bounce_Emissive__Direction_B05F57B94DD98DE15F23BBB460A74175; // 0x0ED4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED5[0x3];                                      // 0x0ED5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Bounce_Emissive;                                   // 0x0ED8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceHeight;                                      // 0x0EE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinalBounceJumpHeight;                             // 0x0EE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   LaunchForceFeedback;                               // 0x0EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              OverlapPawn;                                       // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  OverlapController;                                 // 0x0EF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_PlayerLaunched;                                 // 0x0F00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             LilypadSound;                                      // 0x0F08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDaisyBouceHeightsEnum                        BouceHeights;                                      // 0x0F10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F11[0x3];                                      // 0x0F11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DaisyBouceHeight;                                  // 0x0F14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForwardVectorAddition;                             // 0x0F18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1C[0x4];                                      // 0x0F1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            GE_ApplyHealOverTime;                              // 0x0F20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTag                           GC_TriggeredBounce;                                // 0x0F28(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2C[0x4];                                      // 0x0F2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         BounceHeight_2Floors;                              // 0x0F30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         BounceHeight_4Floors;                              // 0x0F58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         FX_NSAdjust;                                       // 0x0F80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PlayerLaunched;                                    // 0x0F84(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        HealTarget;                                        // 0x0F88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OrigScale;                                         // 0x0F90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_FallDamageImmunity;                             // 0x0FA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          HealOnCooldown;                                    // 0x0FB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB1[0x7];                                      // 0x0FB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         HealCooldownDuration;                              // 0x0FB8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__Jump_Collision_K2Node_ComponentBoundEvent_252_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Bounce_Emissive__FinishedFunc();
	void Bounce_Emissive__UpdateFunc();
	void BounceAnim();
	void CeilingCheck(bool* Success);
	void ExecuteUbergraph_Artemis_Daisy_Cap_A_Small_Bounce(int32 EntryPoint);
	void HandleHeal(class UAbilitySystemComponent* AbilitySystem);
	void MaterialEmissive__FinishedFunc();
	void MaterialEmissive__UpdateFunc();
	void ReceiveBeginPlay();
	void ResetHealCooldown();
	void ResetMinMaxScales();
	void Timeline__FinishedFunc();
	void Timeline__UpdateFunc();
	void ToggleAmbientFX(bool Active);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Artemis_Daisy_Cap_A_Small_Bounce_C">();
	}
	static class AArtemis_Daisy_Cap_A_Small_Bounce_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AArtemis_Daisy_Cap_A_Small_Bounce_C>();
	}
};
static_assert(alignof(AArtemis_Daisy_Cap_A_Small_Bounce_C) == 0x000008, "Wrong alignment on AArtemis_Daisy_Cap_A_Small_Bounce_C");
static_assert(sizeof(AArtemis_Daisy_Cap_A_Small_Bounce_C) == 0x000FE0, "Wrong size on AArtemis_Daisy_Cap_A_Small_Bounce_C");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, UberGraphFrame) == 0x000E70, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, AudioAmbLoop) == 0x000E78, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::AudioAmbLoop' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, PlayerBlockingCollision) == 0x000E80, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::PlayerBlockingCollision' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, NS_Daisy_Mushroom_LightBeam) == 0x000E88, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::NS_Daisy_Mushroom_LightBeam' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, Jump_Collision) == 0x000E90, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::Jump_Collision' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, Timeline_TintColor_942C857B40CD88E33427BC9BC4E902E5) == 0x000E98, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::Timeline_TintColor_942C857B40CD88E33427BC9BC4E902E5' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, Timeline_FadeOut_942C857B40CD88E33427BC9BC4E902E5) == 0x000E9C, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::Timeline_FadeOut_942C857B40CD88E33427BC9BC4E902E5' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, Timeline__Direction_942C857B40CD88E33427BC9BC4E902E5) == 0x000EA0, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::Timeline__Direction_942C857B40CD88E33427BC9BC4E902E5' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, Timeline) == 0x000EA8, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::Timeline' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, MaterialEmissive_FadeIn_34AAA5744175A9D98D8B0C8730493B9D) == 0x000EB0, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::MaterialEmissive_FadeIn_34AAA5744175A9D98D8B0C8730493B9D' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, MaterialEmissive_TintColor_34AAA5744175A9D98D8B0C8730493B9D) == 0x000EB4, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::MaterialEmissive_TintColor_34AAA5744175A9D98D8B0C8730493B9D' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, MaterialEmissive__Direction_34AAA5744175A9D98D8B0C8730493B9D) == 0x000EB8, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::MaterialEmissive__Direction_34AAA5744175A9D98D8B0C8730493B9D' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, MaterialEmissive) == 0x000EC0, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::MaterialEmissive' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, Bounce_Emissive_Scale_Z_B05F57B94DD98DE15F23BBB460A74175) == 0x000EC8, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::Bounce_Emissive_Scale_Z_B05F57B94DD98DE15F23BBB460A74175' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, Bounce_Emissive_Scale_XY_B05F57B94DD98DE15F23BBB460A74175) == 0x000ECC, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::Bounce_Emissive_Scale_XY_B05F57B94DD98DE15F23BBB460A74175' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, Bounce_Emissive_Emissive_Mult_B05F57B94DD98DE15F23BBB460A74175) == 0x000ED0, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::Bounce_Emissive_Emissive_Mult_B05F57B94DD98DE15F23BBB460A74175' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, Bounce_Emissive__Direction_B05F57B94DD98DE15F23BBB460A74175) == 0x000ED4, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::Bounce_Emissive__Direction_B05F57B94DD98DE15F23BBB460A74175' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, Bounce_Emissive) == 0x000ED8, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::Bounce_Emissive' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, BounceHeight) == 0x000EE0, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::BounceHeight' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, FinalBounceJumpHeight) == 0x000EE4, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::FinalBounceJumpHeight' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, LaunchForceFeedback) == 0x000EE8, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::LaunchForceFeedback' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, OverlapPawn) == 0x000EF0, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::OverlapPawn' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, OverlapController) == 0x000EF8, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::OverlapController' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, GE_PlayerLaunched) == 0x000F00, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::GE_PlayerLaunched' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, LilypadSound) == 0x000F08, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::LilypadSound' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, BouceHeights) == 0x000F10, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::BouceHeights' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, DaisyBouceHeight) == 0x000F14, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::DaisyBouceHeight' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, ForwardVectorAddition) == 0x000F18, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::ForwardVectorAddition' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, GE_ApplyHealOverTime) == 0x000F20, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::GE_ApplyHealOverTime' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, GC_TriggeredBounce) == 0x000F28, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::GC_TriggeredBounce' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, BounceHeight_2Floors) == 0x000F30, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::BounceHeight_2Floors' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, BounceHeight_4Floors) == 0x000F58, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::BounceHeight_4Floors' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, FX_NSAdjust) == 0x000F80, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::FX_NSAdjust' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, PlayerLaunched) == 0x000F84, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::PlayerLaunched' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, HealTarget) == 0x000F88, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::HealTarget' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, OrigScale) == 0x000F90, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::OrigScale' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, GE_FallDamageImmunity) == 0x000FA8, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::GE_FallDamageImmunity' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, HealOnCooldown) == 0x000FB0, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::HealOnCooldown' has a wrong offset!");
static_assert(offsetof(AArtemis_Daisy_Cap_A_Small_Bounce_C, HealCooldownDuration) == 0x000FB8, "Member 'AArtemis_Daisy_Cap_A_Small_Bounce_C::HealCooldownDuration' has a wrong offset!");

}

