#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OctopusVehicle

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass OctopusVehicle.OctopusVehicle_C
// 0x0210 (0x2640 - 0x2430)
class AOctopusVehicle_C final : public AFortOctopusVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortVehicleSeatWeaponComponent*        FortVehicleSeatWeapon;                             // 0x2438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SeatCollisionSub1;                                 // 0x2440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SeatCollisionSub0;                                 // 0x2448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SeatCollision;                                     // 0x2450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Reticle;                                           // 0x2458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Grapple_Rope;                                   // 0x2460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleAudioVoice*                 AudioTowCable;                                     // 0x2468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleAudioVoice*                 AudioWind1P;                                       // 0x2470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           BoostCollisionAudio;                               // 0x2478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioBoost;                                        // 0x2480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioGetInOut;                                     // 0x2488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           NormalCollisionAudio;                              // 0x2490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleAudioVoice*                 AudioMovement;                                     // 0x2498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Octopus_DustFX;                                  // 0x24A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Octopus_Boost;                                   // 0x24A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Octopus_Coil_Idle_LowL;                          // 0x24B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Octopus_Coil_Idle_TopL;                          // 0x24B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Octopus_Coil_Idle_LowR;                          // 0x24C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Octopus_Coil_Idle_TopR;                          // 0x24C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnTimeline_NewTrack_0_DACA08F0459073610F3E73A2BF465BDC; // 0x24D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ReturnTimeline__Direction_DACA08F0459073610F3E73A2BF465BDC; // 0x24D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D5[0x3];                                     // 0x24D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ReturnTimeline;                                    // 0x24D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostTimeline_NewTrack_0_02116727453CB8E3AEA5B3B956AF8B89; // 0x24E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostTimeline_Rumble_02116727453CB8E3AEA5B3B956AF8B89; // 0x24E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BoostTimeline__Direction_02116727453CB8E3AEA5B3B956AF8B89; // 0x24E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24E9[0x7];                                     // 0x24E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BoostTimeline;                                     // 0x24F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Startup_Intensity_86604D5D46B5CFA68D4F23AE51FF8D5D; // 0x24F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Startup__Direction_86604D5D46B5CFA68D4F23AE51FF8D5D; // 0x24FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24FD[0x3];                                     // 0x24FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Startup;                                           // 0x2500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       IdleFXArray;                                       // 0x2508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         ImpactResetTimer;                                  // 0x2518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceThreshold;                                   // 0x251C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBoostCameraActive;                                // 0x2520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2521[0x3];                                     // 0x2521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BoostTimelinePlayRate;                             // 0x2524(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostFOVOffset;                                    // 0x2528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostCameraDistanceOffset;                         // 0x252C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostRumbleValue;                                  // 0x2530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostReversePlayRate;                              // 0x2534(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceEffectsThreshold;                            // 0x2538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InRangeMax;                                        // 0x253C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InMax;                                             // 0x2540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutMax;                                            // 0x2544(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BounceCameraShake;                                 // 0x2548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_NoCameraShake;                               // 0x2550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2551[0x7];                                     // 0x2551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      DrivingPlayerController;                           // 0x2558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnGetIn;                                      // 0x2560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnGetOut;                                     // 0x2568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_GrantWeapon;                                    // 0x2570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GE_EnterTurret;                                    // 0x2578(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         PickaxeImpulseStrength;                            // 0x2580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanPlayBoostBounceAudio;                          // 0x2584(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2585[0x3];                                     // 0x2585(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundOnDamageThreshold;                            // 0x2588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CableStart;                                        // 0x2590(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CableEnd;                                          // 0x25A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetractScaleStart;                                 // 0x25C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C4[0x4];                                     // 0x25C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CableLoopTimer;                                    // 0x25C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         OutgoingWiggleFactor;                              // 0x25D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WiggleAmount;                                      // 0x25D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CableReturnMeshComponent;                          // 0x25D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTowhookMissed;                                    // 0x25E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E1[0x7];                                     // 0x25E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               InWaterFX;                                         // 0x25E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        InWaterLoop;                                       // 0x25F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasRopeRetracted;                                 // 0x25F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F9[0x3];                                     // 0x25F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CooldownCueEvent;                                  // 0x25FC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2604[0x4];                                     // 0x2604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_Boost_Cooldown;                                 // 0x2608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ImpactCue;                                         // 0x2610(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageStateIndex;                                  // 0x2614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 DamageStates;                                      // 0x2618(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 DamageScalarParameterValues;                       // 0x2628(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AddCooldownCueEvent(class AFortPlayerPawn* Player_Pawn);
	void BoostCameraBegin();
	void BoostCameraReverse();
	void BoostTimeline__FinishedFunc();
	void BoostTimeline__UpdateFunc();
	void Bounce_Collision_Audio_Cooldown();
	void CameraShake(float Scale);
	void CheckWater();
	void EventOnTowhookAttached();
	void ExecuteUbergraph_OctopusVehicle(int32 EntryPoint);
	void GroundHit(float Scale);
	void Handle_On_Health_Changed();
	void HitWithPickaxe(const struct FVector& HitDirection);
	void ImpactReset();
	void K2_ApplyCosmeticWrap(const class UAthenaItemWrapDefinition* LoadedWrap);
	void OnBoostBegin();
	void OnBoostBounce(const struct FVector& Location, const struct FVector& Normal, const float Force, class AActor* HitActor, int32 BounceCount);
	void OnBoostEnd();
	void OnDamaged(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnEnteredWaterVolume(const struct FVector& WaterSurfacePoint);
	void OnExitedWaterVolume(const struct FVector& WaterSurfacePoint);
	void OnHit(const struct FVector& Location, const struct FVector& Normal, const float Force, class AActor* HitActor);
	void OnHoldExitStarted(class AFortPawn* ExitingPawn, const float ExitDuration);
	void OnHoldExitStopped(class AFortPawn* ExitingPawn);
	void OnPawnEnterVehicle(class AFortPlayerPawn* PlayerPawn, const int32 SeatIdx);
	void OnPawnExitVehicle(class AFortPlayerPawn* PlayerPawn, class FName ExitSocketName);
	void OnStopTick();
	void OnUpdateTargetPoint(const bool bAimAssistHitsTarget, const struct FVector& TargetPoint);
	void ReceiveBeginPlay();
	void RemoveCooldownCueEvent(class AFortPlayerPawn* Player_Pawn);
	void RetractCable();
	void ReturnTimeline__FinishedFunc();
	void ReturnTimeline__UpdateFunc();
	void ReverseBoostTimeline();
	void SetGrappleVisible(bool Visible);
	void ShowCooldownCue(class AFortPlayerPawn* Pawn, float Duration);
	void StartDriverCameraShake();
	void Startup__FinishedFunc();
	void Startup__UpdateFunc();
	void StopCameraShake();
	void TowhookAttached();
	void TowhookDetached();
	void TowhookLoop();
	void TowhookMissed();
	void TowhookShot();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OctopusVehicle_C">();
	}
	static class AOctopusVehicle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOctopusVehicle_C>();
	}
};
static_assert(alignof(AOctopusVehicle_C) == 0x000010, "Wrong alignment on AOctopusVehicle_C");
static_assert(sizeof(AOctopusVehicle_C) == 0x002640, "Wrong size on AOctopusVehicle_C");
static_assert(offsetof(AOctopusVehicle_C, UberGraphFrame) == 0x002430, "Member 'AOctopusVehicle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, FortVehicleSeatWeapon) == 0x002438, "Member 'AOctopusVehicle_C::FortVehicleSeatWeapon' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, SeatCollisionSub1) == 0x002440, "Member 'AOctopusVehicle_C::SeatCollisionSub1' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, SeatCollisionSub0) == 0x002448, "Member 'AOctopusVehicle_C::SeatCollisionSub0' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, SeatCollision) == 0x002450, "Member 'AOctopusVehicle_C::SeatCollision' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, Reticle) == 0x002458, "Member 'AOctopusVehicle_C::Reticle' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, SM_Grapple_Rope) == 0x002460, "Member 'AOctopusVehicle_C::SM_Grapple_Rope' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, AudioTowCable) == 0x002468, "Member 'AOctopusVehicle_C::AudioTowCable' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, AudioWind1P) == 0x002470, "Member 'AOctopusVehicle_C::AudioWind1P' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BoostCollisionAudio) == 0x002478, "Member 'AOctopusVehicle_C::BoostCollisionAudio' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, AudioBoost) == 0x002480, "Member 'AOctopusVehicle_C::AudioBoost' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, AudioGetInOut) == 0x002488, "Member 'AOctopusVehicle_C::AudioGetInOut' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, NormalCollisionAudio) == 0x002490, "Member 'AOctopusVehicle_C::NormalCollisionAudio' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, AudioMovement) == 0x002498, "Member 'AOctopusVehicle_C::AudioMovement' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, P_Octopus_DustFX) == 0x0024A0, "Member 'AOctopusVehicle_C::P_Octopus_DustFX' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, P_Octopus_Boost) == 0x0024A8, "Member 'AOctopusVehicle_C::P_Octopus_Boost' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, P_Octopus_Coil_Idle_LowL) == 0x0024B0, "Member 'AOctopusVehicle_C::P_Octopus_Coil_Idle_LowL' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, P_Octopus_Coil_Idle_TopL) == 0x0024B8, "Member 'AOctopusVehicle_C::P_Octopus_Coil_Idle_TopL' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, P_Octopus_Coil_Idle_LowR) == 0x0024C0, "Member 'AOctopusVehicle_C::P_Octopus_Coil_Idle_LowR' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, P_Octopus_Coil_Idle_TopR) == 0x0024C8, "Member 'AOctopusVehicle_C::P_Octopus_Coil_Idle_TopR' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, ReturnTimeline_NewTrack_0_DACA08F0459073610F3E73A2BF465BDC) == 0x0024D0, "Member 'AOctopusVehicle_C::ReturnTimeline_NewTrack_0_DACA08F0459073610F3E73A2BF465BDC' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, ReturnTimeline__Direction_DACA08F0459073610F3E73A2BF465BDC) == 0x0024D4, "Member 'AOctopusVehicle_C::ReturnTimeline__Direction_DACA08F0459073610F3E73A2BF465BDC' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, ReturnTimeline) == 0x0024D8, "Member 'AOctopusVehicle_C::ReturnTimeline' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BoostTimeline_NewTrack_0_02116727453CB8E3AEA5B3B956AF8B89) == 0x0024E0, "Member 'AOctopusVehicle_C::BoostTimeline_NewTrack_0_02116727453CB8E3AEA5B3B956AF8B89' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BoostTimeline_Rumble_02116727453CB8E3AEA5B3B956AF8B89) == 0x0024E4, "Member 'AOctopusVehicle_C::BoostTimeline_Rumble_02116727453CB8E3AEA5B3B956AF8B89' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BoostTimeline__Direction_02116727453CB8E3AEA5B3B956AF8B89) == 0x0024E8, "Member 'AOctopusVehicle_C::BoostTimeline__Direction_02116727453CB8E3AEA5B3B956AF8B89' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BoostTimeline) == 0x0024F0, "Member 'AOctopusVehicle_C::BoostTimeline' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, Startup_Intensity_86604D5D46B5CFA68D4F23AE51FF8D5D) == 0x0024F8, "Member 'AOctopusVehicle_C::Startup_Intensity_86604D5D46B5CFA68D4F23AE51FF8D5D' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, Startup__Direction_86604D5D46B5CFA68D4F23AE51FF8D5D) == 0x0024FC, "Member 'AOctopusVehicle_C::Startup__Direction_86604D5D46B5CFA68D4F23AE51FF8D5D' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, Startup) == 0x002500, "Member 'AOctopusVehicle_C::Startup' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, IdleFXArray) == 0x002508, "Member 'AOctopusVehicle_C::IdleFXArray' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, ImpactResetTimer) == 0x002518, "Member 'AOctopusVehicle_C::ImpactResetTimer' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BounceThreshold) == 0x00251C, "Member 'AOctopusVehicle_C::BounceThreshold' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, bBoostCameraActive) == 0x002520, "Member 'AOctopusVehicle_C::bBoostCameraActive' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BoostTimelinePlayRate) == 0x002524, "Member 'AOctopusVehicle_C::BoostTimelinePlayRate' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BoostFOVOffset) == 0x002528, "Member 'AOctopusVehicle_C::BoostFOVOffset' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BoostCameraDistanceOffset) == 0x00252C, "Member 'AOctopusVehicle_C::BoostCameraDistanceOffset' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BoostRumbleValue) == 0x002530, "Member 'AOctopusVehicle_C::BoostRumbleValue' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BoostReversePlayRate) == 0x002534, "Member 'AOctopusVehicle_C::BoostReversePlayRate' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BounceEffectsThreshold) == 0x002538, "Member 'AOctopusVehicle_C::BounceEffectsThreshold' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, InRangeMax) == 0x00253C, "Member 'AOctopusVehicle_C::InRangeMax' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, InMax) == 0x002540, "Member 'AOctopusVehicle_C::InMax' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, OutMax) == 0x002544, "Member 'AOctopusVehicle_C::OutMax' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, BounceCameraShake) == 0x002548, "Member 'AOctopusVehicle_C::BounceCameraShake' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, Debug_NoCameraShake) == 0x002550, "Member 'AOctopusVehicle_C::Debug_NoCameraShake' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, DrivingPlayerController) == 0x002558, "Member 'AOctopusVehicle_C::DrivingPlayerController' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, SoundOnGetIn) == 0x002560, "Member 'AOctopusVehicle_C::SoundOnGetIn' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, SoundOnGetOut) == 0x002568, "Member 'AOctopusVehicle_C::SoundOnGetOut' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, GE_GrantWeapon) == 0x002570, "Member 'AOctopusVehicle_C::GE_GrantWeapon' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, GE_EnterTurret) == 0x002578, "Member 'AOctopusVehicle_C::GE_EnterTurret' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, PickaxeImpulseStrength) == 0x002580, "Member 'AOctopusVehicle_C::PickaxeImpulseStrength' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, bCanPlayBoostBounceAudio) == 0x002584, "Member 'AOctopusVehicle_C::bCanPlayBoostBounceAudio' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, SoundOnDamageThreshold) == 0x002588, "Member 'AOctopusVehicle_C::SoundOnDamageThreshold' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, CableStart) == 0x002590, "Member 'AOctopusVehicle_C::CableStart' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, CableEnd) == 0x0025A8, "Member 'AOctopusVehicle_C::CableEnd' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, RetractScaleStart) == 0x0025C0, "Member 'AOctopusVehicle_C::RetractScaleStart' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, CableLoopTimer) == 0x0025C8, "Member 'AOctopusVehicle_C::CableLoopTimer' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, OutgoingWiggleFactor) == 0x0025D0, "Member 'AOctopusVehicle_C::OutgoingWiggleFactor' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, WiggleAmount) == 0x0025D4, "Member 'AOctopusVehicle_C::WiggleAmount' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, CableReturnMeshComponent) == 0x0025D8, "Member 'AOctopusVehicle_C::CableReturnMeshComponent' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, bTowhookMissed) == 0x0025E0, "Member 'AOctopusVehicle_C::bTowhookMissed' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, InWaterFX) == 0x0025E8, "Member 'AOctopusVehicle_C::InWaterFX' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, InWaterLoop) == 0x0025F0, "Member 'AOctopusVehicle_C::InWaterLoop' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, bHasRopeRetracted) == 0x0025F8, "Member 'AOctopusVehicle_C::bHasRopeRetracted' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, CooldownCueEvent) == 0x0025FC, "Member 'AOctopusVehicle_C::CooldownCueEvent' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, GE_Boost_Cooldown) == 0x002608, "Member 'AOctopusVehicle_C::GE_Boost_Cooldown' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, ImpactCue) == 0x002610, "Member 'AOctopusVehicle_C::ImpactCue' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, DamageStateIndex) == 0x002614, "Member 'AOctopusVehicle_C::DamageStateIndex' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, DamageStates) == 0x002618, "Member 'AOctopusVehicle_C::DamageStates' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_C, DamageScalarParameterValues) == 0x002628, "Member 'AOctopusVehicle_C::DamageScalarParameterValues' has a wrong offset!");

}

