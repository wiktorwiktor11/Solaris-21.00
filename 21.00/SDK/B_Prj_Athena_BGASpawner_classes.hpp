#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_BGASpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_BGASpawner.B_Prj_Athena_BGASpawner_C
// 0x0098 (0x0A88 - 0x09F0)
class AB_Prj_Athena_BGASpawner_C : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class AActor*>                         FoundBuildingOnDied;                               // 0x09F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          bResumeSimulation;                                 // 0x0A08(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A09[0x3];                                      // 0x0A09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDistanceToKnock;                                // 0x0A0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxLaunchPower;                                    // 0x0A10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A14[0x4];                                      // 0x0A14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        BeatAudioComponent;                                // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeatMultiplierForStart;                            // 0x0A20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeatsPerLoop;                                      // 0x0A24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentBeatInTheLoop;                              // 0x0A28(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinLaunchPower;                                    // 0x0A2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BGAToSpawn;                                        // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundActivate;                                     // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnScale;                                        // 0x0A40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnPosOffsetAlongNormal;                         // 0x0A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnPosZOffsetInWater;                            // 0x0A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned;                                           // 0x0A60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnOnCollision;                                  // 0x0A61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A62[0x2];                                      // 0x0A62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDotWithUp;                                      // 0x0A64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DontSpawnOnVehicles;                               // 0x0A68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A69[0x7];                                      // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Splash_Sound;                                      // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SpawnedBGA;                                        // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnPosAdditionalZOffset;                         // 0x0A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseImpactNormalForBGASpawnRotation;                // 0x0A84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool WillBounceOffTarget(const struct FHitResult& Hit);
	class AActor* SpawnBGA_(const struct FVector& Normal, class AActor* HitActor, class UPrimitiveComponent* HitComp, const struct FVector& Pos, bool FromWater, const struct FHitResult& Hit);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Held_Water_Impact();
	void GetClosestPoint(class UPrimitiveComponent* Component, const struct FVector& StartingPoint, struct FVector* Point);
	void ExecuteUbergraph_B_Prj_Athena_BGASpawner(int32 EntryPoint);
	void CheckForWater_(const struct FVector& CurrPos, class AActor* HitActor, struct FVector* PosAboveWater);
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_BGASpawner_C">();
	}
	static class AB_Prj_Athena_BGASpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_BGASpawner_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_BGASpawner_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_BGASpawner_C");
static_assert(sizeof(AB_Prj_Athena_BGASpawner_C) == 0x000A88, "Wrong size on AB_Prj_Athena_BGASpawner_C");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, UberGraphFrame) == 0x0009F0, "Member 'AB_Prj_Athena_BGASpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, FoundBuildingOnDied) == 0x0009F8, "Member 'AB_Prj_Athena_BGASpawner_C::FoundBuildingOnDied' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, bResumeSimulation) == 0x000A08, "Member 'AB_Prj_Athena_BGASpawner_C::bResumeSimulation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MinDistanceToKnock) == 0x000A0C, "Member 'AB_Prj_Athena_BGASpawner_C::MinDistanceToKnock' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MaxLaunchPower) == 0x000A10, "Member 'AB_Prj_Athena_BGASpawner_C::MaxLaunchPower' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BeatAudioComponent) == 0x000A18, "Member 'AB_Prj_Athena_BGASpawner_C::BeatAudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BeatMultiplierForStart) == 0x000A20, "Member 'AB_Prj_Athena_BGASpawner_C::BeatMultiplierForStart' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BeatsPerLoop) == 0x000A24, "Member 'AB_Prj_Athena_BGASpawner_C::BeatsPerLoop' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, CurrentBeatInTheLoop) == 0x000A28, "Member 'AB_Prj_Athena_BGASpawner_C::CurrentBeatInTheLoop' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MinLaunchPower) == 0x000A2C, "Member 'AB_Prj_Athena_BGASpawner_C::MinLaunchPower' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BGAToSpawn) == 0x000A30, "Member 'AB_Prj_Athena_BGASpawner_C::BGAToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SoundActivate) == 0x000A38, "Member 'AB_Prj_Athena_BGASpawner_C::SoundActivate' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnScale) == 0x000A40, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnScale' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnPosOffsetAlongNormal) == 0x000A58, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnPosOffsetAlongNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnPosZOffsetInWater) == 0x000A5C, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnPosZOffsetInWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, Spawned) == 0x000A60, "Member 'AB_Prj_Athena_BGASpawner_C::Spawned' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnOnCollision) == 0x000A61, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnOnCollision' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MinDotWithUp) == 0x000A64, "Member 'AB_Prj_Athena_BGASpawner_C::MinDotWithUp' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, DontSpawnOnVehicles) == 0x000A68, "Member 'AB_Prj_Athena_BGASpawner_C::DontSpawnOnVehicles' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, Splash_Sound) == 0x000A70, "Member 'AB_Prj_Athena_BGASpawner_C::Splash_Sound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnedBGA) == 0x000A78, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnedBGA' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnPosAdditionalZOffset) == 0x000A80, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnPosAdditionalZOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, UseImpactNormalForBGASpawnRotation) == 0x000A84, "Member 'AB_Prj_Athena_BGASpawner_C::UseImpactNormalForBGASpawnRotation' has a wrong offset!");

}

