#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemMcp

#include "Basic.hpp"


namespace SDK
{

// Enum OnlineSubsystemMcp.EOnlineLinkModerationStatus
// NumValues: 0x0004
enum class EOnlineLinkModerationStatus : uint8
{
	Unmoderated                              = 0,
	Approved                                 = 1,
	Denied                                   = 2,
	EOnlineLinkModerationStatus_MAX          = 3,
};

// Enum OnlineSubsystemMcp.ESocialCommsPermission
// NumValues: 0x0005
enum class ESocialCommsPermission : uint8
{
	Nobody                                   = 0,
	FriendsOnly                              = 1,
	FriendsAndTeammates                      = 2,
	Everybody                                = 3,
	ESocialCommsPermission_MAX               = 4,
};

// Enum OnlineSubsystemMcp.ESocialProfilePrivacySettingLevel
// NumValues: 0x0004
enum class ESocialProfilePrivacySettingLevel : uint8
{
	Public                                   = 0,
	FriendsOnly                              = 1,
	Private                                  = 2,
	ESocialProfilePrivacySettingLevel_MAX    = 3,
};

// Enum OnlineSubsystemMcp.ESocialProfilePrivacySettingBadges
// NumValues: 0x0003
enum class ESocialProfilePrivacySettingBadges : uint8
{
	FriendsOnly                              = 0,
	Private                                  = 1,
	ESocialProfilePrivacySettingBadges_MAX   = 2,
};

// Enum OnlineSubsystemMcp.EMutualFriendsPrivacyPolicy
// NumValues: 0x0005
enum class EMutualFriendsPrivacyPolicy : uint8
{
	All                                      = 0,
	Friends                                  = 1,
	None                                     = 2,
	InvalidOrMax                             = 3,
	EMutualFriendsPrivacyPolicy_MAX          = 4,
};

// ScriptStruct OnlineSubsystemMcp.OnlineISOLanguageInfo
// 0x0038 (0x0038 - 0x0000)
struct FOnlineISOLanguageInfo final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Config, NativeAccessSpecifierPublic)
	class FString                                 LanguageId;                                        // 0x0018(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BackendId;                                         // 0x0028(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineISOLanguageInfo) == 0x000008, "Wrong alignment on FOnlineISOLanguageInfo");
static_assert(sizeof(FOnlineISOLanguageInfo) == 0x000038, "Wrong size on FOnlineISOLanguageInfo");
static_assert(offsetof(FOnlineISOLanguageInfo, DisplayName) == 0x000000, "Member 'FOnlineISOLanguageInfo::DisplayName' has a wrong offset!");
static_assert(offsetof(FOnlineISOLanguageInfo, LanguageId) == 0x000018, "Member 'FOnlineISOLanguageInfo::LanguageId' has a wrong offset!");
static_assert(offsetof(FOnlineISOLanguageInfo, BackendId) == 0x000028, "Member 'FOnlineISOLanguageInfo::BackendId' has a wrong offset!");

// ScriptStruct OnlineSubsystemMcp.OnlineISORegionInfo
// 0x0038 (0x0038 - 0x0000)
struct FOnlineISORegionInfo final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Config, NativeAccessSpecifierPublic)
	class FString                                 RegionId;                                          // 0x0018(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BackendId;                                         // 0x0028(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineISORegionInfo) == 0x000008, "Wrong alignment on FOnlineISORegionInfo");
static_assert(sizeof(FOnlineISORegionInfo) == 0x000038, "Wrong size on FOnlineISORegionInfo");
static_assert(offsetof(FOnlineISORegionInfo, DisplayName) == 0x000000, "Member 'FOnlineISORegionInfo::DisplayName' has a wrong offset!");
static_assert(offsetof(FOnlineISORegionInfo, RegionId) == 0x000018, "Member 'FOnlineISORegionInfo::RegionId' has a wrong offset!");
static_assert(offsetof(FOnlineISORegionInfo, BackendId) == 0x000028, "Member 'FOnlineISORegionInfo::BackendId' has a wrong offset!");

// ScriptStruct OnlineSubsystemMcp.JsonToxicityEvaluationRequest
// 0x0010 (0x0010 - 0x0000)
struct FJsonToxicityEvaluationRequest final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJsonToxicityEvaluationRequest) == 0x000008, "Wrong alignment on FJsonToxicityEvaluationRequest");
static_assert(sizeof(FJsonToxicityEvaluationRequest) == 0x000010, "Wrong size on FJsonToxicityEvaluationRequest");
static_assert(offsetof(FJsonToxicityEvaluationRequest, Text) == 0x000000, "Member 'FJsonToxicityEvaluationRequest::Text' has a wrong offset!");

// ScriptStruct OnlineSubsystemMcp.JsonToxicityBulkEvaluationRequest
// 0x0010 (0x0010 - 0x0000)
struct FJsonToxicityBulkEvaluationRequest final
{
public:
	TArray<class FString>                         texts;                                             // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJsonToxicityBulkEvaluationRequest) == 0x000008, "Wrong alignment on FJsonToxicityBulkEvaluationRequest");
static_assert(sizeof(FJsonToxicityBulkEvaluationRequest) == 0x000010, "Wrong size on FJsonToxicityBulkEvaluationRequest");
static_assert(offsetof(FJsonToxicityBulkEvaluationRequest, texts) == 0x000000, "Member 'FJsonToxicityBulkEvaluationRequest::texts' has a wrong offset!");

// ScriptStruct OnlineSubsystemMcp.JsonToxicityEvaluationResponse
// 0x0001 (0x0001 - 0x0000)
struct FJsonToxicityEvaluationResponse final
{
public:
	bool                                          toxic;                                             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJsonToxicityEvaluationResponse) == 0x000001, "Wrong alignment on FJsonToxicityEvaluationResponse");
static_assert(sizeof(FJsonToxicityEvaluationResponse) == 0x000001, "Wrong size on FJsonToxicityEvaluationResponse");
static_assert(offsetof(FJsonToxicityEvaluationResponse, toxic) == 0x000000, "Member 'FJsonToxicityEvaluationResponse::toxic' has a wrong offset!");

// ScriptStruct OnlineSubsystemMcp.JsonToxicityBulkEvaluationResponse
// 0x0010 (0x0010 - 0x0000)
struct FJsonToxicityBulkEvaluationResponse final
{
public:
	TArray<bool>                                  isToxic;                                           // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FJsonToxicityBulkEvaluationResponse) == 0x000008, "Wrong alignment on FJsonToxicityBulkEvaluationResponse");
static_assert(sizeof(FJsonToxicityBulkEvaluationResponse) == 0x000010, "Wrong size on FJsonToxicityBulkEvaluationResponse");
static_assert(offsetof(FJsonToxicityBulkEvaluationResponse, isToxic) == 0x000000, "Member 'FJsonToxicityBulkEvaluationResponse::isToxic' has a wrong offset!");

}

