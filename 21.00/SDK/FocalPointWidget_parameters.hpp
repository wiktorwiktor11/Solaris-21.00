#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FocalPointWidget

#include "Basic.hpp"


namespace SDK::Params
{

// Function FocalPointWidget.FocalPointWidget_C.EventShowWidget
// 0x0001 (0x0001 - 0x0000)
struct FocalPointWidget_C_EventShowWidget final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FocalPointWidget_C_EventShowWidget) == 0x000001, "Wrong alignment on FocalPointWidget_C_EventShowWidget");
static_assert(sizeof(FocalPointWidget_C_EventShowWidget) == 0x000001, "Wrong size on FocalPointWidget_C_EventShowWidget");
static_assert(offsetof(FocalPointWidget_C_EventShowWidget, Show) == 0x000000, "Member 'FocalPointWidget_C_EventShowWidget::Show' has a wrong offset!");

// Function FocalPointWidget.FocalPointWidget_C.ExecuteUbergraph_FocalPointWidget
// 0x0040 (0x0040 - 0x0000)
struct FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_FocalPointActor;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_CustomEvent_NewParam;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewParam2;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget) == 0x000008, "Wrong alignment on FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget");
static_assert(sizeof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget) == 0x000040, "Wrong size on FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget");
static_assert(offsetof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget, EntryPoint) == 0x000000, "Member 'FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget, K2Node_CustomEvent_FocalPointActor) == 0x000008, "Member 'FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget::K2Node_CustomEvent_FocalPointActor' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget, K2Node_CustomEvent_Show) == 0x000011, "Member 'FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000018, "Member 'FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget, CallFunc_PlayAnimationForward_ReturnValue) == 0x000020, "Member 'FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget, K2Node_CustomEvent_NewParam) == 0x000028, "Member 'FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget, K2Node_CustomEvent_Actor) == 0x000030, "Member 'FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget, K2Node_CustomEvent_NewParam2) == 0x000038, "Member 'FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget::K2Node_CustomEvent_NewParam2' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'FocalPointWidget_C_ExecuteUbergraph_FocalPointWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function FocalPointWidget.FocalPointWidget_C.FocalPointActorChanged
// 0x0008 (0x0008 - 0x0000)
struct FocalPointWidget_C_FocalPointActorChanged final
{
public:
	class AActor*                                 FocalPointActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FocalPointWidget_C_FocalPointActorChanged) == 0x000008, "Wrong alignment on FocalPointWidget_C_FocalPointActorChanged");
static_assert(sizeof(FocalPointWidget_C_FocalPointActorChanged) == 0x000008, "Wrong size on FocalPointWidget_C_FocalPointActorChanged");
static_assert(offsetof(FocalPointWidget_C_FocalPointActorChanged, FocalPointActor) == 0x000000, "Member 'FocalPointWidget_C_FocalPointActorChanged::FocalPointActor' has a wrong offset!");

// Function FocalPointWidget.FocalPointWidget_C.OnFocalPointUseChanged
// 0x0018 (0x0018 - 0x0000)
struct FocalPointWidget_C_OnFocalPointUseChanged final
{
public:
	class AFortPlayerControllerAthena*            NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam2;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FocalPointWidget_C_OnFocalPointUseChanged) == 0x000008, "Wrong alignment on FocalPointWidget_C_OnFocalPointUseChanged");
static_assert(sizeof(FocalPointWidget_C_OnFocalPointUseChanged) == 0x000018, "Wrong size on FocalPointWidget_C_OnFocalPointUseChanged");
static_assert(offsetof(FocalPointWidget_C_OnFocalPointUseChanged, NewParam) == 0x000000, "Member 'FocalPointWidget_C_OnFocalPointUseChanged::NewParam' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_OnFocalPointUseChanged, Actor) == 0x000008, "Member 'FocalPointWidget_C_OnFocalPointUseChanged::Actor' has a wrong offset!");
static_assert(offsetof(FocalPointWidget_C_OnFocalPointUseChanged, NewParam2) == 0x000010, "Member 'FocalPointWidget_C_OnFocalPointUseChanged::NewParam2' has a wrong offset!");

}

