#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WildWest_TowerClock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WildWest_TowerClock.WildWest_TowerClock_C
// 0x0028 (0x0D90 - 0x0D68)
class AWildWest_TowerClock_C final : public ABuildingDeco
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D68(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MinuteHandMesh;                                    // 0x0D70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HourHandMesh;                                      // 0x0D78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box1;                                              // 0x0D80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClockActive;                                     // 0x0D88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WildWest_TowerClock(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UpdateTime();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WildWest_TowerClock_C">();
	}
	static class AWildWest_TowerClock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWildWest_TowerClock_C>();
	}
};
static_assert(alignof(AWildWest_TowerClock_C) == 0x000008, "Wrong alignment on AWildWest_TowerClock_C");
static_assert(sizeof(AWildWest_TowerClock_C) == 0x000D90, "Wrong size on AWildWest_TowerClock_C");
static_assert(offsetof(AWildWest_TowerClock_C, UberGraphFrame) == 0x000D68, "Member 'AWildWest_TowerClock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWildWest_TowerClock_C, MinuteHandMesh) == 0x000D70, "Member 'AWildWest_TowerClock_C::MinuteHandMesh' has a wrong offset!");
static_assert(offsetof(AWildWest_TowerClock_C, HourHandMesh) == 0x000D78, "Member 'AWildWest_TowerClock_C::HourHandMesh' has a wrong offset!");
static_assert(offsetof(AWildWest_TowerClock_C, Box1) == 0x000D80, "Member 'AWildWest_TowerClock_C::Box1' has a wrong offset!");
static_assert(offsetof(AWildWest_TowerClock_C, IsClockActive) == 0x000D88, "Member 'AWildWest_TowerClock_C::IsClockActive' has a wrong offset!");

}

