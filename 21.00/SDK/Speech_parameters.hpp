#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Speech

#include "Basic.hpp"

#include "CommonConversationRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function Speech.Speech_C.SwapSpeakerAndListener
// 0x0004 (0x0004 - 0x0000)
struct Speech_C_SwapSpeakerAndListener final
{
public:
	struct FGameplayTag                           Temp;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Speech_C_SwapSpeakerAndListener) == 0x000004, "Wrong alignment on Speech_C_SwapSpeakerAndListener");
static_assert(sizeof(Speech_C_SwapSpeakerAndListener) == 0x000004, "Wrong size on Speech_C_SwapSpeakerAndListener");
static_assert(offsetof(Speech_C_SwapSpeakerAndListener, Temp) == 0x000000, "Member 'Speech_C_SwapSpeakerAndListener::Temp' has a wrong offset!");

// Function Speech.Speech_C.HandleVOPlayback
// 0x0060 (0x0060 - 0x0000)
struct Speech_C_HandleVOPlayback final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetParticipantActorNPC_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_NonParticipant_C> K2Node_DynamicCast_AsBPI_Non_Participant;          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Speech_C_HandleVOPlayback) == 0x000008, "Wrong alignment on Speech_C_HandleVOPlayback");
static_assert(sizeof(Speech_C_HandleVOPlayback) == 0x000060, "Wrong size on Speech_C_HandleVOPlayback");
static_assert(offsetof(Speech_C_HandleVOPlayback, Context) == 0x000000, "Member 'Speech_C_HandleVOPlayback::Context' has a wrong offset!");
static_assert(offsetof(Speech_C_HandleVOPlayback, CallFunc_GetParticipantActorNPC_ReturnValue) == 0x000038, "Member 'Speech_C_HandleVOPlayback::CallFunc_GetParticipantActorNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_HandleVOPlayback, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000040, "Member 'Speech_C_HandleVOPlayback::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_HandleVOPlayback, K2Node_DynamicCast_AsBPI_Non_Participant) == 0x000048, "Member 'Speech_C_HandleVOPlayback::K2Node_DynamicCast_AsBPI_Non_Participant' has a wrong offset!");
static_assert(offsetof(Speech_C_HandleVOPlayback, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Speech_C_HandleVOPlayback::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Speech_C_HandleVOPlayback, CallFunc_DoesImplementInterface_ReturnValue) == 0x000059, "Member 'Speech_C_HandleVOPlayback::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");

// Function Speech.Speech_C.GetParticipantNameStyled
// 0x0110 (0x0110 - 0x0000)
struct Speech_C_GetParticipantNameStyled final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGameplayTag                           ParticipantTag;                                    // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0040(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   RawName;                                           // 0x0058(0x0018)(Edit, BlueprintVisible)
	class UConversationParticipantComponent*      CallFunc_GetConversationParticipant_ReturnValue;   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	class FText                                   CallFunc_GetParticipantDisplayName_ReturnValue;    // 0x00F8(0x0018)()
};
static_assert(alignof(Speech_C_GetParticipantNameStyled) == 0x000008, "Wrong alignment on Speech_C_GetParticipantNameStyled");
static_assert(sizeof(Speech_C_GetParticipantNameStyled) == 0x000110, "Wrong size on Speech_C_GetParticipantNameStyled");
static_assert(offsetof(Speech_C_GetParticipantNameStyled, Context) == 0x000000, "Member 'Speech_C_GetParticipantNameStyled::Context' has a wrong offset!");
static_assert(offsetof(Speech_C_GetParticipantNameStyled, ParticipantTag) == 0x000038, "Member 'Speech_C_GetParticipantNameStyled::ParticipantTag' has a wrong offset!");
static_assert(offsetof(Speech_C_GetParticipantNameStyled, ReturnValue) == 0x000040, "Member 'Speech_C_GetParticipantNameStyled::ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_GetParticipantNameStyled, RawName) == 0x000058, "Member 'Speech_C_GetParticipantNameStyled::RawName' has a wrong offset!");
static_assert(offsetof(Speech_C_GetParticipantNameStyled, CallFunc_GetConversationParticipant_ReturnValue) == 0x000070, "Member 'Speech_C_GetParticipantNameStyled::CallFunc_GetConversationParticipant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_GetParticipantNameStyled, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'Speech_C_GetParticipantNameStyled::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Speech_C_GetParticipantNameStyled, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'Speech_C_GetParticipantNameStyled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_GetParticipantNameStyled, K2Node_MakeArray_Array) == 0x0000D0, "Member 'Speech_C_GetParticipantNameStyled::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Speech_C_GetParticipantNameStyled, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'Speech_C_GetParticipantNameStyled::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_GetParticipantNameStyled, CallFunc_GetParticipantDisplayName_ReturnValue) == 0x0000F8, "Member 'Speech_C_GetParticipantNameStyled::CallFunc_GetParticipantDisplayName_ReturnValue' has a wrong offset!");

// Function Speech.Speech_C.GetNodeBodyColor
// 0x0024 (0x0024 - 0x0000)
struct Speech_C_GetNodeBodyColor final
{
public:
	struct FLinearColor                           BodyColor;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetDebugParticipantColor_ReturnValue;     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Speech_C_GetNodeBodyColor) == 0x000004, "Wrong alignment on Speech_C_GetNodeBodyColor");
static_assert(sizeof(Speech_C_GetNodeBodyColor) == 0x000024, "Wrong size on Speech_C_GetNodeBodyColor");
static_assert(offsetof(Speech_C_GetNodeBodyColor, BodyColor) == 0x000000, "Member 'Speech_C_GetNodeBodyColor::BodyColor' has a wrong offset!");
static_assert(offsetof(Speech_C_GetNodeBodyColor, ReturnValue) == 0x000010, "Member 'Speech_C_GetNodeBodyColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_GetNodeBodyColor, CallFunc_GetDebugParticipantColor_ReturnValue) == 0x000014, "Member 'Speech_C_GetNodeBodyColor::CallFunc_GetDebugParticipantColor_ReturnValue' has a wrong offset!");

// Function Speech.Speech_C.ExecuteTaskNode
// 0x02D8 (0x02D8 - 0x0000)
struct Speech_C_ExecuteTaskNode final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FConversationTaskResult                ReturnValue;                                       // 0x0038(0x0080)(Parm, OutParm, ReturnParm)
	class FText                                   ListenerDisplayName;                               // 0x00B8(0x0018)(Edit, BlueprintVisible)
	class FText                                   SpeakerDisplayName;                                // 0x00D0(0x0018)(Edit, BlueprintVisible)
	struct FContextualMessageQueryResult          CallFunc_ResolveMessageForContext_OutResult;       // 0x00E8(0x0028)()
	bool                                          CallFunc_ResolveMessageForContext_ReturnValue;     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0118(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0168(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C8(0x0018)()
	class FText                                   CallFunc_GetParticipantNameStyled_ReturnValue;     // 0x01E0(0x0018)()
	struct FClientConversationMessage             K2Node_MakeStruct_ClientConversationMessage;       // 0x01F8(0x0048)()
	struct FConversationTaskResult                CallFunc_PauseConversationAndSendClientChoices_ReturnValue; // 0x0240(0x0080)()
	class FText                                   CallFunc_GetParticipantNameStyled_ReturnValue_1;   // 0x02C0(0x0018)()
};
static_assert(alignof(Speech_C_ExecuteTaskNode) == 0x000008, "Wrong alignment on Speech_C_ExecuteTaskNode");
static_assert(sizeof(Speech_C_ExecuteTaskNode) == 0x0002D8, "Wrong size on Speech_C_ExecuteTaskNode");
static_assert(offsetof(Speech_C_ExecuteTaskNode, Context) == 0x000000, "Member 'Speech_C_ExecuteTaskNode::Context' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, ReturnValue) == 0x000038, "Member 'Speech_C_ExecuteTaskNode::ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, ListenerDisplayName) == 0x0000B8, "Member 'Speech_C_ExecuteTaskNode::ListenerDisplayName' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, SpeakerDisplayName) == 0x0000D0, "Member 'Speech_C_ExecuteTaskNode::SpeakerDisplayName' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, CallFunc_ResolveMessageForContext_OutResult) == 0x0000E8, "Member 'Speech_C_ExecuteTaskNode::CallFunc_ResolveMessageForContext_OutResult' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, CallFunc_ResolveMessageForContext_ReturnValue) == 0x000110, "Member 'Speech_C_ExecuteTaskNode::CallFunc_ResolveMessageForContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, K2Node_MakeStruct_FormatArgumentData) == 0x000118, "Member 'Speech_C_ExecuteTaskNode::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, K2Node_MakeStruct_FormatArgumentData_1) == 0x000168, "Member 'Speech_C_ExecuteTaskNode::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, K2Node_MakeArray_Array) == 0x0001B8, "Member 'Speech_C_ExecuteTaskNode::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, CallFunc_Format_ReturnValue) == 0x0001C8, "Member 'Speech_C_ExecuteTaskNode::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, CallFunc_GetParticipantNameStyled_ReturnValue) == 0x0001E0, "Member 'Speech_C_ExecuteTaskNode::CallFunc_GetParticipantNameStyled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, K2Node_MakeStruct_ClientConversationMessage) == 0x0001F8, "Member 'Speech_C_ExecuteTaskNode::K2Node_MakeStruct_ClientConversationMessage' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, CallFunc_PauseConversationAndSendClientChoices_ReturnValue) == 0x000240, "Member 'Speech_C_ExecuteTaskNode::CallFunc_PauseConversationAndSendClientChoices_ReturnValue' has a wrong offset!");
static_assert(offsetof(Speech_C_ExecuteTaskNode, CallFunc_GetParticipantNameStyled_ReturnValue_1) == 0x0002C0, "Member 'Speech_C_ExecuteTaskNode::CallFunc_GetParticipantNameStyled_ReturnValue_1' has a wrong offset!");

// Function Speech.Speech_C.ExecuteClientEffects
// 0x0038 (0x0038 - 0x0000)
struct Speech_C_ExecuteClientEffects final
{
public:
	struct FConversationContext                   Context;                                           // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Speech_C_ExecuteClientEffects) == 0x000008, "Wrong alignment on Speech_C_ExecuteClientEffects");
static_assert(sizeof(Speech_C_ExecuteClientEffects) == 0x000038, "Wrong size on Speech_C_ExecuteClientEffects");
static_assert(offsetof(Speech_C_ExecuteClientEffects, Context) == 0x000000, "Member 'Speech_C_ExecuteClientEffects::Context' has a wrong offset!");

}

