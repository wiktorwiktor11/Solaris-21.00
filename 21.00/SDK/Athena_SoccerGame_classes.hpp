#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_SoccerGame

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_SoccerGameTypes_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Athena_SoccerGame.Athena_SoccerGame_C
// 0x0260 (0x04D0 - 0x0270)
class AAthena_SoccerGame_C final : public AFortStaticReplicatedActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       BallOverlapCheck;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_ScoreSign;                                      // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Team_B_GoalOverlap;                                // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Team_A_GoalOverlap;                                // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Team_A_GoalLocation;                               // 0x02A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Team_B_GoalLocation;                               // 0x02B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GoalExtent;                                        // 0x02D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score_Team_A;                                      // 0x02E8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         Score_Team_B;                                      // 0x02EC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ball_Respawn_Location;                             // 0x02F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScoreLocation;                                     // 0x0308(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         ScoreAnnounceDelay;                                // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScoreEvaluateDelay;                                // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WinScoreLimit;                                     // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WinningTeam;                                       // 0x032C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PS_ScoredGoal;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PS_WonGame;                                        // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             S_WonGame;                                         // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             S_ScoredGoal;                                      // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             S_ScoreUp;                                         // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             S_RespawnBall;                                     // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PS_RespawnBall;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MatchRestartDelay;                                 // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ScoreSign_Transform;                               // 0x0370(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               MID_Score_TeamA;                                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Score_TeamB;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             S_WonGame_Stadium;                                 // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             S_ScoredGoal_Stadium;                              // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             S_RespawnBall_Stadium;                             // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              PlayerWhoScored;                                   // 0x03F8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               QuestItem;                                         // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BackendObjName;                                    // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          QuestLocallyActive;                                // 0x040C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             QuestSuccessSound;                                 // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        QuestSuccessEmitter;                               // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        VuvuzulaSpecificEmitter;                           // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             VuvuzulaSpecificSound;                             // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SoccerGameTypes                             SoccerGameType;                                    // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             S_RespawnBall_Small;                               // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             S_ScoredGoal_Small;                                // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             S_WonGame_Small;                                   // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CreativeMode;                                      // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   QuestSourceTags;                                   // 0x0458(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TSoftObjectPtr<class USkeletalMesh>           VuvuzelaCheckMesh;                                 // 0x0468(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UObject*                                Vuvuzela_WID;                                      // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bScoredWithToy;                                    // 0x0498(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  QuestToySourceTag;                                 // 0x04A0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HideGoalA;                                         // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideGoalB;                                         // 0x04C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideSign;                                          // 0x04C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldSpawnBall;                                   // 0x04C3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BallRespawnFX();
	void BndEvt__Goal_01_Overlap_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Goal_02_Overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CheckAndHandleBallOverlap(class AActor* Actor, bool* bWasBallOverlap);
	void EvaluateScore();
	void ExecuteUbergraph_Athena_SoccerGame(int32 EntryPoint);
	void InitializeGoal(class UBoxComponent* GoalOverlapComponent, const struct FVector& GoalLocation, bool ShouldHide);
	void InitializeGoalCollision(class UBoxComponent* GoalOverlapComponent, bool Hide);
	void InitializeGoalCollision_Multicast();
	void InitializeSign(bool ShouldHide);
	void InitializeSignCollision();
	void OnRep_Score_Team_A();
	void OnRep_Score_Team_B();
	void OnRep_ScoreLocation();
	void OnRep_WinningTeam();
	void PlaylistLoaded(class FName PlaylistName, const struct FGameplayTagContainer& PlaylistContextTags);
	void PlayVuvuzulaFX();
	void ReceiveBeginPlay();
	void RespawnBall();
	void RestartMatch();
	void SomeoneScored();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Athena_SoccerGame_C">();
	}
	static class AAthena_SoccerGame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthena_SoccerGame_C>();
	}
};
static_assert(alignof(AAthena_SoccerGame_C) == 0x000010, "Wrong alignment on AAthena_SoccerGame_C");
static_assert(sizeof(AAthena_SoccerGame_C) == 0x0004D0, "Wrong size on AAthena_SoccerGame_C");
static_assert(offsetof(AAthena_SoccerGame_C, UberGraphFrame) == 0x000270, "Member 'AAthena_SoccerGame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, BallOverlapCheck) == 0x000278, "Member 'AAthena_SoccerGame_C::BallOverlapCheck' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, SM_ScoreSign) == 0x000280, "Member 'AAthena_SoccerGame_C::SM_ScoreSign' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, Team_B_GoalOverlap) == 0x000288, "Member 'AAthena_SoccerGame_C::Team_B_GoalOverlap' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, Billboard) == 0x000290, "Member 'AAthena_SoccerGame_C::Billboard' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, Team_A_GoalOverlap) == 0x000298, "Member 'AAthena_SoccerGame_C::Team_A_GoalOverlap' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, Team_A_GoalLocation) == 0x0002A0, "Member 'AAthena_SoccerGame_C::Team_A_GoalLocation' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, Team_B_GoalLocation) == 0x0002B8, "Member 'AAthena_SoccerGame_C::Team_B_GoalLocation' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, GoalExtent) == 0x0002D0, "Member 'AAthena_SoccerGame_C::GoalExtent' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, Score_Team_A) == 0x0002E8, "Member 'AAthena_SoccerGame_C::Score_Team_A' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, Score_Team_B) == 0x0002EC, "Member 'AAthena_SoccerGame_C::Score_Team_B' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, Ball_Respawn_Location) == 0x0002F0, "Member 'AAthena_SoccerGame_C::Ball_Respawn_Location' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, ScoreLocation) == 0x000308, "Member 'AAthena_SoccerGame_C::ScoreLocation' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, ScoreAnnounceDelay) == 0x000320, "Member 'AAthena_SoccerGame_C::ScoreAnnounceDelay' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, ScoreEvaluateDelay) == 0x000324, "Member 'AAthena_SoccerGame_C::ScoreEvaluateDelay' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, WinScoreLimit) == 0x000328, "Member 'AAthena_SoccerGame_C::WinScoreLimit' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, WinningTeam) == 0x00032C, "Member 'AAthena_SoccerGame_C::WinningTeam' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, PS_ScoredGoal) == 0x000330, "Member 'AAthena_SoccerGame_C::PS_ScoredGoal' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, PS_WonGame) == 0x000338, "Member 'AAthena_SoccerGame_C::PS_WonGame' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, S_WonGame) == 0x000340, "Member 'AAthena_SoccerGame_C::S_WonGame' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, S_ScoredGoal) == 0x000348, "Member 'AAthena_SoccerGame_C::S_ScoredGoal' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, S_ScoreUp) == 0x000350, "Member 'AAthena_SoccerGame_C::S_ScoreUp' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, S_RespawnBall) == 0x000358, "Member 'AAthena_SoccerGame_C::S_RespawnBall' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, PS_RespawnBall) == 0x000360, "Member 'AAthena_SoccerGame_C::PS_RespawnBall' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, MatchRestartDelay) == 0x000368, "Member 'AAthena_SoccerGame_C::MatchRestartDelay' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, ScoreSign_Transform) == 0x000370, "Member 'AAthena_SoccerGame_C::ScoreSign_Transform' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, MID_Score_TeamA) == 0x0003D0, "Member 'AAthena_SoccerGame_C::MID_Score_TeamA' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, MID_Score_TeamB) == 0x0003D8, "Member 'AAthena_SoccerGame_C::MID_Score_TeamB' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, S_WonGame_Stadium) == 0x0003E0, "Member 'AAthena_SoccerGame_C::S_WonGame_Stadium' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, S_ScoredGoal_Stadium) == 0x0003E8, "Member 'AAthena_SoccerGame_C::S_ScoredGoal_Stadium' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, S_RespawnBall_Stadium) == 0x0003F0, "Member 'AAthena_SoccerGame_C::S_RespawnBall_Stadium' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, PlayerWhoScored) == 0x0003F8, "Member 'AAthena_SoccerGame_C::PlayerWhoScored' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, QuestItem) == 0x000400, "Member 'AAthena_SoccerGame_C::QuestItem' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, BackendObjName) == 0x000408, "Member 'AAthena_SoccerGame_C::BackendObjName' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, QuestLocallyActive) == 0x00040C, "Member 'AAthena_SoccerGame_C::QuestLocallyActive' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, QuestSuccessSound) == 0x000410, "Member 'AAthena_SoccerGame_C::QuestSuccessSound' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, QuestSuccessEmitter) == 0x000418, "Member 'AAthena_SoccerGame_C::QuestSuccessEmitter' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, VuvuzulaSpecificEmitter) == 0x000420, "Member 'AAthena_SoccerGame_C::VuvuzulaSpecificEmitter' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, VuvuzulaSpecificSound) == 0x000428, "Member 'AAthena_SoccerGame_C::VuvuzulaSpecificSound' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, SoccerGameType) == 0x000430, "Member 'AAthena_SoccerGame_C::SoccerGameType' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, S_RespawnBall_Small) == 0x000438, "Member 'AAthena_SoccerGame_C::S_RespawnBall_Small' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, S_ScoredGoal_Small) == 0x000440, "Member 'AAthena_SoccerGame_C::S_ScoredGoal_Small' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, S_WonGame_Small) == 0x000448, "Member 'AAthena_SoccerGame_C::S_WonGame_Small' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, CreativeMode) == 0x000450, "Member 'AAthena_SoccerGame_C::CreativeMode' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, QuestSourceTags) == 0x000458, "Member 'AAthena_SoccerGame_C::QuestSourceTags' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, VuvuzelaCheckMesh) == 0x000468, "Member 'AAthena_SoccerGame_C::VuvuzelaCheckMesh' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, Vuvuzela_WID) == 0x000490, "Member 'AAthena_SoccerGame_C::Vuvuzela_WID' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, bScoredWithToy) == 0x000498, "Member 'AAthena_SoccerGame_C::bScoredWithToy' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, QuestToySourceTag) == 0x0004A0, "Member 'AAthena_SoccerGame_C::QuestToySourceTag' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, HideGoalA) == 0x0004C0, "Member 'AAthena_SoccerGame_C::HideGoalA' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, HideGoalB) == 0x0004C1, "Member 'AAthena_SoccerGame_C::HideGoalB' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, HideSign) == 0x0004C2, "Member 'AAthena_SoccerGame_C::HideSign' has a wrong offset!");
static_assert(offsetof(AAthena_SoccerGame_C, ShouldSpawnBall) == 0x0004C3, "Member 'AAthena_SoccerGame_C::ShouldSpawnBall' has a wrong offset!");

}

