#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VKEditUI

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// Class VKEditUI.VKConnectionIndicator
// 0x00F8 (0x04F0 - 0x03F8)
class UVKConnectionIndicator final : public UCommonActivatableWidget
{
public:
	bool                                          bHasActiveConnection;                              // 0x03F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EVkEditStatus                                 VkEditStatus;                                      // 0x03F9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3FA[0x6];                                      // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EVkEditStatus, class FText>              EditStatusLocalizedText;                           // 0x0400(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        ConnectedSwitcher;                                 // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IndicatorImageNotConnected;                        // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IndicatorImageConnected;                           // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               IndicatorPreparing;                                // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IndicatorImageDownloading;                         // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IndicatorImageStarting;                            // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IndicatorImageUpToDate;                            // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IndicatorImageRefreshRequired;                     // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IndicatorImageError;                               // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                MessageContainer;                                  // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       MessageText;                                       // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        AdditionalInfoSwitcher;                            // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                DownloadContainer;                                 // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortSimpleMaterialProgressBar*         DownloadProgressBar;                               // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       DownloadProgressText;                              // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                OpenLogContainer;                                  // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonActionWidget*                    OpenLogActionWidget;                               // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                    OpenLogInputAction;                                // 0x04D8(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VKConnectionIndicator">();
	}
	static class UVKConnectionIndicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVKConnectionIndicator>();
	}
};
static_assert(alignof(UVKConnectionIndicator) == 0x000008, "Wrong alignment on UVKConnectionIndicator");
static_assert(sizeof(UVKConnectionIndicator) == 0x0004F0, "Wrong size on UVKConnectionIndicator");
static_assert(offsetof(UVKConnectionIndicator, bHasActiveConnection) == 0x0003F8, "Member 'UVKConnectionIndicator::bHasActiveConnection' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, VkEditStatus) == 0x0003F9, "Member 'UVKConnectionIndicator::VkEditStatus' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, EditStatusLocalizedText) == 0x000400, "Member 'UVKConnectionIndicator::EditStatusLocalizedText' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, ConnectedSwitcher) == 0x000450, "Member 'UVKConnectionIndicator::ConnectedSwitcher' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, IndicatorImageNotConnected) == 0x000458, "Member 'UVKConnectionIndicator::IndicatorImageNotConnected' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, IndicatorImageConnected) == 0x000460, "Member 'UVKConnectionIndicator::IndicatorImageConnected' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, IndicatorPreparing) == 0x000468, "Member 'UVKConnectionIndicator::IndicatorPreparing' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, IndicatorImageDownloading) == 0x000470, "Member 'UVKConnectionIndicator::IndicatorImageDownloading' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, IndicatorImageStarting) == 0x000478, "Member 'UVKConnectionIndicator::IndicatorImageStarting' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, IndicatorImageUpToDate) == 0x000480, "Member 'UVKConnectionIndicator::IndicatorImageUpToDate' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, IndicatorImageRefreshRequired) == 0x000488, "Member 'UVKConnectionIndicator::IndicatorImageRefreshRequired' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, IndicatorImageError) == 0x000490, "Member 'UVKConnectionIndicator::IndicatorImageError' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, MessageContainer) == 0x000498, "Member 'UVKConnectionIndicator::MessageContainer' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, MessageText) == 0x0004A0, "Member 'UVKConnectionIndicator::MessageText' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, AdditionalInfoSwitcher) == 0x0004A8, "Member 'UVKConnectionIndicator::AdditionalInfoSwitcher' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, DownloadContainer) == 0x0004B0, "Member 'UVKConnectionIndicator::DownloadContainer' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, DownloadProgressBar) == 0x0004B8, "Member 'UVKConnectionIndicator::DownloadProgressBar' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, DownloadProgressText) == 0x0004C0, "Member 'UVKConnectionIndicator::DownloadProgressText' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, OpenLogContainer) == 0x0004C8, "Member 'UVKConnectionIndicator::OpenLogContainer' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, OpenLogActionWidget) == 0x0004D0, "Member 'UVKConnectionIndicator::OpenLogActionWidget' has a wrong offset!");
static_assert(offsetof(UVKConnectionIndicator, OpenLogInputAction) == 0x0004D8, "Member 'UVKConnectionIndicator::OpenLogInputAction' has a wrong offset!");

// Class VKEditUI.VKDebugMessagesBase
// 0x0000 (0x0320 - 0x0320)
class UVKDebugMessagesBase final : public UFortHUDElementWidget
{
public:
	void BP_OnGameStateInitialized(class AFortGameState* GameState);
	void HandleGameStateInitialized(class AFortGameState* GameState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VKDebugMessagesBase">();
	}
	static class UVKDebugMessagesBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVKDebugMessagesBase>();
	}
};
static_assert(alignof(UVKDebugMessagesBase) == 0x000008, "Wrong alignment on UVKDebugMessagesBase");
static_assert(sizeof(UVKDebugMessagesBase) == 0x000320, "Wrong size on UVKDebugMessagesBase");

// Class VKEditUI.VkEditLogTab
// 0x00E8 (0x04E0 - 0x03F8)
class UVkEditLogTab final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                TabButtonLabelInfo;                                // 0x0400(0x00E0)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VkEditLogTab">();
	}
	static class UVkEditLogTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVkEditLogTab>();
	}
};
static_assert(alignof(UVkEditLogTab) == 0x000010, "Wrong alignment on UVkEditLogTab");
static_assert(sizeof(UVkEditLogTab) == 0x0004E0, "Wrong size on UVkEditLogTab");
static_assert(offsetof(UVkEditLogTab, TabButtonLabelInfo) == 0x000400, "Member 'UVkEditLogTab::TabButtonLabelInfo' has a wrong offset!");

}

