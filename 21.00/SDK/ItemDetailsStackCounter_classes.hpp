#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemDetailsStackCounter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemDetailsStackCounter.ItemDetailsStackCounter_C
// 0x0028 (0x0360 - 0x0338)
class UItemDetailsStackCounter_C final : public UFortItemDetailElementWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               _SizeBox_;                                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          BorderBase;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TextCounter;                                       // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysVisible;                                     // 0x035C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TruncateValue;                                     // 0x035D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_ItemDetailsStackCounter(int32 EntryPoint);
	void HandleOnItemChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged);
	void HandlePostDifferentItemToDetailSet();
	void HandlePreDifferentItemToDetailSet();
	void HandleQuantityOverrideChanged();
	void PreConstruct(bool IsDesignTime);
	void Refresh_Visibility();
	void Update_Stack_Count();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemDetailsStackCounter_C">();
	}
	static class UItemDetailsStackCounter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemDetailsStackCounter_C>();
	}
};
static_assert(alignof(UItemDetailsStackCounter_C) == 0x000008, "Wrong alignment on UItemDetailsStackCounter_C");
static_assert(sizeof(UItemDetailsStackCounter_C) == 0x000360, "Wrong size on UItemDetailsStackCounter_C");
static_assert(offsetof(UItemDetailsStackCounter_C, UberGraphFrame) == 0x000338, "Member 'UItemDetailsStackCounter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemDetailsStackCounter_C, _SizeBox_) == 0x000340, "Member 'UItemDetailsStackCounter_C::_SizeBox_' has a wrong offset!");
static_assert(offsetof(UItemDetailsStackCounter_C, BorderBase) == 0x000348, "Member 'UItemDetailsStackCounter_C::BorderBase' has a wrong offset!");
static_assert(offsetof(UItemDetailsStackCounter_C, TextCounter) == 0x000350, "Member 'UItemDetailsStackCounter_C::TextCounter' has a wrong offset!");
static_assert(offsetof(UItemDetailsStackCounter_C, Count) == 0x000358, "Member 'UItemDetailsStackCounter_C::Count' has a wrong offset!");
static_assert(offsetof(UItemDetailsStackCounter_C, AlwaysVisible) == 0x00035C, "Member 'UItemDetailsStackCounter_C::AlwaysVisible' has a wrong offset!");
static_assert(offsetof(UItemDetailsStackCounter_C, TruncateValue) == 0x00035D, "Member 'UItemDetailsStackCounter_C::TruncateValue' has a wrong offset!");

}

