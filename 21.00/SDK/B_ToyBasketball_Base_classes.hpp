#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ToyBasketball_Base

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "B_PlayerSpawnedBall_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ToyBasketball_Base.B_ToyBasketball_Base_C
// 0x0080 (0x0B90 - 0x0B10)
class AB_ToyBasketball_Base_C final : public AB_PlayerSpawnedBall_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_ToyBasketball_Base_C;             // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Emote_BasketBall_Trail;                          // 0x0B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LerpIntoGoalTimeline_Scale_7364CBE944F21B3066D27EBD324A1DA9; // 0x0B20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LerpIntoGoalTimeline_Position_7364CBE944F21B3066D27EBD324A1DA9; // 0x0B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LerpIntoGoalTimeline__Direction_7364CBE944F21B3066D27EBD324A1DA9; // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B29[0x7];                                      // 0x0B29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LerpIntoGoalTimeline;                              // 0x0B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CuesForScoreValues;                                // 0x0B38(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         BallSerialNumber;                                  // 0x0B48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4C[0x4];                                      // 0x0B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IdealLerpStartPos;                                 // 0x0B50(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IdealLerpEndPos;                                   // 0x0B68(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         LerpDuration;                                      // 0x0B80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0B88(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent_0, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_B_ToyBasketball_Base(int32 EntryPoint);
	void InitializeToyInstance(class AFortPlayerController* OwningPC, int32 NumTimesSummoned);
	void LerpIntoGoalTimeline__FinishedFunc();
	void LerpIntoGoalTimeline__UpdateFunc();
	void OnHitTarget(const struct FVector& StartPos, const struct FVector& EndPos);
	void OnRep_IdealLerpEndPos();
	void PlayScoringAnim();
	void PlayScoringCueAndDestruct(int32 ScoreAmount, const struct FVector& TargetStartPos, const struct FVector& TargetEndPos);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ToyBasketball_Base_C">();
	}
	static class AB_ToyBasketball_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_ToyBasketball_Base_C>();
	}
};
static_assert(alignof(AB_ToyBasketball_Base_C) == 0x000008, "Wrong alignment on AB_ToyBasketball_Base_C");
static_assert(sizeof(AB_ToyBasketball_Base_C) == 0x000B90, "Wrong size on AB_ToyBasketball_Base_C");
static_assert(offsetof(AB_ToyBasketball_Base_C, UberGraphFrame_B_ToyBasketball_Base_C) == 0x000B10, "Member 'AB_ToyBasketball_Base_C::UberGraphFrame_B_ToyBasketball_Base_C' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, P_Emote_BasketBall_Trail) == 0x000B18, "Member 'AB_ToyBasketball_Base_C::P_Emote_BasketBall_Trail' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, LerpIntoGoalTimeline_Scale_7364CBE944F21B3066D27EBD324A1DA9) == 0x000B20, "Member 'AB_ToyBasketball_Base_C::LerpIntoGoalTimeline_Scale_7364CBE944F21B3066D27EBD324A1DA9' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, LerpIntoGoalTimeline_Position_7364CBE944F21B3066D27EBD324A1DA9) == 0x000B24, "Member 'AB_ToyBasketball_Base_C::LerpIntoGoalTimeline_Position_7364CBE944F21B3066D27EBD324A1DA9' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, LerpIntoGoalTimeline__Direction_7364CBE944F21B3066D27EBD324A1DA9) == 0x000B28, "Member 'AB_ToyBasketball_Base_C::LerpIntoGoalTimeline__Direction_7364CBE944F21B3066D27EBD324A1DA9' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, LerpIntoGoalTimeline) == 0x000B30, "Member 'AB_ToyBasketball_Base_C::LerpIntoGoalTimeline' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, CuesForScoreValues) == 0x000B38, "Member 'AB_ToyBasketball_Base_C::CuesForScoreValues' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, BallSerialNumber) == 0x000B48, "Member 'AB_ToyBasketball_Base_C::BallSerialNumber' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, IdealLerpStartPos) == 0x000B50, "Member 'AB_ToyBasketball_Base_C::IdealLerpStartPos' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, IdealLerpEndPos) == 0x000B68, "Member 'AB_ToyBasketball_Base_C::IdealLerpEndPos' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, LerpDuration) == 0x000B80, "Member 'AB_ToyBasketball_Base_C::LerpDuration' has a wrong offset!");
static_assert(offsetof(AB_ToyBasketball_Base_C, HitComponent) == 0x000B88, "Member 'AB_ToyBasketball_Base_C::HitComponent' has a wrong offset!");

}

