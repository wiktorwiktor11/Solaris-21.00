#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prj_Athena_HappyGhost

#include "Basic.hpp"

#include "Prj_Athena_HappyGhost_classes.hpp"
#include "Prj_Athena_HappyGhost_parameters.hpp"


namespace SDK
{

// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.CustomPickupAttach
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPickup*                      FortPickup                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APrj_Athena_HappyGhost_C::CustomPickupAttach(class AFortPickup* FortPickup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "CustomPickupAttach");

	Params::Prj_Athena_HappyGhost_C_CustomPickupAttach Parms{};

	Parms.FortPickup = FortPickup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.ExecuteUbergraph_Prj_Athena_HappyGhost
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APrj_Athena_HappyGhost_C::ExecuteUbergraph_Prj_Athena_HappyGhost(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "ExecuteUbergraph_Prj_Athena_HappyGhost");

	Params::Prj_Athena_HappyGhost_C_ExecuteUbergraph_Prj_Athena_HappyGhost Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.HandleCost
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APrj_Athena_HappyGhost_C::HandleCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "HandleCost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.OnTouched
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    bIsOverlap                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APrj_Athena_HappyGhost_C::OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "OnTouched");

	Params::Prj_Athena_HappyGhost_C_OnTouched Parms{};

	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.HitResult = std::move(HitResult);
	Parms.bIsOverlap = bIsOverlap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APrj_Athena_HappyGhost_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "ReceiveActorBeginOverlap");

	Params::Prj_Athena_HappyGhost_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APrj_Athena_HappyGhost_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void APrj_Athena_HappyGhost_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APrj_Athena_HappyGhost_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "ReceiveHit");

	Params::Prj_Athena_HappyGhost_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.SendQuestEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hit_Actor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APrj_Athena_HappyGhost_C::SendQuestEvent(class AActor* Hit_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "SendQuestEvent");

	Params::Prj_Athena_HappyGhost_C_SendQuestEvent Parms{};

	Parms.Hit_Actor = Hit_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.SpawnItemsFX
// (BlueprintCallable, BlueprintEvent)

void APrj_Athena_HappyGhost_C::SpawnItemsFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "SpawnItemsFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Prj_Athena_HappyGhost.Prj_Athena_HappyGhost_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APrj_Athena_HappyGhost_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prj_Athena_HappyGhost_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

