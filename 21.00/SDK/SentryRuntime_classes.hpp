#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SentryRuntime

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"


namespace SDK
{

// Class SentryRuntime.CreativeSentryAnimInstance
// 0x0020 (0x0560 - 0x0540)
class UCreativeSentryAnimInstance final : public UFortDefenderAnimInstance
{
public:
	float                                         RotateAimAnimationPitch;                           // 0x0540(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CounterRotateAimAnimationPitch;                    // 0x0544(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRelaxedLevel1OrNotTargeting;                    // 0x0548(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RightHandIKAlpha;                                  // 0x054C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OneMinusLeftHandFK;                                // 0x0550(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeftHandIKAlpha;                                   // 0x0554(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RetargetHandIKBonesToFKPositionWeight;             // 0x0558(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeSentryAnimInstance">();
	}
	static class UCreativeSentryAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeSentryAnimInstance>();
	}
};
static_assert(alignof(UCreativeSentryAnimInstance) == 0x000010, "Wrong alignment on UCreativeSentryAnimInstance");
static_assert(sizeof(UCreativeSentryAnimInstance) == 0x000560, "Wrong size on UCreativeSentryAnimInstance");
static_assert(offsetof(UCreativeSentryAnimInstance, RotateAimAnimationPitch) == 0x000540, "Member 'UCreativeSentryAnimInstance::RotateAimAnimationPitch' has a wrong offset!");
static_assert(offsetof(UCreativeSentryAnimInstance, CounterRotateAimAnimationPitch) == 0x000544, "Member 'UCreativeSentryAnimInstance::CounterRotateAimAnimationPitch' has a wrong offset!");
static_assert(offsetof(UCreativeSentryAnimInstance, bIsRelaxedLevel1OrNotTargeting) == 0x000548, "Member 'UCreativeSentryAnimInstance::bIsRelaxedLevel1OrNotTargeting' has a wrong offset!");
static_assert(offsetof(UCreativeSentryAnimInstance, RightHandIKAlpha) == 0x00054C, "Member 'UCreativeSentryAnimInstance::RightHandIKAlpha' has a wrong offset!");
static_assert(offsetof(UCreativeSentryAnimInstance, OneMinusLeftHandFK) == 0x000550, "Member 'UCreativeSentryAnimInstance::OneMinusLeftHandFK' has a wrong offset!");
static_assert(offsetof(UCreativeSentryAnimInstance, LeftHandIKAlpha) == 0x000554, "Member 'UCreativeSentryAnimInstance::LeftHandIKAlpha' has a wrong offset!");
static_assert(offsetof(UCreativeSentryAnimInstance, RetargetHandIKBonesToFKPositionWeight) == 0x000558, "Member 'UCreativeSentryAnimInstance::RetargetHandIKBonesToFKPositionWeight' has a wrong offset!");

}

