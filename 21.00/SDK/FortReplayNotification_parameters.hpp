#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortReplayNotification

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function FortReplayNotification.FortReplayNotification_C.ExecuteUbergraph_FortReplayNotification
// 0x0080 (0x0080 - 0x0000)
struct FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerSpectating*        K2Node_DynamicCast_AsFort_Player_Controller_Spectating; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FText& NotificationText, struct FNotificationUISettings& NotificationSettings)> K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bShouldShowNotifications)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0070(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShouldShowNotifications;       // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification) == 0x000008, "Wrong alignment on FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification");
static_assert(sizeof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification) == 0x000080, "Wrong size on FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification");
static_assert(offsetof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification, EntryPoint) == 0x000000, "Member 'FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification::EntryPoint' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification, K2Node_Event_MyGeometry) == 0x000008, "Member 'FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification, K2Node_Event_InDeltaTime) == 0x000048, "Member 'FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification, K2Node_DynamicCast_AsFort_Player_Controller_Spectating) == 0x000058, "Member 'FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification::K2Node_DynamicCast_AsFort_Player_Controller_Spectating' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification, K2Node_CreateDelegate_OutputDelegate_1) == 0x000070, "Member 'FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification, K2Node_CustomEvent_bShouldShowNotifications) == 0x00007C, "Member 'FortReplayNotification_C_ExecuteUbergraph_FortReplayNotification::K2Node_CustomEvent_bShouldShowNotifications' has a wrong offset!");

// Function FortReplayNotification.FortReplayNotification_C.GetVisibilityText
// 0x0040 (0x0040 - 0x0000)
struct FortReplayNotification_C_GetVisibilityText final
{
public:
	EHudVisibilityState                           Visibility_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	EHudVisibilityState                           Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0028(0x0018)()
};
static_assert(alignof(FortReplayNotification_C_GetVisibilityText) == 0x000008, "Wrong alignment on FortReplayNotification_C_GetVisibilityText");
static_assert(sizeof(FortReplayNotification_C_GetVisibilityText) == 0x000040, "Wrong size on FortReplayNotification_C_GetVisibilityText");
static_assert(offsetof(FortReplayNotification_C_GetVisibilityText, Visibility_0) == 0x000000, "Member 'FortReplayNotification_C_GetVisibilityText::Visibility_0' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_GetVisibilityText, Text) == 0x000008, "Member 'FortReplayNotification_C_GetVisibilityText::Text' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_GetVisibilityText, Temp_byte_Variable) == 0x000020, "Member 'FortReplayNotification_C_GetVisibilityText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_GetVisibilityText, K2Node_Select_Default) == 0x000028, "Member 'FortReplayNotification_C_GetVisibilityText::K2Node_Select_Default' has a wrong offset!");

// Function FortReplayNotification.FortReplayNotification_C.IsVisibilityNotification
// 0x0060 (0x0060 - 0x0000)
struct FortReplayNotification_C_IsVisibilityNotification final
{
public:
	class FText                                   Notification_0;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsVisibilityNotification_0;                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayNotification_C_IsVisibilityNotification) == 0x000008, "Wrong alignment on FortReplayNotification_C_IsVisibilityNotification");
static_assert(sizeof(FortReplayNotification_C_IsVisibilityNotification) == 0x000060, "Wrong size on FortReplayNotification_C_IsVisibilityNotification");
static_assert(offsetof(FortReplayNotification_C_IsVisibilityNotification, Notification_0) == 0x000000, "Member 'FortReplayNotification_C_IsVisibilityNotification::Notification_0' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_IsVisibilityNotification, IsVisibilityNotification_0) == 0x000018, "Member 'FortReplayNotification_C_IsVisibilityNotification::IsVisibilityNotification_0' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_IsVisibilityNotification, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'FortReplayNotification_C_IsVisibilityNotification::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_IsVisibilityNotification, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'FortReplayNotification_C_IsVisibilityNotification::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_IsVisibilityNotification, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'FortReplayNotification_C_IsVisibilityNotification::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_IsVisibilityNotification, K2Node_MakeArray_Array) == 0x000028, "Member 'FortReplayNotification_C_IsVisibilityNotification::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_IsVisibilityNotification, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'FortReplayNotification_C_IsVisibilityNotification::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_IsVisibilityNotification, CallFunc_Array_Get_Item) == 0x000040, "Member 'FortReplayNotification_C_IsVisibilityNotification::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_IsVisibilityNotification, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'FortReplayNotification_C_IsVisibilityNotification::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_IsVisibilityNotification, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000059, "Member 'FortReplayNotification_C_IsVisibilityNotification::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");

// Function FortReplayNotification.FortReplayNotification_C.OnShowNotificationsEnabledChanged_Event_0
// 0x0001 (0x0001 - 0x0000)
struct FortReplayNotification_C_OnShowNotificationsEnabledChanged_Event_0 final
{
public:
	bool                                          bShouldShowNotifications;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayNotification_C_OnShowNotificationsEnabledChanged_Event_0) == 0x000001, "Wrong alignment on FortReplayNotification_C_OnShowNotificationsEnabledChanged_Event_0");
static_assert(sizeof(FortReplayNotification_C_OnShowNotificationsEnabledChanged_Event_0) == 0x000001, "Wrong size on FortReplayNotification_C_OnShowNotificationsEnabledChanged_Event_0");
static_assert(offsetof(FortReplayNotification_C_OnShowNotificationsEnabledChanged_Event_0, bShouldShowNotifications) == 0x000000, "Member 'FortReplayNotification_C_OnShowNotificationsEnabledChanged_Event_0::bShouldShowNotifications' has a wrong offset!");

// Function FortReplayNotification.FortReplayNotification_C.SetNotificationVisibility
// 0x0028 (0x0028 - 0x0000)
struct FortReplayNotification_C_SetNotificationVisibility final
{
public:
	ESlateVisibility                              Visibility_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	bool                                          CallFunc_IsVisibilityNotification_IsVisibilityNotification; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayNotification_C_SetNotificationVisibility) == 0x000008, "Wrong alignment on FortReplayNotification_C_SetNotificationVisibility");
static_assert(sizeof(FortReplayNotification_C_SetNotificationVisibility) == 0x000028, "Wrong size on FortReplayNotification_C_SetNotificationVisibility");
static_assert(offsetof(FortReplayNotification_C_SetNotificationVisibility, Visibility_0) == 0x000000, "Member 'FortReplayNotification_C_SetNotificationVisibility::Visibility_0' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_SetNotificationVisibility, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'FortReplayNotification_C_SetNotificationVisibility::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_SetNotificationVisibility, CallFunc_IsVisibilityNotification_IsVisibilityNotification) == 0x000020, "Member 'FortReplayNotification_C_SetNotificationVisibility::CallFunc_IsVisibilityNotification_IsVisibilityNotification' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_SetNotificationVisibility, CallFunc_GetVisibility_ReturnValue) == 0x000021, "Member 'FortReplayNotification_C_SetNotificationVisibility::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_SetNotificationVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'FortReplayNotification_C_SetNotificationVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_SetNotificationVisibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000023, "Member 'FortReplayNotification_C_SetNotificationVisibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_SetNotificationVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'FortReplayNotification_C_SetNotificationVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FortReplayNotification.FortReplayNotification_C.ShowNotification
// 0x0020 (0x0020 - 0x0000)
struct FortReplayNotification_C_ShowNotification final
{
public:
	class FText                                   NotificationText;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FNotificationUISettings                K2Node_MakeStruct_NotificationUISettings;          // 0x0018(0x0008)(NoDestructor)
};
static_assert(alignof(FortReplayNotification_C_ShowNotification) == 0x000008, "Wrong alignment on FortReplayNotification_C_ShowNotification");
static_assert(sizeof(FortReplayNotification_C_ShowNotification) == 0x000020, "Wrong size on FortReplayNotification_C_ShowNotification");
static_assert(offsetof(FortReplayNotification_C_ShowNotification, NotificationText) == 0x000000, "Member 'FortReplayNotification_C_ShowNotification::NotificationText' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ShowNotification, K2Node_MakeStruct_NotificationUISettings) == 0x000018, "Member 'FortReplayNotification_C_ShowNotification::K2Node_MakeStruct_NotificationUISettings' has a wrong offset!");

// Function FortReplayNotification.FortReplayNotification_C.ShowNotificationWIthSettings
// 0x0048 (0x0048 - 0x0000)
struct FortReplayNotification_C_ShowNotificationWIthSettings final
{
public:
	class FText                                   NotificationText;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FNotificationUISettings                NotificationSettings;                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          CallFunc_IsVisibilityNotification_IsVisibilityNotification; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0028(0x0018)()
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisibilityNotification_IsVisibilityNotification_1; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayNotification_C_ShowNotificationWIthSettings) == 0x000008, "Wrong alignment on FortReplayNotification_C_ShowNotificationWIthSettings");
static_assert(sizeof(FortReplayNotification_C_ShowNotificationWIthSettings) == 0x000048, "Wrong size on FortReplayNotification_C_ShowNotificationWIthSettings");
static_assert(offsetof(FortReplayNotification_C_ShowNotificationWIthSettings, NotificationText) == 0x000000, "Member 'FortReplayNotification_C_ShowNotificationWIthSettings::NotificationText' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ShowNotificationWIthSettings, NotificationSettings) == 0x000018, "Member 'FortReplayNotification_C_ShowNotificationWIthSettings::NotificationSettings' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ShowNotificationWIthSettings, CallFunc_IsVisibilityNotification_IsVisibilityNotification) == 0x000020, "Member 'FortReplayNotification_C_ShowNotificationWIthSettings::CallFunc_IsVisibilityNotification_IsVisibilityNotification' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ShowNotificationWIthSettings, CallFunc_Less_FloatFloat_ReturnValue) == 0x000021, "Member 'FortReplayNotification_C_ShowNotificationWIthSettings::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ShowNotificationWIthSettings, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'FortReplayNotification_C_ShowNotificationWIthSettings::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ShowNotificationWIthSettings, CallFunc_GetText_ReturnValue) == 0x000028, "Member 'FortReplayNotification_C_ShowNotificationWIthSettings::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ShowNotificationWIthSettings, CallFunc_IsVisible_ReturnValue) == 0x000040, "Member 'FortReplayNotification_C_ShowNotificationWIthSettings::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ShowNotificationWIthSettings, CallFunc_IsVisibilityNotification_IsVisibilityNotification_1) == 0x000041, "Member 'FortReplayNotification_C_ShowNotificationWIthSettings::CallFunc_IsVisibilityNotification_IsVisibilityNotification_1' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ShowNotificationWIthSettings, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'FortReplayNotification_C_ShowNotificationWIthSettings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_ShowNotificationWIthSettings, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'FortReplayNotification_C_ShowNotificationWIthSettings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FortReplayNotification.FortReplayNotification_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct FortReplayNotification_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayNotification_C_Tick) == 0x000008, "Wrong alignment on FortReplayNotification_C_Tick");
static_assert(sizeof(FortReplayNotification_C_Tick) == 0x000048, "Wrong size on FortReplayNotification_C_Tick");
static_assert(offsetof(FortReplayNotification_C_Tick, MyGeometry) == 0x000000, "Member 'FortReplayNotification_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_Tick, InDeltaTime) == 0x000040, "Member 'FortReplayNotification_C_Tick::InDeltaTime' has a wrong offset!");

// Function FortReplayNotification.FortReplayNotification_C.TickFade
// 0x0038 (0x0038 - 0x0000)
struct FortReplayNotification_C_TickFade final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	bool                                          CallFunc_IsVisibilityNotification_IsVisibilityNotification; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayNotification_C_TickFade) == 0x000008, "Wrong alignment on FortReplayNotification_C_TickFade");
static_assert(sizeof(FortReplayNotification_C_TickFade) == 0x000038, "Wrong size on FortReplayNotification_C_TickFade");
static_assert(offsetof(FortReplayNotification_C_TickFade, DeltaTime) == 0x000000, "Member 'FortReplayNotification_C_TickFade::DeltaTime' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_TickFade, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'FortReplayNotification_C_TickFade::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_TickFade, CallFunc_IsVisibilityNotification_IsVisibilityNotification) == 0x000020, "Member 'FortReplayNotification_C_TickFade::CallFunc_IsVisibilityNotification_IsVisibilityNotification' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_TickFade, CallFunc_GetRenderOpacity_ReturnValue) == 0x000024, "Member 'FortReplayNotification_C_TickFade::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_TickFade, CallFunc_FInterpTo_ReturnValue) == 0x000028, "Member 'FortReplayNotification_C_TickFade::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_TickFade, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002C, "Member 'FortReplayNotification_C_TickFade::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_TickFade, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'FortReplayNotification_C_TickFade::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function FortReplayNotification.FortReplayNotification_C.TickRemainingTime
// 0x0010 (0x0010 - 0x0000)
struct FortReplayNotification_C_TickRemainingTime final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayNotification_C_TickRemainingTime) == 0x000004, "Wrong alignment on FortReplayNotification_C_TickRemainingTime");
static_assert(sizeof(FortReplayNotification_C_TickRemainingTime) == 0x000010, "Wrong size on FortReplayNotification_C_TickRemainingTime");
static_assert(offsetof(FortReplayNotification_C_TickRemainingTime, DeltaTime) == 0x000000, "Member 'FortReplayNotification_C_TickRemainingTime::DeltaTime' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_TickRemainingTime, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'FortReplayNotification_C_TickRemainingTime::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_TickRemainingTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'FortReplayNotification_C_TickRemainingTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayNotification_C_TickRemainingTime, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'FortReplayNotification_C_TickRemainingTime::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

