#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SR_Core

#include "Basic.hpp"

#include "SrirachaRanch_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SR_Core.SR_Core_C
// 0x0010 (0x0448 - 0x0438)
class USR_Core_C final : public UStreamingRadioPlayerComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bMixIsActive;                                      // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsADS;                                            // 0x0441(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInsideVehicle;                                  // 0x0442(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SR_Core(int32 EntryPoint);
	void GetIsMixAllowed(bool* MixAllowed);
	void HandleADSStateUpdated(bool Is_Targeting);
	void HandleOnSourcePlayed(class UStreamingRadioPlayerComponent* Component, const struct FAthenaRadioStation& AffectedSource);
	void HandleSeatStateUpdated(class AFortPawn* Pawn, bool Entering, int32 SeatIdx);
	void HandleWeaponStateUpdated(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnPawnEnterSeat(const TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* PlayerPawn, int32 SeatIndex);
	void OnPawnExitSeat(const TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* PlayerPawn, int32 SeatIndex);
	void UpdateMixState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SR_Core_C">();
	}
	static class USR_Core_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USR_Core_C>();
	}
};
static_assert(alignof(USR_Core_C) == 0x000008, "Wrong alignment on USR_Core_C");
static_assert(sizeof(USR_Core_C) == 0x000448, "Wrong size on USR_Core_C");
static_assert(offsetof(USR_Core_C, UberGraphFrame) == 0x000438, "Member 'USR_Core_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USR_Core_C, bMixIsActive) == 0x000440, "Member 'USR_Core_C::bMixIsActive' has a wrong offset!");
static_assert(offsetof(USR_Core_C, bIsADS) == 0x000441, "Member 'USR_Core_C::bIsADS' has a wrong offset!");
static_assert(offsetof(USR_Core_C, bIsInsideVehicle) == 0x000442, "Member 'USR_Core_C::bIsInsideVehicle' has a wrong offset!");

}

