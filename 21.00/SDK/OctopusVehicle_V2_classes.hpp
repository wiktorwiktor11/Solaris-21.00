#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OctopusVehicle_V2

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Water_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass OctopusVehicle_V2.OctopusVehicle_V2_C
// 0x0660 (0x2A90 - 0x2430)
class AOctopusVehicle_V2_C final : public AFortOctopusVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      CoilDustVisuals;                                   // 0x2438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioBoost;                                        // 0x2440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleAudioVoice*                 AudioMovement;                                     // 0x2448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleAudioVoice*                 AudioTowCable;                                     // 0x2450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleAudioVoice*                 AudioWind1P;                                       // 0x2458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioGetInOut;                                     // 0x2460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleFuelComponent*              FortVehicleFuel;                                   // 0x2468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortVehicleSeatWeaponComponent*        FortVehicleSeatWeapon;                             // 0x2470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Reticle;                                           // 0x2478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Grapple_Rope;                                   // 0x2480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           BoostCollisionAudio;                               // 0x2488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           NormalCollisionAudio;                              // 0x2490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Coaster_Speed_FOV_Timeline_Alpha_7A4FACBB448DF662BF75038C9A473133; // 0x2498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Coaster_Speed_FOV_Timeline__Direction_7A4FACBB448DF662BF75038C9A473133; // 0x249C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249D[0x3];                                     // 0x249D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Coaster_Speed_FOV_Timeline;                        // 0x24A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Coaster_Lurch_FOV_Timeline_BoostCurve_9A0AF05E415326DC180215B4726545DE; // 0x24A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Coaster_Lurch_FOV_Timeline__Direction_9A0AF05E415326DC180215B4726545DE; // 0x24AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24AD[0x3];                                     // 0x24AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Coaster_Lurch_FOV_Timeline;                        // 0x24B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Spark_Gate_Timeline__Direction_4CFDE7E14FA70F338508FDBF2454042F; // 0x24B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B9[0x7];                                     // 0x24B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Spark_Gate_Timeline;                               // 0x24C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Splash_Gate_Timeline__Direction_0E9F1AF24AF99E17DF4811B80F19F2E9; // 0x24C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C9[0x7];                                     // 0x24C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Splash_Gate_Timeline;                              // 0x24D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnTimeline_NewTrack_0_5F8AF51948CB96BC977049A2E1347BB6; // 0x24D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ReturnTimeline__Direction_5F8AF51948CB96BC977049A2E1347BB6; // 0x24DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24DD[0x3];                                     // 0x24DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ReturnTimeline;                                    // 0x24E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostTimeline_NewTrack_0_8E89D6904E79787B53F52282B84BA6ED; // 0x24E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostTimeline_Rumble_8E89D6904E79787B53F52282B84BA6ED; // 0x24EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BoostTimeline__Direction_8E89D6904E79787B53F52282B84BA6ED; // 0x24F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24F1[0x7];                                     // 0x24F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BoostTimeline;                                     // 0x24F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Startup_Intensity_7084D1F046EBD5CE3BC1209DB97D090C; // 0x2500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Startup__Direction_7084D1F046EBD5CE3BC1209DB97D090C; // 0x2504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2505[0x3];                                     // 0x2505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Startup;                                           // 0x2508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       IdleFXArray;                                       // 0x2510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         ImpactResetTimer;                                  // 0x2520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceThreshold;                                   // 0x2524(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBoostCameraActive;                                // 0x2528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2529[0x3];                                     // 0x2529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BoostTimelinePlayRate;                             // 0x252C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostFOVOffset;                                    // 0x2530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostCameraDistanceOffset;                         // 0x2534(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostRumbleValue;                                  // 0x2538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostReversePlayRate;                              // 0x253C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceEffectsThreshold;                            // 0x2540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InRangeMax;                                        // 0x2544(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InMax;                                             // 0x2548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutMax;                                            // 0x254C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BounceCameraShake;                                 // 0x2550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_NoCameraShake;                               // 0x2558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2559[0x7];                                     // 0x2559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      DrivingPlayerController;                           // 0x2560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnGetIn;                                      // 0x2568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnGetOut;                                     // 0x2570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_GrantWeapon;                                    // 0x2578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GE_EnterTurret;                                    // 0x2580(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         PickaxeImpulseStrength;                            // 0x2588(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanPlayBoostBounceAudio;                          // 0x258C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_258D[0x3];                                     // 0x258D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundOnDamageThreshold;                            // 0x2590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CableStart;                                        // 0x2598(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CableEnd;                                          // 0x25B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetractScaleStart;                                 // 0x25C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25CC[0x4];                                     // 0x25CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CableLoopTimer;                                    // 0x25D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         OutgoingWiggleFactor;                              // 0x25D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WiggleAmount;                                      // 0x25DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CableReturnMeshComponent;                          // 0x25E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTowhookMissed;                                    // 0x25E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E9[0x7];                                     // 0x25E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               InWaterFX;                                         // 0x25F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        InWaterLoop;                                       // 0x25F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasRopeRetracted;                                 // 0x2600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2601[0x3];                                     // 0x2601(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CooldownCueEvent;                                  // 0x2604(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_260C[0x4];                                     // 0x260C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_Boost_Cooldown;                                 // 0x2610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ImpactCue;                                         // 0x2618(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageStateIndex;                                  // 0x261C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 DamageStates;                                      // 0x2620(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 DamageScalarParameterValues;                       // 0x2630(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bGlassBroken;                                      // 0x2640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2641[0x7];                                     // 0x2641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWaterBodyActor*                    Water_Body;                                        // 0x2648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSphericalPontoon                      Pontoon;                                           // 0x2650(0x02D0)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UNiagaraComponent*                      Water_Splash_FX_Niagra;                            // 0x2920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Looping_Water_FX_Asset;                            // 0x2928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Looping_Water_FX_Component;                        // 0x2930(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_In_Water;                                       // 0x2938(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_2939[0x3];                                     // 0x2939(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GC_Enter_Water;                                    // 0x293C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              Dispatch_BoostStarted;                             // 0x2940(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              Dispatch_BoostEnded;                               // 0x2950(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(float CurrentFuelPercent)> Dispatch_FuelChanged;                              // 0x2960(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              Dispatch_FuelEmpty;                                // 0x2970(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           GC_Exit_Water;                                     // 0x2980(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2984[0x4];                                     // 0x2984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  HideHUD_Tag;                                       // 0x2988(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           Water_FX_Timer;                                    // 0x29A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Can_Splash;                                        // 0x29B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_29B1[0x3];                                     // 0x29B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaterSpeedAudio;                                   // 0x29B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           HandleWaterAudio;                                  // 0x29B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      BoostFX;                                           // 0x29C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Spark;                                         // 0x29C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Coil_FX_Locked;                                    // 0x29C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29CA[0x2];                                     // 0x29CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Sparks_FX_Cue_Tag;                                 // 0x29CC(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FVector& Location, const struct FVector& Normal, float Force, class AActor* Hit_Actor)> Dispatch_CoasterDestruction;                       // 0x29D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           Riding_Coaster_Tag;                                // 0x29E0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Coaster_FOV_Speed_Offset;                          // 0x29E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Coaster_FOV_Timeline_Play_Rate;                    // 0x29E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed_Coaster_FOV_Target;                          // 0x29EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Previous_FOV;                                      // 0x29F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29F4[0x4];                                     // 0x29F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Coaster_FOV_Timer;                                 // 0x29F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                On_Hit_Location;                                   // 0x2A00(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                On_Hit_Normal;                                     // 0x2A18(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         On_Hit_Force;                                      // 0x2A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A34[0x4];                                     // 0x2A34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 On_Hit_Actor;                                      // 0x2A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Coaster_FOV_Multiplier;                            // 0x2A40(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAudioComponent*                        CoasterBoostAudio;                                 // 0x2A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Spawn_Coaster_Boost_Noise;                     // 0x2A70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A71[0x3];                                     // 0x2A71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Coaster_Boost_Cooldown;                            // 0x2A74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min_Speed_Increase;                                // 0x2A78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed_Coaster_Audio_Target;                        // 0x2A7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Previous_Audio_Target;                             // 0x2A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddCooldownCueEvent(class AFortPlayerPawn* Player_Pawn);
	void BndEvt__OctopusVehicle_V2_FortVehicleFuel_K2Node_ComponentBoundEvent_0_OnFortAthenaVehicleOutOfFuel__DelegateSignature();
	void Boost_VFX(bool Activate);
	void BoostCameraBegin();
	void BoostCameraReverse();
	void BoostTimeline__FinishedFunc();
	void BoostTimeline__UpdateFunc();
	void Bounce_Collision_Audio_Cooldown();
	void CameraShake(float Scale);
	void CheckWater();
	void Coaster_Boost_SFX();
	void Coaster_Boost_Sound();
	void Coaster_FOV();
	void Coaster_Lurch_FOV_Timeline__FinishedFunc();
	void Coaster_Lurch_FOV_Timeline__UpdateFunc();
	void Coaster_Speed_FOV_Timeline__FinishedFunc();
	void Coaster_Speed_FOV_Timeline__UpdateFunc();
	void Damage_Driver();
	void Damage_On_Death();
	void EventOnTowhookAttached();
	void ExecuteUbergraph_OctopusVehicle_V2(int32 EntryPoint);
	void FOV_Reset();
	void GroundHit(float Scale);
	void Handle_On_Health_Changed();
	void HitWithPickaxe(const struct FVector& HitDirection);
	void ImpactReset();
	void K2_ApplyCosmeticWrap(const class UAthenaItemWrapDefinition* LoadedWrap);
	void On_Enter_Water(class AFortWaterBodyActor* Water_Body_0);
	void On_Exit_Water();
	void On_Update_Water();
	void OnBoostBegin();
	void OnBoostBounce(const struct FVector& Location, const struct FVector& Normal, const float Force, class AActor* HitActor, int32 BounceCount);
	void OnBoostEnd();
	void OnDamaged(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnEnteredWaterBody(class AFortWaterBodyActor* WaterBody);
	void OnExitedWaterBody(class AFortWaterBodyActor* WaterBody);
	void OnHit(const struct FVector& Location, const struct FVector& Normal, const float Force, class AActor* HitActor);
	void OnHoldExitStarted(class AFortPawn* ExitingPawn, const float ExitDuration);
	void OnHoldExitStopped(class AFortPawn* ExitingPawn);
	void OnPawnEnterVehicle(class AFortPlayerPawn* PlayerPawn, const int32 SeatIdx);
	void OnPawnExitVehicle(class AFortPlayerPawn* PlayerPawn, class FName ExitSocketName);
	void OnStopTick();
	void OnUpdateTargetPoint(const bool bAimAssistHitsTarget, const struct FVector& TargetPoint);
	void ReceiveBeginPlay();
	void RemoveCooldownCueEvent(class AFortPlayerPawn* Player_Pawn);
	void Removed_58EED64B4B7595D0F1617B952EF18F7C();
	void Reset_Coaster_Boost_SFX();
	void Reset_Dust();
	void RetractCable();
	void ReturnTimeline__FinishedFunc();
	void ReturnTimeline__UpdateFunc();
	void ReverseBoostTimeline();
	void SetGrappleVisible(bool Visible);
	void Should_Update_Speed_Target(float Target, bool* Should_Update);
	void ShowCooldownCue(class AFortPlayerPawn* Pawn, float Duration);
	void Spark_Gate_Timeline__FinishedFunc();
	void Spark_Gate_Timeline__UpdateFunc();
	void Spawn_Sparks_VFX(class AActor* Hit_Actor, const struct FVector& Actor_Location, const struct FVector& Actor_Normal, const struct FGameplayTag& GameplayCue_Tag);
	void Splash_Gate_Timeline__FinishedFunc();
	void Splash_Gate_Timeline__UpdateFunc();
	void StartDriverCameraShake();
	void Startup__FinishedFunc();
	void Startup__UpdateFunc();
	void StopCameraShake();
	void ToggleHUDElements(class AActor* Actor, bool ShouldHide);
	void TowhookAttached();
	void TowhookDetached();
	void TowhookLoop();
	void TowhookMissed();
	void TowhookShot();
	void Turn_Off_Dust();
	void Update_Speed_to_FOV();
	void UpdateWaterAudio();
	void UpdateWaterAudioParam();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OctopusVehicle_V2_C">();
	}
	static class AOctopusVehicle_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOctopusVehicle_V2_C>();
	}
};
static_assert(alignof(AOctopusVehicle_V2_C) == 0x000010, "Wrong alignment on AOctopusVehicle_V2_C");
static_assert(sizeof(AOctopusVehicle_V2_C) == 0x002A90, "Wrong size on AOctopusVehicle_V2_C");
static_assert(offsetof(AOctopusVehicle_V2_C, UberGraphFrame) == 0x002430, "Member 'AOctopusVehicle_V2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, CoilDustVisuals) == 0x002438, "Member 'AOctopusVehicle_V2_C::CoilDustVisuals' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, AudioBoost) == 0x002440, "Member 'AOctopusVehicle_V2_C::AudioBoost' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, AudioMovement) == 0x002448, "Member 'AOctopusVehicle_V2_C::AudioMovement' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, AudioTowCable) == 0x002450, "Member 'AOctopusVehicle_V2_C::AudioTowCable' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, AudioWind1P) == 0x002458, "Member 'AOctopusVehicle_V2_C::AudioWind1P' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, AudioGetInOut) == 0x002460, "Member 'AOctopusVehicle_V2_C::AudioGetInOut' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, FortVehicleFuel) == 0x002468, "Member 'AOctopusVehicle_V2_C::FortVehicleFuel' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, FortVehicleSeatWeapon) == 0x002470, "Member 'AOctopusVehicle_V2_C::FortVehicleSeatWeapon' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Reticle) == 0x002478, "Member 'AOctopusVehicle_V2_C::Reticle' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, SM_Grapple_Rope) == 0x002480, "Member 'AOctopusVehicle_V2_C::SM_Grapple_Rope' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostCollisionAudio) == 0x002488, "Member 'AOctopusVehicle_V2_C::BoostCollisionAudio' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, NormalCollisionAudio) == 0x002490, "Member 'AOctopusVehicle_V2_C::NormalCollisionAudio' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_Speed_FOV_Timeline_Alpha_7A4FACBB448DF662BF75038C9A473133) == 0x002498, "Member 'AOctopusVehicle_V2_C::Coaster_Speed_FOV_Timeline_Alpha_7A4FACBB448DF662BF75038C9A473133' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_Speed_FOV_Timeline__Direction_7A4FACBB448DF662BF75038C9A473133) == 0x00249C, "Member 'AOctopusVehicle_V2_C::Coaster_Speed_FOV_Timeline__Direction_7A4FACBB448DF662BF75038C9A473133' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_Speed_FOV_Timeline) == 0x0024A0, "Member 'AOctopusVehicle_V2_C::Coaster_Speed_FOV_Timeline' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_Lurch_FOV_Timeline_BoostCurve_9A0AF05E415326DC180215B4726545DE) == 0x0024A8, "Member 'AOctopusVehicle_V2_C::Coaster_Lurch_FOV_Timeline_BoostCurve_9A0AF05E415326DC180215B4726545DE' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_Lurch_FOV_Timeline__Direction_9A0AF05E415326DC180215B4726545DE) == 0x0024AC, "Member 'AOctopusVehicle_V2_C::Coaster_Lurch_FOV_Timeline__Direction_9A0AF05E415326DC180215B4726545DE' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_Lurch_FOV_Timeline) == 0x0024B0, "Member 'AOctopusVehicle_V2_C::Coaster_Lurch_FOV_Timeline' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Spark_Gate_Timeline__Direction_4CFDE7E14FA70F338508FDBF2454042F) == 0x0024B8, "Member 'AOctopusVehicle_V2_C::Spark_Gate_Timeline__Direction_4CFDE7E14FA70F338508FDBF2454042F' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Spark_Gate_Timeline) == 0x0024C0, "Member 'AOctopusVehicle_V2_C::Spark_Gate_Timeline' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Splash_Gate_Timeline__Direction_0E9F1AF24AF99E17DF4811B80F19F2E9) == 0x0024C8, "Member 'AOctopusVehicle_V2_C::Splash_Gate_Timeline__Direction_0E9F1AF24AF99E17DF4811B80F19F2E9' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Splash_Gate_Timeline) == 0x0024D0, "Member 'AOctopusVehicle_V2_C::Splash_Gate_Timeline' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, ReturnTimeline_NewTrack_0_5F8AF51948CB96BC977049A2E1347BB6) == 0x0024D8, "Member 'AOctopusVehicle_V2_C::ReturnTimeline_NewTrack_0_5F8AF51948CB96BC977049A2E1347BB6' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, ReturnTimeline__Direction_5F8AF51948CB96BC977049A2E1347BB6) == 0x0024DC, "Member 'AOctopusVehicle_V2_C::ReturnTimeline__Direction_5F8AF51948CB96BC977049A2E1347BB6' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, ReturnTimeline) == 0x0024E0, "Member 'AOctopusVehicle_V2_C::ReturnTimeline' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostTimeline_NewTrack_0_8E89D6904E79787B53F52282B84BA6ED) == 0x0024E8, "Member 'AOctopusVehicle_V2_C::BoostTimeline_NewTrack_0_8E89D6904E79787B53F52282B84BA6ED' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostTimeline_Rumble_8E89D6904E79787B53F52282B84BA6ED) == 0x0024EC, "Member 'AOctopusVehicle_V2_C::BoostTimeline_Rumble_8E89D6904E79787B53F52282B84BA6ED' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostTimeline__Direction_8E89D6904E79787B53F52282B84BA6ED) == 0x0024F0, "Member 'AOctopusVehicle_V2_C::BoostTimeline__Direction_8E89D6904E79787B53F52282B84BA6ED' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostTimeline) == 0x0024F8, "Member 'AOctopusVehicle_V2_C::BoostTimeline' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Startup_Intensity_7084D1F046EBD5CE3BC1209DB97D090C) == 0x002500, "Member 'AOctopusVehicle_V2_C::Startup_Intensity_7084D1F046EBD5CE3BC1209DB97D090C' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Startup__Direction_7084D1F046EBD5CE3BC1209DB97D090C) == 0x002504, "Member 'AOctopusVehicle_V2_C::Startup__Direction_7084D1F046EBD5CE3BC1209DB97D090C' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Startup) == 0x002508, "Member 'AOctopusVehicle_V2_C::Startup' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, IdleFXArray) == 0x002510, "Member 'AOctopusVehicle_V2_C::IdleFXArray' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, ImpactResetTimer) == 0x002520, "Member 'AOctopusVehicle_V2_C::ImpactResetTimer' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BounceThreshold) == 0x002524, "Member 'AOctopusVehicle_V2_C::BounceThreshold' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, bBoostCameraActive) == 0x002528, "Member 'AOctopusVehicle_V2_C::bBoostCameraActive' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostTimelinePlayRate) == 0x00252C, "Member 'AOctopusVehicle_V2_C::BoostTimelinePlayRate' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostFOVOffset) == 0x002530, "Member 'AOctopusVehicle_V2_C::BoostFOVOffset' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostCameraDistanceOffset) == 0x002534, "Member 'AOctopusVehicle_V2_C::BoostCameraDistanceOffset' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostRumbleValue) == 0x002538, "Member 'AOctopusVehicle_V2_C::BoostRumbleValue' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostReversePlayRate) == 0x00253C, "Member 'AOctopusVehicle_V2_C::BoostReversePlayRate' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BounceEffectsThreshold) == 0x002540, "Member 'AOctopusVehicle_V2_C::BounceEffectsThreshold' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, InRangeMax) == 0x002544, "Member 'AOctopusVehicle_V2_C::InRangeMax' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, InMax) == 0x002548, "Member 'AOctopusVehicle_V2_C::InMax' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, OutMax) == 0x00254C, "Member 'AOctopusVehicle_V2_C::OutMax' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BounceCameraShake) == 0x002550, "Member 'AOctopusVehicle_V2_C::BounceCameraShake' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Debug_NoCameraShake) == 0x002558, "Member 'AOctopusVehicle_V2_C::Debug_NoCameraShake' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, DrivingPlayerController) == 0x002560, "Member 'AOctopusVehicle_V2_C::DrivingPlayerController' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, SoundOnGetIn) == 0x002568, "Member 'AOctopusVehicle_V2_C::SoundOnGetIn' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, SoundOnGetOut) == 0x002570, "Member 'AOctopusVehicle_V2_C::SoundOnGetOut' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, GE_GrantWeapon) == 0x002578, "Member 'AOctopusVehicle_V2_C::GE_GrantWeapon' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, GE_EnterTurret) == 0x002580, "Member 'AOctopusVehicle_V2_C::GE_EnterTurret' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, PickaxeImpulseStrength) == 0x002588, "Member 'AOctopusVehicle_V2_C::PickaxeImpulseStrength' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, bCanPlayBoostBounceAudio) == 0x00258C, "Member 'AOctopusVehicle_V2_C::bCanPlayBoostBounceAudio' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, SoundOnDamageThreshold) == 0x002590, "Member 'AOctopusVehicle_V2_C::SoundOnDamageThreshold' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, CableStart) == 0x002598, "Member 'AOctopusVehicle_V2_C::CableStart' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, CableEnd) == 0x0025B0, "Member 'AOctopusVehicle_V2_C::CableEnd' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, RetractScaleStart) == 0x0025C8, "Member 'AOctopusVehicle_V2_C::RetractScaleStart' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, CableLoopTimer) == 0x0025D0, "Member 'AOctopusVehicle_V2_C::CableLoopTimer' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, OutgoingWiggleFactor) == 0x0025D8, "Member 'AOctopusVehicle_V2_C::OutgoingWiggleFactor' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, WiggleAmount) == 0x0025DC, "Member 'AOctopusVehicle_V2_C::WiggleAmount' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, CableReturnMeshComponent) == 0x0025E0, "Member 'AOctopusVehicle_V2_C::CableReturnMeshComponent' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, bTowhookMissed) == 0x0025E8, "Member 'AOctopusVehicle_V2_C::bTowhookMissed' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, InWaterFX) == 0x0025F0, "Member 'AOctopusVehicle_V2_C::InWaterFX' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, InWaterLoop) == 0x0025F8, "Member 'AOctopusVehicle_V2_C::InWaterLoop' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, bHasRopeRetracted) == 0x002600, "Member 'AOctopusVehicle_V2_C::bHasRopeRetracted' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, CooldownCueEvent) == 0x002604, "Member 'AOctopusVehicle_V2_C::CooldownCueEvent' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, GE_Boost_Cooldown) == 0x002610, "Member 'AOctopusVehicle_V2_C::GE_Boost_Cooldown' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, ImpactCue) == 0x002618, "Member 'AOctopusVehicle_V2_C::ImpactCue' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, DamageStateIndex) == 0x00261C, "Member 'AOctopusVehicle_V2_C::DamageStateIndex' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, DamageStates) == 0x002620, "Member 'AOctopusVehicle_V2_C::DamageStates' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, DamageScalarParameterValues) == 0x002630, "Member 'AOctopusVehicle_V2_C::DamageScalarParameterValues' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, bGlassBroken) == 0x002640, "Member 'AOctopusVehicle_V2_C::bGlassBroken' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Water_Body) == 0x002648, "Member 'AOctopusVehicle_V2_C::Water_Body' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Pontoon) == 0x002650, "Member 'AOctopusVehicle_V2_C::Pontoon' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Water_Splash_FX_Niagra) == 0x002920, "Member 'AOctopusVehicle_V2_C::Water_Splash_FX_Niagra' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Looping_Water_FX_Asset) == 0x002928, "Member 'AOctopusVehicle_V2_C::Looping_Water_FX_Asset' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Looping_Water_FX_Component) == 0x002930, "Member 'AOctopusVehicle_V2_C::Looping_Water_FX_Component' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Is_In_Water) == 0x002938, "Member 'AOctopusVehicle_V2_C::Is_In_Water' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, GC_Enter_Water) == 0x00293C, "Member 'AOctopusVehicle_V2_C::GC_Enter_Water' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Dispatch_BoostStarted) == 0x002940, "Member 'AOctopusVehicle_V2_C::Dispatch_BoostStarted' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Dispatch_BoostEnded) == 0x002950, "Member 'AOctopusVehicle_V2_C::Dispatch_BoostEnded' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Dispatch_FuelChanged) == 0x002960, "Member 'AOctopusVehicle_V2_C::Dispatch_FuelChanged' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Dispatch_FuelEmpty) == 0x002970, "Member 'AOctopusVehicle_V2_C::Dispatch_FuelEmpty' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, GC_Exit_Water) == 0x002980, "Member 'AOctopusVehicle_V2_C::GC_Exit_Water' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, HideHUD_Tag) == 0x002988, "Member 'AOctopusVehicle_V2_C::HideHUD_Tag' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Water_FX_Timer) == 0x0029A8, "Member 'AOctopusVehicle_V2_C::Water_FX_Timer' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Can_Splash) == 0x0029B0, "Member 'AOctopusVehicle_V2_C::Can_Splash' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, WaterSpeedAudio) == 0x0029B4, "Member 'AOctopusVehicle_V2_C::WaterSpeedAudio' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, HandleWaterAudio) == 0x0029B8, "Member 'AOctopusVehicle_V2_C::HandleWaterAudio' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, BoostFX) == 0x0029C0, "Member 'AOctopusVehicle_V2_C::BoostFX' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Can_Spark) == 0x0029C8, "Member 'AOctopusVehicle_V2_C::Can_Spark' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coil_FX_Locked) == 0x0029C9, "Member 'AOctopusVehicle_V2_C::Coil_FX_Locked' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Sparks_FX_Cue_Tag) == 0x0029CC, "Member 'AOctopusVehicle_V2_C::Sparks_FX_Cue_Tag' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Dispatch_CoasterDestruction) == 0x0029D0, "Member 'AOctopusVehicle_V2_C::Dispatch_CoasterDestruction' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Riding_Coaster_Tag) == 0x0029E0, "Member 'AOctopusVehicle_V2_C::Riding_Coaster_Tag' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_FOV_Speed_Offset) == 0x0029E4, "Member 'AOctopusVehicle_V2_C::Coaster_FOV_Speed_Offset' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_FOV_Timeline_Play_Rate) == 0x0029E8, "Member 'AOctopusVehicle_V2_C::Coaster_FOV_Timeline_Play_Rate' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Speed_Coaster_FOV_Target) == 0x0029EC, "Member 'AOctopusVehicle_V2_C::Speed_Coaster_FOV_Target' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Previous_FOV) == 0x0029F0, "Member 'AOctopusVehicle_V2_C::Previous_FOV' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_FOV_Timer) == 0x0029F8, "Member 'AOctopusVehicle_V2_C::Coaster_FOV_Timer' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, On_Hit_Location) == 0x002A00, "Member 'AOctopusVehicle_V2_C::On_Hit_Location' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, On_Hit_Normal) == 0x002A18, "Member 'AOctopusVehicle_V2_C::On_Hit_Normal' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, On_Hit_Force) == 0x002A30, "Member 'AOctopusVehicle_V2_C::On_Hit_Force' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, On_Hit_Actor) == 0x002A38, "Member 'AOctopusVehicle_V2_C::On_Hit_Actor' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_FOV_Multiplier) == 0x002A40, "Member 'AOctopusVehicle_V2_C::Coaster_FOV_Multiplier' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, CoasterBoostAudio) == 0x002A68, "Member 'AOctopusVehicle_V2_C::CoasterBoostAudio' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Can_Spawn_Coaster_Boost_Noise) == 0x002A70, "Member 'AOctopusVehicle_V2_C::Can_Spawn_Coaster_Boost_Noise' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Coaster_Boost_Cooldown) == 0x002A74, "Member 'AOctopusVehicle_V2_C::Coaster_Boost_Cooldown' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Min_Speed_Increase) == 0x002A78, "Member 'AOctopusVehicle_V2_C::Min_Speed_Increase' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Speed_Coaster_Audio_Target) == 0x002A7C, "Member 'AOctopusVehicle_V2_C::Speed_Coaster_Audio_Target' has a wrong offset!");
static_assert(offsetof(AOctopusVehicle_V2_C, Previous_Audio_Target) == 0x002A80, "Member 'AOctopusVehicle_V2_C::Previous_Audio_Target' has a wrong offset!");

}

