#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrickFeedView

#include "Basic.hpp"

#include "TrickFeedView_classes.hpp"
#include "TrickFeedView_parameters.hpp"


namespace SDK
{

// Function TrickFeedView.TrickFeedView_C.AddTrick
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             TrickName                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UTrickFeedView_C::AddTrick(const class FText& TrickName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "AddTrick");

	Params::TrickFeedView_C_AddTrick Parms{};

	Parms.TrickName = std::move(TrickName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrickFeedView.TrickFeedView_C.CritStyleEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    isCritical_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTrickFeedView_C::CritStyleEvent(bool isCritical_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "CritStyleEvent");

	Params::TrickFeedView_C_CritStyleEvent Parms{};

	Parms.isCritical_0 = isCritical_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrickFeedView.TrickFeedView_C.EventTrickCompliment
// (BlueprintCallable, BlueprintEvent)

void UTrickFeedView_C::EventTrickCompliment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "EventTrickCompliment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrickFeedView.TrickFeedView_C.ExecuteUbergraph_TrickFeedView
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTrickFeedView_C::ExecuteUbergraph_TrickFeedView(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "ExecuteUbergraph_TrickFeedView");

	Params::TrickFeedView_C_ExecuteUbergraph_TrickFeedView Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrickFeedView.TrickFeedView_C.FadeOutMusic
// (Public, BlueprintCallable, BlueprintEvent)

void UTrickFeedView_C::FadeOutMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "FadeOutMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrickFeedView.TrickFeedView_C.GetCalloutText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Callout                                                (Parm, OutParm)

void UTrickFeedView_C::GetCalloutText(class FText* Callout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "GetCalloutText");

	Params::TrickFeedView_C_GetCalloutText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Callout != nullptr)
		*Callout = std::move(Parms.Callout);
}


// Function TrickFeedView.TrickFeedView_C.HIdeTrickUI
// (BlueprintCallable, BlueprintEvent)

void UTrickFeedView_C::HIdeTrickUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "HIdeTrickUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrickFeedView.TrickFeedView_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTrickFeedView_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "PreConstruct");

	Params::TrickFeedView_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrickFeedView.TrickFeedView_C.SimulateTrick
// (BlueprintCallable, BlueprintEvent)

void UTrickFeedView_C::SimulateTrick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "SimulateTrick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrickFeedView.TrickFeedView_C.ToggleCompleteStyle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsComplete                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTrickFeedView_C::ToggleCompleteStyle(bool IsComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "ToggleCompleteStyle");

	Params::TrickFeedView_C_ToggleCompleteStyle Parms{};

	Parms.IsComplete = IsComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrickFeedView.TrickFeedView_C.TrickSequenceCanceled
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UTrickFeedView_C::TrickSequenceCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "TrickSequenceCanceled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrickFeedView.TrickFeedView_C.TrickSequenceComplete
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UTrickFeedView_C::TrickSequenceComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "TrickSequenceComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrickFeedView.TrickFeedView_C.TrickSequenceFailed
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UTrickFeedView_C::TrickSequenceFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "TrickSequenceFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrickFeedView.TrickFeedView_C.TrickSequenceStarted
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UTrickFeedView_C::TrickSequenceStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "TrickSequenceStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrickFeedView.TrickFeedView_C.UpdateMultiplier
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Multiplier_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTrickFeedView_C::UpdateMultiplier(int32 Multiplier_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "UpdateMultiplier");

	Params::TrickFeedView_C_UpdateMultiplier Parms{};

	Parms.Multiplier_0 = Multiplier_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrickFeedView.TrickFeedView_C.UpdateScore
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortVehicleTrickSet*             TrickSet                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalScore_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTrickFeedView_C::UpdateScore(class UFortVehicleTrickSet* TrickSet, int32 TotalScore_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "UpdateScore");

	Params::TrickFeedView_C_UpdateScore Parms{};

	Parms.TrickSet = TrickSet;
	Parms.TotalScore_0 = TotalScore_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrickFeedView.TrickFeedView_C.UpdateTrickStats
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             StatsText                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UTrickFeedView_C::UpdateTrickStats(const class FText& StatsText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "UpdateTrickStats");

	Params::TrickFeedView_C_UpdateTrickStats Parms{};

	Parms.StatsText = std::move(StatsText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrickFeedView.TrickFeedView_C.WidgetAnimationEvt_TrickComplete_K2Node_WidgetAnimationEvent_1
// (BlueprintEvent)

void UTrickFeedView_C::WidgetAnimationEvt_TrickComplete_K2Node_WidgetAnimationEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "WidgetAnimationEvt_TrickComplete_K2Node_WidgetAnimationEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrickFeedView.TrickFeedView_C.WidgetAnimationEvt_TrickFailed_K2Node_WidgetAnimationEvent_0
// (BlueprintEvent)

void UTrickFeedView_C::WidgetAnimationEvt_TrickFailed_K2Node_WidgetAnimationEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrickFeedView_C", "WidgetAnimationEvt_TrickFailed_K2Node_WidgetAnimationEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}

}

