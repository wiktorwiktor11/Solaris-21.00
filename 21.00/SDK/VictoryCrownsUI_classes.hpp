#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VictoryCrownsUI

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CommonUI_classes.hpp"
#include "FortniteUI_classes.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// Class VictoryCrownsUI.FortUIManagerComponent_VictoryCrowns
// 0x0090 (0x0130 - 0x00A0)
class UFortUIManagerComponent_VictoryCrowns final : public UFortControllerComponent
{
public:
	TSubclassOf<class UVictoryCrownsIndicator>    VictoryCrownsIndicatorClass;                       // 0x00A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUserWidgetPool                        IndicatorPool;                                     // 0x00A8(0x0088)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	void HandleGamePhaseStepChanged(const TScriptInterface<class IFortSafeZoneInterface>& SafeZoneInterface, const EAthenaGamePhaseStep GamePhaseStep);
	void RebuildBearerIndicators(const TArray<class AFortPlayerStateAthena*>& CrownBearerList);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortUIManagerComponent_VictoryCrowns">();
	}
	static class UFortUIManagerComponent_VictoryCrowns* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortUIManagerComponent_VictoryCrowns>();
	}
};
static_assert(alignof(UFortUIManagerComponent_VictoryCrowns) == 0x000008, "Wrong alignment on UFortUIManagerComponent_VictoryCrowns");
static_assert(sizeof(UFortUIManagerComponent_VictoryCrowns) == 0x000130, "Wrong size on UFortUIManagerComponent_VictoryCrowns");
static_assert(offsetof(UFortUIManagerComponent_VictoryCrowns, VictoryCrownsIndicatorClass) == 0x0000A0, "Member 'UFortUIManagerComponent_VictoryCrowns::VictoryCrownsIndicatorClass' has a wrong offset!");
static_assert(offsetof(UFortUIManagerComponent_VictoryCrowns, IndicatorPool) == 0x0000A8, "Member 'UFortUIManagerComponent_VictoryCrowns::IndicatorPool' has a wrong offset!");

// Class VictoryCrownsUI.VictoryCrownsBearerInfoBase
// 0x0010 (0x02F0 - 0x02E0)
class UVictoryCrownsBearerInfoBase final : public UCommonUserWidget
{
public:
	TWeakObjectPtr<class AFortPlayerStateAthena>  WeakPSA;                                           // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_PlayerName;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnSetPlayerState(class AFortPlayerStateAthena* PSA);
	void SetPlayerState(class AFortPlayerStateAthena* InPlayerState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VictoryCrownsBearerInfoBase">();
	}
	static class UVictoryCrownsBearerInfoBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVictoryCrownsBearerInfoBase>();
	}
};
static_assert(alignof(UVictoryCrownsBearerInfoBase) == 0x000008, "Wrong alignment on UVictoryCrownsBearerInfoBase");
static_assert(sizeof(UVictoryCrownsBearerInfoBase) == 0x0002F0, "Wrong size on UVictoryCrownsBearerInfoBase");
static_assert(offsetof(UVictoryCrownsBearerInfoBase, WeakPSA) == 0x0002E0, "Member 'UVictoryCrownsBearerInfoBase::WeakPSA' has a wrong offset!");
static_assert(offsetof(UVictoryCrownsBearerInfoBase, Text_PlayerName) == 0x0002E8, "Member 'UVictoryCrownsBearerInfoBase::Text_PlayerName' has a wrong offset!");

// Class VictoryCrownsUI.VictoryCrownsIndicator
// 0x0028 (0x03E0 - 0x03B8)
class UVictoryCrownsIndicator final : public UFortActorIndicatorWidget
{
public:
	uint8                                         Pad_3B8[0x28];                                     // 0x03B8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDistanceChanged(int32 Distance);
	void OnScreenClampChanged(bool bIsClamped);

	const class AFortPlayerStateAthena* GetIndicatedPlayerStateAthena() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VictoryCrownsIndicator">();
	}
	static class UVictoryCrownsIndicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVictoryCrownsIndicator>();
	}
};
static_assert(alignof(UVictoryCrownsIndicator) == 0x000008, "Wrong alignment on UVictoryCrownsIndicator");
static_assert(sizeof(UVictoryCrownsIndicator) == 0x0003E0, "Wrong size on UVictoryCrownsIndicator");

// Class VictoryCrownsUI.VictoryCrownsPlacementOverlay
// 0x0000 (0x0340 - 0x0340)
class UVictoryCrownsPlacementOverlay final : public UPostGamePlacementOverlay
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VictoryCrownsPlacementOverlay">();
	}
	static class UVictoryCrownsPlacementOverlay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVictoryCrownsPlacementOverlay>();
	}
};
static_assert(alignof(UVictoryCrownsPlacementOverlay) == 0x000008, "Wrong alignment on UVictoryCrownsPlacementOverlay");
static_assert(sizeof(UVictoryCrownsPlacementOverlay) == 0x000340, "Wrong size on UVictoryCrownsPlacementOverlay");

// Class VictoryCrownsUI.VictoryCrownsPlayerInfoWidget
// 0x0010 (0x0330 - 0x0320)
class UVictoryCrownsPlayerInfoWidget final : public UFortHUDElementWidget
{
public:
	uint8                                         Pad_320[0x10];                                     // 0x0320(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleCrownBearerListChanged(const TArray<class AFortPlayerStateAthena*>& CrownBearerList);
	void OnPlayerVictoryCrownStatusChanged(const bool bHasCrown);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VictoryCrownsPlayerInfoWidget">();
	}
	static class UVictoryCrownsPlayerInfoWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVictoryCrownsPlayerInfoWidget>();
	}
};
static_assert(alignof(UVictoryCrownsPlayerInfoWidget) == 0x000008, "Wrong alignment on UVictoryCrownsPlayerInfoWidget");
static_assert(sizeof(UVictoryCrownsPlayerInfoWidget) == 0x000330, "Wrong size on UVictoryCrownsPlayerInfoWidget");

// Class VictoryCrownsUI.VictoryCrownsPreGameWidget
// 0x0038 (0x0430 - 0x03F8)
class UVictoryCrownsPreGameWidget final : public UCommonActivatableWidget
{
public:
	class UDynamicEntryBox*                       EntryBox_BearerList;                               // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonActionWidget*                    TipActionWidget;                                   // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    CloseObjectInputAction;                            // 0x0408(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_418[0x18];                                     // 0x0418(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FadeOutTimerFinished();
	void HandleGamePhaseStepChanged(const TScriptInterface<class IFortSafeZoneInterface>& SafeZoneInterface, const EAthenaGamePhaseStep GamePhaseStep);
	void OnButtonClose();
	void OnButtonCloseProgress(float Progress);
	void OnCloseActionsComplete();
	void OnInputMethodChanged(ECommonInputType CurrentInput);
	void RebuildBearerList(const TArray<class AFortPlayerStateAthena*>& CrownBearerList);
	void RegisterCloseButtonInput();
	void StartFadeOut();
	void UnregisterCloseButtonInput();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VictoryCrownsPreGameWidget">();
	}
	static class UVictoryCrownsPreGameWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVictoryCrownsPreGameWidget>();
	}
};
static_assert(alignof(UVictoryCrownsPreGameWidget) == 0x000008, "Wrong alignment on UVictoryCrownsPreGameWidget");
static_assert(sizeof(UVictoryCrownsPreGameWidget) == 0x000430, "Wrong size on UVictoryCrownsPreGameWidget");
static_assert(offsetof(UVictoryCrownsPreGameWidget, EntryBox_BearerList) == 0x0003F8, "Member 'UVictoryCrownsPreGameWidget::EntryBox_BearerList' has a wrong offset!");
static_assert(offsetof(UVictoryCrownsPreGameWidget, TipActionWidget) == 0x000400, "Member 'UVictoryCrownsPreGameWidget::TipActionWidget' has a wrong offset!");
static_assert(offsetof(UVictoryCrownsPreGameWidget, CloseObjectInputAction) == 0x000408, "Member 'UVictoryCrownsPreGameWidget::CloseObjectInputAction' has a wrong offset!");

}

