#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KeyboardPresetRotator

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct KeyboardPresetRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardPresetRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on KeyboardPresetRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(KeyboardPresetRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on KeyboardPresetRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(KeyboardPresetRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'KeyboardPresetRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct KeyboardPresetRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardPresetRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on KeyboardPresetRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(KeyboardPresetRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on KeyboardPresetRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(KeyboardPresetRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'KeyboardPresetRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct KeyboardPresetRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardPresetRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature) == 0x000004, "Wrong alignment on KeyboardPresetRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature");
static_assert(sizeof(KeyboardPresetRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature) == 0x000004, "Wrong size on KeyboardPresetRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature");
static_assert(offsetof(KeyboardPresetRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature, Value) == 0x000000, "Member 'KeyboardPresetRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature::Value' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.Center On Widget
// 0x0008 (0x0008 - 0x0000)
struct KeyboardPresetRotator_C_Center_On_Widget final
{
public:
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardPresetRotator_C_Center_On_Widget) == 0x000008, "Wrong alignment on KeyboardPresetRotator_C_Center_On_Widget");
static_assert(sizeof(KeyboardPresetRotator_C_Center_On_Widget) == 0x000008, "Wrong size on KeyboardPresetRotator_C_Center_On_Widget");
static_assert(offsetof(KeyboardPresetRotator_C_Center_On_Widget, CallFunc_GetUINavigationManager_ReturnValue) == 0x000000, "Member 'KeyboardPresetRotator_C_Center_On_Widget::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.ExecuteUbergraph_KeyboardPresetRotator
// 0x0068 (0x0068 - 0x0000)
struct KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Value;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetDescription; // 0x0038(0x0018)()
	class FText                                   CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetSubDescription; // 0x0050(0x0018)()
};
static_assert(alignof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator) == 0x000008, "Wrong alignment on KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator");
static_assert(sizeof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator) == 0x000068, "Wrong size on KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator");
static_assert(offsetof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator, EntryPoint) == 0x000000, "Member 'KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator::EntryPoint' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator, K2Node_ComponentBoundEvent_Value) == 0x000004, "Member 'KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator, K2Node_ComponentBoundEvent_Button_1) == 0x000008, "Member 'KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator, K2Node_ComponentBoundEvent_Button) == 0x000010, "Member 'KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator, K2Node_Event_IsDesignTime) == 0x000018, "Member 'KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator, CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetDescription) == 0x000038, "Member 'KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator::CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetDescription' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator, CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetSubDescription) == 0x000050, "Member 'KeyboardPresetRotator_C_ExecuteUbergraph_KeyboardPresetRotator::CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetSubDescription' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.Initialize
// 0x0060 (0x0060 - 0x0000)
struct KeyboardPresetRotator_C_Initialize final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetDescription; // 0x0008(0x0018)()
	class FText                                   CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetSubDescription; // 0x0020(0x0018)()
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetKBMPlayerInputPresetNamesForSubGame_InputPresetNames; // 0x0040(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_GetKBMPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames; // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(KeyboardPresetRotator_C_Initialize) == 0x000008, "Wrong alignment on KeyboardPresetRotator_C_Initialize");
static_assert(sizeof(KeyboardPresetRotator_C_Initialize) == 0x000060, "Wrong size on KeyboardPresetRotator_C_Initialize");
static_assert(offsetof(KeyboardPresetRotator_C_Initialize, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'KeyboardPresetRotator_C_Initialize::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Initialize, CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetDescription) == 0x000008, "Member 'KeyboardPresetRotator_C_Initialize::CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetDescription' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Initialize, CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetSubDescription) == 0x000020, "Member 'KeyboardPresetRotator_C_Initialize::CallFunc_GetKBMPlayerInputPresetDescriptionForSubGame_InputPresetSubDescription' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Initialize, CallFunc_GetSubGame_ReturnValue) == 0x000038, "Member 'KeyboardPresetRotator_C_Initialize::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Initialize, CallFunc_GetKBMPlayerInputPresetNamesForSubGame_InputPresetNames) == 0x000040, "Member 'KeyboardPresetRotator_C_Initialize::CallFunc_GetKBMPlayerInputPresetNamesForSubGame_InputPresetNames' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Initialize, CallFunc_GetKBMPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames) == 0x000050, "Member 'KeyboardPresetRotator_C_Initialize::CallFunc_GetKBMPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct KeyboardPresetRotator_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0048(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0100(0x00B8)()
};
static_assert(alignof(KeyboardPresetRotator_C_OnFocusReceived) == 0x000008, "Wrong alignment on KeyboardPresetRotator_C_OnFocusReceived");
static_assert(sizeof(KeyboardPresetRotator_C_OnFocusReceived) == 0x0001B8, "Wrong size on KeyboardPresetRotator_C_OnFocusReceived");
static_assert(offsetof(KeyboardPresetRotator_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'KeyboardPresetRotator_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_OnFocusReceived, InFocusEvent) == 0x000040, "Member 'KeyboardPresetRotator_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_OnFocusReceived, ReturnValue) == 0x000048, "Member 'KeyboardPresetRotator_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_OnFocusReceived, CallFunc_Unhandled_ReturnValue) == 0x000100, "Member 'KeyboardPresetRotator_C_OnFocusReceived::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct KeyboardPresetRotator_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardPresetRotator_C_PreConstruct) == 0x000001, "Wrong alignment on KeyboardPresetRotator_C_PreConstruct");
static_assert(sizeof(KeyboardPresetRotator_C_PreConstruct) == 0x000001, "Wrong size on KeyboardPresetRotator_C_PreConstruct");
static_assert(offsetof(KeyboardPresetRotator_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'KeyboardPresetRotator_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.Show Param Name
// 0x0005 (0x0005 - 0x0000)
struct KeyboardPresetRotator_C_Show_Param_Name final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardPresetRotator_C_Show_Param_Name) == 0x000001, "Wrong alignment on KeyboardPresetRotator_C_Show_Param_Name");
static_assert(sizeof(KeyboardPresetRotator_C_Show_Param_Name) == 0x000005, "Wrong size on KeyboardPresetRotator_C_Show_Param_Name");
static_assert(offsetof(KeyboardPresetRotator_C_Show_Param_Name, Show) == 0x000000, "Member 'KeyboardPresetRotator_C_Show_Param_Name::Show' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Show_Param_Name, Temp_bool_Variable) == 0x000001, "Member 'KeyboardPresetRotator_C_Show_Param_Name::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Show_Param_Name, Temp_byte_Variable) == 0x000002, "Member 'KeyboardPresetRotator_C_Show_Param_Name::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Show_Param_Name, Temp_byte_Variable_1) == 0x000003, "Member 'KeyboardPresetRotator_C_Show_Param_Name::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Show_Param_Name, K2Node_Select_Default) == 0x000004, "Member 'KeyboardPresetRotator_C_Show_Param_Name::K2Node_Select_Default' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.Update Options
// 0x0010 (0x0010 - 0x0000)
struct KeyboardPresetRotator_C_Update_Options final
{
public:
	TArray<class FText>                           NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(KeyboardPresetRotator_C_Update_Options) == 0x000008, "Wrong alignment on KeyboardPresetRotator_C_Update_Options");
static_assert(sizeof(KeyboardPresetRotator_C_Update_Options) == 0x000010, "Wrong size on KeyboardPresetRotator_C_Update_Options");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Options, NewParam) == 0x000000, "Member 'KeyboardPresetRotator_C_Update_Options::NewParam' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.Update Row Selector
// 0x0004 (0x0004 - 0x0000)
struct KeyboardPresetRotator_C_Update_Row_Selector final
{
public:
	int32                                         Currently_Selected;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardPresetRotator_C_Update_Row_Selector) == 0x000004, "Wrong alignment on KeyboardPresetRotator_C_Update_Row_Selector");
static_assert(sizeof(KeyboardPresetRotator_C_Update_Row_Selector) == 0x000004, "Wrong size on KeyboardPresetRotator_C_Update_Row_Selector");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Row_Selector, Currently_Selected) == 0x000000, "Member 'KeyboardPresetRotator_C_Update_Row_Selector::Currently_Selected' has a wrong offset!");

// Function KeyboardPresetRotator.KeyboardPresetRotator_C.Update Size
// 0x0058 (0x0058 - 0x0000)
struct KeyboardPresetRotator_C_Update_Size final
{
public:
	struct FVector2D                              LargeSize;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SmallSize;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_2;               // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardPresetRotator_C_Update_Size) == 0x000008, "Wrong alignment on KeyboardPresetRotator_C_Update_Size");
static_assert(sizeof(KeyboardPresetRotator_C_Update_Size) == 0x000058, "Wrong size on KeyboardPresetRotator_C_Update_Size");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, LargeSize) == 0x000000, "Member 'KeyboardPresetRotator_C_Update_Size::LargeSize' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, SmallSize) == 0x000010, "Member 'KeyboardPresetRotator_C_Update_Size::SmallSize' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, Temp_int_Variable) == 0x000020, "Member 'KeyboardPresetRotator_C_Update_Size::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, Temp_bool_Variable) == 0x000024, "Member 'KeyboardPresetRotator_C_Update_Size::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, CallFunc_IsMobileGame_ReturnValue) == 0x000025, "Member 'KeyboardPresetRotator_C_Update_Size::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, CallFunc_IsMobileGame_ReturnValue_1) == 0x000026, "Member 'KeyboardPresetRotator_C_Update_Size::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, CallFunc_IsMobileGame_ReturnValue_2) == 0x000027, "Member 'KeyboardPresetRotator_C_Update_Size::CallFunc_IsMobileGame_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, Temp_int_Variable_1) == 0x000028, "Member 'KeyboardPresetRotator_C_Update_Size::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, Temp_bool_Variable_1) == 0x00002C, "Member 'KeyboardPresetRotator_C_Update_Size::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, K2Node_Select_Default) == 0x000030, "Member 'KeyboardPresetRotator_C_Update_Size::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, Temp_bool_Variable_2) == 0x000034, "Member 'KeyboardPresetRotator_C_Update_Size::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, K2Node_Select_Default_1) == 0x000038, "Member 'KeyboardPresetRotator_C_Update_Size::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(KeyboardPresetRotator_C_Update_Size, K2Node_Select_Default_2) == 0x000048, "Member 'KeyboardPresetRotator_C_Update_Size::K2Node_Select_Default_2' has a wrong offset!");

}

