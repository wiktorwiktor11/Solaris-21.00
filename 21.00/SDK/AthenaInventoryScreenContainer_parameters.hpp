#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryScreenContainer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "AthenaDragDropAction_structs.hpp"


namespace SDK::Params
{

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature) == 0x000004, "Wrong alignment on AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature");
static_assert(sizeof(AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature) == 0x000004, "Wrong size on AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature");
static_assert(offsetof(AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature, TabId) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature::TabId' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.ExecuteUbergraph_AthenaInventoryScreenContainer
// 0x0020 (0x0020 - 0x0000)
struct AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_TabId;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer");
static_assert(sizeof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer) == 0x000020, "Wrong size on AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, EntryPoint) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_IsUsingTouch_ReturnValue) == 0x000004, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, K2Node_ComponentBoundEvent_TabId) == 0x000008, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::K2Node_ComponentBoundEvent_TabId' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_IsActivated_ReturnValue) == 0x00000C, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.IsDragItemDroppable
// 0x0030 (0x0030 - 0x0000)
struct AthenaInventoryScreenContainer_C_IsDragItemDroppable final
{
public:
	class UDragDropOperation*                     DragDropOperation;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDroppable;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaInventoryDragDrop_C*             K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItem*                         K2Node_DynamicCast_AsFort_World_Item;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeDropped_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_IsDragItemDroppable) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_IsDragItemDroppable");
static_assert(sizeof(AthenaInventoryScreenContainer_C_IsDragItemDroppable) == 0x000030, "Wrong size on AthenaInventoryScreenContainer_C_IsDragItemDroppable");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, DragDropOperation) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::DragDropOperation' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, bIsDroppable) == 0x000008, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::bIsDroppable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop) == 0x000010, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, K2Node_DynamicCast_AsFort_World_Item) == 0x000020, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::K2Node_DynamicCast_AsFort_World_Item' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, CallFunc_CanBeDropped_ReturnValue) == 0x000029, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::CallFunc_CanBeDropped_ReturnValue' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.OnDragOver
// 0x00F0 (0x00F0 - 0x0000)
struct AthenaInventoryScreenContainer_C_OnDragOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0040(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaInventoryDragDrop_C*             K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop;   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaDragDropAction                         Temp_byte_Variable;                                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDragItemDroppable_bIsDroppable;         // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaDragDropAction                         Temp_byte_Variable_1;                              // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaDragDropAction                         K2Node_Select_Default;                             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_OnDragOver) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_OnDragOver");
static_assert(sizeof(AthenaInventoryScreenContainer_C_OnDragOver) == 0x0000F0, "Wrong size on AthenaInventoryScreenContainer_C_OnDragOver");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, MyGeometry) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, PointerEvent) == 0x000040, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::PointerEvent' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, Operation) == 0x0000D0, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::Operation' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, ReturnValue) == 0x0000D8, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, Temp_bool_Variable) == 0x0000D9, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop) == 0x0000E0, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, Temp_byte_Variable) == 0x0000E9, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, CallFunc_IsDragItemDroppable_bIsDroppable) == 0x0000EA, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::CallFunc_IsDragItemDroppable_bIsDroppable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, Temp_byte_Variable_1) == 0x0000EB, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, K2Node_Select_Default) == 0x0000EC, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::K2Node_Select_Default' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.OnDrop
// 0x0118 (0x0118 - 0x0000)
struct AthenaInventoryScreenContainer_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0040(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaInventoryDragDrop_C*             K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop;   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDragItemDroppable_bIsDroppable;         // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItem*                         K2Node_DynamicCast_AsFort_World_Item;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumInStack_ReturnValue;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DropItem_ReturnValue;                     // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_OnDrop) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_OnDrop");
static_assert(sizeof(AthenaInventoryScreenContainer_C_OnDrop) == 0x000118, "Wrong size on AthenaInventoryScreenContainer_C_OnDrop");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, MyGeometry) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, PointerEvent) == 0x000040, "Member 'AthenaInventoryScreenContainer_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, Operation) == 0x0000D0, "Member 'AthenaInventoryScreenContainer_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, ReturnValue) == 0x0000D8, "Member 'AthenaInventoryScreenContainer_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, Temp_bool_Variable) == 0x0000D9, "Member 'AthenaInventoryScreenContainer_C_OnDrop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop) == 0x0000E0, "Member 'AthenaInventoryScreenContainer_C_OnDrop::K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'AthenaInventoryScreenContainer_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_IsDragItemDroppable_bIsDroppable) == 0x0000E9, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_IsDragItemDroppable_bIsDroppable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_GetContext_ReturnValue) == 0x0000F0, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, K2Node_DynamicCast_AsFort_World_Item) == 0x0000F8, "Member 'AthenaInventoryScreenContainer_C_OnDrop::K2Node_DynamicCast_AsFort_World_Item' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'AthenaInventoryScreenContainer_C_OnDrop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_GetNumInStack_ReturnValue) == 0x000104, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_GetNumInStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_Divide_IntInt_ReturnValue) == 0x000108, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_Max_ReturnValue) == 0x00010C, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, K2Node_Select_Default) == 0x000110, "Member 'AthenaInventoryScreenContainer_C_OnDrop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_DropItem_ReturnValue) == 0x000114, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_DropItem_ReturnValue' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.UpdateHeaderStyle
// 0x0028 (0x0028 - 0x0000)
struct AthenaInventoryScreenContainer_C_UpdateHeaderStyle final
{
public:
	bool                                          bLocal_ShowHeaderBackground;                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveTabWidget_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAthenaInventoryScreenContainerTabInterface_C> K2Node_DynamicCast_AsAthena_Inventory_Screen_Container_Tab_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShowHeaderBackground_bShowHeaderBackground; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_UpdateHeaderStyle");
static_assert(sizeof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle) == 0x000028, "Wrong size on AthenaInventoryScreenContainer_C_UpdateHeaderStyle");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, bLocal_ShowHeaderBackground) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::bLocal_ShowHeaderBackground' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, Temp_bool_Variable) == 0x000001, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, Temp_byte_Variable) == 0x000002, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, Temp_byte_Variable_1) == 0x000003, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, Temp_bool_Variable_1) == 0x000004, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, Temp_byte_Variable_2) == 0x000005, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, Temp_byte_Variable_3) == 0x000006, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, CallFunc_GetActiveTabWidget_ReturnValue) == 0x000008, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::CallFunc_GetActiveTabWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, K2Node_DynamicCast_AsAthena_Inventory_Screen_Container_Tab_Interface) == 0x000010, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::K2Node_DynamicCast_AsAthena_Inventory_Screen_Container_Tab_Interface' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, CallFunc_ShowHeaderBackground_bShowHeaderBackground) == 0x000021, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::CallFunc_ShowHeaderBackground_bShowHeaderBackground' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, K2Node_Select_Default) == 0x000022, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateHeaderStyle, K2Node_Select_Default_1) == 0x000023, "Member 'AthenaInventoryScreenContainer_C_UpdateHeaderStyle::K2Node_Select_Default_1' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.GetPlayerInventoryWidget
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryScreenContainer_C_GetPlayerInventoryWidget final
{
public:
	class UAthenaInventoryPanelContainer*         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_GetPlayerInventoryWidget) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_GetPlayerInventoryWidget");
static_assert(sizeof(AthenaInventoryScreenContainer_C_GetPlayerInventoryWidget) == 0x000008, "Wrong size on AthenaInventoryScreenContainer_C_GetPlayerInventoryWidget");
static_assert(offsetof(AthenaInventoryScreenContainer_C_GetPlayerInventoryWidget, ReturnValue) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_GetPlayerInventoryWidget::ReturnValue' has a wrong offset!");

}

