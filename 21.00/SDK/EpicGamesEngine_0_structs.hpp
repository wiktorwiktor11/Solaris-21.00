#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EpicGamesEngine_0

#include "Basic.hpp"


namespace SDK
{

// SolarisGeneratedEnum EpicGamesEngine.input_event
// NumValues: 0x0002
enum class Einput_event : uint8
{
	Pressed                                  = 0,
	Released                                 = 1,
};

// SolarisGeneratedEnum EpicGamesEngine.verse_key
// NumValues: 0x0048
enum class Everse_key : uint8
{
	Gamepad_FaceButton_Top                   = 0,
	Gamepad_FaceButton_Bottom                = 1,
	Gamepad_FaceButton_Left                  = 2,
	Gamepad_FaceButton_Right                 = 3,
	Gamepad_LeftShoulder                     = 4,
	Gamepad_RightShoulder                    = 5,
	Gamepad_LeftTrigger                      = 6,
	Gamepad_RightTrigger                     = 7,
	Gamepad_DPad_Up                          = 8,
	Gamepad_DPad_Down                        = 9,
	Gamepad_DPad_Left                        = 10,
	Gamepad_DPad_Right                       = 11,
	Gamepad_LeftX                            = 12,
	Gamepad_LeftY                            = 13,
	Gamepad_RightX                           = 14,
	Gamepad_RightY                           = 15,
	Gamepad_LeftTriggerAxis                  = 16,
	Gamepad_RightTriggerAxis                 = 17,
	Mouse_X                                  = 18,
	Mouse_Y                                  = 19,
	Mouse_WheelAxis                          = 20,
	Mouse_LeftButton                         = 21,
	Mouse_RightButton                        = 22,
	Mouse_MiddleButton                       = 23,
	Mouse_ThumbButton                        = 24,
	Mouse_ThumbButton2                       = 25,
	Mouse_ScrollUp                           = 26,
	Mouse_ScrollDown                         = 27,
	Keyboard_Up                              = 28,
	Keyboard_Down                            = 29,
	Keyboard_Left                            = 30,
	Keyboard_Right                           = 31,
	Keyboard_Enter                           = 32,
	Keyboard_Multiply                        = 33,
	Keyboard_Divide                          = 34,
	Keyboard_Add                             = 35,
	Keyboard_Subtract                        = 36,
	Keyboard_Decimal                         = 37,
	Keyboard_SpaceBar                        = 38,
	Keyboard_LeftShift                       = 39,
	Keyboard_RightShift                      = 40,
	Keyboard_LeftControl                     = 41,
	Keyboard_RightControl                    = 42,
	Keyboard_LeftAlt                         = 43,
	Keyboard_RightAlt                        = 44,
	NumPad_Zero                              = 45,
	NumPad_One                               = 46,
	NumPad_Two                               = 47,
	NumPad_Three                             = 48,
	NumPad_Four                              = 49,
	NumPad_Five                              = 50,
	NumPad_Six                               = 51,
	NumPad_Seven                             = 52,
	NumPad_Eight                             = 53,
	NumPad_Nine                              = 54,
	E                                        = 55,
	I                                        = 56,
	J                                        = 57,
	K                                        = 58,
	L                                        = 59,
	Z                                        = 60,
	Tab                                      = 61,
	Zero                                     = 62,
	One                                      = 63,
	Two                                      = 64,
	Three                                    = 65,
	Four                                     = 66,
	Five                                     = 67,
	Six                                      = 68,
	Seven                                    = 69,
	Eight                                    = 70,
	Nine                                     = 71,
};

// SolarisGeneratedStruct EpicGamesEngine.tuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R
// 0x0050 (0x0050 - 0x0000)
struct Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference, HasGetValueTypeHash)
	TArray<Everse_key>                            __verse_0x932BF92E_Elem2;                          // 0x0020(0x0010)(InstancedReference)
	FOptionProperty_                              __verse_0xF64C4596_Elem3;                          // 0x0030(0x0009)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              __verse_0x4F74920B_Elem4;                          // 0x003C(0x000D)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R) == 0x000008, "Wrong alignment on Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R");
static_assert(sizeof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R) == 0x000050, "Wrong size on Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R, __verse_0x932BF92E_Elem2) == 0x000020, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R, __verse_0xF64C4596_Elem3) == 0x000030, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R::__verse_0xF64C4596_Elem3' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R, __verse_0x4F74920B_Elem4) == 0x00003C, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_M_Q_Lfloat_Tvoid_R_R::__verse_0x4F74920B_Elem4' has a wrong offset!");

// SolarisGeneratedStruct EpicGamesEngine.tuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R
// 0x0040 (0x0040 - 0x0000)
struct Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference, HasGetValueTypeHash)
	TArray<Everse_key>                            __verse_0x932BF92E_Elem2;                          // 0x0020(0x0010)(InstancedReference)
	FOptionProperty_                              __verse_0xF64C4596_Elem3;                          // 0x0030(0x0009)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R) == 0x000008, "Wrong alignment on Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R");
static_assert(sizeof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R) == 0x000040, "Wrong size on Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R, __verse_0x932BF92E_Elem2) == 0x000020, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R, __verse_0xF64C4596_Elem3) == 0x000030, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_M_Qfloat_R::__verse_0xF64C4596_Elem3' has a wrong offset!");

// SolarisGeneratedStruct EpicGamesEngine.tuple_L_R
// 0x0001 (0x0001 - 0x0000)
struct EpicGamesEngine_0::Ftuple_L_R final
{
public:
	uint8                                         _StructPaddingDummy;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EpicGamesEngine_0::Ftuple_L_R) == 0x000001, "Wrong alignment on EpicGamesEngine_0::Ftuple_L_R");
static_assert(sizeof(EpicGamesEngine_0::Ftuple_L_R) == 0x000001, "Wrong size on EpicGamesEngine_0::Ftuple_L_R");
static_assert(offsetof(EpicGamesEngine_0::Ftuple_L_R, _StructPaddingDummy) == 0x000000, "Member 'EpicGamesEngine_0::Ftuple_L_R::_StructPaddingDummy' has a wrong offset!");

// SolarisGeneratedStruct EpicGamesEngine.tuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R
// 0x0040 (0x0040 - 0x0000)
struct Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference, HasGetValueTypeHash)
	TArray<Everse_key>                            __verse_0x932BF92E_Elem2;                          // 0x0020(0x0010)(InstancedReference)
	Einput_event                                  __verse_0xF64C4596_Elem3;                          // 0x0030(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct EpicGamesEngine_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument)> __verse_0x4F74920B_Elem4;                          // 0x0034(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R) == 0x000008, "Wrong alignment on Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R");
static_assert(sizeof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R) == 0x000040, "Wrong size on Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R, __verse_0x932BF92E_Elem2) == 0x000020, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R, __verse_0xF64C4596_Elem3) == 0x000030, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R::__verse_0xF64C4596_Elem3' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R, __verse_0x4F74920B_Elem4) == 0x000034, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_Minput__event_Mtuple_L_R_Tvoid_R::__verse_0x4F74920B_Elem4' has a wrong offset!");

// SolarisGeneratedStruct EpicGamesEngine.tuple_L_Kchar_M_Kchar_M_Kverse__key_R
// 0x0030 (0x0030 - 0x0000)
struct Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference, HasGetValueTypeHash)
	TArray<Everse_key>                            __verse_0x932BF92E_Elem2;                          // 0x0020(0x0010)(InstancedReference)
};
static_assert(alignof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R) == 0x000008, "Wrong alignment on Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R");
static_assert(sizeof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R) == 0x000030, "Wrong size on Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R, __verse_0x932BF92E_Elem2) == 0x000020, "Member 'Ftuple_L_Kchar_M_Kchar_M_Kverse__key_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct EpicGamesEngine.tuple_L_Kchar_M_Q_Lfloat_Tvoid_R_R
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) Ftuple_L_Kchar_M_Q_Lfloat_Tvoid_R_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	FOptionProperty_                              __verse_0x7D844C3C_Elem1;                          // 0x0010(0x000D)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kchar_M_Q_Lfloat_Tvoid_R_R) == 0x000008, "Wrong alignment on Ftuple_L_Kchar_M_Q_Lfloat_Tvoid_R_R");
static_assert(sizeof(Ftuple_L_Kchar_M_Q_Lfloat_Tvoid_R_R) == 0x000020, "Wrong size on Ftuple_L_Kchar_M_Q_Lfloat_Tvoid_R_R");
static_assert(offsetof(Ftuple_L_Kchar_M_Q_Lfloat_Tvoid_R_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_M_Q_Lfloat_Tvoid_R_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_M_Q_Lfloat_Tvoid_R_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_M_Q_Lfloat_Tvoid_R_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct EpicGamesEngine.tuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	Einput_event                                  __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct EpicGamesEngine_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument)> __verse_0x932BF92E_Elem2;                          // 0x0014(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R) == 0x000008, "Wrong alignment on Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R");
static_assert(sizeof(Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R) == 0x000020, "Wrong size on Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R");
static_assert(offsetof(Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R, __verse_0x932BF92E_Elem2) == 0x000014, "Member 'Ftuple_L_Kchar_Minput__event_Mtuple_L_R_Tvoid_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct EpicGamesEngine.tuple_L_Kchar_Minput__event_R
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) Ftuple_L_Kchar_Minput__event_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	Einput_event                                  __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Kchar_Minput__event_R) == 0x000008, "Wrong alignment on Ftuple_L_Kchar_Minput__event_R");
static_assert(sizeof(Ftuple_L_Kchar_Minput__event_R) == 0x000018, "Wrong size on Ftuple_L_Kchar_Minput__event_R");
static_assert(offsetof(Ftuple_L_Kchar_Minput__event_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Kchar_Minput__event_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Kchar_Minput__event_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Kchar_Minput__event_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct EpicGamesEngine.tuple_Lverse__ue__input__component_M_Kchar_Minput__event_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R final
{
public:
	class Uverse_ue_input_component*              __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0010)(InstancedReference, HasGetValueTypeHash)
	Einput_event                                  __verse_0x932BF92E_Elem2;                          // 0x0018(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R) == 0x000008, "Wrong alignment on Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R");
static_assert(sizeof(Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R) == 0x000020, "Wrong size on Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R");
static_assert(offsetof(Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R, __verse_0x932BF92E_Elem2) == 0x000018, "Member 'Ftuple_Lverse__ue__input__component_M_Kchar_Minput__event_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

}

