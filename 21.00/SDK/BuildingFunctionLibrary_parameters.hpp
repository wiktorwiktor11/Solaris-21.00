#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BuildingFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BlueprintLogLevel_structs.hpp"


namespace SDK::Params
{

// Function BuildingFunctionLibrary.BuildingFunctionLibrary_C.SweepAgainstActorTypes
// 0x02C8 (0x02C8 - 0x0000)
struct BuildingFunctionLibrary_C_SweepAgainstActorTypes final
{
public:
	class AActor*                                 TestActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SweepRadius;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      SweepObjectTypes;                                  // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UClass*>                         ActorClassFilters;                                 // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overlapped;                                        // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0070(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00C8(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AB[0x1];                                      // 0x01AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0298(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingFunctionLibrary_C_SweepAgainstActorTypes) == 0x000008, "Wrong alignment on BuildingFunctionLibrary_C_SweepAgainstActorTypes");
static_assert(sizeof(BuildingFunctionLibrary_C_SweepAgainstActorTypes) == 0x0002C8, "Wrong size on BuildingFunctionLibrary_C_SweepAgainstActorTypes");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, TestActor) == 0x000000, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::TestActor' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, StartLocation) == 0x000008, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::StartLocation' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, EndLocation) == 0x000020, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::EndLocation' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, SweepRadius) == 0x000038, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::SweepRadius' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, SweepObjectTypes) == 0x000040, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::SweepObjectTypes' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, ActorClassFilters) == 0x000050, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::ActorClassFilters' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, __WorldContext) == 0x000060, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::__WorldContext' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, Overlapped) == 0x000068, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::Overlapped' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, Temp_object_Variable) == 0x000070, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000088, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000098, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Array_Length_ReturnValue_3) == 0x0000A4, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A9, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B5, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, Temp_int_Loop_Counter_Variable_2) == 0x0000C4, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A8, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A9, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001AA, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_Time) == 0x0001AC, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_Distance) == 0x0001B0, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_Location) == 0x0001B8, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D0, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_Normal) == 0x0001E8, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_ImpactNormal) == 0x000200, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_PhysMat) == 0x000218, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_HitActor) == 0x000220, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_HitComponent) == 0x000228, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_HitBoneName) == 0x000230, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_BoneName) == 0x000234, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_HitItem) == 0x000238, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_ElementIndex) == 0x00023C, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_FaceIndex) == 0x000240, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_TraceStart) == 0x000248, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_BreakHitResult_TraceEnd) == 0x000260, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_IsValid_ReturnValue_1) == 0x000278, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_GetObjectClass_ReturnValue) == 0x000280, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Add_IntInt_ReturnValue_2) == 0x000288, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, Temp_int_Array_Index_Variable_1) == 0x00028C, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Array_Get_Item_1) == 0x000290, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000298, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Array_Length_ReturnValue_4) == 0x0002A8, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002AC, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, Temp_int_Array_Index_Variable_2) == 0x0002B0, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_Array_Get_Item_2) == 0x0002B8, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_SweepAgainstActorTypes, CallFunc_ClassIsChildOf_ReturnValue) == 0x0002C0, "Member 'BuildingFunctionLibrary_C_SweepAgainstActorTypes::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function BuildingFunctionLibrary.BuildingFunctionLibrary_C.ShouldLogForInstigator
// 0x0038 (0x0038 - 0x0000)
struct BuildingFunctionLibrary_C_ShouldLogForInstigator final
{
public:
	EBlueprintLogLevel                            Instance_Log_Level;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Instigator;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Log_;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlueprintDebuggingInterface_C> K2Node_DynamicCast_AsBlueprint_Debugging_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlueprintLogLevel                            CallFunc_GetBlueprintLogLevel_BlueprintLogLevel;   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingFunctionLibrary_C_ShouldLogForInstigator) == 0x000008, "Wrong alignment on BuildingFunctionLibrary_C_ShouldLogForInstigator");
static_assert(sizeof(BuildingFunctionLibrary_C_ShouldLogForInstigator) == 0x000038, "Wrong size on BuildingFunctionLibrary_C_ShouldLogForInstigator");
static_assert(offsetof(BuildingFunctionLibrary_C_ShouldLogForInstigator, Instance_Log_Level) == 0x000000, "Member 'BuildingFunctionLibrary_C_ShouldLogForInstigator::Instance_Log_Level' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_ShouldLogForInstigator, Instigator) == 0x000008, "Member 'BuildingFunctionLibrary_C_ShouldLogForInstigator::Instigator' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_ShouldLogForInstigator, __WorldContext) == 0x000010, "Member 'BuildingFunctionLibrary_C_ShouldLogForInstigator::__WorldContext' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_ShouldLogForInstigator, Should_Log_) == 0x000018, "Member 'BuildingFunctionLibrary_C_ShouldLogForInstigator::Should_Log_' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_ShouldLogForInstigator, K2Node_DynamicCast_AsBlueprint_Debugging_Interface) == 0x000020, "Member 'BuildingFunctionLibrary_C_ShouldLogForInstigator::K2Node_DynamicCast_AsBlueprint_Debugging_Interface' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_ShouldLogForInstigator, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BuildingFunctionLibrary_C_ShouldLogForInstigator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_ShouldLogForInstigator, CallFunc_DoesImplementInterface_ReturnValue) == 0x000031, "Member 'BuildingFunctionLibrary_C_ShouldLogForInstigator::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_ShouldLogForInstigator, CallFunc_GetBlueprintLogLevel_BlueprintLogLevel) == 0x000032, "Member 'BuildingFunctionLibrary_C_ShouldLogForInstigator::CallFunc_GetBlueprintLogLevel_BlueprintLogLevel' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_ShouldLogForInstigator, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x000033, "Member 'BuildingFunctionLibrary_C_ShouldLogForInstigator::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_ShouldLogForInstigator, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BuildingFunctionLibrary_C_ShouldLogForInstigator::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BuildingFunctionLibrary.BuildingFunctionLibrary_C.RequestComponentResource
// 0x0048 (0x0048 - 0x0000)
struct BuildingFunctionLibrary_C_RequestComponentResource final
{
public:
	class UCreativeIslandResourceManagerComponent* ResourceManager;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ResourceTag;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        Component;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_DynamicCast_AsScene_Component;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestResource_ReturnValue;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingFunctionLibrary_C_RequestComponentResource) == 0x000008, "Wrong alignment on BuildingFunctionLibrary_C_RequestComponentResource");
static_assert(sizeof(BuildingFunctionLibrary_C_RequestComponentResource) == 0x000048, "Wrong size on BuildingFunctionLibrary_C_RequestComponentResource");
static_assert(offsetof(BuildingFunctionLibrary_C_RequestComponentResource, ResourceManager) == 0x000000, "Member 'BuildingFunctionLibrary_C_RequestComponentResource::ResourceManager' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_RequestComponentResource, ResourceTag) == 0x000008, "Member 'BuildingFunctionLibrary_C_RequestComponentResource::ResourceTag' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_RequestComponentResource, Component) == 0x000010, "Member 'BuildingFunctionLibrary_C_RequestComponentResource::Component' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_RequestComponentResource, WorldLocation) == 0x000018, "Member 'BuildingFunctionLibrary_C_RequestComponentResource::WorldLocation' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_RequestComponentResource, __WorldContext) == 0x000030, "Member 'BuildingFunctionLibrary_C_RequestComponentResource::__WorldContext' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_RequestComponentResource, K2Node_DynamicCast_AsScene_Component) == 0x000038, "Member 'BuildingFunctionLibrary_C_RequestComponentResource::K2Node_DynamicCast_AsScene_Component' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_RequestComponentResource, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BuildingFunctionLibrary_C_RequestComponentResource::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_RequestComponentResource, CallFunc_RequestResource_ReturnValue) == 0x000041, "Member 'BuildingFunctionLibrary_C_RequestComponentResource::CallFunc_RequestResource_ReturnValue' has a wrong offset!");

// Function BuildingFunctionLibrary.BuildingFunctionLibrary_C.LogString
// 0x0038 (0x0038 - 0x0000)
struct BuildingFunctionLibrary_C_LogString final
{
public:
	EBlueprintLogLevel                            Instance_Log_Level;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LogString_0;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          PrintToScreen;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Instigator;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldLogForInstigator_Should_Log_;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingFunctionLibrary_C_LogString) == 0x000008, "Wrong alignment on BuildingFunctionLibrary_C_LogString");
static_assert(sizeof(BuildingFunctionLibrary_C_LogString) == 0x000038, "Wrong size on BuildingFunctionLibrary_C_LogString");
static_assert(offsetof(BuildingFunctionLibrary_C_LogString, Instance_Log_Level) == 0x000000, "Member 'BuildingFunctionLibrary_C_LogString::Instance_Log_Level' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_LogString, LogString_0) == 0x000008, "Member 'BuildingFunctionLibrary_C_LogString::LogString_0' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_LogString, PrintToScreen) == 0x000018, "Member 'BuildingFunctionLibrary_C_LogString::PrintToScreen' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_LogString, Instigator) == 0x000020, "Member 'BuildingFunctionLibrary_C_LogString::Instigator' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_LogString, __WorldContext) == 0x000028, "Member 'BuildingFunctionLibrary_C_LogString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BuildingFunctionLibrary_C_LogString, CallFunc_ShouldLogForInstigator_Should_Log_) == 0x000030, "Member 'BuildingFunctionLibrary_C_LogString::CallFunc_ShouldLogForInstigator_Should_Log_' has a wrong offset!");

}

