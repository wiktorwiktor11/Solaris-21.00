#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortniteDynamicUI

#include "Basic.hpp"

#include "FortniteUI_classes.hpp"
#include "CommonUI_classes.hpp"
#include "DynamicUI_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "VerseFortniteDynamicUI_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class VerseFortniteDynamicUI.VerseFortniteDynamicUIDirector
// 0x0138 (0x03C8 - 0x0290)
class AVerseFortniteDynamicUIDirector final : public ADynamicUIDirectorBase
{
public:
	class UVerseFortniteDynamicUISceneCatalog*    SceneCatalog;                                      // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVerseFortniteDynamicUIWidgetCatalog*   WidgetCatalog;                                     // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   GhostWidgetClass;                                  // 0x02A0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class FString>              LocalVarValueMap;                                  // 0x02C8(0x0050)(NativeAccessSpecifierPublic)
	uint8                                         Pad_318[0x60];                                     // 0x0318(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TScriptInterface<class IVerseDHUDWidgetDatastoreInterface>> WidgetInterfaceRegister;                           // 0x0378(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FGhostWidgetBaseCreationData>   GhostWidgets;                                      // 0x0388(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_398[0x30];                                     // 0x0398(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleWidgetCreatedAddGhost(const class FString& WidgetID, class UUserWidget* WidgetPtr);
	void HandleWidgetDestroyedRemoveGhost(const class FString& WidgetID, class UUserWidget* WidgetPtr);
	void LoadSceneCatalog(const class FString& InSceneCatalogName);
	void LoadWidgetCatalog(const class FString& InWidgetCatalogName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortniteDynamicUIDirector">();
	}
	static class AVerseFortniteDynamicUIDirector* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVerseFortniteDynamicUIDirector>();
	}
};
static_assert(alignof(AVerseFortniteDynamicUIDirector) == 0x000008, "Wrong alignment on AVerseFortniteDynamicUIDirector");
static_assert(sizeof(AVerseFortniteDynamicUIDirector) == 0x0003C8, "Wrong size on AVerseFortniteDynamicUIDirector");
static_assert(offsetof(AVerseFortniteDynamicUIDirector, SceneCatalog) == 0x000290, "Member 'AVerseFortniteDynamicUIDirector::SceneCatalog' has a wrong offset!");
static_assert(offsetof(AVerseFortniteDynamicUIDirector, WidgetCatalog) == 0x000298, "Member 'AVerseFortniteDynamicUIDirector::WidgetCatalog' has a wrong offset!");
static_assert(offsetof(AVerseFortniteDynamicUIDirector, GhostWidgetClass) == 0x0002A0, "Member 'AVerseFortniteDynamicUIDirector::GhostWidgetClass' has a wrong offset!");
static_assert(offsetof(AVerseFortniteDynamicUIDirector, LocalVarValueMap) == 0x0002C8, "Member 'AVerseFortniteDynamicUIDirector::LocalVarValueMap' has a wrong offset!");
static_assert(offsetof(AVerseFortniteDynamicUIDirector, WidgetInterfaceRegister) == 0x000378, "Member 'AVerseFortniteDynamicUIDirector::WidgetInterfaceRegister' has a wrong offset!");
static_assert(offsetof(AVerseFortniteDynamicUIDirector, GhostWidgets) == 0x000388, "Member 'AVerseFortniteDynamicUIDirector::GhostWidgets' has a wrong offset!");

// Class VerseFortniteDynamicUI.VerseDHUDGhostWidgetBase
// 0x0000 (0x0320 - 0x0320)
class UVerseDHUDGhostWidgetBase final : public UFortHUDElementWidget
{
public:
	void SetDesiredSize(const struct FVector2D& DesiredSize);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseDHUDGhostWidgetBase">();
	}
	static class UVerseDHUDGhostWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseDHUDGhostWidgetBase>();
	}
};
static_assert(alignof(UVerseDHUDGhostWidgetBase) == 0x000008, "Wrong alignment on UVerseDHUDGhostWidgetBase");
static_assert(sizeof(UVerseDHUDGhostWidgetBase) == 0x000320, "Wrong size on UVerseDHUDGhostWidgetBase");

// Class VerseFortniteDynamicUI.VerseFortniteDynamicUISceneCatalog
// 0x00A0 (0x00D0 - 0x0030)
class UVerseFortniteDynamicUISceneCatalog final : public UDataAsset
{
public:
	TMap<class FString, struct FSceneCatalogEntryClass> OriginalMapOfEntries;                              // 0x0030(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FString, struct FSceneCatalogEntryClass> CurrentMapOfEntries;                               // 0x0080(0x0050)(NativeAccessSpecifierPublic)

public:
	void AppendToBaseCatalog(class UVerseFortniteDynamicUISceneCatalog* NewCatalog);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortniteDynamicUISceneCatalog">();
	}
	static class UVerseFortniteDynamicUISceneCatalog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseFortniteDynamicUISceneCatalog>();
	}
};
static_assert(alignof(UVerseFortniteDynamicUISceneCatalog) == 0x000008, "Wrong alignment on UVerseFortniteDynamicUISceneCatalog");
static_assert(sizeof(UVerseFortniteDynamicUISceneCatalog) == 0x0000D0, "Wrong size on UVerseFortniteDynamicUISceneCatalog");
static_assert(offsetof(UVerseFortniteDynamicUISceneCatalog, OriginalMapOfEntries) == 0x000030, "Member 'UVerseFortniteDynamicUISceneCatalog::OriginalMapOfEntries' has a wrong offset!");
static_assert(offsetof(UVerseFortniteDynamicUISceneCatalog, CurrentMapOfEntries) == 0x000080, "Member 'UVerseFortniteDynamicUISceneCatalog::CurrentMapOfEntries' has a wrong offset!");

// Class VerseFortniteDynamicUI.VerseDHUDPanelBase
// 0x0068 (0x0460 - 0x03F8)
class UVerseDHUDPanelBase final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_3F8[0x68];                                     // 0x03F8(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallServerWithMessage(const class FString& MessageID, const class FString& MessageData);
	bool DoesDataStoreValueExist(const class FName VarName);
	class FString GetDataStoreValue(const class FName VarName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseDHUDPanelBase">();
	}
	static class UVerseDHUDPanelBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseDHUDPanelBase>();
	}
};
static_assert(alignof(UVerseDHUDPanelBase) == 0x000008, "Wrong alignment on UVerseDHUDPanelBase");
static_assert(sizeof(UVerseDHUDPanelBase) == 0x000460, "Wrong size on UVerseDHUDPanelBase");

// Class VerseFortniteDynamicUI.VerseFortniteDynamicUIWidgetCatalog
// 0x00A0 (0x00D0 - 0x0030)
class UVerseFortniteDynamicUIWidgetCatalog final : public UDataAsset
{
public:
	TMap<class FString, struct FWidgetCatalogEntryClass> OriginalMapOfEntries;                              // 0x0030(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FString, struct FWidgetCatalogEntryClass> CurrentMapOfEntries;                               // 0x0080(0x0050)(NativeAccessSpecifierPublic)

public:
	void AppendToBaseWidgetCatalog(class UVerseFortniteDynamicUIWidgetCatalog* NewWidgetCatalog);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortniteDynamicUIWidgetCatalog">();
	}
	static class UVerseFortniteDynamicUIWidgetCatalog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseFortniteDynamicUIWidgetCatalog>();
	}
};
static_assert(alignof(UVerseFortniteDynamicUIWidgetCatalog) == 0x000008, "Wrong alignment on UVerseFortniteDynamicUIWidgetCatalog");
static_assert(sizeof(UVerseFortniteDynamicUIWidgetCatalog) == 0x0000D0, "Wrong size on UVerseFortniteDynamicUIWidgetCatalog");
static_assert(offsetof(UVerseFortniteDynamicUIWidgetCatalog, OriginalMapOfEntries) == 0x000030, "Member 'UVerseFortniteDynamicUIWidgetCatalog::OriginalMapOfEntries' has a wrong offset!");
static_assert(offsetof(UVerseFortniteDynamicUIWidgetCatalog, CurrentMapOfEntries) == 0x000080, "Member 'UVerseFortniteDynamicUIWidgetCatalog::CurrentMapOfEntries' has a wrong offset!");

// Class VerseFortniteDynamicUI.VerseDHUDWidgetBase
// 0x0068 (0x0388 - 0x0320)
class UVerseDHUDWidgetBase final : public UFortHUDElementWidget
{
public:
	uint8                                         Pad_320[0x68];                                     // 0x0320(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CallServerWithMessage(const class FString& MessageID, const class FString& MessageData);
	bool DoesDataStoreValueExist(const class FName VarName);
	class FString GetDataStoreValue(const class FName VarName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseDHUDWidgetBase">();
	}
	static class UVerseDHUDWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseDHUDWidgetBase>();
	}
};
static_assert(alignof(UVerseDHUDWidgetBase) == 0x000008, "Wrong alignment on UVerseDHUDWidgetBase");
static_assert(sizeof(UVerseDHUDWidgetBase) == 0x000388, "Wrong size on UVerseDHUDWidgetBase");

// Class VerseFortniteDynamicUI.VerseDHUDWidgetDatastoreInterface
// 0x0000 (0x0028 - 0x0028)
class IVerseDHUDWidgetDatastoreInterface final : public IInterface
{
public:
	void ReceiveDataStoreValue(const class FName VarName, const class FString& Value);
	void SyncDataValues();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseDHUDWidgetDatastoreInterface">();
	}
	static class IVerseDHUDWidgetDatastoreInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IVerseDHUDWidgetDatastoreInterface>();
	}
};
static_assert(alignof(IVerseDHUDWidgetDatastoreInterface) == 0x000008, "Wrong alignment on IVerseDHUDWidgetDatastoreInterface");
static_assert(sizeof(IVerseDHUDWidgetDatastoreInterface) == 0x000028, "Wrong size on IVerseDHUDWidgetDatastoreInterface");

// Class VerseFortniteDynamicUI.VerseFortniteDynamicHUDScene
// 0x0018 (0x0078 - 0x0060)
class UVerseFortniteDynamicHUDScene final : public UDynamicUIScene
{
public:
	class FString                                 VerseSceneName;                                    // 0x0060(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseFortniteDynamicHUDScene">();
	}
	static class UVerseFortniteDynamicHUDScene* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseFortniteDynamicHUDScene>();
	}
};
static_assert(alignof(UVerseFortniteDynamicHUDScene) == 0x000008, "Wrong alignment on UVerseFortniteDynamicHUDScene");
static_assert(sizeof(UVerseFortniteDynamicHUDScene) == 0x000078, "Wrong size on UVerseFortniteDynamicHUDScene");
static_assert(offsetof(UVerseFortniteDynamicHUDScene, VerseSceneName) == 0x000060, "Member 'UVerseFortniteDynamicHUDScene::VerseSceneName' has a wrong offset!");

}

