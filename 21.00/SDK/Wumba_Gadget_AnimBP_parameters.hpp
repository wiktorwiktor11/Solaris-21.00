#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wumba_Gadget_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Wumba_Gadget_AnimBP.Wumba_Gadget_AnimBP_C.UpdateUpgradingVisuals
// 0x0001 (0x0001 - 0x0000)
struct Wumba_Gadget_AnimBP_C_UpdateUpgradingVisuals final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wumba_Gadget_AnimBP_C_UpdateUpgradingVisuals) == 0x000001, "Wrong alignment on Wumba_Gadget_AnimBP_C_UpdateUpgradingVisuals");
static_assert(sizeof(Wumba_Gadget_AnimBP_C_UpdateUpgradingVisuals) == 0x000001, "Wrong size on Wumba_Gadget_AnimBP_C_UpdateUpgradingVisuals");
static_assert(offsetof(Wumba_Gadget_AnimBP_C_UpdateUpgradingVisuals, NewValue) == 0x000000, "Member 'Wumba_Gadget_AnimBP_C_UpdateUpgradingVisuals::NewValue' has a wrong offset!");

// Function Wumba_Gadget_AnimBP.Wumba_Gadget_AnimBP_C.ExecuteUbergraph_Wumba_Gadget_AnimBP
// 0x0008 (0x0008 - 0x0000)
struct Wumba_Gadget_AnimBP_C_ExecuteUbergraph_Wumba_Gadget_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Wumba_Gadget_AnimBP_C_ExecuteUbergraph_Wumba_Gadget_AnimBP) == 0x000004, "Wrong alignment on Wumba_Gadget_AnimBP_C_ExecuteUbergraph_Wumba_Gadget_AnimBP");
static_assert(sizeof(Wumba_Gadget_AnimBP_C_ExecuteUbergraph_Wumba_Gadget_AnimBP) == 0x000008, "Wrong size on Wumba_Gadget_AnimBP_C_ExecuteUbergraph_Wumba_Gadget_AnimBP");
static_assert(offsetof(Wumba_Gadget_AnimBP_C_ExecuteUbergraph_Wumba_Gadget_AnimBP, EntryPoint) == 0x000000, "Member 'Wumba_Gadget_AnimBP_C_ExecuteUbergraph_Wumba_Gadget_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Wumba_Gadget_AnimBP_C_ExecuteUbergraph_Wumba_Gadget_AnimBP, K2Node_CustomEvent_NewValue) == 0x000004, "Member 'Wumba_Gadget_AnimBP_C_ExecuteUbergraph_Wumba_Gadget_AnimBP::K2Node_CustomEvent_NewValue' has a wrong offset!");

// Function Wumba_Gadget_AnimBP.Wumba_Gadget_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Wumba_Gadget_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Wumba_Gadget_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on Wumba_Gadget_AnimBP_C_AnimGraph");
static_assert(sizeof(Wumba_Gadget_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on Wumba_Gadget_AnimBP_C_AnimGraph");
static_assert(offsetof(Wumba_Gadget_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Wumba_Gadget_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

