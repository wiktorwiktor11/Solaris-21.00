#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayMessages

#include "Basic.hpp"

#include "GameplayMessages_structs.hpp"
#include "GameplayTags_0_structs.hpp"


namespace SDK::Params
{

// Function GameplayMessages.AsyncAction_RegisterGameplayMessageReceiver.RegisterGameplayMessageReceiver
// 0x0030 (0x0030 - 0x0000)
struct AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventMessageTag                       Channel;                                           // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptStruct*                          PayloadType;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGameplayMessageMatchType                     MatchType;                                         // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorContext;                                      // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAsyncAction_RegisterGameplayMessageReceiver* ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver) == 0x000008, "Wrong alignment on AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver");
static_assert(sizeof(AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver) == 0x000030, "Wrong size on AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver");
static_assert(offsetof(AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver, WorldContextObject) == 0x000000, "Member 'AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver, Channel) == 0x000008, "Member 'AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver::Channel' has a wrong offset!");
static_assert(offsetof(AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver, PayloadType) == 0x000010, "Member 'AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver::PayloadType' has a wrong offset!");
static_assert(offsetof(AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver, MatchType) == 0x000018, "Member 'AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver::MatchType' has a wrong offset!");
static_assert(offsetof(AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver, ActorContext) == 0x000020, "Member 'AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver::ActorContext' has a wrong offset!");
static_assert(offsetof(AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver, ReturnValue) == 0x000028, "Member 'AsyncAction_RegisterGameplayMessageReceiver_RegisterGameplayMessageReceiver::ReturnValue' has a wrong offset!");

// Function GameplayMessages.AsyncAction_RegisterGameplayMessageReceiver.GetPayload
// 0x0008 (0x0008 - 0x0000)
struct AsyncAction_RegisterGameplayMessageReceiver_GetPayload final
{
public:
	int32                                         OutPayload;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AsyncAction_RegisterGameplayMessageReceiver_GetPayload) == 0x000004, "Wrong alignment on AsyncAction_RegisterGameplayMessageReceiver_GetPayload");
static_assert(sizeof(AsyncAction_RegisterGameplayMessageReceiver_GetPayload) == 0x000008, "Wrong size on AsyncAction_RegisterGameplayMessageReceiver_GetPayload");
static_assert(offsetof(AsyncAction_RegisterGameplayMessageReceiver_GetPayload, OutPayload) == 0x000000, "Member 'AsyncAction_RegisterGameplayMessageReceiver_GetPayload::OutPayload' has a wrong offset!");
static_assert(offsetof(AsyncAction_RegisterGameplayMessageReceiver_GetPayload, ReturnValue) == 0x000004, "Member 'AsyncAction_RegisterGameplayMessageReceiver_GetPayload::ReturnValue' has a wrong offset!");

// Function GameplayMessages.GameplayMessageReplicator.Multicast_ServerMessageTriggered
// 0x0018 (0x0018 - 0x0000)
struct GameplayMessageReplicator_Multicast_ServerMessageTriggered final
{
public:
	struct FEventMessageTag                       Channel;                                           // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FReplicatedMessage                     MessageData;                                       // 0x0008(0x0010)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameplayMessageReplicator_Multicast_ServerMessageTriggered) == 0x000008, "Wrong alignment on GameplayMessageReplicator_Multicast_ServerMessageTriggered");
static_assert(sizeof(GameplayMessageReplicator_Multicast_ServerMessageTriggered) == 0x000018, "Wrong size on GameplayMessageReplicator_Multicast_ServerMessageTriggered");
static_assert(offsetof(GameplayMessageReplicator_Multicast_ServerMessageTriggered, Channel) == 0x000000, "Member 'GameplayMessageReplicator_Multicast_ServerMessageTriggered::Channel' has a wrong offset!");
static_assert(offsetof(GameplayMessageReplicator_Multicast_ServerMessageTriggered, MessageData) == 0x000008, "Member 'GameplayMessageReplicator_Multicast_ServerMessageTriggered::MessageData' has a wrong offset!");

// Function GameplayMessages.GameplayMessageRouter.ClearSavedMessage
// 0x0004 (0x0004 - 0x0000)
struct GameplayMessageRouter_ClearSavedMessage final
{
public:
	struct FEventMessageTag                       Channel;                                           // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameplayMessageRouter_ClearSavedMessage) == 0x000004, "Wrong alignment on GameplayMessageRouter_ClearSavedMessage");
static_assert(sizeof(GameplayMessageRouter_ClearSavedMessage) == 0x000004, "Wrong size on GameplayMessageRouter_ClearSavedMessage");
static_assert(offsetof(GameplayMessageRouter_ClearSavedMessage, Channel) == 0x000000, "Member 'GameplayMessageRouter_ClearSavedMessage::Channel' has a wrong offset!");

// Function GameplayMessages.GameplayMessageRouter.K2_BroadcastMessage
// 0x0018 (0x0018 - 0x0000)
struct GameplayMessageRouter_K2_BroadcastMessage final
{
public:
	struct FEventMessageTag                       Channel;                                           // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Message;                                           // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSaveToChannel;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorContext;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameplayMessageRouter_K2_BroadcastMessage) == 0x000008, "Wrong alignment on GameplayMessageRouter_K2_BroadcastMessage");
static_assert(sizeof(GameplayMessageRouter_K2_BroadcastMessage) == 0x000018, "Wrong size on GameplayMessageRouter_K2_BroadcastMessage");
static_assert(offsetof(GameplayMessageRouter_K2_BroadcastMessage, Channel) == 0x000000, "Member 'GameplayMessageRouter_K2_BroadcastMessage::Channel' has a wrong offset!");
static_assert(offsetof(GameplayMessageRouter_K2_BroadcastMessage, Message) == 0x000004, "Member 'GameplayMessageRouter_K2_BroadcastMessage::Message' has a wrong offset!");
static_assert(offsetof(GameplayMessageRouter_K2_BroadcastMessage, bSaveToChannel) == 0x000008, "Member 'GameplayMessageRouter_K2_BroadcastMessage::bSaveToChannel' has a wrong offset!");
static_assert(offsetof(GameplayMessageRouter_K2_BroadcastMessage, ActorContext) == 0x000010, "Member 'GameplayMessageRouter_K2_BroadcastMessage::ActorContext' has a wrong offset!");

// Function GameplayMessages.GameplayMessageRouter.HasValidSavedMessage
// 0x0008 (0x0008 - 0x0000)
struct GameplayMessageRouter_HasValidSavedMessage final
{
public:
	struct FEventMessageTag                       Channel;                                           // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GameplayMessageRouter_HasValidSavedMessage) == 0x000004, "Wrong alignment on GameplayMessageRouter_HasValidSavedMessage");
static_assert(sizeof(GameplayMessageRouter_HasValidSavedMessage) == 0x000008, "Wrong size on GameplayMessageRouter_HasValidSavedMessage");
static_assert(offsetof(GameplayMessageRouter_HasValidSavedMessage, Channel) == 0x000000, "Member 'GameplayMessageRouter_HasValidSavedMessage::Channel' has a wrong offset!");
static_assert(offsetof(GameplayMessageRouter_HasValidSavedMessage, ReturnValue) == 0x000004, "Member 'GameplayMessageRouter_HasValidSavedMessage::ReturnValue' has a wrong offset!");

// Function GameplayMessages.BlueprintEventMessageTagLibrary.GetEventMessageTagFromGameplayTag
// 0x0008 (0x0008 - 0x0000)
struct BlueprintEventMessageTagLibrary_GetEventMessageTagFromGameplayTag final
{
public:
	struct FGameplayTag                           InTag;                                             // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventMessageTag                       ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BlueprintEventMessageTagLibrary_GetEventMessageTagFromGameplayTag) == 0x000004, "Wrong alignment on BlueprintEventMessageTagLibrary_GetEventMessageTagFromGameplayTag");
static_assert(sizeof(BlueprintEventMessageTagLibrary_GetEventMessageTagFromGameplayTag) == 0x000008, "Wrong size on BlueprintEventMessageTagLibrary_GetEventMessageTagFromGameplayTag");
static_assert(offsetof(BlueprintEventMessageTagLibrary_GetEventMessageTagFromGameplayTag, InTag) == 0x000000, "Member 'BlueprintEventMessageTagLibrary_GetEventMessageTagFromGameplayTag::InTag' has a wrong offset!");
static_assert(offsetof(BlueprintEventMessageTagLibrary_GetEventMessageTagFromGameplayTag, ReturnValue) == 0x000004, "Member 'BlueprintEventMessageTagLibrary_GetEventMessageTagFromGameplayTag::ReturnValue' has a wrong offset!");

}

