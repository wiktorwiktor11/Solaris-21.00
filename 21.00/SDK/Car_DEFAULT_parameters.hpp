#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Car_DEFAULT

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function Car_DEFAULT.Car_DEFAULT_C.Construct Clean Up Lights
// 0x0004 (0x0004 - 0x0000)
struct Car_DEFAULT_C_Construct_Clean_Up_Lights final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_Construct_Clean_Up_Lights) == 0x000001, "Wrong alignment on Car_DEFAULT_C_Construct_Clean_Up_Lights");
static_assert(sizeof(Car_DEFAULT_C_Construct_Clean_Up_Lights) == 0x000004, "Wrong size on Car_DEFAULT_C_Construct_Clean_Up_Lights");
static_assert(offsetof(Car_DEFAULT_C_Construct_Clean_Up_Lights, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Car_DEFAULT_C_Construct_Clean_Up_Lights::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Construct_Clean_Up_Lights, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'Car_DEFAULT_C_Construct_Clean_Up_Lights::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Construct_Clean_Up_Lights, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'Car_DEFAULT_C_Construct_Clean_Up_Lights::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Construct_Clean_Up_Lights, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'Car_DEFAULT_C_Construct_Clean_Up_Lights::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.construct_ValidateLightsOnVars
// 0x0048 (0x0048 - 0x0000)
struct Car_DEFAULT_C_construct_ValidateLightsOnVars final
{
public:
	bool                                          doesHaveLights;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCarAlarmEnabledBasedOnLocation_NewParam; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetCarAlarmEnabledBasedOnLocation_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_construct_ValidateLightsOnVars) == 0x000008, "Wrong alignment on Car_DEFAULT_C_construct_ValidateLightsOnVars");
static_assert(sizeof(Car_DEFAULT_C_construct_ValidateLightsOnVars) == 0x000048, "Wrong size on Car_DEFAULT_C_construct_ValidateLightsOnVars");
static_assert(offsetof(Car_DEFAULT_C_construct_ValidateLightsOnVars, doesHaveLights) == 0x000000, "Member 'Car_DEFAULT_C_construct_ValidateLightsOnVars::doesHaveLights' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_construct_ValidateLightsOnVars, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Car_DEFAULT_C_construct_ValidateLightsOnVars::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_construct_ValidateLightsOnVars, CallFunc_Add_VectorVector_ReturnValue) == 0x000020, "Member 'Car_DEFAULT_C_construct_ValidateLightsOnVars::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_construct_ValidateLightsOnVars, CallFunc_SetCarAlarmEnabledBasedOnLocation_NewParam) == 0x000038, "Member 'Car_DEFAULT_C_construct_ValidateLightsOnVars::CallFunc_SetCarAlarmEnabledBasedOnLocation_NewParam' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_construct_ValidateLightsOnVars, CallFunc_SetCarAlarmEnabledBasedOnLocation_ReturnValue) == 0x00003C, "Member 'Car_DEFAULT_C_construct_ValidateLightsOnVars::CallFunc_SetCarAlarmEnabledBasedOnLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_construct_ValidateLightsOnVars, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000040, "Member 'Car_DEFAULT_C_construct_ValidateLightsOnVars::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.ExecuteUbergraph_Car_DEFAULT
// 0x1090 (0x1090 - 0x0000)
struct Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_1;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_2;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_3;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetOrCreateMIDOnDefaultMesh_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x00B0(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue_1;    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x01D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue;     // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage_2;                             // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags_2;                         // 0x0240(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum_2;                           // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_2;                            // 0x0278(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy_2;                       // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_2;                       // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext_2;                      // 0x0368(0x0018)()
	float                                         K2Node_Event_Damage_1;                             // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags_1;                         // 0x0388(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum_1;                           // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x03C0(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy_1;                       // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext_1;                      // 0x04B0(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBuildingHealthPercentage_ReturnValue;  // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E5[0x3];                                      // 0x04E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x04E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue_1;   // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0508(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512[0x6];                                      // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasHealthLeft_ReturnValue;                // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0538(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0570(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0660(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x067A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67B[0x5];                                      // 0x067B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortBounceData                        K2Node_Event_Data;                                 // 0x06D8(0x0030)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70A[0x2];                                      // 0x070A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R_1;                           // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_2;                           // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_2;                           // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_2;                           // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_2;                           // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72C[0x4];                                      // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_3;                           // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_3;                           // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_3;                           // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_3;                           // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_4;                           // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_4;                           // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_4;                           // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_4;                           // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0798(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x07B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B2[0x2];                                      // 0x07B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R_5;                           // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_5;                           // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_5;                           // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_5;                           // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_6;                           // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_6;                           // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_6;                           // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_6;                           // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D4[0x4];                                      // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x07D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x07F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_7;                           // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_7;                           // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_7;                           // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_7;                           // 0x0814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_8;                           // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_8;                           // 0x081C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_8;                           // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_8;                           // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x0828(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x0840(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0858(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0870(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x088C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0894(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x089C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x08B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x08C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x08E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0910(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0940(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0958(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_971[0x7];                                      // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0978(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0990(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x09AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x09B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x09C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_3;                      // 0x09CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x09D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x09DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x09E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9FC[0x4];                                      // 0x09FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x0A00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1C[0x4];                                      // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x0A20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_9;       // 0x0A38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0A50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_10;      // 0x0A68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_11;      // 0x0A80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0A98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_12;      // 0x0AB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0AC8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0AD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0AF0(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0BD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0BE8(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CCC[0x4];                                      // 0x0CCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_13;      // 0x0CD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0CE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0D00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_2;     // 0x0D10(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0DF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_3;     // 0x0E08(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0EE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0EEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0EF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0EF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF2[0x2];                                      // 0x0EF2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0EF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 K2Node_Event_CurrentDayPhase;                      // 0x0EF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 K2Node_Event_PreviousDayPhase;                     // 0x0EF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAtCreation;                          // 0x0EFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EFB[0x1];                                      // 0x0EFB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0EFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F01[0x7];                                      // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0F08(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0F18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1C[0x4];                                      // 0x0F1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F29[0x3];                                      // 0x0F29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0F2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F31[0x3];                                      // 0x0F31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0F34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0F38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0F3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3D[0x3];                                      // 0x0F3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0F40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0F44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_9;                 // 0x0F48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6C[0x4];                                      // 0x0F6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0F70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue_2;   // 0x0F88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue_3;   // 0x0F90(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x0F98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F99[0x7];                                      // 0x0F99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0FA0(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x1000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x1018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101C[0x4];                                     // 0x101C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x1020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x1038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1039[0x7];                                     // 0x1039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x1040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x1058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x1070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x1088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT) == 0x000010, "Wrong alignment on Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT");
static_assert(sizeof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT) == 0x001090, "Wrong size on Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, EntryPoint) == 0x000000, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::EntryPoint' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000004, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetScalarParameterValue_ReturnValue_1) == 0x000008, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetScalarParameterValue_ReturnValue_2) == 0x00000C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetScalarParameterValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_bool_IsClosed_Variable) == 0x000010, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_bool_Has_Been_Initd_Variable) == 0x000011, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_IsDedicatedServer_ReturnValue) == 0x000012, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_bool_Has_Been_Initd_Variable_1) == 0x000013, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000014, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_bool_IsClosed_Variable_1) == 0x000015, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetScalarParameterValue_ReturnValue_3) == 0x000018, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetScalarParameterValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00001C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_bool_Variable) == 0x000030, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetOrCreateMIDOnDefaultMesh_ReturnValue) == 0x000038, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetOrCreateMIDOnDefaultMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000044, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_MyComp) == 0x000048, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_Other) == 0x000050, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_OtherComp) == 0x000058, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_bSelfMoved) == 0x000060, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_HitLocation) == 0x000068, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_HitNormal) == 0x000080, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_NormalImpulse) == 0x000098, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_Hit) == 0x0000B0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000190, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_EqualEqual_VectorVector_ReturnValue_1) == 0x000191, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_EqualEqual_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetComponentVelocity_ReturnValue) == 0x000198, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakVector_X) == 0x0001B0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakVector_Y) == 0x0001B4, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakVector_Z) == 0x0001B8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0001C0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_DynamicCast_bSuccess) == 0x0001C8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001C9, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_SetTimer_ReturnValue) == 0x0001D0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_SetTimer_ReturnValue_1) == 0x0001D8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_R) == 0x0001E0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_G) == 0x0001E4, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_B) == 0x0001E8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_A) == 0x0001EC, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeVector_ReturnValue) == 0x0001F0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetBuildingMeshComponent_ReturnValue) == 0x000208, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetBuildingMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_DoesSocketExist_ReturnValue) == 0x000210, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetSocketLocation_ReturnValue) == 0x000218, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000230, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_Damage_2) == 0x000238, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_Damage_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_DamageTags_2) == 0x000240, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_DamageTags_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_Momentum_2) == 0x000260, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_Momentum_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_HitInfo_2) == 0x000278, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_HitInfo_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_InstigatedBy_2) == 0x000358, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_InstigatedBy_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_DamageCauser_2) == 0x000360, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_DamageCauser_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_EffectContext_2) == 0x000368, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_EffectContext_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_Damage_1) == 0x000380, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_Damage_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_DamageTags_1) == 0x000388, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_DamageTags_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_Momentum_1) == 0x0003A8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_Momentum_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_HitInfo_1) == 0x0003C0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_InstigatedBy_1) == 0x0004A0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_DamageCauser_1) == 0x0004A8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_EffectContext_1) == 0x0004B0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_EffectContext_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004C8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetBuildingHealthPercentage_ReturnValue) == 0x0004E0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetBuildingHealthPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Less_FloatFloat_ReturnValue) == 0x0004E4, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_SetTimer_ReturnValue_2) == 0x0004E8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0004F0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetBuildingMeshComponent_ReturnValue_1) == 0x0004F8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetBuildingMeshComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BooleanAND_ReturnValue) == 0x000500, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000508, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_EndPlayReason) == 0x000510, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_IsValid_ReturnValue) == 0x000511, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000518, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_HasHealthLeft_ReturnValue) == 0x000530, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_HasHealthLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_Damage) == 0x000534, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_DamageTags) == 0x000538, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_Momentum) == 0x000558, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_HitInfo) == 0x000570, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_InstigatedBy) == 0x000650, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_DamageCauser) == 0x000658, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_EffectContext) == 0x000660, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BooleanAND_ReturnValue_1) == 0x000678, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_IsValid_ReturnValue_1) == 0x000679, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BooleanAND_ReturnValue_2) == 0x00067A, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_GetPawn_ReturnValue) == 0x000680, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_IsValid_ReturnValue_2) == 0x000688, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000690, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Select_Default) == 0x0006A8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_struct_Variable) == 0x0006C0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_Data) == 0x0006D8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_Data' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000708, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000709, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_R_1) == 0x00070C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_G_1) == 0x000710, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_B_1) == 0x000714, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_A_1) == 0x000718, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_R_2) == 0x00071C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_R_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_G_2) == 0x000720, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_G_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_B_2) == 0x000724, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_B_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_A_2) == 0x000728, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_A_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeVector_ReturnValue_1) == 0x000730, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeVector_ReturnValue_2) == 0x000748, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_R_3) == 0x000760, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_R_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_G_3) == 0x000764, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_G_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_B_3) == 0x000768, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_B_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_A_3) == 0x00076C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_A_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_R_4) == 0x000770, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_R_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_G_4) == 0x000774, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_G_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_B_4) == 0x000778, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_B_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_A_4) == 0x00077C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_A_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeVector_ReturnValue_3) == 0x000780, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeVector_ReturnValue_4) == 0x000798, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0007B0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0007B1, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_R_5) == 0x0007B4, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_R_5' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_G_5) == 0x0007B8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_G_5' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_B_5) == 0x0007BC, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_B_5' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_A_5) == 0x0007C0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_A_5' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_R_6) == 0x0007C4, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_R_6' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_G_6) == 0x0007C8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_G_6' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_B_6) == 0x0007CC, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_B_6' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_A_6) == 0x0007D0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_A_6' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeVector_ReturnValue_5) == 0x0007D8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeVector_ReturnValue_6) == 0x0007F0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_R_7) == 0x000808, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_R_7' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_G_7) == 0x00080C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_G_7' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_B_7) == 0x000810, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_B_7' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_A_7) == 0x000814, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_A_7' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_R_8) == 0x000818, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_R_8' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_G_8) == 0x00081C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_G_8' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_B_8) == 0x000820, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_B_8' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_BreakColor_A_8) == 0x000824, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_BreakColor_A_8' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeVector_ReturnValue_7) == 0x000828, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeVector_ReturnValue_8) == 0x000840, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000858, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000870, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_VSize_ReturnValue) == 0x000888, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_VSize_ReturnValue_1) == 0x00088C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000890, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000894, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_FClamp_ReturnValue) == 0x000898, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_FClamp_ReturnValue_1) == 0x00089C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0008A0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0008A4, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_SelectFloat_ReturnValue) == 0x0008A8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_SelectFloat_ReturnValue_1) == 0x0008AC, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0008B0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0008C8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0008E0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0008F8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000910, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x000928, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_VectorVector_ReturnValue) == 0x000940, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000958, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_bool_Variable_1) == 0x000970, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000978, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Select_Default_1) == 0x000990, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_VSize_ReturnValue_2) == 0x0009A8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0009AC, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0009B0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_FClamp_ReturnValue_2) == 0x0009C8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_VSize_ReturnValue_3) == 0x0009CC, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0009D0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0009D4, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_SelectFloat_ReturnValue_2) == 0x0009D8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_FClamp_ReturnValue_3) == 0x0009DC, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x0009E0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0009F8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x000A00, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_SelectFloat_ReturnValue_3) == 0x000A18, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x000A20, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_9) == 0x000A38, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000A50, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_10) == 0x000A68, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_11) == 0x000A80, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000A98, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_12) == 0x000AB0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000AC8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000AD8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000AF0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000BD0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000BE8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000CC8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorFloat_ReturnValue_13) == 0x000CD0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000CE8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000D00, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_SetWorldLocation_SweepHitResult_2) == 0x000D10, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_SetWorldLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000DF0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_SetWorldLocation_SweepHitResult_3) == 0x000E08, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_SetWorldLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, Temp_int_Loop_Counter_Variable_1) == 0x000EE8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_IntInt_ReturnValue_2) == 0x000EEC, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetSubGame_ReturnValue) == 0x000EF0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000EF1, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_RandomFloatInRange_ReturnValue) == 0x000EF4, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_CurrentDayPhase) == 0x000EF8, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_CurrentDayPhase' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_PreviousDayPhase) == 0x000EF9, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, K2Node_Event_bAtCreation) == 0x000EFA, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::K2Node_Event_bAtCreation' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000EFC, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000F00, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetMaterials_ReturnValue) == 0x000F08, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Array_Length_ReturnValue) == 0x000F18, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Array_Get_Item) == 0x000F20, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Less_IntInt_ReturnValue) == 0x000F28, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Array_Length_ReturnValue_1) == 0x000F2C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Less_IntInt_ReturnValue_1) == 0x000F30, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000F34, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_RandomFloat_ReturnValue) == 0x000F38, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_RandomBool_ReturnValue) == 0x000F3C, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Lerp_ReturnValue) == 0x000F40, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_SelectFloat_ReturnValue_4) == 0x000F44, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeVector_ReturnValue_9) == 0x000F48, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000F60, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000F68, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_MakeRotator_ReturnValue) == 0x000F70, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetBuildingMeshComponent_ReturnValue_2) == 0x000F88, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetBuildingMeshComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetBuildingMeshComponent_ReturnValue_3) == 0x000F90, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetBuildingMeshComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_DoesSocketExist_ReturnValue_1) == 0x000F98, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000FA0, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_GetSocketLocation_ReturnValue_1) == 0x001000, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x001018, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_InverseTransformLocation_ReturnValue) == 0x001020, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Greater_FloatFloat_ReturnValue) == 0x001038, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Multiply_VectorVector_ReturnValue) == 0x001040, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_Add_VectorVector_ReturnValue_8) == 0x001058, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_TransformLocation_ReturnValue) == 0x001070, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x001088, "Member 'Car_DEFAULT_C_ExecuteUbergraph_Car_DEFAULT::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.generateMeshMIDs
// 0x0088 (0x0088 - 0x0000)
struct Car_DEFAULT_C_generateMeshMIDs final
{
public:
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue_1;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue_2;   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue_3;   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetMaterialSlotNames_ReturnValue;         // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_generateMeshMIDs) == 0x000008, "Wrong alignment on Car_DEFAULT_C_generateMeshMIDs");
static_assert(sizeof(Car_DEFAULT_C_generateMeshMIDs) == 0x000088, "Wrong size on Car_DEFAULT_C_generateMeshMIDs");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_GetBuildingMeshComponent_ReturnValue) == 0x000000, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_GetBuildingMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_GetNumMaterials_ReturnValue) == 0x000008, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_GetBuildingMeshComponent_ReturnValue_1) == 0x000010, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_GetBuildingMeshComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'Car_DEFAULT_C_generateMeshMIDs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Car_DEFAULT_C_generateMeshMIDs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_GetBuildingMeshComponent_ReturnValue_2) == 0x000038, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_GetBuildingMeshComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_GetBuildingMeshComponent_ReturnValue_3) == 0x000040, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_GetBuildingMeshComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000048, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_GetMaterialSlotNames_ReturnValue) == 0x000050, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_GetMaterialSlotNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_Array_Add_ReturnValue_1) == 0x000060, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_Array_Get_Item) == 0x000064, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_Conv_NameToString_ReturnValue) == 0x000070, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_generateMeshMIDs, CallFunc_Contains_ReturnValue) == 0x000081, "Member 'Car_DEFAULT_C_generateMeshMIDs::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.getCarMatsForLights
// 0x0088 (0x0088 - 0x0000)
struct Car_DEFAULT_C_getCarMatsForLights final
{
public:
	TArray<class UMaterialInstanceDynamic*>       outMaterials;                                      // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UMaterialInstanceDynamic*>       l_finalOutput;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetMaterialSlotNames_ReturnValue;         // 0x0040(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_getCarMatsForLights) == 0x000008, "Wrong alignment on Car_DEFAULT_C_getCarMatsForLights");
static_assert(sizeof(Car_DEFAULT_C_getCarMatsForLights) == 0x000088, "Wrong size on Car_DEFAULT_C_getCarMatsForLights");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, outMaterials) == 0x000000, "Member 'Car_DEFAULT_C_getCarMatsForLights::outMaterials' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, l_finalOutput) == 0x000010, "Member 'Car_DEFAULT_C_getCarMatsForLights::l_finalOutput' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Car_DEFAULT_C_getCarMatsForLights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'Car_DEFAULT_C_getCarMatsForLights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_GetBuildingMeshComponent_ReturnValue) == 0x000030, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_GetBuildingMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_GetMaterial_ReturnValue) == 0x000038, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_GetMaterialSlotNames_ReturnValue) == 0x000040, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_GetMaterialSlotNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000050, "Member 'Car_DEFAULT_C_getCarMatsForLights::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Car_DEFAULT_C_getCarMatsForLights::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_Array_Get_Item) == 0x00005C, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_Contains_ReturnValue) == 0x00007C, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_Less_IntInt_ReturnValue) == 0x00007D, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_getCarMatsForLights, CallFunc_Greater_IntInt_ReturnValue) == 0x000084, "Member 'Car_DEFAULT_C_getCarMatsForLights::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.MaterialEditorSine
// 0x0018 (0x0018 - 0x0000)
struct Car_DEFAULT_C_MaterialEditorSine final
{
public:
	float                                         Look_up_value;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Period;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_MaterialEditorSine) == 0x000004, "Wrong alignment on Car_DEFAULT_C_MaterialEditorSine");
static_assert(sizeof(Car_DEFAULT_C_MaterialEditorSine) == 0x000018, "Wrong size on Car_DEFAULT_C_MaterialEditorSine");
static_assert(offsetof(Car_DEFAULT_C_MaterialEditorSine, Look_up_value) == 0x000000, "Member 'Car_DEFAULT_C_MaterialEditorSine::Look_up_value' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_MaterialEditorSine, Period) == 0x000004, "Member 'Car_DEFAULT_C_MaterialEditorSine::Period' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_MaterialEditorSine, ReturnValue) == 0x000008, "Member 'Car_DEFAULT_C_MaterialEditorSine::ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_MaterialEditorSine, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Car_DEFAULT_C_MaterialEditorSine::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_MaterialEditorSine, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'Car_DEFAULT_C_MaterialEditorSine::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_MaterialEditorSine, CallFunc_DegSin_ReturnValue) == 0x000014, "Member 'Car_DEFAULT_C_MaterialEditorSine::CallFunc_DegSin_ReturnValue' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.OnBounceAnimationUpdate
// 0x0030 (0x0030 - 0x0000)
struct Car_DEFAULT_C_OnBounceAnimationUpdate final
{
public:
	struct FFortBounceData                        Data;                                              // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Car_DEFAULT_C_OnBounceAnimationUpdate) == 0x000004, "Wrong alignment on Car_DEFAULT_C_OnBounceAnimationUpdate");
static_assert(sizeof(Car_DEFAULT_C_OnBounceAnimationUpdate) == 0x000030, "Wrong size on Car_DEFAULT_C_OnBounceAnimationUpdate");
static_assert(offsetof(Car_DEFAULT_C_OnBounceAnimationUpdate, Data) == 0x000000, "Member 'Car_DEFAULT_C_OnBounceAnimationUpdate::Data' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.OnDamagePlayEffects
// 0x0148 (0x0148 - 0x0000)
struct Car_DEFAULT_C_OnDamagePlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Car_DEFAULT_C_OnDamagePlayEffects) == 0x000008, "Wrong alignment on Car_DEFAULT_C_OnDamagePlayEffects");
static_assert(sizeof(Car_DEFAULT_C_OnDamagePlayEffects) == 0x000148, "Wrong size on Car_DEFAULT_C_OnDamagePlayEffects");
static_assert(offsetof(Car_DEFAULT_C_OnDamagePlayEffects, Damage) == 0x000000, "Member 'Car_DEFAULT_C_OnDamagePlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamagePlayEffects, DamageTags) == 0x000008, "Member 'Car_DEFAULT_C_OnDamagePlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamagePlayEffects, Momentum) == 0x000028, "Member 'Car_DEFAULT_C_OnDamagePlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamagePlayEffects, HitInfo) == 0x000040, "Member 'Car_DEFAULT_C_OnDamagePlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamagePlayEffects, InstigatedBy) == 0x000120, "Member 'Car_DEFAULT_C_OnDamagePlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamagePlayEffects, DamageCauser) == 0x000128, "Member 'Car_DEFAULT_C_OnDamagePlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamagePlayEffects, EffectContext) == 0x000130, "Member 'Car_DEFAULT_C_OnDamagePlayEffects::EffectContext' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.OnDamageServer
// 0x0148 (0x0148 - 0x0000)
struct Car_DEFAULT_C_OnDamageServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Car_DEFAULT_C_OnDamageServer) == 0x000008, "Wrong alignment on Car_DEFAULT_C_OnDamageServer");
static_assert(sizeof(Car_DEFAULT_C_OnDamageServer) == 0x000148, "Wrong size on Car_DEFAULT_C_OnDamageServer");
static_assert(offsetof(Car_DEFAULT_C_OnDamageServer, Damage) == 0x000000, "Member 'Car_DEFAULT_C_OnDamageServer::Damage' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamageServer, DamageTags) == 0x000008, "Member 'Car_DEFAULT_C_OnDamageServer::DamageTags' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamageServer, Momentum) == 0x000028, "Member 'Car_DEFAULT_C_OnDamageServer::Momentum' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamageServer, HitInfo) == 0x000040, "Member 'Car_DEFAULT_C_OnDamageServer::HitInfo' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamageServer, InstigatedBy) == 0x000120, "Member 'Car_DEFAULT_C_OnDamageServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamageServer, DamageCauser) == 0x000128, "Member 'Car_DEFAULT_C_OnDamageServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDamageServer, EffectContext) == 0x000130, "Member 'Car_DEFAULT_C_OnDamageServer::EffectContext' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.OnDayPhaseChanged
// 0x0003 (0x0003 - 0x0000)
struct Car_DEFAULT_C_OnDayPhaseChanged final
{
public:
	EFortDayPhase                                 CurrentDayPhase;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 PreviousDayPhase;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAtCreation;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_OnDayPhaseChanged) == 0x000001, "Wrong alignment on Car_DEFAULT_C_OnDayPhaseChanged");
static_assert(sizeof(Car_DEFAULT_C_OnDayPhaseChanged) == 0x000003, "Wrong size on Car_DEFAULT_C_OnDayPhaseChanged");
static_assert(offsetof(Car_DEFAULT_C_OnDayPhaseChanged, CurrentDayPhase) == 0x000000, "Member 'Car_DEFAULT_C_OnDayPhaseChanged::CurrentDayPhase' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDayPhaseChanged, PreviousDayPhase) == 0x000001, "Member 'Car_DEFAULT_C_OnDayPhaseChanged::PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDayPhaseChanged, bAtCreation) == 0x000002, "Member 'Car_DEFAULT_C_OnDayPhaseChanged::bAtCreation' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.OnDeathPlayEffects
// 0x0148 (0x0148 - 0x0000)
struct Car_DEFAULT_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Car_DEFAULT_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on Car_DEFAULT_C_OnDeathPlayEffects");
static_assert(sizeof(Car_DEFAULT_C_OnDeathPlayEffects) == 0x000148, "Wrong size on Car_DEFAULT_C_OnDeathPlayEffects");
static_assert(offsetof(Car_DEFAULT_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'Car_DEFAULT_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'Car_DEFAULT_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'Car_DEFAULT_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDeathPlayEffects, HitInfo) == 0x000040, "Member 'Car_DEFAULT_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDeathPlayEffects, InstigatedBy) == 0x000120, "Member 'Car_DEFAULT_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDeathPlayEffects, DamageCauser) == 0x000128, "Member 'Car_DEFAULT_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_OnDeathPlayEffects, EffectContext) == 0x000130, "Member 'Car_DEFAULT_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.PlayJumpOnCarSound
// 0x0028 (0x0028 - 0x0000)
struct Car_DEFAULT_C_PlayJumpOnCarSound final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_PlayJumpOnCarSound) == 0x000008, "Wrong alignment on Car_DEFAULT_C_PlayJumpOnCarSound");
static_assert(sizeof(Car_DEFAULT_C_PlayJumpOnCarSound) == 0x000028, "Wrong size on Car_DEFAULT_C_PlayJumpOnCarSound");
static_assert(offsetof(Car_DEFAULT_C_PlayJumpOnCarSound, Location) == 0x000000, "Member 'Car_DEFAULT_C_PlayJumpOnCarSound::Location' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_PlayJumpOnCarSound, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000018, "Member 'Car_DEFAULT_C_PlayJumpOnCarSound::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_PlayJumpOnCarSound, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'Car_DEFAULT_C_PlayJumpOnCarSound::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_PlayJumpOnCarSound, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000020, "Member 'Car_DEFAULT_C_PlayJumpOnCarSound::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_PlayJumpOnCarSound, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'Car_DEFAULT_C_PlayJumpOnCarSound::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.Randomize the target brightness levels
// 0x0014 (0x0014 - 0x0000)
struct Car_DEFAULT_C_Randomize_the_target_brightness_levels final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_Randomize_the_target_brightness_levels) == 0x000004, "Wrong alignment on Car_DEFAULT_C_Randomize_the_target_brightness_levels");
static_assert(sizeof(Car_DEFAULT_C_Randomize_the_target_brightness_levels) == 0x000014, "Wrong size on Car_DEFAULT_C_Randomize_the_target_brightness_levels");
static_assert(offsetof(Car_DEFAULT_C_Randomize_the_target_brightness_levels, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'Car_DEFAULT_C_Randomize_the_target_brightness_levels::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Randomize_the_target_brightness_levels, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000004, "Member 'Car_DEFAULT_C_Randomize_the_target_brightness_levels::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Randomize_the_target_brightness_levels, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000008, "Member 'Car_DEFAULT_C_Randomize_the_target_brightness_levels::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Randomize_the_target_brightness_levels, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00000C, "Member 'Car_DEFAULT_C_Randomize_the_target_brightness_levels::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Randomize_the_target_brightness_levels, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'Car_DEFAULT_C_Randomize_the_target_brightness_levels::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Car_DEFAULT_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Car_DEFAULT_C_ReceiveEndPlay");
static_assert(sizeof(Car_DEFAULT_C_ReceiveEndPlay) == 0x000001, "Wrong size on Car_DEFAULT_C_ReceiveEndPlay");
static_assert(offsetof(Car_DEFAULT_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Car_DEFAULT_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.ReceiveHit
// 0x0148 (0x0148 - 0x0000)
struct Car_DEFAULT_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Car_DEFAULT_C_ReceiveHit) == 0x000008, "Wrong alignment on Car_DEFAULT_C_ReceiveHit");
static_assert(sizeof(Car_DEFAULT_C_ReceiveHit) == 0x000148, "Wrong size on Car_DEFAULT_C_ReceiveHit");
static_assert(offsetof(Car_DEFAULT_C_ReceiveHit, MyComp) == 0x000000, "Member 'Car_DEFAULT_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ReceiveHit, Other) == 0x000008, "Member 'Car_DEFAULT_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ReceiveHit, OtherComp) == 0x000010, "Member 'Car_DEFAULT_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'Car_DEFAULT_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ReceiveHit, HitLocation) == 0x000020, "Member 'Car_DEFAULT_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ReceiveHit, HitNormal) == 0x000038, "Member 'Car_DEFAULT_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'Car_DEFAULT_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_ReceiveHit, Hit) == 0x000068, "Member 'Car_DEFAULT_C_ReceiveHit::Hit' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.Set Light Brightness
// 0x0118 (0x0118 - 0x0000)
struct Car_DEFAULT_C_Set_Light_Brightness final
{
public:
	float                                         Zero_1_Intensity;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Include_Second_Emissive_Channel;                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_Set_Light_Brightness) == 0x000008, "Wrong alignment on Car_DEFAULT_C_Set_Light_Brightness");
static_assert(sizeof(Car_DEFAULT_C_Set_Light_Brightness) == 0x000118, "Wrong size on Car_DEFAULT_C_Set_Light_Brightness");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, Zero_1_Intensity) == 0x000000, "Member 'Car_DEFAULT_C_Set_Light_Brightness::Zero_1_Intensity' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, Include_Second_Emissive_Channel) == 0x000004, "Member 'Car_DEFAULT_C_Set_Light_Brightness::Include_Second_Emissive_Channel' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, Force) == 0x000005, "Member 'Car_DEFAULT_C_Set_Light_Brightness::Force' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, Temp_bool_Variable) == 0x000006, "Member 'Car_DEFAULT_C_Set_Light_Brightness::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Car_DEFAULT_C_Set_Light_Brightness::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, Temp_struct_Variable) == 0x000014, "Member 'Car_DEFAULT_C_Set_Light_Brightness::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'Car_DEFAULT_C_Set_Light_Brightness::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Array_Get_Item) == 0x000040, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000050, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000058, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_IsValid_ReturnValue_2) == 0x00005C, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_IsValid_ReturnValue_3) == 0x00005D, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000060, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000064, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_BreakColor_R) == 0x000068, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_BreakColor_G) == 0x00006C, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_BreakColor_B) == 0x000070, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_BreakColor_A) == 0x000074, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_BreakColor_R_1) == 0x000078, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_BreakColor_G_1) == 0x00007C, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_BreakColor_B_1) == 0x000080, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_BreakColor_A_1) == 0x000084, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_MakeVector_ReturnValue_1) == 0x0000A0, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000D0, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000E8, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0000F8, "Member 'Car_DEFAULT_C_Set_Light_Brightness::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_Set_Light_Brightness, K2Node_Select_Default) == 0x000108, "Member 'Car_DEFAULT_C_Set_Light_Brightness::K2Node_Select_Default' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.SetCarAlarmEnabledBasedOnLocation
// 0x00C0 (0x00C0 - 0x0000)
struct Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Random_Value_5_59614;                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorFloat_ReturnValue;              // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaterialEditorSine_ReturnValue;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaterialEditorSine_ReturnValue_1;         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaterialEditorSine_ReturnValue_2;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation) == 0x000008, "Wrong alignment on Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation");
static_assert(sizeof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation) == 0x0000C0, "Wrong size on Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, Location) == 0x000000, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::Location' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, NewParam) == 0x000018, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::NewParam' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, ReturnValue) == 0x00001C, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, Random_Value_5_59614) == 0x000020, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::Random_Value_5_59614' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Add_VectorFloat_ReturnValue) == 0x000028, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Add_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000040, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_BreakVector_X) == 0x000058, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_BreakVector_Y) == 0x00005C, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_BreakVector_Z) == 0x000060, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_FCeil_ReturnValue) == 0x000064, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_FCeil_ReturnValue_1) == 0x000068, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00006C, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000070, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000078, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00007C, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000080, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000084, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000088, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00008C, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_MaterialEditorSine_ReturnValue) == 0x000090, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_MaterialEditorSine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000094, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000098, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_MaterialEditorSine_ReturnValue_1) == 0x00009C, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_MaterialEditorSine_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000A0, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0000A4, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_MaterialEditorSine_ReturnValue_2) == 0x0000A8, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_MaterialEditorSine_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000AC, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000B0, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Fraction_ReturnValue) == 0x0000B4, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Abs_ReturnValue) == 0x0000B8, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000BC, "Member 'Car_DEFAULT_C_SetCarAlarmEnabledBasedOnLocation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.toggle light visibility
// 0x0005 (0x0005 - 0x0000)
struct Car_DEFAULT_C_toggle_light_visibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_toggle_light_visibility) == 0x000001, "Wrong alignment on Car_DEFAULT_C_toggle_light_visibility");
static_assert(sizeof(Car_DEFAULT_C_toggle_light_visibility) == 0x000005, "Wrong size on Car_DEFAULT_C_toggle_light_visibility");
static_assert(offsetof(Car_DEFAULT_C_toggle_light_visibility, bNewVisibility) == 0x000000, "Member 'Car_DEFAULT_C_toggle_light_visibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_toggle_light_visibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Car_DEFAULT_C_toggle_light_visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_toggle_light_visibility, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'Car_DEFAULT_C_toggle_light_visibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_toggle_light_visibility, CallFunc_IsValid_ReturnValue_2) == 0x000003, "Member 'Car_DEFAULT_C_toggle_light_visibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_toggle_light_visibility, CallFunc_IsValid_ReturnValue_3) == 0x000004, "Member 'Car_DEFAULT_C_toggle_light_visibility::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.UserConstructionScript
// 0x06A0 (0x06A0 - 0x0000)
struct Car_DEFAULT_C_UserConstructionScript final
{
public:
	TArray<class FName>                           ParametersToLerp;                                  // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FName                                   Wind_offset_1;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Wind_1_Random_Rotation_Influence;                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Max_Rotation_1;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Wind_1_Random_Rotation_Change_Rate;                // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_construct_ValidateLightsOnVars_doesHaveLights; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetIntenseWindMaterialsForPreview_Materials; // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetIntenseWindMaterialsForPreview_ReturnValue; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      CallFunc_GetWindSpeedCurveForPreview_ReturnValue;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue_1;   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0xF];                                       // 0x00D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x00E0(0x0060)(ConstParm, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0140(0x0010)(ReferenceParm)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_2;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue_1; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      CallFunc_GetWindSpeedCurveForPreview_ReturnValue_1; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R;                             // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_1;        // 0x01F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue_2;   // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue_1;               // 0x0220(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_3;                         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_1; // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue_3;   // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0250(0x0060)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x02B0(0x0060)(IsPlainOldData, NoDestructor)
	class USpotLightComponent*                    CallFunc_AddComponent_ReturnValue_1;               // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    CallFunc_AddComponent_ReturnValue_2;               // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_2;         // 0x0320(0x0060)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_3;         // 0x0380(0x0060)(IsPlainOldData, NoDestructor)
	class USpotLightComponent*                    CallFunc_AddComponent_ReturnValue_3;               // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    CallFunc_AddComponent_ReturnValue_4;               // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_4;         // 0x03F0(0x0060)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_5;         // 0x0450(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_6;         // 0x0540(0x0060)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_7;         // 0x05A0(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_2;            // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_3;            // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0692(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_UserConstructionScript) == 0x000010, "Wrong alignment on Car_DEFAULT_C_UserConstructionScript");
static_assert(sizeof(Car_DEFAULT_C_UserConstructionScript) == 0x0006A0, "Wrong size on Car_DEFAULT_C_UserConstructionScript");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, ParametersToLerp) == 0x000000, "Member 'Car_DEFAULT_C_UserConstructionScript::ParametersToLerp' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, Wind_offset_1) == 0x000010, "Member 'Car_DEFAULT_C_UserConstructionScript::Wind_offset_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, Wind_1_Random_Rotation_Influence) == 0x000014, "Member 'Car_DEFAULT_C_UserConstructionScript::Wind_1_Random_Rotation_Influence' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, Max_Rotation_1) == 0x000018, "Member 'Car_DEFAULT_C_UserConstructionScript::Max_Rotation_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, Wind_1_Random_Rotation_Change_Rate) == 0x00001C, "Member 'Car_DEFAULT_C_UserConstructionScript::Wind_1_Random_Rotation_Change_Rate' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'Car_DEFAULT_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000028, "Member 'Car_DEFAULT_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_construct_ValidateLightsOnVars_doesHaveLights) == 0x00002C, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_construct_ValidateLightsOnVars_doesHaveLights' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'Car_DEFAULT_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetBuildingMeshComponent_ReturnValue) == 0x000038, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetBuildingMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_DoesSocketExist_ReturnValue) == 0x000040, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_DoesSocketExist_ReturnValue_1) == 0x000041, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetIntenseWindMaterialsForPreview_Materials) == 0x000048, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetIntenseWindMaterialsForPreview_Materials' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetIntenseWindMaterialsForPreview_ReturnValue) == 0x000058, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetIntenseWindMaterialsForPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'Car_DEFAULT_C_UserConstructionScript::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000068, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue) == 0x000070, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000080, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetWindSpeedCurveForPreview_ReturnValue) == 0x000090, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetWindSpeedCurveForPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000098, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000099, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetBuildingMeshComponent_ReturnValue_1) == 0x0000A0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetBuildingMeshComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x0000A8, "Member 'Car_DEFAULT_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000C8, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, Temp_struct_Variable) == 0x0000E0, "Member 'Car_DEFAULT_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetMaterials_ReturnValue) == 0x000140, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000150, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Array_Get_Item_2) == 0x000158, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000160, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000168, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000170, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_RotateAngleAxis_ReturnValue) == 0x000188, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x0001A0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x0001A4, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x0001A8, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x0001AC, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_MakeColor_ReturnValue) == 0x0001B0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue_1) == 0x0001C0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetWindSpeedCurveForPreview_ReturnValue_1) == 0x0001C8, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetWindSpeedCurveForPreview_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetLinearColorValue_ReturnValue) == 0x0001D0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x0001E0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakColor_R) == 0x0001E4, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakColor_G) == 0x0001E8, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakColor_B) == 0x0001EC, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakColor_A) == 0x0001F0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetLinearColorValue_ReturnValue_1) == 0x0001F4, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetBuildingMeshComponent_ReturnValue_2) == 0x000208, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetBuildingMeshComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakColor_R_1) == 0x000210, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakColor_G_1) == 0x000214, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakColor_B_1) == 0x000218, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakColor_A_1) == 0x00021C, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetMaterials_ReturnValue_1) == 0x000220, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Array_Get_Item_3) == 0x000230, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000238, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_K2_GetScalarParameterValue_ReturnValue_1) == 0x000240, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_K2_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_Lerp_ReturnValue) == 0x000244, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetBuildingMeshComponent_ReturnValue_3) == 0x000248, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetBuildingMeshComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue) == 0x000250, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0002B0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_1) == 0x000310, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_2) == 0x000318, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_2) == 0x000320, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_3) == 0x000380, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_3) == 0x0003E0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_4) == 0x0003E8, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_4) == 0x0003F0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_5) == 0x000450, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x0004B0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x0004C8, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x0004E0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Location_1) == 0x0004F8, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_1) == 0x000510, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Scale_1) == 0x000528, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_6) == 0x000540, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue_7) == 0x0005A0, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Location_2) == 0x000600, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_2) == 0x000618, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Scale_2) == 0x000630, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Location_3) == 0x000648, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_3) == 0x000660, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BreakTransform_Scale_3) == 0x000678, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_DoesSocketExist_ReturnValue_2) == 0x000690, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_DoesSocketExist_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_DoesSocketExist_ReturnValue_3) == 0x000691, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_DoesSocketExist_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue_1) == 0x000692, "Member 'Car_DEFAULT_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Car_DEFAULT.Car_DEFAULT_C.validateLightVisibility
// 0x0048 (0x0048 - 0x0000)
struct Car_DEFAULT_C_validateLightVisibility final
{
public:
	EFortDayPhase                                 l_validatedTimeOfDay;                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 Temp_byte_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 CallFunc_GetCurrentDayPhase_ReturnValue;           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 K2Node_Select_Default_1;                           // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Car_DEFAULT_C_validateLightVisibility) == 0x000008, "Wrong alignment on Car_DEFAULT_C_validateLightVisibility");
static_assert(sizeof(Car_DEFAULT_C_validateLightVisibility) == 0x000048, "Wrong size on Car_DEFAULT_C_validateLightVisibility");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, l_validatedTimeOfDay) == 0x000000, "Member 'Car_DEFAULT_C_validateLightVisibility::l_validatedTimeOfDay' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, Temp_float_Variable) == 0x000004, "Member 'Car_DEFAULT_C_validateLightVisibility::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, Temp_float_Variable_1) == 0x000008, "Member 'Car_DEFAULT_C_validateLightVisibility::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, Temp_float_Variable_2) == 0x00000C, "Member 'Car_DEFAULT_C_validateLightVisibility::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, Temp_float_Variable_3) == 0x000010, "Member 'Car_DEFAULT_C_validateLightVisibility::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, Temp_bool_Variable) == 0x000014, "Member 'Car_DEFAULT_C_validateLightVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, Temp_byte_Variable) == 0x000015, "Member 'Car_DEFAULT_C_validateLightVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Car_DEFAULT_C_validateLightVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, Temp_byte_Variable_1) == 0x00001C, "Member 'Car_DEFAULT_C_validateLightVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'Car_DEFAULT_C_validateLightVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Car_DEFAULT_C_validateLightVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, K2Node_Select_Default) == 0x000028, "Member 'Car_DEFAULT_C_validateLightVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'Car_DEFAULT_C_validateLightVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, CallFunc_Array_Get_Item) == 0x000030, "Member 'Car_DEFAULT_C_validateLightVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Car_DEFAULT_C_validateLightVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'Car_DEFAULT_C_validateLightVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, CallFunc_GetCurrentDayPhase_ReturnValue) == 0x00003D, "Member 'Car_DEFAULT_C_validateLightVisibility::CallFunc_GetCurrentDayPhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000040, "Member 'Car_DEFAULT_C_validateLightVisibility::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'Car_DEFAULT_C_validateLightVisibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, CallFunc_Greater_IntInt_ReturnValue) == 0x000045, "Member 'Car_DEFAULT_C_validateLightVisibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000046, "Member 'Car_DEFAULT_C_validateLightVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Car_DEFAULT_C_validateLightVisibility, K2Node_Select_Default_1) == 0x000047, "Member 'Car_DEFAULT_C_validateLightVisibility::K2Node_Select_Default_1' has a wrong offset!");

}

