#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_Soccerball

#include "Basic.hpp"

#include "Athena_Soccerball_classes.hpp"
#include "Athena_Soccerball_parameters.hpp"


namespace SDK
{

// Function Athena_Soccerball.Athena_Soccerball_C.ExecuteUbergraph_Athena_Soccerball
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAthena_Soccerball_C::ExecuteUbergraph_Athena_Soccerball(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Athena_Soccerball_C", "ExecuteUbergraph_Athena_Soccerball");

	Params::Athena_Soccerball_C_ExecuteUbergraph_Athena_Soccerball Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Athena_Soccerball.Athena_Soccerball_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAthena_Soccerball_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Athena_Soccerball_C", "ReceiveActorBeginOverlap");

	Params::Athena_Soccerball_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Athena_Soccerball.Athena_Soccerball_C.Update Quest With Distance
// (BlueprintCallable, BlueprintEvent)

void AAthena_Soccerball_C::Update_Quest_With_Distance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Athena_Soccerball_C", "Update Quest With Distance");

	UObject::ProcessEvent(Func, nullptr);
}

}

