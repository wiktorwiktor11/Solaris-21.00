#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortEliminationScreen

#include "Basic.hpp"

#include "FortEliminationScreen_classes.hpp"
#include "FortEliminationScreen_parameters.hpp"


namespace SDK
{

// Function FortEliminationScreen.FortEliminationScreen_C.ExecuteUbergraph_FortEliminationScreen
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortEliminationScreen_C::ExecuteUbergraph_FortEliminationScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEliminationScreen_C", "ExecuteUbergraph_FortEliminationScreen");

	Params::FortEliminationScreen_C_ExecuteUbergraph_FortEliminationScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortEliminationScreen.FortEliminationScreen_C.PlayIntroAnimation
// (Event, Protected, BlueprintEvent)

void UFortEliminationScreen_C::PlayIntroAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEliminationScreen_C", "PlayIntroAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortEliminationScreen.FortEliminationScreen_C.SetContinueButtonText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UFortEliminationScreen_C::SetContinueButtonText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEliminationScreen_C", "SetContinueButtonText");

	Params::FortEliminationScreen_C_SetContinueButtonText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}

}

