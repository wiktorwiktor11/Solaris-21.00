#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryItemInfo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function AthenaInventoryItemInfo.AthenaInventoryItemInfo_C.ExecuteUbergraph_AthenaInventoryItemInfo
// 0x0128 (0x0128 - 0x0000)
struct AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   K2Node_Event_ItemRarity;                           // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    K2Node_Event_RarityItemData;                       // 0x0010(0x0080)(ConstParm)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0098(0x0014)()
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItem*                        K2Node_Event_ItemToRepresent;                      // 0x00B0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasCategoryIcon;                     // 0x00B9(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPressed;                             // 0x00BB(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_Event_ExtensionWidget;                      // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0118(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo) == 0x000008, "Wrong alignment on AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo");
static_assert(sizeof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo) == 0x000128, "Wrong size on AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, EntryPoint) == 0x000000, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_byte_Variable) == 0x000004, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_bool_Variable) == 0x000005, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_byte_Variable_1) == 0x000006, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_byte_Variable_2) == 0x000007, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_bool_Variable_1) == 0x000008, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_byte_Variable_3) == 0x000009, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_byte_Variable_4) == 0x00000A, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Event_IsDesignTime) == 0x00000B, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Event_ItemRarity) == 0x00000C, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Event_ItemRarity' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Event_RarityItemData) == 0x000010, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Event_RarityItemData' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000090, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_MakeStruct_SlateColor) == 0x000098, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Event_ItemToRepresent) == 0x0000B0, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Event_ItemToRepresent' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Event_bHasCategoryIcon) == 0x0000B9, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Event_bHasCategoryIcon' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_byte_Variable_5) == 0x0000BA, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Event_bPressed) == 0x0000BB, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Event_bPressed' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0000C0, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000C8, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000D0, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_bool_Variable_2) == 0x0000D8, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Select_Default) == 0x0000D9, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x0000E0, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_int_Variable) == 0x0000E8, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_int_Variable_1) == 0x0000EC, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, Temp_bool_Variable_3) == 0x0000F0, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_IsVisible_ReturnValue) == 0x0000F1, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Select_Default_1) == 0x0000F4, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Select_Default_2) == 0x0000F8, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_BooleanOR_ReturnValue) == 0x0000F9, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Select_Default_3) == 0x0000FA, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_GetEndTime_ReturnValue) == 0x0000FC, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_Event_ExtensionWidget) == 0x000100, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_Event_ExtensionWidget' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_PlayAnimation_ReturnValue) == 0x000108, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000110, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000118, "Member 'AthenaInventoryItemInfo_C_ExecuteUbergraph_AthenaInventoryItemInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function AthenaInventoryItemInfo.AthenaInventoryItemInfo_C.OnExtensionWidgetAdded
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryItemInfo_C_OnExtensionWidgetAdded final
{
public:
	class UUserWidget*                            ExtensionWidget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryItemInfo_C_OnExtensionWidgetAdded) == 0x000008, "Wrong alignment on AthenaInventoryItemInfo_C_OnExtensionWidgetAdded");
static_assert(sizeof(AthenaInventoryItemInfo_C_OnExtensionWidgetAdded) == 0x000008, "Wrong size on AthenaInventoryItemInfo_C_OnExtensionWidgetAdded");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnExtensionWidgetAdded, ExtensionWidget) == 0x000000, "Member 'AthenaInventoryItemInfo_C_OnExtensionWidgetAdded::ExtensionWidget' has a wrong offset!");

// Function AthenaInventoryItemInfo.AthenaInventoryItemInfo_C.OnInspectItemInput
// 0x0001 (0x0001 - 0x0000)
struct AthenaInventoryItemInfo_C_OnInspectItemInput final
{
public:
	bool                                          bPressed;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryItemInfo_C_OnInspectItemInput) == 0x000001, "Wrong alignment on AthenaInventoryItemInfo_C_OnInspectItemInput");
static_assert(sizeof(AthenaInventoryItemInfo_C_OnInspectItemInput) == 0x000001, "Wrong size on AthenaInventoryItemInfo_C_OnInspectItemInput");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnInspectItemInput, bPressed) == 0x000000, "Member 'AthenaInventoryItemInfo_C_OnInspectItemInput::bPressed' has a wrong offset!");

// Function AthenaInventoryItemInfo.AthenaInventoryItemInfo_C.OnItemCategoryIconUpdated
// 0x0001 (0x0001 - 0x0000)
struct AthenaInventoryItemInfo_C_OnItemCategoryIconUpdated final
{
public:
	bool                                          bHasCategoryIcon;                                  // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryItemInfo_C_OnItemCategoryIconUpdated) == 0x000001, "Wrong alignment on AthenaInventoryItemInfo_C_OnItemCategoryIconUpdated");
static_assert(sizeof(AthenaInventoryItemInfo_C_OnItemCategoryIconUpdated) == 0x000001, "Wrong size on AthenaInventoryItemInfo_C_OnItemCategoryIconUpdated");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnItemCategoryIconUpdated, bHasCategoryIcon) == 0x000000, "Member 'AthenaInventoryItemInfo_C_OnItemCategoryIconUpdated::bHasCategoryIcon' has a wrong offset!");

// Function AthenaInventoryItemInfo.AthenaInventoryItemInfo_C.OnItemRarityUpdated
// 0x0088 (0x0088 - 0x0000)
struct AthenaInventoryItemInfo_C_OnItemRarityUpdated final
{
public:
	EFortRarity                                   ItemRarity;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    RarityItemData;                                    // 0x0008(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AthenaInventoryItemInfo_C_OnItemRarityUpdated) == 0x000008, "Wrong alignment on AthenaInventoryItemInfo_C_OnItemRarityUpdated");
static_assert(sizeof(AthenaInventoryItemInfo_C_OnItemRarityUpdated) == 0x000088, "Wrong size on AthenaInventoryItemInfo_C_OnItemRarityUpdated");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnItemRarityUpdated, ItemRarity) == 0x000000, "Member 'AthenaInventoryItemInfo_C_OnItemRarityUpdated::ItemRarity' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnItemRarityUpdated, RarityItemData) == 0x000008, "Member 'AthenaInventoryItemInfo_C_OnItemRarityUpdated::RarityItemData' has a wrong offset!");

// Function AthenaInventoryItemInfo.AthenaInventoryItemInfo_C.OnMouseButtonDown
// 0x0258 (0x0258 - 0x0000)
struct AthenaInventoryItemInfo_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01A0(0x00B8)()
};
static_assert(alignof(AthenaInventoryItemInfo_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on AthenaInventoryItemInfo_C_OnMouseButtonDown");
static_assert(sizeof(AthenaInventoryItemInfo_C_OnMouseButtonDown) == 0x000258, "Wrong size on AthenaInventoryItemInfo_C_OnMouseButtonDown");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'AthenaInventoryItemInfo_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnMouseButtonDown, MouseEvent) == 0x000040, "Member 'AthenaInventoryItemInfo_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnMouseButtonDown, ReturnValue) == 0x0000D0, "Member 'AthenaInventoryItemInfo_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnMouseButtonDown, CallFunc_Not_PreBool_ReturnValue) == 0x000188, "Member 'AthenaInventoryItemInfo_C_OnMouseButtonDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnMouseButtonDown, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000190, "Member 'AthenaInventoryItemInfo_C_OnMouseButtonDown::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnMouseButtonDown, CallFunc_PlayAnimationForward_ReturnValue) == 0x000198, "Member 'AthenaInventoryItemInfo_C_OnMouseButtonDown::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x0001A0, "Member 'AthenaInventoryItemInfo_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function AthenaInventoryItemInfo.AthenaInventoryItemInfo_C.OnPostItemToRepresentChanged
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryItemInfo_C_OnPostItemToRepresentChanged final
{
public:
	const class UFortItem*                        ItemToRepresent;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryItemInfo_C_OnPostItemToRepresentChanged) == 0x000008, "Wrong alignment on AthenaInventoryItemInfo_C_OnPostItemToRepresentChanged");
static_assert(sizeof(AthenaInventoryItemInfo_C_OnPostItemToRepresentChanged) == 0x000008, "Wrong size on AthenaInventoryItemInfo_C_OnPostItemToRepresentChanged");
static_assert(offsetof(AthenaInventoryItemInfo_C_OnPostItemToRepresentChanged, ItemToRepresent) == 0x000000, "Member 'AthenaInventoryItemInfo_C_OnPostItemToRepresentChanged::ItemToRepresent' has a wrong offset!");

// Function AthenaInventoryItemInfo.AthenaInventoryItemInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaInventoryItemInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryItemInfo_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaInventoryItemInfo_C_PreConstruct");
static_assert(sizeof(AthenaInventoryItemInfo_C_PreConstruct) == 0x000001, "Wrong size on AthenaInventoryItemInfo_C_PreConstruct");
static_assert(offsetof(AthenaInventoryItemInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaInventoryItemInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaInventoryItemInfo.AthenaInventoryItemInfo_C.SetRarityGlowColors
// 0x004C (0x004C - 0x0000)
struct AthenaInventoryItemInfo_C_SetRarityGlowColors final
{
public:
	struct FLinearColor                           Specified_Color;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   Index_0;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	float                                         Temp_float_Variable;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryItemInfo_C_SetRarityGlowColors) == 0x000004, "Wrong alignment on AthenaInventoryItemInfo_C_SetRarityGlowColors");
static_assert(sizeof(AthenaInventoryItemInfo_C_SetRarityGlowColors) == 0x00004C, "Wrong size on AthenaInventoryItemInfo_C_SetRarityGlowColors");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Specified_Color) == 0x000000, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Specified_Color' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Index_0) == 0x000010, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Index_0' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Temp_byte_Variable) == 0x000011, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Temp_float_Variable) == 0x000028, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Temp_float_Variable_1) == 0x00002C, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Temp_float_Variable_2) == 0x000030, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Temp_float_Variable_3) == 0x000034, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Temp_float_Variable_4) == 0x000038, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Temp_float_Variable_5) == 0x00003C, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Temp_float_Variable_6) == 0x000040, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, Temp_float_Variable_7) == 0x000044, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_SetRarityGlowColors, K2Node_Select_Default) == 0x000048, "Member 'AthenaInventoryItemInfo_C_SetRarityGlowColors::K2Node_Select_Default' has a wrong offset!");

// Function AthenaInventoryItemInfo.AthenaInventoryItemInfo_C.UpdateRarityInfoVisibility
// 0x0020 (0x0020 - 0x0000)
struct AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetItemType_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility) == 0x000008, "Wrong alignment on AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility");
static_assert(sizeof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility) == 0x000020, "Wrong size on AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, Item) == 0x000000, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::Item' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000008, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, CallFunc_GetItemType_ReturnValue) == 0x000011, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::CallFunc_GetItemType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000014, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, Temp_byte_Variable) == 0x000016, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, Temp_byte_Variable_1) == 0x000017, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, Temp_bool_Variable) == 0x000018, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility, K2Node_Select_Default) == 0x000019, "Member 'AthenaInventoryItemInfo_C_UpdateRarityInfoVisibility::K2Node_Select_Default' has a wrong offset!");

}

