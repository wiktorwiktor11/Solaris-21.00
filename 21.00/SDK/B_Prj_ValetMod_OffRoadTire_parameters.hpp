#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_ValetMod_OffRoadTire

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature final
{
public:
	class AFortWaterBodyActor*                    WaterBody;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         WaterInteractionComponent_0;                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstBody;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature) == 0x000018, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature, WaterBody) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature::WaterBody' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature, WaterInteractionComponent_0) == 0x000008, "Member 'B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature::WaterInteractionComponent_0' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature, bIsFirstBody) == 0x000010, "Member 'B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature::bIsFirstBody' has a wrong offset!");

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.CalculateLaunchVelocity
// 0x00D8 (0x00D8 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity final
{
public:
	class AFortPawn*                              PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity) == 0x0000D8, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, PlayerPawn) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::PlayerPawn' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, ReturnValue) == 0x000008, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_GetValueAtLevel_ReturnValue) == 0x000038, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000058, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_Normal_ReturnValue) == 0x000080, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000098, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_BreakVector_X) == 0x0000B0, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_BreakVector_Y) == 0x0000B4, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire
// 0x05B0 (0x05B0 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit_1;                                // 0x0008(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0150(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x2];                                      // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActorSimulatePhysics_ReturnValue;      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPhysicsObjectComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312[0x2];                                      // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB[0x5];                                      // 0x03FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_ValetMod_OffRoadTire_Pickup_C*     K2Node_DynamicCast_AsBGA_Valet_Mod_Off_Road_Tire_Pickup; // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDBNO_ReturnValue;                       // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A[0x6];                                      // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0463(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateLaunchVelocity_ReturnValue;      // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue_1;                // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Prj_ValetMod_OffRoadTire_C*          K2Node_DynamicCast_AsB_Prj_Valet_Mod_Off_Road_Tire; // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaVehicle*                     K2Node_DynamicCast_AsFort_Athena_Vehicle;          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldApplyMod_ReturnValue;               // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5[0x3];                                      // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x04D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_1;             // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D6[0x2];                                      // 0x04D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetOwnerPlayerController_ReturnValue;     // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortVehicleInterface> CallFunc_ApplyTireMod_self_CastInput;              // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWaterBodyActor*                    K2Node_ComponentBoundEvent_WaterBody;              // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         K2Node_ComponentBoundEvent_WaterInteractionComponent; // 0x0510(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsFirstBody;           // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPickup*                            CallFunc_K2_SpawnPickupInWorld_ReturnValue;        // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInWater_ReturnValue;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemComponent*                     CallFunc_SpawnFXAtLocation_ReturnValue;            // 0x0530(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPickup*                            CallFunc_K2_SpawnPickupInWorld_ReturnValue_1;      // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55A[0x2];                                      // 0x055A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x055C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0570(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A[0x6];                                      // 0x057A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_CanApplyMod_self_CastInput;               // 0x0580(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanApplyMod_ReturnValue;                  // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetImpulseVectorForDirectHit_ReturnValue; // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire) == 0x0005B0, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, EntryPoint) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_Hit_1) == 0x000008, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_Hit_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_MyComp) == 0x0000E8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_Other) == 0x0000F0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_OtherComp) == 0x0000F8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_bSelfMoved) == 0x000100, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_HitLocation) == 0x000108, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_HitNormal) == 0x000120, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_NormalImpulse) == 0x000138, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_Hit) == 0x000150, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_bBlockingHit) == 0x000230, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_bInitialOverlap) == 0x000231, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Time) == 0x000234, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Distance) == 0x000238, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Location) == 0x000240, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_ImpactPoint) == 0x000258, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Normal) == 0x000270, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_ImpactNormal) == 0x000288, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_PhysMat) == 0x0002A0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitActor) == 0x0002A8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitComponent) == 0x0002B0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitBoneName) == 0x0002B8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_BoneName) == 0x0002BC, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitItem) == 0x0002C0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_ElementIndex) == 0x0002C4, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_FaceIndex) == 0x0002C8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_TraceStart) == 0x0002D0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_TraceEnd) == 0x0002E8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_CanActorSimulatePhysics_ReturnValue) == 0x000300, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_CanActorSimulatePhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetComponentByClass_ReturnValue) == 0x000308, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000310, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000311, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Time_1) == 0x000314, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Distance_1) == 0x000318, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Location_1) == 0x000320, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000338, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Normal_1) == 0x000350, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000368, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_PhysMat_1) == 0x000380, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitActor_1) == 0x000388, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitComponent_1) == 0x000390, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitBoneName_1) == 0x000398, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_BoneName_1) == 0x00039C, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitItem_1) == 0x0003A0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_ElementIndex_1) == 0x0003A4, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_FaceIndex_1) == 0x0003A8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_TraceStart_1) == 0x0003B0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_TraceEnd_1) == 0x0003C8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsValid_ReturnValue) == 0x0003E0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0003E8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess) == 0x0003F8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BooleanAND_ReturnValue) == 0x0003F9, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0003FA, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsBGA_Valet_Mod_Off_Road_Tire_Pickup) == 0x000400, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsBGA_Valet_Mod_Off_Road_Tire_Pickup' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_1) == 0x000408, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000410, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_2) == 0x000418, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsFort_Pawn) == 0x000420, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_3) == 0x000428, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsDBNO_ReturnValue) == 0x000429, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsDBNO_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000430, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000440, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000448, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_4) == 0x000450, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x000458, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_5) == 0x000460, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsValid_ReturnValue_1) == 0x000461, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsInVehicle_ReturnValue) == 0x000462, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsValid_ReturnValue_2) == 0x000463, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_CalculateLaunchVelocity_ReturnValue) == 0x000468, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_CalculateLaunchVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsInVehicle_ReturnValue_1) == 0x000480, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsInVehicle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsB_Prj_Valet_Mod_Off_Road_Tire) == 0x000488, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsB_Prj_Valet_Mod_Off_Road_Tire' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_6) == 0x000490, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BooleanOR_ReturnValue) == 0x000491, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsFort_Athena_Vehicle) == 0x000498, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsFort_Athena_Vehicle' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_7) == 0x0004A0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_ShouldApplyMod_ReturnValue) == 0x0004A1, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_ShouldApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_IsClosed_Variable) == 0x0004A2, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_Variable) == 0x0004A3, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_Has_Been_Initd_Variable_1) == 0x0004A4, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetOwner_ReturnValue) == 0x0004A8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsServer_ReturnValue) == 0x0004B0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsPawn) == 0x0004B8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_8) == 0x0004C0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetController_ReturnValue) == 0x0004C8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_OnSameTeam_ReturnValue) == 0x0004D0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsValid_ReturnValue_3) == 0x0004D1, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsValid_ReturnValue_4) == 0x0004D2, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetValueAsBool_ReturnValue) == 0x0004D3, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_IsClosed_Variable_1) == 0x0004D4, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetValueAsBool_ReturnValue_1) == 0x0004D5, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetValueAsBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetOwnerPlayerController_ReturnValue) == 0x0004D8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetOwnerPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_ApplyTireMod_self_CastInput) == 0x0004E0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_ApplyTireMod_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0004F0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_ComponentBoundEvent_WaterBody) == 0x000508, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_ComponentBoundEvent_WaterBody' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_ComponentBoundEvent_WaterInteractionComponent) == 0x000510, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_ComponentBoundEvent_WaterInteractionComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_ComponentBoundEvent_bIsFirstBody) == 0x000518, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_ComponentBoundEvent_bIsFirstBody' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_K2_SpawnPickupInWorld_ReturnValue) == 0x000520, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_K2_SpawnPickupInWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsInWater_ReturnValue) == 0x000528, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsInWater_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_Has_Been_Initd_Variable_2) == 0x000529, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_SpawnFXAtLocation_ReturnValue) == 0x000530, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_SpawnFXAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000538, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_K2_SpawnPickupInWorld_ReturnValue_1) == 0x000550, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_K2_SpawnPickupInWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsServer_ReturnValue_1) == 0x000558, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000559, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_CreateDelegate_OutputDelegate) == 0x00055C, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetValueAtLevel_ReturnValue) == 0x000568, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000570, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000578, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_IsClosed_Variable_2) == 0x000579, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_CanApplyMod_self_CastInput) == 0x000580, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_CanApplyMod_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_CanApplyMod_ReturnValue) == 0x000590, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_CanApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000594, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetImpulseVectorForDirectHit_ReturnValue) == 0x000598, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetImpulseVectorForDirectHit_ReturnValue' has a wrong offset!");

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.OnStop
// 0x00E0 (0x00E0 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_OnStop final
{
public:
	struct FHitResult                             Hit_0;                                             // 0x0000(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_OnStop) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_OnStop");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_OnStop) == 0x0000E0, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_OnStop");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_OnStop, Hit_0) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_OnStop::Hit_0' has a wrong offset!");

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.ReceiveHit
// 0x0148 (0x0148 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_0;                                             // 0x0068(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_ReceiveHit");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit) == 0x000148, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_ReceiveHit");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, MyComp) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, Other) == 0x000008, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, OtherComp) == 0x000010, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, HitLocation) == 0x000020, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, HitNormal) == 0x000038, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, Hit_0) == 0x000068, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::Hit_0' has a wrong offset!");

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.ShouldApplyMod
// 0x0070 (0x0070 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod final
{
public:
	class AFortAthenaVehicle*                     Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_HasTireMod_self_CastInput;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTireMod_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_GetHealth_self_CastInput;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_IsInoperable_self_CastInput;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInoperable_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_AreAnyTiresPopped_self_CastInput;         // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreAnyTiresPopped_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod) == 0x000070, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, Vehicle) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::Vehicle' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, ReturnValue) == 0x000008, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_HasTireMod_self_CastInput) == 0x000010, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_HasTireMod_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_HasTireMod_ReturnValue) == 0x000020, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_HasTireMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_GetHealth_self_CastInput) == 0x000028, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_GetHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_GetHealth_ReturnValue) == 0x000038, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_IsInoperable_self_CastInput) == 0x000040, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_IsInoperable_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_IsInoperable_ReturnValue) == 0x000050, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_IsInoperable_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000051, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_AreAnyTiresPopped_self_CastInput) == 0x000058, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_AreAnyTiresPopped_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_AreAnyTiresPopped_ReturnValue) == 0x000068, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_AreAnyTiresPopped_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_BooleanOR_ReturnValue) == 0x00006B, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_BooleanOR_ReturnValue_1) == 0x00006C, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006D, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

}

