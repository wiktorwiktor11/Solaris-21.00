#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Athena_SplineMesh

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Athena_SplineMesh.BP_Athena_SplineMesh_C
// 0x0050 (0x02C0 - 0x0270)
class ABP_Athena_SplineMesh_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       Spline;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMesh;                                        // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SplineStaticMesh;                                  // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               ForwardAxis;                                       // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCollision;                                      // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Tension;                                           // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoSmoothTangent;                                 // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClosedSpline;                                      // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableRoll;                                        // 0x029A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29B[0x5];                                      // 0x029B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineMeshComponent*>           Meshes;                                            // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         Zero_1_Progress;                                   // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Athena_SplineMesh(int32 EntryPoint);
	void ProgressRainbow();
	void SetSplineMeshCollision(class USplineMeshComponent* SplineComponent);
	void SetupSplineMesh(class USplineMeshComponent** NewParam);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Athena_SplineMesh_C">();
	}
	static class ABP_Athena_SplineMesh_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Athena_SplineMesh_C>();
	}
};
static_assert(alignof(ABP_Athena_SplineMesh_C) == 0x000008, "Wrong alignment on ABP_Athena_SplineMesh_C");
static_assert(sizeof(ABP_Athena_SplineMesh_C) == 0x0002C0, "Wrong size on ABP_Athena_SplineMesh_C");
static_assert(offsetof(ABP_Athena_SplineMesh_C, UberGraphFrame) == 0x000270, "Member 'ABP_Athena_SplineMesh_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, Spline) == 0x000278, "Member 'ABP_Athena_SplineMesh_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, SplineMesh) == 0x000280, "Member 'ABP_Athena_SplineMesh_C::SplineMesh' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, SplineStaticMesh) == 0x000288, "Member 'ABP_Athena_SplineMesh_C::SplineStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, ForwardAxis) == 0x000290, "Member 'ABP_Athena_SplineMesh_C::ForwardAxis' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, UseCollision) == 0x000291, "Member 'ABP_Athena_SplineMesh_C::UseCollision' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, Tension) == 0x000294, "Member 'ABP_Athena_SplineMesh_C::Tension' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, AutoSmoothTangent) == 0x000298, "Member 'ABP_Athena_SplineMesh_C::AutoSmoothTangent' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, ClosedSpline) == 0x000299, "Member 'ABP_Athena_SplineMesh_C::ClosedSpline' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, EnableRoll) == 0x00029A, "Member 'ABP_Athena_SplineMesh_C::EnableRoll' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, Meshes) == 0x0002A0, "Member 'ABP_Athena_SplineMesh_C::Meshes' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, Zero_1_Progress) == 0x0002B0, "Member 'ABP_Athena_SplineMesh_C::Zero_1_Progress' has a wrong offset!");
static_assert(offsetof(ABP_Athena_SplineMesh_C, OverrideMaterial) == 0x0002B8, "Member 'ABP_Athena_SplineMesh_C::OverrideMaterial' has a wrong offset!");

}

