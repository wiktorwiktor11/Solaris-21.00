#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CobWebs01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CobWebs01.CobWebs01_C.BndEvt__Box Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature) == 0x000100, "Wrong size on CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'CobWebs01_C_BndEvt__Box_Collision_K2Node_ComponentBoundEvent_21_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function CobWebs01.CobWebs01_C.ExecuteUbergraph_CobWebs01
// 0x0260 (0x0260 - 0x0000)
struct CobWebs01_C_ExecuteUbergraph_CobWebs01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0170(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CobWebs01_C_ExecuteUbergraph_CobWebs01) == 0x000008, "Wrong alignment on CobWebs01_C_ExecuteUbergraph_CobWebs01");
static_assert(sizeof(CobWebs01_C_ExecuteUbergraph_CobWebs01) == 0x000260, "Wrong size on CobWebs01_C_ExecuteUbergraph_CobWebs01");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, EntryPoint) == 0x000000, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::EntryPoint' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_Event_MyComp) == 0x000108, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_Event_Other) == 0x000110, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_Event_OtherComp) == 0x000118, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_Event_bSelfMoved) == 0x000120, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_Event_HitLocation) == 0x000128, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_Event_HitNormal) == 0x000140, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_Event_NormalImpulse) == 0x000158, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_Event_Hit) == 0x000170, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_DynamicCast_AsFort_Pawn) == 0x000250, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ExecuteUbergraph_CobWebs01, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'CobWebs01_C_ExecuteUbergraph_CobWebs01::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CobWebs01.CobWebs01_C.ReceiveHit
// 0x0148 (0x0148 - 0x0000)
struct CobWebs01_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CobWebs01_C_ReceiveHit) == 0x000008, "Wrong alignment on CobWebs01_C_ReceiveHit");
static_assert(sizeof(CobWebs01_C_ReceiveHit) == 0x000148, "Wrong size on CobWebs01_C_ReceiveHit");
static_assert(offsetof(CobWebs01_C_ReceiveHit, MyComp) == 0x000000, "Member 'CobWebs01_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ReceiveHit, Other) == 0x000008, "Member 'CobWebs01_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ReceiveHit, OtherComp) == 0x000010, "Member 'CobWebs01_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'CobWebs01_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ReceiveHit, HitLocation) == 0x000020, "Member 'CobWebs01_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ReceiveHit, HitNormal) == 0x000038, "Member 'CobWebs01_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'CobWebs01_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(CobWebs01_C_ReceiveHit, Hit) == 0x000068, "Member 'CobWebs01_C_ReceiveHit::Hit' has a wrong offset!");

// Function CobWebs01.CobWebs01_C.UserConstructionScript
// 0x00E0 (0x00E0 - 0x0000)
struct CobWebs01_C_UserConstructionScript final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0000(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CobWebs01_C_UserConstructionScript) == 0x000008, "Wrong alignment on CobWebs01_C_UserConstructionScript");
static_assert(sizeof(CobWebs01_C_UserConstructionScript) == 0x0000E0, "Wrong size on CobWebs01_C_UserConstructionScript");
static_assert(offsetof(CobWebs01_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000000, "Member 'CobWebs01_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

}

