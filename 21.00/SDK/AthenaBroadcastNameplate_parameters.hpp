#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaBroadcastNameplate

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.ExecuteUbergraph_AthenaBroadcastNameplate
// 0x0128 (0x0128 - 0x0000)
struct AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaRemotePlayerViewData*            K2Node_Event_InPlayerData_4;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaSpectatorNameplateDistanceState        K2Node_Event_NewDistanceState;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaRemotePlayerViewData*            K2Node_Event_InPlayerData_3;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_InTeamColor;                          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaRemotePlayerViewData*            K2Node_Event_InPlayerData_2;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_InPlayerName;                         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	class UAthenaRemotePlayerViewData*            K2Node_Event_InPlayerData_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InSquadId;                            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ByteToText_ReturnValue;              // 0x0070(0x0018)()
	EAthenaSpectatorNameplateDetailState          K2Node_Event_NewDetailState;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSquadIdVisible;                      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTeamColorVisible;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bArrowTeamColorVisible;               // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_NewVehicle;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OldVehicle;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaRemotePlayerViewData*            K2Node_Event_InPlayerData;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InGamerank;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisplay;                             // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B8(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate) == 0x000008, "Wrong alignment on AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate");
static_assert(sizeof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate) == 0x000128, "Wrong size on AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, EntryPoint) == 0x000000, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, Temp_byte_Variable) == 0x000004, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, Temp_byte_Variable_1) == 0x000005, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_IsDesignTime) == 0x000006, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_InPlayerData_4) == 0x000008, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_InPlayerData_4' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, Temp_bool_Variable) == 0x000010, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_NewDistanceState) == 0x000011, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_NewDistanceState' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, Temp_byte_Variable_2) == 0x000013, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, CallFunc_SelectFloat_ReturnValue) == 0x000014, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_InPlayerData_3) == 0x000018, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_InPlayerData_3' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_InTeamColor) == 0x000020, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_InTeamColor' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_InPlayerData_2) == 0x000030, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_InPlayerData_2' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_InPlayerName) == 0x000038, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_InPlayerName' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_InPlayerData_1) == 0x000060, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_InPlayerData_1' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_InSquadId) == 0x000068, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_InSquadId' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, CallFunc_Conv_ByteToText_ReturnValue) == 0x000070, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::CallFunc_Conv_ByteToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_NewDetailState) == 0x000088, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_NewDetailState' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_SwitchEnum_CmpSuccess) == 0x000089, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_bSquadIdVisible) == 0x00008A, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_bSquadIdVisible' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, Temp_byte_Variable_3) == 0x00008B, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_bTeamColorVisible) == 0x00008C, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_bTeamColorVisible' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Select_Default) == 0x00008D, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_bArrowTeamColorVisible) == 0x00008E, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_bArrowTeamColorVisible' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, Temp_bool_Variable_1) == 0x00008F, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Select_Default_1) == 0x000090, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_NewVehicle) == 0x000098, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_NewVehicle' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_OldVehicle) == 0x0000A0, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_OldVehicle' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_InPlayerData) == 0x0000A8, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_InPlayerData' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_InGamerank) == 0x0000B0, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_InGamerank' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, CallFunc_IsValid_ReturnValue) == 0x0000B4, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Event_bDisplay) == 0x0000B5, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Event_bDisplay' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000B6, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B8, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000D0, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, CallFunc_BooleanAND_ReturnValue) == 0x0000D9, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_MakeStruct_Margin) == 0x0000DC, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, Temp_byte_Variable_4) == 0x0000EC, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_MakeStruct_LinearColor) == 0x0000F0, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_MakeStruct_Margin_1) == 0x000100, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, Temp_byte_Variable_5) == 0x000110, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_MakeStruct_LinearColor_1) == 0x000114, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, Temp_bool_Variable_2) == 0x000124, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate, K2Node_Select_Default_2) == 0x000125, "Member 'AthenaBroadcastNameplate_C_ExecuteUbergraph_AthenaBroadcastNameplate::K2Node_Select_Default_2' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.HandleDisplaySessionRankChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaBroadcastNameplate_C_HandleDisplaySessionRankChanged final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_HandleDisplaySessionRankChanged) == 0x000001, "Wrong alignment on AthenaBroadcastNameplate_C_HandleDisplaySessionRankChanged");
static_assert(sizeof(AthenaBroadcastNameplate_C_HandleDisplaySessionRankChanged) == 0x000001, "Wrong size on AthenaBroadcastNameplate_C_HandleDisplaySessionRankChanged");
static_assert(offsetof(AthenaBroadcastNameplate_C_HandleDisplaySessionRankChanged, bDisplay) == 0x000000, "Member 'AthenaBroadcastNameplate_C_HandleDisplaySessionRankChanged::bDisplay' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.OnDetailStateChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaBroadcastNameplate_C_OnDetailStateChanged final
{
public:
	EAthenaSpectatorNameplateDetailState          NewDetailState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_OnDetailStateChanged) == 0x000001, "Wrong alignment on AthenaBroadcastNameplate_C_OnDetailStateChanged");
static_assert(sizeof(AthenaBroadcastNameplate_C_OnDetailStateChanged) == 0x000001, "Wrong size on AthenaBroadcastNameplate_C_OnDetailStateChanged");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnDetailStateChanged, NewDetailState) == 0x000000, "Member 'AthenaBroadcastNameplate_C_OnDetailStateChanged::NewDetailState' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.OnDistanceStateChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaBroadcastNameplate_C_OnDistanceStateChanged final
{
public:
	EAthenaSpectatorNameplateDistanceState        NewDistanceState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_OnDistanceStateChanged) == 0x000001, "Wrong alignment on AthenaBroadcastNameplate_C_OnDistanceStateChanged");
static_assert(sizeof(AthenaBroadcastNameplate_C_OnDistanceStateChanged) == 0x000001, "Wrong size on AthenaBroadcastNameplate_C_OnDistanceStateChanged");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnDistanceStateChanged, NewDistanceState) == 0x000000, "Member 'AthenaBroadcastNameplate_C_OnDistanceStateChanged::NewDistanceState' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.OnPlayerDataSet
// 0x0008 (0x0008 - 0x0000)
struct AthenaBroadcastNameplate_C_OnPlayerDataSet final
{
public:
	class UAthenaRemotePlayerViewData*            InPlayerData;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_OnPlayerDataSet) == 0x000008, "Wrong alignment on AthenaBroadcastNameplate_C_OnPlayerDataSet");
static_assert(sizeof(AthenaBroadcastNameplate_C_OnPlayerDataSet) == 0x000008, "Wrong size on AthenaBroadcastNameplate_C_OnPlayerDataSet");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnPlayerDataSet, InPlayerData) == 0x000000, "Member 'AthenaBroadcastNameplate_C_OnPlayerDataSet::InPlayerData' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.OnPlayerNameChanged
// 0x0018 (0x0018 - 0x0000)
struct AthenaBroadcastNameplate_C_OnPlayerNameChanged final
{
public:
	class UAthenaRemotePlayerViewData*            InPlayerData;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 InPlayerName;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_OnPlayerNameChanged) == 0x000008, "Wrong alignment on AthenaBroadcastNameplate_C_OnPlayerNameChanged");
static_assert(sizeof(AthenaBroadcastNameplate_C_OnPlayerNameChanged) == 0x000018, "Wrong size on AthenaBroadcastNameplate_C_OnPlayerNameChanged");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnPlayerNameChanged, InPlayerData) == 0x000000, "Member 'AthenaBroadcastNameplate_C_OnPlayerNameChanged::InPlayerData' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnPlayerNameChanged, InPlayerName) == 0x000008, "Member 'AthenaBroadcastNameplate_C_OnPlayerNameChanged::InPlayerName' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.OnSessionRankChanged
// 0x0010 (0x0010 - 0x0000)
struct AthenaBroadcastNameplate_C_OnSessionRankChanged final
{
public:
	class UAthenaRemotePlayerViewData*            InPlayerData;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InGamerank_0;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_OnSessionRankChanged) == 0x000008, "Wrong alignment on AthenaBroadcastNameplate_C_OnSessionRankChanged");
static_assert(sizeof(AthenaBroadcastNameplate_C_OnSessionRankChanged) == 0x000010, "Wrong size on AthenaBroadcastNameplate_C_OnSessionRankChanged");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnSessionRankChanged, InPlayerData) == 0x000000, "Member 'AthenaBroadcastNameplate_C_OnSessionRankChanged::InPlayerData' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnSessionRankChanged, InGamerank_0) == 0x000008, "Member 'AthenaBroadcastNameplate_C_OnSessionRankChanged::InGamerank_0' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.OnSquadIdChanged
// 0x0010 (0x0010 - 0x0000)
struct AthenaBroadcastNameplate_C_OnSquadIdChanged final
{
public:
	class UAthenaRemotePlayerViewData*            InPlayerData;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         InSquadId;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_OnSquadIdChanged) == 0x000008, "Wrong alignment on AthenaBroadcastNameplate_C_OnSquadIdChanged");
static_assert(sizeof(AthenaBroadcastNameplate_C_OnSquadIdChanged) == 0x000010, "Wrong size on AthenaBroadcastNameplate_C_OnSquadIdChanged");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnSquadIdChanged, InPlayerData) == 0x000000, "Member 'AthenaBroadcastNameplate_C_OnSquadIdChanged::InPlayerData' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnSquadIdChanged, InSquadId) == 0x000008, "Member 'AthenaBroadcastNameplate_C_OnSquadIdChanged::InSquadId' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.OnTeamColorChanged
// 0x0018 (0x0018 - 0x0000)
struct AthenaBroadcastNameplate_C_OnTeamColorChanged final
{
public:
	class UAthenaRemotePlayerViewData*            InPlayerData;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InTeamColor;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_OnTeamColorChanged) == 0x000008, "Wrong alignment on AthenaBroadcastNameplate_C_OnTeamColorChanged");
static_assert(sizeof(AthenaBroadcastNameplate_C_OnTeamColorChanged) == 0x000018, "Wrong size on AthenaBroadcastNameplate_C_OnTeamColorChanged");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnTeamColorChanged, InPlayerData) == 0x000000, "Member 'AthenaBroadcastNameplate_C_OnTeamColorChanged::InPlayerData' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnTeamColorChanged, InTeamColor) == 0x000008, "Member 'AthenaBroadcastNameplate_C_OnTeamColorChanged::InTeamColor' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.OnVehicleStateChanged
// 0x0010 (0x0010 - 0x0000)
struct AthenaBroadcastNameplate_C_OnVehicleStateChanged final
{
public:
	class AActor*                                 NewVehicle;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OldVehicle;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_OnVehicleStateChanged) == 0x000008, "Wrong alignment on AthenaBroadcastNameplate_C_OnVehicleStateChanged");
static_assert(sizeof(AthenaBroadcastNameplate_C_OnVehicleStateChanged) == 0x000010, "Wrong size on AthenaBroadcastNameplate_C_OnVehicleStateChanged");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnVehicleStateChanged, NewVehicle) == 0x000000, "Member 'AthenaBroadcastNameplate_C_OnVehicleStateChanged::NewVehicle' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_OnVehicleStateChanged, OldVehicle) == 0x000008, "Member 'AthenaBroadcastNameplate_C_OnVehicleStateChanged::OldVehicle' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaBroadcastNameplate_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaBroadcastNameplate_C_PreConstruct");
static_assert(sizeof(AthenaBroadcastNameplate_C_PreConstruct) == 0x000001, "Wrong size on AthenaBroadcastNameplate_C_PreConstruct");
static_assert(offsetof(AthenaBroadcastNameplate_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaBroadcastNameplate_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.SetArrowTeamColorVisible
// 0x0001 (0x0001 - 0x0000)
struct AthenaBroadcastNameplate_C_SetArrowTeamColorVisible final
{
public:
	bool                                          bArrowTeamColorVisible;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_SetArrowTeamColorVisible) == 0x000001, "Wrong alignment on AthenaBroadcastNameplate_C_SetArrowTeamColorVisible");
static_assert(sizeof(AthenaBroadcastNameplate_C_SetArrowTeamColorVisible) == 0x000001, "Wrong size on AthenaBroadcastNameplate_C_SetArrowTeamColorVisible");
static_assert(offsetof(AthenaBroadcastNameplate_C_SetArrowTeamColorVisible, bArrowTeamColorVisible) == 0x000000, "Member 'AthenaBroadcastNameplate_C_SetArrowTeamColorVisible::bArrowTeamColorVisible' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.SetSquadIdVisibility
// 0x0001 (0x0001 - 0x0000)
struct AthenaBroadcastNameplate_C_SetSquadIdVisibility final
{
public:
	bool                                          bSquadIdVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_SetSquadIdVisibility) == 0x000001, "Wrong alignment on AthenaBroadcastNameplate_C_SetSquadIdVisibility");
static_assert(sizeof(AthenaBroadcastNameplate_C_SetSquadIdVisibility) == 0x000001, "Wrong size on AthenaBroadcastNameplate_C_SetSquadIdVisibility");
static_assert(offsetof(AthenaBroadcastNameplate_C_SetSquadIdVisibility, bSquadIdVisible) == 0x000000, "Member 'AthenaBroadcastNameplate_C_SetSquadIdVisibility::bSquadIdVisible' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.SetTeamColorVisible
// 0x0001 (0x0001 - 0x0000)
struct AthenaBroadcastNameplate_C_SetTeamColorVisible final
{
public:
	bool                                          bTeamColorVisible;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_SetTeamColorVisible) == 0x000001, "Wrong alignment on AthenaBroadcastNameplate_C_SetTeamColorVisible");
static_assert(sizeof(AthenaBroadcastNameplate_C_SetTeamColorVisible) == 0x000001, "Wrong size on AthenaBroadcastNameplate_C_SetTeamColorVisible");
static_assert(offsetof(AthenaBroadcastNameplate_C_SetTeamColorVisible, bTeamColorVisible) == 0x000000, "Member 'AthenaBroadcastNameplate_C_SetTeamColorVisible::bTeamColorVisible' has a wrong offset!");

// Function AthenaBroadcastNameplate.AthenaBroadcastNameplate_C.Toggle Session Rank Visible
// 0x0005 (0x0005 - 0x0000)
struct AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible) == 0x000001, "Wrong alignment on AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible");
static_assert(sizeof(AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible) == 0x000005, "Wrong size on AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible");
static_assert(offsetof(AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible, Visible) == 0x000000, "Member 'AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible::Visible' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible, Temp_bool_Variable) == 0x000001, "Member 'AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible, Temp_byte_Variable) == 0x000002, "Member 'AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible, Temp_byte_Variable_1) == 0x000003, "Member 'AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible, K2Node_Select_Default) == 0x000004, "Member 'AthenaBroadcastNameplate_C_Toggle_Session_Rank_Visible::K2Node_Select_Default' has a wrong offset!");

}

