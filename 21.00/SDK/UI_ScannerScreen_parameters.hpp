#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ScannerScreen

#include "Basic.hpp"


namespace SDK::Params
{

// Function UI_ScannerScreen.UI_ScannerScreen_C.ExecuteUbergraph_UI_ScannerScreen
// 0x0110 (0x0110 - 0x0000)
struct UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0018)()
	class FText                                   K2Node_CustomEvent_ScreenText_2;                   // 0x0060(0x0018)()
	class FText                                   K2Node_CustomEvent_ScreenText_1;                   // 0x0078(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0098(0x0018)()
	class FText                                   K2Node_CustomEvent_ScreenText;                     // 0x00B0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue_2;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00D0(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x00F8(0x0018)()
};
static_assert(alignof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen) == 0x000008, "Wrong alignment on UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen");
static_assert(sizeof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen) == 0x000110, "Wrong size on UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, EntryPoint) == 0x000000, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, Temp_text_Variable) == 0x000008, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, Temp_bool_Variable) == 0x000020, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, Temp_text_Variable_1) == 0x000028, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, Temp_bool_Variable_1) == 0x000040, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, Temp_text_Variable_2) == 0x000048, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, K2Node_CustomEvent_ScreenText_2) == 0x000060, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::K2Node_CustomEvent_ScreenText_2' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, K2Node_CustomEvent_ScreenText_1) == 0x000078, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::K2Node_CustomEvent_ScreenText_1' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, CallFunc_TextIsEmpty_ReturnValue) == 0x000090, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000091, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, K2Node_Select_Default) == 0x000098, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, K2Node_CustomEvent_ScreenText) == 0x0000B0, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::K2Node_CustomEvent_ScreenText' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, CallFunc_TextIsEmpty_ReturnValue_2) == 0x0000C8, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::CallFunc_TextIsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, K2Node_Select_Default_1) == 0x0000D0, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, CallFunc_PlayAnimation_ReturnValue) == 0x0000E8, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, Temp_bool_Variable_2) == 0x0000F0, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen, K2Node_Select_Default_2) == 0x0000F8, "Member 'UI_ScannerScreen_C_ExecuteUbergraph_UI_ScannerScreen::K2Node_Select_Default_2' has a wrong offset!");

// Function UI_ScannerScreen.UI_ScannerScreen_C.EventTargetLost
// 0x0018 (0x0018 - 0x0000)
struct UI_ScannerScreen_C_EventTargetLost final
{
public:
	class FText                                   ScreenText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_ScannerScreen_C_EventTargetLost) == 0x000008, "Wrong alignment on UI_ScannerScreen_C_EventTargetLost");
static_assert(sizeof(UI_ScannerScreen_C_EventTargetLost) == 0x000018, "Wrong size on UI_ScannerScreen_C_EventTargetLost");
static_assert(offsetof(UI_ScannerScreen_C_EventTargetLost, ScreenText) == 0x000000, "Member 'UI_ScannerScreen_C_EventTargetLost::ScreenText' has a wrong offset!");

// Function UI_ScannerScreen.UI_ScannerScreen_C.EventSuccess
// 0x0018 (0x0018 - 0x0000)
struct UI_ScannerScreen_C_EventSuccess final
{
public:
	class FText                                   ScreenText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_ScannerScreen_C_EventSuccess) == 0x000008, "Wrong alignment on UI_ScannerScreen_C_EventSuccess");
static_assert(sizeof(UI_ScannerScreen_C_EventSuccess) == 0x000018, "Wrong size on UI_ScannerScreen_C_EventSuccess");
static_assert(offsetof(UI_ScannerScreen_C_EventSuccess, ScreenText) == 0x000000, "Member 'UI_ScannerScreen_C_EventSuccess::ScreenText' has a wrong offset!");

// Function UI_ScannerScreen.UI_ScannerScreen_C.EventFail
// 0x0018 (0x0018 - 0x0000)
struct UI_ScannerScreen_C_EventFail final
{
public:
	class FText                                   ScreenText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_ScannerScreen_C_EventFail) == 0x000008, "Wrong alignment on UI_ScannerScreen_C_EventFail");
static_assert(sizeof(UI_ScannerScreen_C_EventFail) == 0x000018, "Wrong size on UI_ScannerScreen_C_EventFail");
static_assert(offsetof(UI_ScannerScreen_C_EventFail, ScreenText) == 0x000000, "Member 'UI_ScannerScreen_C_EventFail::ScreenText' has a wrong offset!");

}

