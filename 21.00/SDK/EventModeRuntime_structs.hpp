#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventModeRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// Enum EventModeRuntime.EFortEventModeEmoteToPlay
// NumValues: 0x0006
enum class EFortEventModeEmoteToPlay : uint8
{
	Emote1                                   = 0,
	Emote2                                   = 1,
	Emote3                                   = 2,
	RandomEmote                              = 3,
	QuickEmotes                              = 4,
	EFortEventModeEmoteToPlay_MAX            = 5,
};

// ScriptStruct EventModeRuntime.EventModeFocusActor
// 0x0050 (0x0050 - 0x0000)
struct FEventModeFocusActor final
{
public:
	TSoftObjectPtr<class AActor>                  Target;                                            // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Distance;                                          // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x0030(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FOV;                                               // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEventModeFocusActor) == 0x000008, "Wrong alignment on FEventModeFocusActor");
static_assert(sizeof(FEventModeFocusActor) == 0x000050, "Wrong size on FEventModeFocusActor");
static_assert(offsetof(FEventModeFocusActor, Target) == 0x000000, "Member 'FEventModeFocusActor::Target' has a wrong offset!");
static_assert(offsetof(FEventModeFocusActor, Distance) == 0x000028, "Member 'FEventModeFocusActor::Distance' has a wrong offset!");
static_assert(offsetof(FEventModeFocusActor, Offset) == 0x000030, "Member 'FEventModeFocusActor::Offset' has a wrong offset!");
static_assert(offsetof(FEventModeFocusActor, FOV) == 0x000048, "Member 'FEventModeFocusActor::FOV' has a wrong offset!");

// ScriptStruct EventModeRuntime.EventModeWidgetCachedData
// 0x000C (0x000C - 0x0000)
struct FEventModeWidgetCachedData final
{
public:
	EUIExtensionSlot                              Slot;                                              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UUserWidget>             Widget;                                            // 0x0004(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEventModeWidgetCachedData) == 0x000004, "Wrong alignment on FEventModeWidgetCachedData");
static_assert(sizeof(FEventModeWidgetCachedData) == 0x00000C, "Wrong size on FEventModeWidgetCachedData");
static_assert(offsetof(FEventModeWidgetCachedData, Slot) == 0x000000, "Member 'FEventModeWidgetCachedData::Slot' has a wrong offset!");
static_assert(offsetof(FEventModeWidgetCachedData, Widget) == 0x000004, "Member 'FEventModeWidgetCachedData::Widget' has a wrong offset!");

}

