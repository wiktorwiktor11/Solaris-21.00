#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingsListEntry_KeyboardInput

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function SettingsListEntry_KeyboardInput.SettingsListEntry_KeyboardInput_C.ExecuteUbergraph_SettingsListEntry_KeyboardInput
// 0x01C8 (0x01C8 - 0x0000)
struct SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_PrimaryKeyText;                       // 0x0008(0x0018)(ConstParm)
	class FText                                   K2Node_Event_SecondaryKeyText;                     // 0x0020(0x0018)(ConstParm)
	class UScrollingTextButton_C*                 K2Node_DynamicCast_AsScrolling_Text_Button;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollingTextButton_C*                 K2Node_DynamicCast_AsScrolling_Text_Button_1;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0058(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0098(0x0090)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0138(0x0090)(ConstParm)
};
static_assert(alignof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput) == 0x000008, "Wrong alignment on SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput");
static_assert(sizeof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput) == 0x0001C8, "Wrong size on SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, EntryPoint) == 0x000000, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::EntryPoint' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, CallFunc_IsUsingTouch_ReturnValue) == 0x000004, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, K2Node_Event_PrimaryKeyText) == 0x000008, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::K2Node_Event_PrimaryKeyText' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, K2Node_Event_SecondaryKeyText) == 0x000020, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::K2Node_Event_SecondaryKeyText' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, K2Node_DynamicCast_AsScrolling_Text_Button) == 0x000038, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::K2Node_DynamicCast_AsScrolling_Text_Button' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, K2Node_DynamicCast_AsScrolling_Text_Button_1) == 0x000048, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::K2Node_DynamicCast_AsScrolling_Text_Button_1' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, K2Node_Event_MyGeometry) == 0x000058, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, K2Node_Event_MouseEvent_1) == 0x000098, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000128, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, CallFunc_PlayAnimationForward_ReturnValue) == 0x000130, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput, K2Node_Event_MouseEvent) == 0x000138, "Member 'SettingsListEntry_KeyboardInput_C_ExecuteUbergraph_SettingsListEntry_KeyboardInput::K2Node_Event_MouseEvent' has a wrong offset!");

// Function SettingsListEntry_KeyboardInput.SettingsListEntry_KeyboardInput_C.OnMouseEnter
// 0x00D0 (0x00D0 - 0x0000)
struct SettingsListEntry_KeyboardInput_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SettingsListEntry_KeyboardInput_C_OnMouseEnter) == 0x000008, "Wrong alignment on SettingsListEntry_KeyboardInput_C_OnMouseEnter");
static_assert(sizeof(SettingsListEntry_KeyboardInput_C_OnMouseEnter) == 0x0000D0, "Wrong size on SettingsListEntry_KeyboardInput_C_OnMouseEnter");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'SettingsListEntry_KeyboardInput_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'SettingsListEntry_KeyboardInput_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function SettingsListEntry_KeyboardInput.SettingsListEntry_KeyboardInput_C.OnMouseLeave
// 0x0090 (0x0090 - 0x0000)
struct SettingsListEntry_KeyboardInput_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SettingsListEntry_KeyboardInput_C_OnMouseLeave) == 0x000008, "Wrong alignment on SettingsListEntry_KeyboardInput_C_OnMouseLeave");
static_assert(sizeof(SettingsListEntry_KeyboardInput_C_OnMouseLeave) == 0x000090, "Wrong size on SettingsListEntry_KeyboardInput_C_OnMouseLeave");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'SettingsListEntry_KeyboardInput_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function SettingsListEntry_KeyboardInput.SettingsListEntry_KeyboardInput_C.OnUpdateKeyText
// 0x0030 (0x0030 - 0x0000)
struct SettingsListEntry_KeyboardInput_C_OnUpdateKeyText final
{
public:
	class FText                                   PrimaryKeyText;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   SecondaryKeyText;                                  // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SettingsListEntry_KeyboardInput_C_OnUpdateKeyText) == 0x000008, "Wrong alignment on SettingsListEntry_KeyboardInput_C_OnUpdateKeyText");
static_assert(sizeof(SettingsListEntry_KeyboardInput_C_OnUpdateKeyText) == 0x000030, "Wrong size on SettingsListEntry_KeyboardInput_C_OnUpdateKeyText");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_OnUpdateKeyText, PrimaryKeyText) == 0x000000, "Member 'SettingsListEntry_KeyboardInput_C_OnUpdateKeyText::PrimaryKeyText' has a wrong offset!");
static_assert(offsetof(SettingsListEntry_KeyboardInput_C_OnUpdateKeyText, SecondaryKeyText) == 0x000018, "Member 'SettingsListEntry_KeyboardInput_C_OnUpdateKeyText::SecondaryKeyText' has a wrong offset!");

}

