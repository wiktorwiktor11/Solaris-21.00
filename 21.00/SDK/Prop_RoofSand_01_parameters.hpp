#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_RoofSand_01

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Prop_RoofSand_01.Prop_RoofSand_01_C.ExecuteUbergraph_Prop_RoofSand_01
// 0x00A8 (0x00A8 - 0x0000)
struct Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01) == 0x000008, "Wrong alignment on Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01");
static_assert(sizeof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01) == 0x0000A8, "Wrong size on Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, EntryPoint) == 0x000000, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, CallFunc_Array_Get_Item) == 0x000010, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, K2Node_CustomEvent_DamagedActor) == 0x000038, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, K2Node_CustomEvent_Damage) == 0x000040, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, K2Node_CustomEvent_InstigatedBy) == 0x000048, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, K2Node_CustomEvent_DamageCauser) == 0x000050, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, K2Node_CustomEvent_HitLocation) == 0x000058, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, K2Node_CustomEvent_FHitComponent) == 0x000070, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, K2Node_CustomEvent_BoneName) == 0x000078, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, K2Node_CustomEvent_Momentum) == 0x000080, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::K2Node_CustomEvent_Momentum' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'Prop_RoofSand_01_C_ExecuteUbergraph_Prop_RoofSand_01::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Prop_RoofSand_01.Prop_RoofSand_01_C.IReallyDied
// 0x0060 (0x0060 - 0x0000)
struct Prop_RoofSand_01_C_IReallyDied final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Momentum;                                          // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Prop_RoofSand_01_C_IReallyDied) == 0x000008, "Wrong alignment on Prop_RoofSand_01_C_IReallyDied");
static_assert(sizeof(Prop_RoofSand_01_C_IReallyDied) == 0x000060, "Wrong size on Prop_RoofSand_01_C_IReallyDied");
static_assert(offsetof(Prop_RoofSand_01_C_IReallyDied, DamagedActor) == 0x000000, "Member 'Prop_RoofSand_01_C_IReallyDied::DamagedActor' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_IReallyDied, Damage) == 0x000008, "Member 'Prop_RoofSand_01_C_IReallyDied::Damage' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_IReallyDied, InstigatedBy) == 0x000010, "Member 'Prop_RoofSand_01_C_IReallyDied::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_IReallyDied, DamageCauser) == 0x000018, "Member 'Prop_RoofSand_01_C_IReallyDied::DamageCauser' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_IReallyDied, HitLocation) == 0x000020, "Member 'Prop_RoofSand_01_C_IReallyDied::HitLocation' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_IReallyDied, FHitComponent) == 0x000038, "Member 'Prop_RoofSand_01_C_IReallyDied::FHitComponent' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_IReallyDied, BoneName) == 0x000040, "Member 'Prop_RoofSand_01_C_IReallyDied::BoneName' has a wrong offset!");
static_assert(offsetof(Prop_RoofSand_01_C_IReallyDied, Momentum) == 0x000048, "Member 'Prop_RoofSand_01_C_IReallyDied::Momentum' has a wrong offset!");

}

