#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeltaFileSystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct DeltaFileSystem.DeltaAction
// 0x0020 (0x0020 - 0x0000)
struct FDeltaAction
{
public:
	struct FGuid                                  ActorGUID;                                         // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              CommitTime;                                        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        DataHash;                                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDeltaAction) == 0x000008, "Wrong alignment on FDeltaAction");
static_assert(sizeof(FDeltaAction) == 0x000020, "Wrong size on FDeltaAction");
static_assert(offsetof(FDeltaAction, ActorGUID) == 0x000000, "Member 'FDeltaAction::ActorGUID' has a wrong offset!");
static_assert(offsetof(FDeltaAction, CommitTime) == 0x000010, "Member 'FDeltaAction::CommitTime' has a wrong offset!");
static_assert(offsetof(FDeltaAction, DataHash) == 0x000018, "Member 'FDeltaAction::DataHash' has a wrong offset!");

// ScriptStruct DeltaFileSystem.AddAction
// 0x00A0 (0x00C0 - 0x0020)
struct FAddAction final : public FDeltaAction
{
public:
	TSoftClassPtr<class UClass>                   ActorClass;                                        // 0x0020(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 JsonStringObjectForPropertyData;                   // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0060(0x0060)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAddAction) == 0x000010, "Wrong alignment on FAddAction");
static_assert(sizeof(FAddAction) == 0x0000C0, "Wrong size on FAddAction");
static_assert(offsetof(FAddAction, ActorClass) == 0x000020, "Member 'FAddAction::ActorClass' has a wrong offset!");
static_assert(offsetof(FAddAction, JsonStringObjectForPropertyData) == 0x000048, "Member 'FAddAction::JsonStringObjectForPropertyData' has a wrong offset!");
static_assert(offsetof(FAddAction, Transform) == 0x000060, "Member 'FAddAction::Transform' has a wrong offset!");

// ScriptStruct DeltaFileSystem.UpdateAction
// 0x0010 (0x0030 - 0x0020)
struct FUpdateAction final : public FDeltaAction
{
public:
	class FString                                 JsonStringObjectForPropertyData;                   // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUpdateAction) == 0x000008, "Wrong alignment on FUpdateAction");
static_assert(sizeof(FUpdateAction) == 0x000030, "Wrong size on FUpdateAction");
static_assert(offsetof(FUpdateAction, JsonStringObjectForPropertyData) == 0x000020, "Member 'FUpdateAction::JsonStringObjectForPropertyData' has a wrong offset!");

// ScriptStruct DeltaFileSystem.DeleteAction
// 0x0070 (0x0090 - 0x0020)
struct FDeleteAction final : public FDeltaAction
{
public:
	class FString                                 ActorName;                                         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             Transform;                                         // 0x0030(0x0060)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDeleteAction) == 0x000010, "Wrong alignment on FDeleteAction");
static_assert(sizeof(FDeleteAction) == 0x000090, "Wrong size on FDeleteAction");
static_assert(offsetof(FDeleteAction, ActorName) == 0x000020, "Member 'FDeleteAction::ActorName' has a wrong offset!");
static_assert(offsetof(FDeleteAction, Transform) == 0x000030, "Member 'FDeleteAction::Transform' has a wrong offset!");

// ScriptStruct DeltaFileSystem.DeltaTrackingHandles
// 0x0020 (0x0020 - 0x0000)
struct FDeltaTrackingHandles final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         AllowedClasses;                                    // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDeltaTrackingHandles) == 0x000008, "Wrong alignment on FDeltaTrackingHandles");
static_assert(sizeof(FDeltaTrackingHandles) == 0x000020, "Wrong size on FDeltaTrackingHandles");
static_assert(offsetof(FDeltaTrackingHandles, AllowedClasses) == 0x000010, "Member 'FDeltaTrackingHandles::AllowedClasses' has a wrong offset!");

}

