#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FireModeSelectTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FireModeSelectTile.FireModeSelectTile_C
// 0x0108 (0x0438 - 0x0330)
class UFireModeSelectTile_C final : public UHUDLayoutToolFireModeButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CheckMarkAppear;                                   // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       IntroAndOutro;                                     // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ConfirmSelection;                                  // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GameModeSelection;                                 // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEpicCMSImage*                          ArtImage;                                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ArtScale;                                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          Border_Recommended;                                // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ConfirmSelectionFlash;                             // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ConfirmSelectionShine;                             // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DetailsSB;                                         // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DisabledGray;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Fill;                                              // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                IconSpacer;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_253;                                         // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageGlow;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LoadingImage;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LoadingImageOvr;                                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            LoadSwitcher;                                      // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SelectedIcon;                                      // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SelectionBorder;                                   // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Tile;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       T_Recommended;                                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TextName;                                          // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnhoveredVignette;                                 // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMediaSource*                           Media_Source;                                      // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UFireModeSelectTile_C* Tile)> HandleFocus;                                       // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UFireModeSelectTile_C* Tile)> HandleSelectConfirmed;                             // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsSelected;                                       // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasPreviewTexture;                                // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRecommendedOption;                              // 0x0422(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_423[0x5];                                      // 0x0423(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UFireModeSelectTile_C* Tile)> HandleDeselectTile;                                // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__SelectionButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__SelectionButton_K2Node_ComponentBoundEvent_63_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__SelectionButton_K2Node_ComponentBoundEvent_91_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void Construct();
	void ExecuteUbergraph_FireModeSelectTile(int32 EntryPoint);
	void HandleSelectionBorderFeedback(bool bIsSelected_0, bool bIsHovered);
	void Mark_Selected();
	void OnDeselected();
	void OnSelected();
	void PlayIntroOrOutro(bool PlayIntro);
	void PlayMovie();
	void PreConstruct(bool IsDesignTime);
	void Save_and_Exit();
	void SelectFireMode();
	void Setup();
	void StopMovie();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FireModeSelectTile_C">();
	}
	static class UFireModeSelectTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFireModeSelectTile_C>();
	}
};
static_assert(alignof(UFireModeSelectTile_C) == 0x000008, "Wrong alignment on UFireModeSelectTile_C");
static_assert(sizeof(UFireModeSelectTile_C) == 0x000438, "Wrong size on UFireModeSelectTile_C");
static_assert(offsetof(UFireModeSelectTile_C, UberGraphFrame) == 0x000330, "Member 'UFireModeSelectTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, CheckMarkAppear) == 0x000338, "Member 'UFireModeSelectTile_C::CheckMarkAppear' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, IntroAndOutro) == 0x000340, "Member 'UFireModeSelectTile_C::IntroAndOutro' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, ConfirmSelection) == 0x000348, "Member 'UFireModeSelectTile_C::ConfirmSelection' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, GameModeSelection) == 0x000350, "Member 'UFireModeSelectTile_C::GameModeSelection' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, ArtImage) == 0x000358, "Member 'UFireModeSelectTile_C::ArtImage' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, ArtScale) == 0x000360, "Member 'UFireModeSelectTile_C::ArtScale' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, Border_Recommended) == 0x000368, "Member 'UFireModeSelectTile_C::Border_Recommended' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, ConfirmSelectionFlash) == 0x000370, "Member 'UFireModeSelectTile_C::ConfirmSelectionFlash' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, ConfirmSelectionShine) == 0x000378, "Member 'UFireModeSelectTile_C::ConfirmSelectionShine' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, DetailsSB) == 0x000380, "Member 'UFireModeSelectTile_C::DetailsSB' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, DisabledGray) == 0x000388, "Member 'UFireModeSelectTile_C::DisabledGray' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, Fill) == 0x000390, "Member 'UFireModeSelectTile_C::Fill' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, IconSpacer) == 0x000398, "Member 'UFireModeSelectTile_C::IconSpacer' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, Image_253) == 0x0003A0, "Member 'UFireModeSelectTile_C::Image_253' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, ImageGlow) == 0x0003A8, "Member 'UFireModeSelectTile_C::ImageGlow' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, LoadingImage) == 0x0003B0, "Member 'UFireModeSelectTile_C::LoadingImage' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, LoadingImageOvr) == 0x0003B8, "Member 'UFireModeSelectTile_C::LoadingImageOvr' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, LoadSwitcher) == 0x0003C0, "Member 'UFireModeSelectTile_C::LoadSwitcher' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, SelectedIcon) == 0x0003C8, "Member 'UFireModeSelectTile_C::SelectedIcon' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, SelectionBorder) == 0x0003D0, "Member 'UFireModeSelectTile_C::SelectionBorder' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, SizeBox_Tile) == 0x0003D8, "Member 'UFireModeSelectTile_C::SizeBox_Tile' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, T_Recommended) == 0x0003E0, "Member 'UFireModeSelectTile_C::T_Recommended' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, TextName) == 0x0003E8, "Member 'UFireModeSelectTile_C::TextName' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, UnhoveredVignette) == 0x0003F0, "Member 'UFireModeSelectTile_C::UnhoveredVignette' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, Media_Source) == 0x0003F8, "Member 'UFireModeSelectTile_C::Media_Source' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, HandleFocus) == 0x000400, "Member 'UFireModeSelectTile_C::HandleFocus' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, HandleSelectConfirmed) == 0x000410, "Member 'UFireModeSelectTile_C::HandleSelectConfirmed' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, bIsSelected) == 0x000420, "Member 'UFireModeSelectTile_C::bIsSelected' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, bHasPreviewTexture) == 0x000421, "Member 'UFireModeSelectTile_C::bHasPreviewTexture' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, bIsRecommendedOption) == 0x000422, "Member 'UFireModeSelectTile_C::bIsRecommendedOption' has a wrong offset!");
static_assert(offsetof(UFireModeSelectTile_C, HandleDeselectTile) == 0x000428, "Member 'UFireModeSelectTile_C::HandleDeselectTile' has a wrong offset!");

}

