#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_RealitySeed_Thrown_Trajectory_Secondary

#include "Basic.hpp"

#include "GA_RealitySeed_Thrown_Trajectory_Parent_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_RealitySeed_Thrown_Trajectory_Secondary.GA_RealitySeed_Thrown_Trajectory_Secondary_C
// 0x02D0 (0x11A8 - 0x0ED8)
class UGA_RealitySeed_Thrown_Trajectory_Secondary_C final : public UGA_RealitySeed_Thrown_Trajectory_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_RealitySeed_Thrown_Trajectory_Secondary_C; // 0x0ED8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMesh*                            PreviewMesh;                                       // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MinSaplingDeploymentDistanceFromObstacles;         // 0x0EE8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 TrajectoryIndicatorRedClass;                       // 0x0F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileTrajectory_C*             Projectile_Trajectory_Red;                         // 0x0F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ImprovementValid_;                                 // 0x0F20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F21[0x7];                                      // 0x0F21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SpawnedDecal;                                      // 0x0F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Friendly_Campsite_Radius;                          // 0x0F30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortItemEntry                         CachedItemEntry;                                   // 0x0F58(0x01A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                PreviewMeshScale;                                  // 0x10F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            RiftMesh;                                          // 0x1110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MinRiftDeploymentFromObstacles;                    // 0x1118(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  Failed_Reason;                                     // 0x1140(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                RiftMeshScale;                                     // 0x1160(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThrowInstantly;                                    // 0x1178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsThrowing;                                        // 0x1179(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_117A[0x6];                                     // 0x117A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ThrowConsumablesEnabled;                           // 0x1180(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void CleanupTrajectory();
	void Destroy_Range_Decal();
	void EventReceived_8C41400E42B052463ECE09AC88FB1EA7(const struct FGameplayEventData& Payload);
	void EventReceived_D9150870476BFD6DD77CB0843DFFCF54(const struct FGameplayEventData& Payload);
	void ExecuteUbergraph_GA_RealitySeed_Thrown_Trajectory_Secondary(int32 EntryPoint);
	void Is_Trajectory_Hidden(bool* IsHidden);
	void K2_ActivateAbility();
	void OnAbilityInputReleased();
	void OnBlendOut_92E71B95416803FDE4017ABBCDA11DD4();
	void OnCancelled_92E71B95416803FDE4017ABBCDA11DD4();
	void OnCompleted_92E71B95416803FDE4017ABBCDA11DD4();
	void OnInterrupted_92E71B95416803FDE4017ABBCDA11DD4();
	void OnSync_A876CBB64F2892206728D88B9BFAD66E();
	void PrethrowSetup();
	void SetupCustomPreviewMesh();
	void SetupDummyProjectile();
	void SetupDummyProjectileRed();
	void SpawnSaplingRadiusFeedback(class ABuildingRealitySapling* Sapling, bool Valid);
	void UpdateTrajectorySpline();

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_RealitySeed_Thrown_Trajectory_Secondary_C">();
	}
	static class UGA_RealitySeed_Thrown_Trajectory_Secondary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_RealitySeed_Thrown_Trajectory_Secondary_C>();
	}
};
static_assert(alignof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C) == 0x000008, "Wrong alignment on UGA_RealitySeed_Thrown_Trajectory_Secondary_C");
static_assert(sizeof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C) == 0x0011A8, "Wrong size on UGA_RealitySeed_Thrown_Trajectory_Secondary_C");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, UberGraphFrame_GA_RealitySeed_Thrown_Trajectory_Secondary_C) == 0x000ED8, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::UberGraphFrame_GA_RealitySeed_Thrown_Trajectory_Secondary_C' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, PreviewMesh) == 0x000EE0, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::PreviewMesh' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, MinSaplingDeploymentDistanceFromObstacles) == 0x000EE8, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::MinSaplingDeploymentDistanceFromObstacles' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, TrajectoryIndicatorRedClass) == 0x000F10, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::TrajectoryIndicatorRedClass' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, Projectile_Trajectory_Red) == 0x000F18, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::Projectile_Trajectory_Red' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, ImprovementValid_) == 0x000F20, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::ImprovementValid_' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, SpawnedDecal) == 0x000F28, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::SpawnedDecal' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, Friendly_Campsite_Radius) == 0x000F30, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::Friendly_Campsite_Radius' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, CachedItemEntry) == 0x000F58, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::CachedItemEntry' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, PreviewMeshScale) == 0x0010F8, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::PreviewMeshScale' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, RiftMesh) == 0x001110, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::RiftMesh' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, MinRiftDeploymentFromObstacles) == 0x001118, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::MinRiftDeploymentFromObstacles' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, Failed_Reason) == 0x001140, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::Failed_Reason' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, RiftMeshScale) == 0x001160, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::RiftMeshScale' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, ThrowInstantly) == 0x001178, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::ThrowInstantly' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, IsThrowing) == 0x001179, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::IsThrowing' has a wrong offset!");
static_assert(offsetof(UGA_RealitySeed_Thrown_Trajectory_Secondary_C, ThrowConsumablesEnabled) == 0x001180, "Member 'UGA_RealitySeed_Thrown_Trajectory_Secondary_C::ThrowConsumablesEnabled' has a wrong offset!");

}

