#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: _WaterMeshBlueprintMaster

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature) == 0x000100, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature) == 0x000100, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature) == 0x000100, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature) == 0x000100, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on _WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.Construction
// 0x0014 (0x0014 - 0x0000)
struct _WaterMeshBlueprintMaster_C_Construction final
{
public:
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_Construction) == 0x000004, "Wrong alignment on _WaterMeshBlueprintMaster_C_Construction");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_Construction) == 0x000014, "Wrong size on _WaterMeshBlueprintMaster_C_Construction");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Construction, CallFunc_GetNumMaterials_ReturnValue) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_Construction::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Construction, Temp_int_Variable) == 0x000004, "Member '_WaterMeshBlueprintMaster_C_Construction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Construction, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_Construction::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Construction, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member '_WaterMeshBlueprintMaster_C_Construction::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Construction, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_Construction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.ExecuteUbergraph__WaterMeshBlueprintMaster
// 0x0570 (0x0570 - 0x0000)
struct _WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Find_Placement_on_water_mesh_surfaces_Traced_Transform; // 0x0010(0x0060)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Find_Placement_on_water_mesh_surfaces_VelocityVector; // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Find_Placement_on_water_mesh_surfaces_Trace_Hit; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWindManager*                       CallFunc_GetWindManager_ReturnValue;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWindManager_C*                         K2Node_DynamicCast_AsWind_Manager;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_7;  // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_7;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_7;            // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_7;       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_6;  // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_6;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_6;            // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_6;       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_5;  // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_5;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_5;            // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_5;       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_3;           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_3;          // 0x0148(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x0268(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0348(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0368(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0458(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_465[0x3];                                      // 0x0465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0468(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0548(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0558(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster) == 0x000010, "Wrong alignment on _WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster) == 0x000570, "Wrong size on _WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, EntryPoint) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Find_Placement_on_water_mesh_surfaces_Traced_Transform) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Find_Placement_on_water_mesh_surfaces_Traced_Transform' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Find_Placement_on_water_mesh_surfaces_VelocityVector) == 0x000070, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Find_Placement_on_water_mesh_surfaces_VelocityVector' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Find_Placement_on_water_mesh_surfaces_Trace_Hit) == 0x000088, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Find_Placement_on_water_mesh_surfaces_Trace_Hit' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_GetVelocity_ReturnValue) == 0x000090, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakVector_X) == 0x0000A8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakVector_Y) == 0x0000AC, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BreakVector_Z) == 0x0000B0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000B4, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Abs_ReturnValue) == 0x0000B8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000BC, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000BD, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_BooleanAND_ReturnValue_1) == 0x0000BE, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x0000C0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_GetWindManager_ReturnValue) == 0x0000C8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_GetWindManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_DynamicCast_AsWind_Manager) == 0x0000D8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_DynamicCast_AsWind_Manager' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent_7) == 0x0000E8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent_7' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor_7) == 0x0000F0, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor_7' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp_7) == 0x0000F8, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp_7' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_7) == 0x000100, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_7' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent_6) == 0x000108, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent_6' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor_6) == 0x000110, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor_6' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp_6) == 0x000118, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp_6' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_6) == 0x000120, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_6' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent_5) == 0x000128, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent_5' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor_5) == 0x000130, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor_5' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp_5) == 0x000138, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp_5' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_5) == 0x000140, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_5' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_bFromSweep_3) == 0x000144, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_bFromSweep_3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_SweepResult_3) == 0x000148, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_SweepResult_3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x000228, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000230, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000238, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x000240, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000248, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000250, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000258, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000260, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x000264, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_SweepResult_2) == 0x000268, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000348, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000350, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000358, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000360, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000364, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000368, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000448, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000450, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000458, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000460, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_bFromSweep) == 0x000464, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_SweepResult) == 0x000468, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000548, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherActor) == 0x000550, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherComp) == 0x000558, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000560, "Member '_WaterMeshBlueprintMaster_C_ExecuteUbergraph__WaterMeshBlueprintMaster::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.Find Placement on water mesh surfaces
// 0x0300 (0x0300 - 0x0000)
struct _WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces final
{
public:
	struct FTransform                             Traced_Transform;                                  // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                VelocityVector;                                    // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Trace_Hit;                                         // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           NewLocalVar_0;                                     // 0x007C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitLocation;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_LineTraceComponent_HitNormal;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_K2_LineTraceComponent_BoneName;           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_LineTraceComponent_OutHit;             // 0x0138(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_LineTraceComponent_ReturnValue;        // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02A0(0x0060)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces) == 0x000010, "Wrong alignment on _WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces) == 0x000300, "Wrong size on _WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, Traced_Transform) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::Traced_Transform' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, VelocityVector) == 0x000060, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::VelocityVector' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, Trace_Hit) == 0x000078, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::Trace_Hit' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, NewLocalVar_0) == 0x00007C, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, Temp_bool_Variable) == 0x00008C, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, K2Node_Select_Default) == 0x000090, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_GetVelocity_ReturnValue) == 0x000098, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000B0, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B8, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E8, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_LineTraceComponent_HitLocation) == 0x000100, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_LineTraceComponent_HitLocation' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_LineTraceComponent_HitNormal) == 0x000118, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_LineTraceComponent_HitNormal' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_LineTraceComponent_BoneName) == 0x000130, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_LineTraceComponent_BoneName' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_LineTraceComponent_OutHit) == 0x000138, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_LineTraceComponent_OutHit' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_K2_LineTraceComponent_ReturnValue) == 0x000218, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_K2_LineTraceComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_Cross_VectorVector_ReturnValue) == 0x000220, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000238, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_VSize_ReturnValue) == 0x000250, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000254, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_SelectVector_ReturnValue) == 0x000258, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_Normal_ReturnValue) == 0x000270, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000288, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces, CallFunc_MakeTransform_ReturnValue) == 0x0002A0, "Member '_WaterMeshBlueprintMaster_C_Find_Placement_on_water_mesh_surfaces::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.Handle Water Penetration Components And Arrays
// 0x0040 (0x0040 - 0x0000)
struct _WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays final
{
public:
	bool                                          In_T_Out_F;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Touching_Actor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Touching_Volume;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Generic_Parent_C*           K2Node_DynamicCast_AsPlayer_Pawn_Generic_Parent;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays) == 0x000040, "Wrong size on _WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, In_T_Out_F) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::In_T_Out_F' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, Touching_Actor) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::Touching_Actor' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, Touching_Volume) == 0x000010, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::Touching_Volume' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, Temp_int_Variable) == 0x000018, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, K2Node_DynamicCast_AsPlayer_Pawn_Generic_Parent) == 0x000020, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::K2Node_DynamicCast_AsPlayer_Pawn_Generic_Parent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, K2Node_DynamicCast_bSuccess) == 0x000028, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, Temp_int_Variable_1) == 0x00002C, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, Temp_bool_Variable) == 0x000030, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, K2Node_Select_Default) == 0x000034, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member '_WaterMeshBlueprintMaster_C_Handle_Water_Penetration_Components_And_Arrays::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C.SetupMeshCollisionVolumes
// 0x0010 (0x0010 - 0x0000)
struct _WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes final
{
public:
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Target_Int;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes) == 0x000008, "Wrong alignment on _WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes");
static_assert(sizeof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes) == 0x000010, "Wrong size on _WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes, StaticMeshComponent) == 0x000000, "Member '_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes::StaticMeshComponent' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes, Target_Int) == 0x000008, "Member '_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes::Target_Int' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member '_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000D, "Member '_WaterMeshBlueprintMaster_C_SetupMeshCollisionVolumes::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

