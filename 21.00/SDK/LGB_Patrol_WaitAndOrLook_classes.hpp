#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LGB_Patrol_WaitAndOrLook

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteAI_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LGB_Patrol_WaitAndOrLook.LGB_Patrol_WaitAndOrLook_C
// 0x0030 (0x02B0 - 0x0280)
class ALGB_Patrol_WaitAndOrLook_C final : public AFortAthenaLocalGameplayBehavior
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        DirectionArrow;                                    // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         WaitTimeMin;                                       // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitTimeMax;                                       // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookWhileWaiting;                                  // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChanceToWait;                                      // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaAIBotController*             AIBotControllerActivator;                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void SetFocalPoint();
	void ResetFocalPoint();
	void OnExecute(class AActor* Activator);
	void OnAbort();
	void ExecuteUbergraph_LGB_Patrol_WaitAndOrLook(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LGB_Patrol_WaitAndOrLook_C">();
	}
	static class ALGB_Patrol_WaitAndOrLook_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALGB_Patrol_WaitAndOrLook_C>();
	}
};
static_assert(alignof(ALGB_Patrol_WaitAndOrLook_C) == 0x000008, "Wrong alignment on ALGB_Patrol_WaitAndOrLook_C");
static_assert(sizeof(ALGB_Patrol_WaitAndOrLook_C) == 0x0002B0, "Wrong size on ALGB_Patrol_WaitAndOrLook_C");
static_assert(offsetof(ALGB_Patrol_WaitAndOrLook_C, UberGraphFrame) == 0x000280, "Member 'ALGB_Patrol_WaitAndOrLook_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALGB_Patrol_WaitAndOrLook_C, DirectionArrow) == 0x000288, "Member 'ALGB_Patrol_WaitAndOrLook_C::DirectionArrow' has a wrong offset!");
static_assert(offsetof(ALGB_Patrol_WaitAndOrLook_C, TextRender) == 0x000290, "Member 'ALGB_Patrol_WaitAndOrLook_C::TextRender' has a wrong offset!");
static_assert(offsetof(ALGB_Patrol_WaitAndOrLook_C, WaitTimeMin) == 0x000298, "Member 'ALGB_Patrol_WaitAndOrLook_C::WaitTimeMin' has a wrong offset!");
static_assert(offsetof(ALGB_Patrol_WaitAndOrLook_C, WaitTimeMax) == 0x00029C, "Member 'ALGB_Patrol_WaitAndOrLook_C::WaitTimeMax' has a wrong offset!");
static_assert(offsetof(ALGB_Patrol_WaitAndOrLook_C, LookWhileWaiting) == 0x0002A0, "Member 'ALGB_Patrol_WaitAndOrLook_C::LookWhileWaiting' has a wrong offset!");
static_assert(offsetof(ALGB_Patrol_WaitAndOrLook_C, ChanceToWait) == 0x0002A4, "Member 'ALGB_Patrol_WaitAndOrLook_C::ChanceToWait' has a wrong offset!");
static_assert(offsetof(ALGB_Patrol_WaitAndOrLook_C, AIBotControllerActivator) == 0x0002A8, "Member 'ALGB_Patrol_WaitAndOrLook_C::AIBotControllerActivator' has a wrong offset!");

}

