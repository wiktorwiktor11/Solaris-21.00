#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseBasicGameplay

#include "Basic.hpp"

#include "Verse_0_structs.hpp"
#include "Verse_structs.hpp"


namespace SDK
{

// SolarisGeneratedStruct VerseBasicGameplay.tuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R
// 0x0080 (0x0080 - 0x0000)
struct Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R final
{
public:
	TArray<class UClass*>                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference)
	struct Ftransform_v                           __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0050)(InstancedReference, NoDestructor)
	FVerseStringProperty_                         __verse_0x932BF92E_Elem2;                          // 0x0060(0x0010)(InstancedReference, HasGetValueTypeHash)
	class Ustatic_mesh*                           __verse_0xF64C4596_Elem3;                          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Umaterial_v*                            __verse_0x4F74920B_Elem4;                          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000010, "Wrong alignment on Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(sizeof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000080, "Wrong size on Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x932BF92E_Elem2) == 0x000060, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0xF64C4596_Elem3) == 0x000070, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0xF64C4596_Elem3' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x4F74920B_Elem4) == 0x000078, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x4F74920B_Elem4' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R
// 0x0080 (0x0080 - 0x0000)
struct Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R final
{
public:
	TArray<class UClass*>                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference)
	struct Ftransform_v                           __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0050)(InstancedReference, NoDestructor)
	FVerseStringProperty_                         __verse_0x932BF92E_Elem2;                          // 0x0060(0x0010)(InstancedReference, HasGetValueTypeHash)
	class Ustatic_mesh*                           __verse_0xF64C4596_Elem3;                          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R) == 0x000010, "Wrong alignment on Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R");
static_assert(sizeof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R) == 0x000080, "Wrong size on Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R, __verse_0x932BF92E_Elem2) == 0x000060, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R, __verse_0xF64C4596_Elem3) == 0x000070, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mtransform__v_M_Kchar_Mstatic__mesh_R::__verse_0xF64C4596_Elem3' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R
// 0x0090 (0x0090 - 0x0000)
struct Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R final
{
public:
	TArray<class UClass*>                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference)
	struct Fvector3                               __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVerseRotation                         __verse_0x932BF92E_Elem2;                          // 0x0030(0x0020)(InstancedReference, NoDestructor)
	struct Fvector3                               __verse_0xF64C4596_Elem3;                          // 0x0050(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	FVerseStringProperty_                         __verse_0x4F74920B_Elem4;                          // 0x0068(0x0010)(InstancedReference, HasGetValueTypeHash)
	class Ustatic_mesh*                           __verse_0x2A132EB3_Elem5;                          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Umaterial_v*                            __verse_0xC4BC9BA1_Elem6;                          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000010, "Wrong alignment on Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(sizeof(Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000090, "Wrong size on Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x932BF92E_Elem2) == 0x000030, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0xF64C4596_Elem3) == 0x000050, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0xF64C4596_Elem3' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x4F74920B_Elem4) == 0x000068, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x4F74920B_Elem4' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x2A132EB3_Elem5) == 0x000078, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x2A132EB3_Elem5' has a wrong offset!");
static_assert(offsetof(Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0xC4BC9BA1_Elem6) == 0x000080, "Member 'Ftuple_L_Ksubtype_Lcomponent_R_Mvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0xC4BC9BA1_Elem6' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_L_R
// 0x0001 (0x0001 - 0x0000)
struct VerseBasicGameplay::Ftuple_L_R final
{
public:
	uint8                                         _StructPaddingDummy;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseBasicGameplay::Ftuple_L_R) == 0x000001, "Wrong alignment on VerseBasicGameplay::Ftuple_L_R");
static_assert(sizeof(VerseBasicGameplay::Ftuple_L_R) == 0x000001, "Wrong size on VerseBasicGameplay::Ftuple_L_R");
static_assert(offsetof(VerseBasicGameplay::Ftuple_L_R, _StructPaddingDummy) == 0x000000, "Member 'VerseBasicGameplay::Ftuple_L_R::_StructPaddingDummy' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_Lentity__v_M_Ksubtype_Lcomponent_R_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_Lentity__v_M_Ksubtype_Lcomponent_R_R final
{
public:
	class Uentity_v*                              __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0010)(InstancedReference)
};
static_assert(alignof(Ftuple_Lentity__v_M_Ksubtype_Lcomponent_R_R) == 0x000008, "Wrong alignment on Ftuple_Lentity__v_M_Ksubtype_Lcomponent_R_R");
static_assert(sizeof(Ftuple_Lentity__v_M_Ksubtype_Lcomponent_R_R) == 0x000018, "Wrong size on Ftuple_Lentity__v_M_Ksubtype_Lcomponent_R_R");
static_assert(offsetof(Ftuple_Lentity__v_M_Ksubtype_Lcomponent_R_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lentity__v_M_Ksubtype_Lcomponent_R_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lentity__v_M_Ksubtype_Lcomponent_R_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lentity__v_M_Ksubtype_Lcomponent_R_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_Llogic_Mlogic_R
// 0x0002 (0x0002 - 0x0000)
struct VerseBasicGameplay::Ftuple_Llogic_Mlogic_R final
{
public:
	uint8                                         __verse_0x18E3F084_Elem0 : 1;                      // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_0_1 : 7;                                    // 0x0000(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         __verse_0x7D844C3C_Elem1 : 1;                      // 0x0001(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(VerseBasicGameplay::Ftuple_Llogic_Mlogic_R) == 0x000001, "Wrong alignment on VerseBasicGameplay::Ftuple_Llogic_Mlogic_R");
static_assert(sizeof(VerseBasicGameplay::Ftuple_Llogic_Mlogic_R) == 0x000002, "Wrong size on VerseBasicGameplay::Ftuple_Llogic_Mlogic_R");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R
// 0x0070 (0x0070 - 0x0000)
struct Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R final
{
public:
	struct Ftransform_v                           __verse_0x18E3F084_Elem0;                          // 0x0000(0x0050)(InstancedReference, NoDestructor)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0050(0x0010)(InstancedReference, HasGetValueTypeHash)
	class Ustatic_mesh*                           __verse_0x932BF92E_Elem2;                          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Umaterial_v*                            __verse_0xF64C4596_Elem3;                          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000010, "Wrong alignment on Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(sizeof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000070, "Wrong size on Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(offsetof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x7D844C3C_Elem1) == 0x000050, "Member 'Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x932BF92E_Elem2) == 0x000060, "Member 'Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0xF64C4596_Elem3) == 0x000068, "Member 'Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0xF64C4596_Elem3' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_Ltransform__v_M_Kchar_Mstatic__mesh_R
// 0x0070 (0x0070 - 0x0000)
struct Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R final
{
public:
	struct Ftransform_v                           __verse_0x18E3F084_Elem0;                          // 0x0000(0x0050)(InstancedReference, NoDestructor)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0050(0x0010)(InstancedReference, HasGetValueTypeHash)
	class Ustatic_mesh*                           __verse_0x932BF92E_Elem2;                          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R) == 0x000010, "Wrong alignment on Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R");
static_assert(sizeof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R) == 0x000070, "Wrong size on Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R");
static_assert(offsetof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R, __verse_0x7D844C3C_Elem1) == 0x000050, "Member 'Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R, __verse_0x932BF92E_Elem2) == 0x000060, "Member 'Ftuple_Ltransform__v_M_Kchar_Mstatic__mesh_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_Ltransform__v_M_Kchar_R
// 0x0060 (0x0060 - 0x0000)
struct VerseBasicGameplay::Ftuple_Ltransform__v_M_Kchar_R final
{
public:
	struct Ftransform_v                           __verse_0x18E3F084_Elem0;                          // 0x0000(0x0050)(InstancedReference, NoDestructor)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0050(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(VerseBasicGameplay::Ftuple_Ltransform__v_M_Kchar_R) == 0x000010, "Wrong alignment on VerseBasicGameplay::Ftuple_Ltransform__v_M_Kchar_R");
static_assert(sizeof(VerseBasicGameplay::Ftuple_Ltransform__v_M_Kchar_R) == 0x000060, "Wrong size on VerseBasicGameplay::Ftuple_Ltransform__v_M_Kchar_R");
static_assert(offsetof(VerseBasicGameplay::Ftuple_Ltransform__v_M_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseBasicGameplay::Ftuple_Ltransform__v_M_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseBasicGameplay::Ftuple_Ltransform__v_M_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000050, "Member 'VerseBasicGameplay::Ftuple_Ltransform__v_M_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R
// 0x0038 (0x0038 - 0x0000)
struct Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R final
{
public:
	struct Fvector3                               __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0018(0x0010)(InstancedReference, HasGetValueTypeHash)
	class Ustatic_mesh*                           __verse_0x932BF92E_Elem2;                          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Umaterial_v*                            __verse_0xF64C4596_Elem3;                          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000008, "Wrong alignment on Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(sizeof(Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000038, "Wrong size on Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(offsetof(Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x7D844C3C_Elem1) == 0x000018, "Member 'Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x932BF92E_Elem2) == 0x000028, "Member 'Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0xF64C4596_Elem3) == 0x000030, "Member 'Ftuple_Lvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0xF64C4596_Elem3' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_Lvector3_M_Kchar_R
// 0x0028 (0x0028 - 0x0000)
struct VerseBasicGameplay::Ftuple_Lvector3_M_Kchar_R final
{
public:
	struct Fvector3                               __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0018(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(VerseBasicGameplay::Ftuple_Lvector3_M_Kchar_R) == 0x000008, "Wrong alignment on VerseBasicGameplay::Ftuple_Lvector3_M_Kchar_R");
static_assert(sizeof(VerseBasicGameplay::Ftuple_Lvector3_M_Kchar_R) == 0x000028, "Wrong size on VerseBasicGameplay::Ftuple_Lvector3_M_Kchar_R");
static_assert(offsetof(VerseBasicGameplay::Ftuple_Lvector3_M_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseBasicGameplay::Ftuple_Lvector3_M_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseBasicGameplay::Ftuple_Lvector3_M_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000018, "Member 'VerseBasicGameplay::Ftuple_Lvector3_M_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R
// 0x0060 (0x0060 - 0x0000)
struct Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R final
{
public:
	struct Fvector3                               __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVerseRotation                         __verse_0x7D844C3C_Elem1;                          // 0x0020(0x0020)(InstancedReference, NoDestructor)
	FVerseStringProperty_                         __verse_0x932BF92E_Elem2;                          // 0x0040(0x0010)(InstancedReference, HasGetValueTypeHash)
	class Ustatic_mesh*                           __verse_0xF64C4596_Elem3;                          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Umaterial_v*                            __verse_0x4F74920B_Elem4;                          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000010, "Wrong alignment on Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(sizeof(Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000060, "Wrong size on Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x7D844C3C_Elem1) == 0x000020, "Member 'Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x932BF92E_Elem2) == 0x000040, "Member 'Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0xF64C4596_Elem3) == 0x000050, "Member 'Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0xF64C4596_Elem3' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x4F74920B_Elem4) == 0x000058, "Member 'Ftuple_Lvector3_Mrotation_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x4F74920B_Elem4' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R
// 0x0080 (0x0080 - 0x0000)
struct Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R final
{
public:
	struct Fvector3                               __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVerseRotation                         __verse_0x7D844C3C_Elem1;                          // 0x0020(0x0020)(InstancedReference, NoDestructor)
	struct Fvector3                               __verse_0x932BF92E_Elem2;                          // 0x0040(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	FVerseStringProperty_                         __verse_0xF64C4596_Elem3;                          // 0x0058(0x0010)(InstancedReference, HasGetValueTypeHash)
	class Ustatic_mesh*                           __verse_0x4F74920B_Elem4;                          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Umaterial_v*                            __verse_0x2A132EB3_Elem5;                          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000010, "Wrong alignment on Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(sizeof(Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R) == 0x000080, "Wrong size on Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x7D844C3C_Elem1) == 0x000020, "Member 'Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x932BF92E_Elem2) == 0x000040, "Member 'Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0xF64C4596_Elem3) == 0x000058, "Member 'Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0xF64C4596_Elem3' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x4F74920B_Elem4) == 0x000068, "Member 'Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x4F74920B_Elem4' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R, __verse_0x2A132EB3_Elem5) == 0x000070, "Member 'Ftuple_Lvector3_Mrotation_Mvector3_M_Kchar_Mstatic__mesh_Mmaterial__v_R::__verse_0x2A132EB3_Elem5' has a wrong offset!");

// SolarisGeneratedStruct VerseBasicGameplay.tuple_Lvector3_Mvector3_R
// 0x0030 (0x0030 - 0x0000)
struct VerseBasicGameplay::Ftuple_Lvector3_Mvector3_R final
{
public:
	struct Fvector3                               __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct Fvector3                               __verse_0x7D844C3C_Elem1;                          // 0x0018(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseBasicGameplay::Ftuple_Lvector3_Mvector3_R) == 0x000008, "Wrong alignment on VerseBasicGameplay::Ftuple_Lvector3_Mvector3_R");
static_assert(sizeof(VerseBasicGameplay::Ftuple_Lvector3_Mvector3_R) == 0x000030, "Wrong size on VerseBasicGameplay::Ftuple_Lvector3_Mvector3_R");
static_assert(offsetof(VerseBasicGameplay::Ftuple_Lvector3_Mvector3_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseBasicGameplay::Ftuple_Lvector3_Mvector3_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseBasicGameplay::Ftuple_Lvector3_Mvector3_R, __verse_0x7D844C3C_Elem1) == 0x000018, "Member 'VerseBasicGameplay::Ftuple_Lvector3_Mvector3_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

}

