#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Demeter_Lighthouse_Prototype_Spinny_Light

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Demeter_Lighthouse_Prototype_Spinny_Light.BP_Demeter_Lighthouse_Prototype_Spinny_Light_C.ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light
// 0x02B0 (0x02B0 - 0x0000)
struct BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_AuthorityMatchReady*   CallFunc_MatchReadyAsync_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage_1;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags_1;                         // 0x0020(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum_1;                           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x0058(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy_1;                       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext_1;                      // 0x0148(0x0018)()
	float                                         K2Node_Event_Damage;                               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0168(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x01A0(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0290(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light) == 0x000008, "Wrong alignment on BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light");
static_assert(sizeof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light) == 0x0002B0, "Wrong size on BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, EntryPoint) == 0x000000, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, CallFunc_MatchReadyAsync_ReturnValue) == 0x000010, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::CallFunc_MatchReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_Damage_1) == 0x00001C, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_Damage_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_DamageTags_1) == 0x000020, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_DamageTags_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_Momentum_1) == 0x000040, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_Momentum_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_HitInfo_1) == 0x000058, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_InstigatedBy_1) == 0x000138, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_DamageCauser_1) == 0x000140, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_EffectContext_1) == 0x000148, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_EffectContext_1' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_Damage) == 0x000160, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_DamageTags) == 0x000168, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_Momentum) == 0x000188, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_HitInfo) == 0x0001A0, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_InstigatedBy) == 0x000280, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_DamageCauser) == 0x000288, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, K2Node_Event_EffectContext) == 0x000290, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002A8, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_ExecuteUbergraph_BP_Demeter_Lighthouse_Prototype_Spinny_Light::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Demeter_Lighthouse_Prototype_Spinny_Light.BP_Demeter_Lighthouse_Prototype_Spinny_Light_C.killLighthouse
// 0x0020 (0x0020 - 0x0000)
struct BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse final
{
public:
	TArray<class ABP_Biome_Coastal_Lighthouse_Audio_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	class ABP_Biome_Coastal_Lighthouse_Audio_C*   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse) == 0x000008, "Wrong alignment on BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse");
static_assert(sizeof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse) == 0x000020, "Wrong size on BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_killLighthouse::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Demeter_Lighthouse_Prototype_Spinny_Light.BP_Demeter_Lighthouse_Prototype_Spinny_Light_C.OnDeathPlayEffects
// 0x0148 (0x0148 - 0x0000)
struct BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects");
static_assert(sizeof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects) == 0x000148, "Wrong size on BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects, HitInfo) == 0x000040, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects, InstigatedBy) == 0x000120, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects, DamageCauser) == 0x000128, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects, EffectContext) == 0x000130, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function BP_Demeter_Lighthouse_Prototype_Spinny_Light.BP_Demeter_Lighthouse_Prototype_Spinny_Light_C.OnDeathServer
// 0x0148 (0x0148 - 0x0000)
struct BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer) == 0x000008, "Wrong alignment on BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer");
static_assert(sizeof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer) == 0x000148, "Wrong size on BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer, Damage) == 0x000000, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer, DamageTags) == 0x000008, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer, Momentum) == 0x000028, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer, HitInfo) == 0x000040, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer, InstigatedBy) == 0x000120, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer, DamageCauser) == 0x000128, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer, EffectContext) == 0x000130, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function BP_Demeter_Lighthouse_Prototype_Spinny_Light.BP_Demeter_Lighthouse_Prototype_Spinny_Light_C.OnRep_Is Died
// 0x0001 (0x0001 - 0x0000)
struct BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnRep_Is_Died final
{
public:
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnRep_Is_Died) == 0x000001, "Wrong alignment on BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnRep_Is_Died");
static_assert(sizeof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnRep_Is_Died) == 0x000001, "Wrong size on BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnRep_Is_Died");
static_assert(offsetof(BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnRep_Is_Died, K2Node_SwitchInteger_CmpSuccess) == 0x000000, "Member 'BP_Demeter_Lighthouse_Prototype_Spinny_Light_C_OnRep_Is_Died::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}

