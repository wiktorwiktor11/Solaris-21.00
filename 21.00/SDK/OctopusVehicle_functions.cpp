#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OctopusVehicle

#include "Basic.hpp"

#include "OctopusVehicle_classes.hpp"
#include "OctopusVehicle_parameters.hpp"


namespace SDK
{

// Function OctopusVehicle.OctopusVehicle_C.AddCooldownCueEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Player_Pawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::AddCooldownCueEvent(class AFortPlayerPawn* Player_Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "AddCooldownCueEvent");

	Params::OctopusVehicle_C_AddCooldownCueEvent Parms{};

	Parms.Player_Pawn = Player_Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.BoostCameraBegin
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::BoostCameraBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "BoostCameraBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.BoostCameraReverse
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::BoostCameraReverse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "BoostCameraReverse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.BoostTimeline__FinishedFunc
// (BlueprintEvent)

void AOctopusVehicle_C::BoostTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "BoostTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.BoostTimeline__UpdateFunc
// (BlueprintEvent)

void AOctopusVehicle_C::BoostTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "BoostTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.Bounce Collision Audio Cooldown
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::Bounce_Collision_Audio_Cooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "Bounce Collision Audio Cooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.CameraShake
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::CameraShake(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "CameraShake");

	Params::OctopusVehicle_C_CameraShake Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.CheckWater
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::CheckWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "CheckWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.EventOnTowhookAttached
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::EventOnTowhookAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "EventOnTowhookAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.ExecuteUbergraph_OctopusVehicle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::ExecuteUbergraph_OctopusVehicle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "ExecuteUbergraph_OctopusVehicle");

	Params::OctopusVehicle_C_ExecuteUbergraph_OctopusVehicle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.GroundHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::GroundHit(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "GroundHit");

	Params::OctopusVehicle_C_GroundHit Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.Handle On Health Changed
// (Public, BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::Handle_On_Health_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "Handle On Health Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.HitWithPickaxe
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitDirection                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::HitWithPickaxe(const struct FVector& HitDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "HitWithPickaxe");

	Params::OctopusVehicle_C_HitWithPickaxe Parms{};

	Parms.HitDirection = std::move(HitDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.ImpactReset
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::ImpactReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "ImpactReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.K2_ApplyCosmeticWrap
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaItemWrapDefinition*        LoadedWrap                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::K2_ApplyCosmeticWrap(const class UAthenaItemWrapDefinition* LoadedWrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "K2_ApplyCosmeticWrap");

	Params::OctopusVehicle_C_K2_ApplyCosmeticWrap Parms{};

	Parms.LoadedWrap = LoadedWrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnBoostBegin
// (Event, Public, BlueprintEvent)

void AOctopusVehicle_C::OnBoostBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnBoostBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.OnBoostBounce
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Force                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BounceCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::OnBoostBounce(const struct FVector& Location, const struct FVector& Normal, const float Force, class AActor* HitActor, int32 BounceCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnBoostBounce");

	Params::OctopusVehicle_C_OnBoostBounce Parms{};

	Parms.Location = std::move(Location);
	Parms.Normal = std::move(Normal);
	Parms.Force = Force;
	Parms.HitActor = HitActor;
	Parms.BounceCount = BounceCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnBoostEnd
// (Event, Public, BlueprintEvent)

void AOctopusVehicle_C::OnBoostEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnBoostEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.OnDamaged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayEffectContextHandle     EffectContext                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::OnDamaged(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnDamaged");

	Params::OctopusVehicle_C_OnDamaged Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.EffectContext = std::move(EffectContext);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnDamagePlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void AOctopusVehicle_C::OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnDamagePlayEffects");

	Params::OctopusVehicle_C_OnDamagePlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void AOctopusVehicle_C::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnDeathPlayEffects");

	Params::OctopusVehicle_C_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnEnteredWaterVolume
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfacePoint                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::OnEnteredWaterVolume(const struct FVector& WaterSurfacePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnEnteredWaterVolume");

	Params::OctopusVehicle_C_OnEnteredWaterVolume Parms{};

	Parms.WaterSurfacePoint = std::move(WaterSurfacePoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnExitedWaterVolume
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          WaterSurfacePoint                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::OnExitedWaterVolume(const struct FVector& WaterSurfacePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnExitedWaterVolume");

	Params::OctopusVehicle_C_OnExitedWaterVolume Parms{};

	Parms.WaterSurfacePoint = std::move(WaterSurfacePoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Force                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::OnHit(const struct FVector& Location, const struct FVector& Normal, const float Force, class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnHit");

	Params::OctopusVehicle_C_OnHit Parms{};

	Parms.Location = std::move(Location);
	Parms.Normal = std::move(Normal);
	Parms.Force = Force;
	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnHoldExitStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        ExitingPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExitDuration                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::OnHoldExitStarted(class AFortPawn* ExitingPawn, const float ExitDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnHoldExitStarted");

	Params::OctopusVehicle_C_OnHoldExitStarted Parms{};

	Parms.ExitingPawn = ExitingPawn;
	Parms.ExitDuration = ExitDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnHoldExitStopped
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        ExitingPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::OnHoldExitStopped(class AFortPawn* ExitingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnHoldExitStopped");

	Params::OctopusVehicle_C_OnHoldExitStopped Parms{};

	Parms.ExitingPawn = ExitingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnPawnEnterVehicle
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SeatIdx                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::OnPawnEnterVehicle(class AFortPlayerPawn* PlayerPawn, const int32 SeatIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnPawnEnterVehicle");

	Params::OctopusVehicle_C_OnPawnEnterVehicle Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.SeatIdx = SeatIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnPawnExitVehicle
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ExitSocketName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::OnPawnExitVehicle(class AFortPlayerPawn* PlayerPawn, class FName ExitSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnPawnExitVehicle");

	Params::OctopusVehicle_C_OnPawnExitVehicle Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.ExitSocketName = ExitSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.OnStopTick
// (Event, Public, BlueprintEvent)

void AOctopusVehicle_C::OnStopTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnStopTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.OnUpdateTargetPoint
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bAimAssistHitsTarget                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetPoint                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::OnUpdateTargetPoint(const bool bAimAssistHitsTarget, const struct FVector& TargetPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "OnUpdateTargetPoint");

	Params::OctopusVehicle_C_OnUpdateTargetPoint Parms{};

	Parms.bAimAssistHitsTarget = bAimAssistHitsTarget;
	Parms.TargetPoint = std::move(TargetPoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AOctopusVehicle_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.RemoveCooldownCueEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Player_Pawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::RemoveCooldownCueEvent(class AFortPlayerPawn* Player_Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "RemoveCooldownCueEvent");

	Params::OctopusVehicle_C_RemoveCooldownCueEvent Parms{};

	Parms.Player_Pawn = Player_Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.RetractCable
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::RetractCable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "RetractCable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.ReturnTimeline__FinishedFunc
// (BlueprintEvent)

void AOctopusVehicle_C::ReturnTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "ReturnTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.ReturnTimeline__UpdateFunc
// (BlueprintEvent)

void AOctopusVehicle_C::ReturnTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "ReturnTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.ReverseBoostTimeline
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::ReverseBoostTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "ReverseBoostTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.SetGrappleVisible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::SetGrappleVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "SetGrappleVisible");

	Params::OctopusVehicle_C_SetGrappleVisible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.ShowCooldownCue
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOctopusVehicle_C::ShowCooldownCue(class AFortPlayerPawn* Pawn, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "ShowCooldownCue");

	Params::OctopusVehicle_C_ShowCooldownCue Parms{};

	Parms.Pawn = Pawn;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OctopusVehicle.OctopusVehicle_C.StartDriverCameraShake
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::StartDriverCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "StartDriverCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.Startup__FinishedFunc
// (BlueprintEvent)

void AOctopusVehicle_C::Startup__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "Startup__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.Startup__UpdateFunc
// (BlueprintEvent)

void AOctopusVehicle_C::Startup__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "Startup__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.StopCameraShake
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::StopCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "StopCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.TowhookAttached
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::TowhookAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "TowhookAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.TowhookDetached
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::TowhookDetached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "TowhookDetached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.TowhookLoop
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::TowhookLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "TowhookLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.TowhookMissed
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::TowhookMissed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "TowhookMissed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.TowhookShot
// (BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::TowhookShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "TowhookShot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OctopusVehicle.OctopusVehicle_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AOctopusVehicle_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OctopusVehicle_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

