#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_Pawn_Irwin_Prey_Nug

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "NPC_Pawn_Wildlife_Prey_Parent_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass NPC_Pawn_Irwin_Prey_Nug.NPC_Pawn_Irwin_Prey_Nug_C
// 0x0160 (0x3B00 - 0x39A0)
#pragma pack(push, 0x1)
class alignas(0x10) ANPC_Pawn_Irwin_Prey_Nug_C : public ANPC_Pawn_Wildlife_Prey_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_NPC_Pawn_Irwin_Prey_Nug_C;          // 0x39A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortCharacterPartsComponent*           FortCharacterParts;                                // 0x39A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFTP_NPC_Assignment_Loot_Herbivore_C*   FTP_NPC_Assignment_Loot_Herbivore;                 // 0x39B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortHeldObjectComponent*               FortHeldObject;                                    // 0x39B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bPawnPickedUp;                                     // 0x39C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          bPawnThrown;                                       // 0x39C1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C2[0x2];                                     // 0x39C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            H_GE_PickedUp_Chicken;                             // 0x39C4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            H_GE_PickedUp_Player;                              // 0x39CC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D4[0x4];                                     // 0x39D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_ApplyPickupAbility_Chicken;                     // 0x39D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_ApplyAbilities_Player;                          // 0x39E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_BlockPickup;                                    // 0x39E8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsPickupEnabled;                                  // 0x3A08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A09[0x3];                                     // 0x3A09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PickupEnableDelay;                                 // 0x3A0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PostLandDelay;                                     // 0x3A10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A14[0x4];                                     // 0x3A14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Interaction_Preventing_Tags;                       // 0x3A18(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             NugJumpLandSound;                                  // 0x3A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasJumped;                                        // 0x3A40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A41[0x7];                                     // 0x3A41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             NugFloatLandSound;                                 // 0x3A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_RecentlyAttackedByPawn;                         // 0x3A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AFortPlayerPawn*                        FortPlayerPawnHoldingChicken;                      // 0x3A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_HeldBumpMeleeAbility;                           // 0x3A60(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ChickenTrackHeldBumpsHF;                           // 0x3A80(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<int32>                                   ThrownByPlayerIDs;                                 // 0x3AA8(0x0050)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)

public:
	void AssignPlayerBumpEvent();
	void BindPlayerControllerOnUnpossess();
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_4_OnHeldObjectGuideProjectileStarted__DelegateSignature();
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_5_OnHeldObjectGuideProjectileStopped__DelegateSignature();
	void BndEvt__NPC_Pawn_Irwin_Prey_Nug_FortHeldObject_K2Node_ComponentBoundEvent_0_OnHeldObjectThrown__DelegateSignature();
	void EnablePickUp();
	void ExecuteUbergraph_NPC_Pawn_Irwin_Prey_Nug(int32 EntryPoint);
	void NPCNugUpdateStormHandling();
	void NugLanded(const struct FHitResult& Hit);
	void On_NPC_PawnInteractedWith(class AActor* AIPawn, class AFortPlayerPawn* InteractingPlayerPawn);
	void On_Nug_Died_Event(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnActorBeginOverlap_Event(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorHit_Event(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDied_Event(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnEndPlay_Event(class AActor* Actor, EEndPlayReason EndPlayReason);
	void OnHomingPassedTarget();
	void OnNugLanded(const struct FHitResult& Hit);
	void OnReachedLockTargetDistanceThreshold();
	void OnRep_bPawnPickedUp();
	void OnRep_bPawnThrown();
	void PlayPickUpAudio();
	void PlayThrowAudio();
	void ReceiveBeginPlay();
	void ResetChickenVars();
	void SendThrownByPlayerEvents(bool bAlreadyThrown);
	void Server_Only_Handle_Player_Controller_OnUnPossess(class APawn* PlayerPawn);
	void SetAccelerationMagnitude(class AActor* SelfActor, const float InAccelerationMagnitude);
	void SetDesiredDirection(class AActor* SelfActor, const struct FVector& Direction);
	void SetHomingData(class AActor* SelfActor, const struct FProjectileHomingData& NewHomingData);
	void SetHomingLaserTargetDistance(class AActor* SelfActor, float NewDistance);
	void SetHomingLockTargetDistanceThreshold(class AActor* SelfActor, float NewDistanceThreshold);
	void SetHomingStyle(class AActor* SelfActor, EFortHomingStyle NewHomingStyle, bool ResetHomingTurnSpeedTimer);
	void SetHomingTarget(class AActor* SelfActor, class AActor* HomingTarget);
	void SetHomingTargetOffset(class AActor* SelfActor, const struct FVector& NewHomingOffset);
	void SetHomingTargetPosition(class AActor* SelfActor, const struct FVector& HomingTargetPosition);
	void SetHomingTimeUntilMaxTurnSpeed(class AActor* SelfActor, float NewTimeUntilMax);
	void SetHomingTurnSpeedMax(class AActor* SelfActor, float NewTurnSpeedMin);
	void SetHomingTurnSpeedMin(class AActor* SelfActor, float NewTurnSpeedMin);
	void SetPawnMovementEnabled(bool bEnabled);
	void UnassignPlayerBumpEvent();
	void UpdateCollision();
	void UpdateMovementComponents();

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	struct FVector GetCurrentLocation() const;
	class UFortProjectileMovementComponent* GetFortProjectileMovementComponent() const;
	class AFortPlayerController* GetInstigatorPlayerController() const;
	bool IsProjectileBeingKilled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NPC_Pawn_Irwin_Prey_Nug_C">();
	}
	static class ANPC_Pawn_Irwin_Prey_Nug_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANPC_Pawn_Irwin_Prey_Nug_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ANPC_Pawn_Irwin_Prey_Nug_C) == 0x000010, "Wrong alignment on ANPC_Pawn_Irwin_Prey_Nug_C");
static_assert(sizeof(ANPC_Pawn_Irwin_Prey_Nug_C) == 0x003B00, "Wrong size on ANPC_Pawn_Irwin_Prey_Nug_C");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, UberGraphFrame_NPC_Pawn_Irwin_Prey_Nug_C) == 0x0039A0, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::UberGraphFrame_NPC_Pawn_Irwin_Prey_Nug_C' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, FortCharacterParts) == 0x0039A8, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::FortCharacterParts' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, FTP_NPC_Assignment_Loot_Herbivore) == 0x0039B0, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::FTP_NPC_Assignment_Loot_Herbivore' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, FortHeldObject) == 0x0039B8, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::FortHeldObject' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, bPawnPickedUp) == 0x0039C0, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::bPawnPickedUp' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, bPawnThrown) == 0x0039C1, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::bPawnThrown' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, H_GE_PickedUp_Chicken) == 0x0039C4, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::H_GE_PickedUp_Chicken' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, H_GE_PickedUp_Player) == 0x0039CC, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::H_GE_PickedUp_Player' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, GE_ApplyPickupAbility_Chicken) == 0x0039D8, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::GE_ApplyPickupAbility_Chicken' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, GE_ApplyAbilities_Player) == 0x0039E0, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::GE_ApplyAbilities_Player' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, TC_BlockPickup) == 0x0039E8, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::TC_BlockPickup' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, bIsPickupEnabled) == 0x003A08, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::bIsPickupEnabled' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, PickupEnableDelay) == 0x003A0C, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::PickupEnableDelay' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, PostLandDelay) == 0x003A10, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::PostLandDelay' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, Interaction_Preventing_Tags) == 0x003A18, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::Interaction_Preventing_Tags' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, NugJumpLandSound) == 0x003A38, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::NugJumpLandSound' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, bHasJumped) == 0x003A40, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::bHasJumped' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, NugFloatLandSound) == 0x003A48, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::NugFloatLandSound' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, GE_RecentlyAttackedByPawn) == 0x003A50, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::GE_RecentlyAttackedByPawn' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, FortPlayerPawnHoldingChicken) == 0x003A58, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::FortPlayerPawnHoldingChicken' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, TC_HeldBumpMeleeAbility) == 0x003A60, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::TC_HeldBumpMeleeAbility' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, ChickenTrackHeldBumpsHF) == 0x003A80, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::ChickenTrackHeldBumpsHF' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Irwin_Prey_Nug_C, ThrownByPlayerIDs) == 0x003AA8, "Member 'ANPC_Pawn_Irwin_Prey_Nug_C::ThrownByPlayerIDs' has a wrong offset!");

}

