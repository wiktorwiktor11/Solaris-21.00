#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DriveIn_Projector

#include "Basic.hpp"


namespace SDK::Params
{

// Function DriveIn_Projector.DriveIn_Projector_C.ExecuteUbergraph_DriveIn_Projector
// 0x0030 (0x0030 - 0x0000)
struct DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGameModeZone*                      K2Node_DynamicCast_AsFort_Game_Mode_Zone;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector) == 0x000008, "Wrong alignment on DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector");
static_assert(sizeof(DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector) == 0x000030, "Wrong size on DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector");
static_assert(offsetof(DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector, EntryPoint) == 0x000000, "Member 'DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector::EntryPoint' has a wrong offset!");
static_assert(offsetof(DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector, K2Node_DynamicCast_AsFort_Game_Mode_Zone) == 0x000010, "Member 'DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector::K2Node_DynamicCast_AsFort_Game_Mode_Zone' has a wrong offset!");
static_assert(offsetof(DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'DriveIn_Projector_C_ExecuteUbergraph_DriveIn_Projector::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function DriveIn_Projector.DriveIn_Projector_C.OnRep_ProjectorState
// 0x0001 (0x0001 - 0x0000)
struct DriveIn_Projector_C_OnRep_ProjectorState final
{
public:
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DriveIn_Projector_C_OnRep_ProjectorState) == 0x000001, "Wrong alignment on DriveIn_Projector_C_OnRep_ProjectorState");
static_assert(sizeof(DriveIn_Projector_C_OnRep_ProjectorState) == 0x000001, "Wrong size on DriveIn_Projector_C_OnRep_ProjectorState");
static_assert(offsetof(DriveIn_Projector_C_OnRep_ProjectorState, K2Node_SwitchInteger_CmpSuccess) == 0x000000, "Member 'DriveIn_Projector_C_OnRep_ProjectorState::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}

