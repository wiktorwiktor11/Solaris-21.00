#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Commando_FragGrenade_WithTrajectory

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GAT_CommandoActiveAbility_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Commando_FragGrenade_WithTrajectory.GA_Commando_FragGrenade_WithTrajectory_C
// 0x02E0 (0x0F10 - 0x0C30)
class UGA_Commando_FragGrenade_WithTrajectory_C final : public UGAT_CommandoActiveAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Commando_FragGrenade_WithTrajectory_C; // 0x0C30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 Prj_Grenade;                                       // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrenadeSpeedMin;                                   // 0x0C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrenadeSpeedMax;                                   // 0x0C44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x0C48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4C[0x4];                                      // 0x0C4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_ClusterBomb;                                    // 0x0C50(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_BiggerIsBetter;                                 // 0x0C70(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           T_GEContainer_Explosion;                           // 0x0C90(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadius;                                   // 0x0C94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalThrowAngle;                              // 0x0C98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EC_ClusterExplosion;                               // 0x0C9C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFortFeedbackHandle                    GrenadeDialogFeedback;                             // 0x0CA0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGameplayTagContainer                  TC_KeepOut;                                        // 0x0CB0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EC_KeepOut;                                        // 0x0CD0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          BiggerIsBetter;                                    // 0x0CD4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClusterBomb;                                       // 0x0CD5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KeepOut;                                           // 0x0CD6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD7[0x1];                                      // 0x0CD7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_GrenadeAmmo;                                    // 0x0CD8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_GrenadeCost;                                    // 0x0CF8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_GrenadeDamage;                                  // 0x0D18(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          GrenadeAmmo;                                       // 0x0D38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GrenadeCost;                                       // 0x0D39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GrenadeDamage;                                     // 0x0D3A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3B[0x1];                                      // 0x0D3B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GrenadeAmmoUpgrade;                                // 0x0D3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GrenadeAmmoDefault;                                // 0x0D40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxGrenadeAmmo;                                    // 0x0D44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExplosionRadiusTooltip;                            // 0x0D48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExplosionRadiusDefault;                            // 0x0D4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExplosionRadiusUpgrade;                            // 0x0D50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D54[0x4];                                      // 0x0D54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_PlasmaGrenades;                                 // 0x0D58(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          PlasmaGrenades;                                    // 0x0D78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D79[0x7];                                      // 0x0D79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_Flashbang;                                      // 0x0D80(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Flashbang;                                         // 0x0DA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA1[0x7];                                      // 0x0DA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GrenadeTargetingOriginOffset;                      // 0x0DA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DummyShouldBounce;                                 // 0x0DC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC1[0x3];                                      // 0x0DC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DummyBounciness;                                   // 0x0DC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyFriction;                                     // 0x0DC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TrajectoryUpdateInterval;                          // 0x0DCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyMaxSpeed;                                     // 0x0DD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyGravity;                                      // 0x0DD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyTimeStep;                                     // 0x0DD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyExtent;                                       // 0x0DDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InThrowWindup;                                     // 0x0DE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE1[0x7];                                      // 0x0DE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ProjectileTrajectory_C*             TrajectoryIndicator;                               // 0x0DE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TrajectoryIndicatorClass;                          // 0x0DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortGameplayAbilityMontageInfo        ThrowWindupMontage;                                // 0x0DF8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AbilityKeyPressed;                                 // 0x0E50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E51[0x3];                                      // 0x0E51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxSpeedPitch;                                     // 0x0E54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSpeedPitch;                                     // 0x0E58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTossPitch;                                      // 0x0E5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrajectoryBounces;                              // 0x0E60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E64[0x4];                                      // 0x0E64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_Tactical_Clusterbomb;                           // 0x0E68(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Tactical_Clusterbomb;                              // 0x0E88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E89[0x3];                                      // 0x0E89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           EC_ClusterExplosion_Tactical;                      // 0x0E8C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         F_FrameDelay;                                      // 0x0E90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BiggerIsBetter_T01;                                // 0x0E94(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BiggerIsBetter_T02;                                // 0x0E95(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClusterBomb_T01;                                   // 0x0E96(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClusterBomb_T02;                                   // 0x0E97(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_BiggerIsBetter_T01;                              // 0x0E98(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_BiggerIsBetter_T02;                              // 0x0E9C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_ClusterBomb_T01;                                 // 0x0EA0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_ClusterBomb_T02;                                 // 0x0EA4(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         SF_BiggerIsBetterRadius_T01;                       // 0x0EA8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           ThrowMontage;                                      // 0x0ED0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Event_Activate;                                  // 0x0ED8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Event_Deactivate;                                // 0x0EDC(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         SF_BiggerIsBetterRadius_T02;                       // 0x0EE0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	ECollisionChannel                             DummyCollisionChannel;                             // 0x0F08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F09[0x3];                                      // 0x0F09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ThrowCue;                                          // 0x0F0C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ActiveAbilitySetup(class UAbilitySystemComponent* AbilitySystemIn, class UAbilitySystemComponent** AbilitySystemOut);
	void Cancelled_BF65CDBE4F9E98E9174850B85775A15B(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void CleanupTrajectoryDisplay();
	void Completed_BF65CDBE4F9E98E9174850B85775A15B(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void ExecuteUbergraph_GA_Commando_FragGrenade_WithTrajectory(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnAbilityInputReleased();
	void OnBlendOut_854170AF4268B06A435A3AA33232C5BF();
	void OnCancelled_854170AF4268B06A435A3AA33232C5BF();
	void OnCompleted_854170AF4268B06A435A3AA33232C5BF();
	void OnFinish_1C6A100D44D1ACE5BBB57DAEDB3561CB();
	void OnFinish_F5D87C9E46378707AE4C79B3A42F5A45();
	void OnInterrupted_854170AF4268B06A435A3AA33232C5BF();
	void ServerSpawnProjectile();
	void SetupAbility(class UAbilitySystemComponent* AbilitySystemComponentRef);
	void SetupDummyProjectile();
	void SetupGrenade(float AimPitch, class UClass** Base_Grenade, float* Projectile_Speed, struct FFortGameplayEffectContainerSpec* Explosion_Gameplay_Spec, float* Projectile_Gravity_Scale);
	void SpawnFragGrenade(class UClass* ProjectileClass_0, struct FVector& SpawnLocation, const struct FRotator& InputPin, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode, float InitialSpeed, float GravityScale_0);
	void TossGrenade();
	void Triggered_BF65CDBE4F9E98E9174850B85775A15B(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void UpdateTrajectorySpline();

	void CalcGrenadeSpeedFromPitch(float AimPitch, float* GrenadeSpeed) const;
	void SpawnLocationAndRotation(struct FVector* OutLoc, struct FRotator* OutRot) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Commando_FragGrenade_WithTrajectory_C">();
	}
	static class UGA_Commando_FragGrenade_WithTrajectory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Commando_FragGrenade_WithTrajectory_C>();
	}
};
static_assert(alignof(UGA_Commando_FragGrenade_WithTrajectory_C) == 0x000008, "Wrong alignment on UGA_Commando_FragGrenade_WithTrajectory_C");
static_assert(sizeof(UGA_Commando_FragGrenade_WithTrajectory_C) == 0x000F10, "Wrong size on UGA_Commando_FragGrenade_WithTrajectory_C");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, UberGraphFrame_GA_Commando_FragGrenade_WithTrajectory_C) == 0x000C30, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::UberGraphFrame_GA_Commando_FragGrenade_WithTrajectory_C' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, Prj_Grenade) == 0x000C38, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::Prj_Grenade' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, GrenadeSpeedMin) == 0x000C40, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::GrenadeSpeedMin' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, GrenadeSpeedMax) == 0x000C44, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::GrenadeSpeedMax' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, GravityScale) == 0x000C48, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::GravityScale' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TC_ClusterBomb) == 0x000C50, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TC_ClusterBomb' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TC_BiggerIsBetter) == 0x000C70, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TC_BiggerIsBetter' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, T_GEContainer_Explosion) == 0x000C90, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::T_GEContainer_Explosion' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, ExplosionRadius) == 0x000C94, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, AdditionalThrowAngle) == 0x000C98, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::AdditionalThrowAngle' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, EC_ClusterExplosion) == 0x000C9C, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::EC_ClusterExplosion' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, GrenadeDialogFeedback) == 0x000CA0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::GrenadeDialogFeedback' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TC_KeepOut) == 0x000CB0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TC_KeepOut' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, EC_KeepOut) == 0x000CD0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::EC_KeepOut' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, BiggerIsBetter) == 0x000CD4, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::BiggerIsBetter' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, ClusterBomb) == 0x000CD5, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::ClusterBomb' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, KeepOut) == 0x000CD6, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::KeepOut' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TC_GrenadeAmmo) == 0x000CD8, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TC_GrenadeAmmo' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TC_GrenadeCost) == 0x000CF8, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TC_GrenadeCost' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TC_GrenadeDamage) == 0x000D18, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TC_GrenadeDamage' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, GrenadeAmmo) == 0x000D38, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::GrenadeAmmo' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, GrenadeCost) == 0x000D39, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::GrenadeCost' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, GrenadeDamage) == 0x000D3A, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::GrenadeDamage' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, GrenadeAmmoUpgrade) == 0x000D3C, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::GrenadeAmmoUpgrade' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, GrenadeAmmoDefault) == 0x000D40, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::GrenadeAmmoDefault' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, MaxGrenadeAmmo) == 0x000D44, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::MaxGrenadeAmmo' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, ExplosionRadiusTooltip) == 0x000D48, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::ExplosionRadiusTooltip' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, ExplosionRadiusDefault) == 0x000D4C, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::ExplosionRadiusDefault' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, ExplosionRadiusUpgrade) == 0x000D50, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::ExplosionRadiusUpgrade' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TC_PlasmaGrenades) == 0x000D58, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TC_PlasmaGrenades' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, PlasmaGrenades) == 0x000D78, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::PlasmaGrenades' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TC_Flashbang) == 0x000D80, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TC_Flashbang' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, Flashbang) == 0x000DA0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::Flashbang' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, GrenadeTargetingOriginOffset) == 0x000DA8, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::GrenadeTargetingOriginOffset' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, DummyShouldBounce) == 0x000DC0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::DummyShouldBounce' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, DummyBounciness) == 0x000DC4, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::DummyBounciness' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, DummyFriction) == 0x000DC8, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::DummyFriction' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TrajectoryUpdateInterval) == 0x000DCC, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TrajectoryUpdateInterval' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, DummyMaxSpeed) == 0x000DD0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::DummyMaxSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, DummyGravity) == 0x000DD4, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::DummyGravity' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, DummyTimeStep) == 0x000DD8, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::DummyTimeStep' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, DummyExtent) == 0x000DDC, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::DummyExtent' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, InThrowWindup) == 0x000DE0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::InThrowWindup' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TrajectoryIndicator) == 0x000DE8, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TrajectoryIndicator' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TrajectoryIndicatorClass) == 0x000DF0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TrajectoryIndicatorClass' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, ThrowWindupMontage) == 0x000DF8, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::ThrowWindupMontage' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, AbilityKeyPressed) == 0x000E50, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::AbilityKeyPressed' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, MaxSpeedPitch) == 0x000E54, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::MaxSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, MinSpeedPitch) == 0x000E58, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::MinSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, MaxTossPitch) == 0x000E5C, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::MaxTossPitch' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, MaxTrajectoryBounces) == 0x000E60, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::MaxTrajectoryBounces' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, TC_Tactical_Clusterbomb) == 0x000E68, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::TC_Tactical_Clusterbomb' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, Tactical_Clusterbomb) == 0x000E88, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::Tactical_Clusterbomb' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, EC_ClusterExplosion_Tactical) == 0x000E8C, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::EC_ClusterExplosion_Tactical' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, F_FrameDelay) == 0x000E90, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::F_FrameDelay' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, BiggerIsBetter_T01) == 0x000E94, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::BiggerIsBetter_T01' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, BiggerIsBetter_T02) == 0x000E95, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::BiggerIsBetter_T02' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, ClusterBomb_T01) == 0x000E96, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::ClusterBomb_T01' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, ClusterBomb_T02) == 0x000E97, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::ClusterBomb_T02' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, T_BiggerIsBetter_T01) == 0x000E98, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::T_BiggerIsBetter_T01' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, T_BiggerIsBetter_T02) == 0x000E9C, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::T_BiggerIsBetter_T02' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, T_ClusterBomb_T01) == 0x000EA0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::T_ClusterBomb_T01' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, T_ClusterBomb_T02) == 0x000EA4, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::T_ClusterBomb_T02' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, SF_BiggerIsBetterRadius_T01) == 0x000EA8, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::SF_BiggerIsBetterRadius_T01' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, ThrowMontage) == 0x000ED0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::ThrowMontage' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, T_Event_Activate) == 0x000ED8, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::T_Event_Activate' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, T_Event_Deactivate) == 0x000EDC, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::T_Event_Deactivate' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, SF_BiggerIsBetterRadius_T02) == 0x000EE0, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::SF_BiggerIsBetterRadius_T02' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, DummyCollisionChannel) == 0x000F08, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::DummyCollisionChannel' has a wrong offset!");
static_assert(offsetof(UGA_Commando_FragGrenade_WithTrajectory_C, ThrowCue) == 0x000F0C, "Member 'UGA_Commando_FragGrenade_WithTrajectory_C::ThrowCue' has a wrong offset!");

}

