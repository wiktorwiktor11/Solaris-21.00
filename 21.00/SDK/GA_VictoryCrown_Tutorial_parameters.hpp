#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_VictoryCrown_Tutorial

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_VictoryCrown_Tutorial.GA_VictoryCrown_Tutorial_C.ExecuteUbergraph_GA_VictoryCrown_Tutorial
// 0x00A0 (0x00A0 - 0x0000)
struct GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x000C(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetAvatarAsFortPlayerPawn_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetAvatarAsFortPlayerPawn_ReturnValue_1;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   CallFunc_GetGameStateAthena_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   CallFunc_GetGameStateAthena_ReturnValue_1;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x007C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x009C(0x0004)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial) == 0x000008, "Wrong alignment on GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial");
static_assert(sizeof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial) == 0x0000A0, "Wrong size on GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, EntryPoint) == 0x000000, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, Temp_struct_Variable) == 0x000004, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, Temp_struct_Variable_1) == 0x00000C, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, K2Node_Event_bWasCancelled) == 0x000010, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, Temp_bool_Variable) == 0x000011, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000012, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_GetAvatarAsFortPlayerPawn_ReturnValue) == 0x000020, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_GetAvatarAsFortPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_GetAvatarAsFortPlayerPawn_ReturnValue_1) == 0x000030, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_GetAvatarAsFortPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_GetGameStateAthena_ReturnValue) == 0x000040, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_GetGameStateAthena_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000058, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_BooleanOR_ReturnValue) == 0x000068, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_GetGameStateAthena_ReturnValue_1) == 0x000070, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_GetGameStateAthena_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000078, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, K2Node_CreateDelegate_OutputDelegate_1) == 0x00007C, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000088, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000090, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, CallFunc_BooleanOR_ReturnValue_1) == 0x000098, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial, K2Node_Select_Default) == 0x00009C, "Member 'GA_VictoryCrown_Tutorial_C_ExecuteUbergraph_GA_VictoryCrown_Tutorial::K2Node_Select_Default' has a wrong offset!");

// Function GA_VictoryCrown_Tutorial.GA_VictoryCrown_Tutorial_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_VictoryCrown_Tutorial_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_VictoryCrown_Tutorial_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_VictoryCrown_Tutorial_C_K2_OnEndAbility");
static_assert(sizeof(GA_VictoryCrown_Tutorial_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_VictoryCrown_Tutorial_C_K2_OnEndAbility");
static_assert(offsetof(GA_VictoryCrown_Tutorial_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_VictoryCrown_Tutorial_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

}

