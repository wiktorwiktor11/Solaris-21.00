#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveItem_Tooltip

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ProgressiveItem_Tooltip.ProgressiveItem_Tooltip_C.ExecuteUbergraph_ProgressiveItem_Tooltip
// 0x0020 (0x0020 - 0x0000)
struct ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip) == 0x000008, "Wrong alignment on ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip");
static_assert(sizeof(ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip) == 0x000020, "Wrong size on ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip");
static_assert(offsetof(ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip, EntryPoint) == 0x000000, "Member 'ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip, Temp_bool_Variable) == 0x000004, "Member 'ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip, Temp_byte_Variable) == 0x000005, "Member 'ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip, Temp_byte_Variable_1) == 0x000006, "Member 'ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip, K2Node_Event_IsDesignTime) == 0x000007, "Member 'ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip, K2Node_Select_Default) == 0x000010, "Member 'ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000018, "Member 'ProgressiveItem_Tooltip_C_ExecuteUbergraph_ProgressiveItem_Tooltip::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");

// Function ProgressiveItem_Tooltip.ProgressiveItem_Tooltip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ProgressiveItem_Tooltip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItem_Tooltip_C_PreConstruct) == 0x000001, "Wrong alignment on ProgressiveItem_Tooltip_C_PreConstruct");
static_assert(sizeof(ProgressiveItem_Tooltip_C_PreConstruct) == 0x000001, "Wrong size on ProgressiveItem_Tooltip_C_PreConstruct");
static_assert(offsetof(ProgressiveItem_Tooltip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ProgressiveItem_Tooltip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ProgressiveItem_Tooltip.ProgressiveItem_Tooltip_C.Update Text
// 0x0018 (0x0018 - 0x0000)
struct ProgressiveItem_Tooltip_C_Update_Text final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ProgressiveItem_Tooltip_C_Update_Text) == 0x000008, "Wrong alignment on ProgressiveItem_Tooltip_C_Update_Text");
static_assert(sizeof(ProgressiveItem_Tooltip_C_Update_Text) == 0x000018, "Wrong size on ProgressiveItem_Tooltip_C_Update_Text");
static_assert(offsetof(ProgressiveItem_Tooltip_C_Update_Text, InText) == 0x000000, "Member 'ProgressiveItem_Tooltip_C_Update_Text::InText' has a wrong offset!");

}

