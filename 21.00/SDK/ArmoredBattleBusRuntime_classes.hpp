#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArmoredBattleBusRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// Class ArmoredBattleBusRuntime.FortArmoredBattleBusPassengerAnimInstance
// 0x00C0 (0x2120 - 0x2060)
class UFortArmoredBattleBusPassengerAnimInstance final : public UFortPlayerAnimInstance
{
public:
	struct FRotator                               PreviousVehicleRotator;                            // 0x2058(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         SmoothedVehicleYawRate;                            // 0x2070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PawnSeat;                                          // 0x2074(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFrontTurretPassenger;                           // 0x2078(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRearTurretPassenger;                            // 0x2079(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_207A[0x2];                                     // 0x207A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x207C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YawDelta;                                          // 0x2080(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurretYaw;                                         // 0x2084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurretPitch;                                       // 0x2088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_208C[0x4];                                     // 0x208C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               TurretYawRotator;                                  // 0x2090(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         SlopeRollDegreeAngle;                              // 0x20A8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlopePitchDegreeAngle;                             // 0x20AC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HandAttachL;                                       // 0x20B0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HandAttachR;                                       // 0x20C8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERelativeTransformSpace                       TransformSpace;                                    // 0x20E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20E1[0x3];                                     // 0x20E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpdateYawDeltaSmoothedLerpRate;                    // 0x20E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TurretPassengerFront;                              // 0x20E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TurretPassengerRear;                               // 0x20EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FrontFootBoneName;                                 // 0x20F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RearFootBoneName;                                  // 0x20F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GunHandAttachBoneName_FrontLeft;                   // 0x20F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GunHandAttachBoneName_RearLeft;                    // 0x20FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GunHandAttachBoneName_FrontRight;                  // 0x2100(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GunHandAttachBoneName_RearRight;                   // 0x2104(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PassengerBoneName_Front;                           // 0x2108(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PassengerBoneName_Rear;                            // 0x210C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurretPitchDegMin;                                 // 0x2110(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurretPitchDegMax;                                 // 0x2114(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LocalPlayerTurretPitchEaseRate;                    // 0x2118(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_211C[0x4];                                     // 0x211C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GenerateCharacterPitchAndYawForSlopedTerrain(const class AFortAthenaVehicle* VehicleActor, float* TurretYaw_0, float* TurretPitch_0, struct FRotator* PawnYawRotator);
	struct FTransform GetFootAttachTransform(const class USkeletalMeshComponent* BusMeshComponent);
	struct FVector GetHandAttachLocation(const class USkeletalMeshComponent* BusMeshComponent, const class FName FrontHandAttachBoneName, const class FName RearHandAttachBoneName);
	struct FTransform GetPassengerTransform(const class USkeletalMeshComponent* BusMeshComponent);
	struct FVector UnrotateHandAttachLocation(const struct FVector& HandLocation, const struct FVector& FootLocation, const struct FRotator& FootRotation);
	void UpdateHandPositionsSlopeValues(const class USkeletalMeshComponent* BusMeshComponent);
	void UpdateSmoothedVehicleYawRate(const class AFortAthenaVehicle* VehicleActor);
	void UpdateYawDeltaSmoothed(const class AFortAthenaVehicle* VehicleActor, const class FName SocketName, const struct FRotator& NewRotation, float* SmoothedYawValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortArmoredBattleBusPassengerAnimInstance">();
	}
	static class UFortArmoredBattleBusPassengerAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortArmoredBattleBusPassengerAnimInstance>();
	}
};
static_assert(alignof(UFortArmoredBattleBusPassengerAnimInstance) == 0x000010, "Wrong alignment on UFortArmoredBattleBusPassengerAnimInstance");
static_assert(sizeof(UFortArmoredBattleBusPassengerAnimInstance) == 0x002120, "Wrong size on UFortArmoredBattleBusPassengerAnimInstance");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, PreviousVehicleRotator) == 0x002058, "Member 'UFortArmoredBattleBusPassengerAnimInstance::PreviousVehicleRotator' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, SmoothedVehicleYawRate) == 0x002070, "Member 'UFortArmoredBattleBusPassengerAnimInstance::SmoothedVehicleYawRate' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, PawnSeat) == 0x002074, "Member 'UFortArmoredBattleBusPassengerAnimInstance::PawnSeat' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, bIsFrontTurretPassenger) == 0x002078, "Member 'UFortArmoredBattleBusPassengerAnimInstance::bIsFrontTurretPassenger' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, bIsRearTurretPassenger) == 0x002079, "Member 'UFortArmoredBattleBusPassengerAnimInstance::bIsRearTurretPassenger' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, Speed) == 0x00207C, "Member 'UFortArmoredBattleBusPassengerAnimInstance::Speed' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, YawDelta) == 0x002080, "Member 'UFortArmoredBattleBusPassengerAnimInstance::YawDelta' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, TurretYaw) == 0x002084, "Member 'UFortArmoredBattleBusPassengerAnimInstance::TurretYaw' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, TurretPitch) == 0x002088, "Member 'UFortArmoredBattleBusPassengerAnimInstance::TurretPitch' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, TurretYawRotator) == 0x002090, "Member 'UFortArmoredBattleBusPassengerAnimInstance::TurretYawRotator' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, SlopeRollDegreeAngle) == 0x0020A8, "Member 'UFortArmoredBattleBusPassengerAnimInstance::SlopeRollDegreeAngle' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, SlopePitchDegreeAngle) == 0x0020AC, "Member 'UFortArmoredBattleBusPassengerAnimInstance::SlopePitchDegreeAngle' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, HandAttachL) == 0x0020B0, "Member 'UFortArmoredBattleBusPassengerAnimInstance::HandAttachL' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, HandAttachR) == 0x0020C8, "Member 'UFortArmoredBattleBusPassengerAnimInstance::HandAttachR' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, TransformSpace) == 0x0020E0, "Member 'UFortArmoredBattleBusPassengerAnimInstance::TransformSpace' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, UpdateYawDeltaSmoothedLerpRate) == 0x0020E4, "Member 'UFortArmoredBattleBusPassengerAnimInstance::UpdateYawDeltaSmoothedLerpRate' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, TurretPassengerFront) == 0x0020E8, "Member 'UFortArmoredBattleBusPassengerAnimInstance::TurretPassengerFront' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, TurretPassengerRear) == 0x0020EC, "Member 'UFortArmoredBattleBusPassengerAnimInstance::TurretPassengerRear' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, FrontFootBoneName) == 0x0020F0, "Member 'UFortArmoredBattleBusPassengerAnimInstance::FrontFootBoneName' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, RearFootBoneName) == 0x0020F4, "Member 'UFortArmoredBattleBusPassengerAnimInstance::RearFootBoneName' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, GunHandAttachBoneName_FrontLeft) == 0x0020F8, "Member 'UFortArmoredBattleBusPassengerAnimInstance::GunHandAttachBoneName_FrontLeft' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, GunHandAttachBoneName_RearLeft) == 0x0020FC, "Member 'UFortArmoredBattleBusPassengerAnimInstance::GunHandAttachBoneName_RearLeft' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, GunHandAttachBoneName_FrontRight) == 0x002100, "Member 'UFortArmoredBattleBusPassengerAnimInstance::GunHandAttachBoneName_FrontRight' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, GunHandAttachBoneName_RearRight) == 0x002104, "Member 'UFortArmoredBattleBusPassengerAnimInstance::GunHandAttachBoneName_RearRight' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, PassengerBoneName_Front) == 0x002108, "Member 'UFortArmoredBattleBusPassengerAnimInstance::PassengerBoneName_Front' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, PassengerBoneName_Rear) == 0x00210C, "Member 'UFortArmoredBattleBusPassengerAnimInstance::PassengerBoneName_Rear' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, TurretPitchDegMin) == 0x002110, "Member 'UFortArmoredBattleBusPassengerAnimInstance::TurretPitchDegMin' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, TurretPitchDegMax) == 0x002114, "Member 'UFortArmoredBattleBusPassengerAnimInstance::TurretPitchDegMax' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusPassengerAnimInstance, LocalPlayerTurretPitchEaseRate) == 0x002118, "Member 'UFortArmoredBattleBusPassengerAnimInstance::LocalPlayerTurretPitchEaseRate' has a wrong offset!");

// Class ArmoredBattleBusRuntime.FortArmoredBattleBusVehicleAnimInstance
// 0x0090 (0x0630 - 0x05A0)
class UFortArmoredBattleBusVehicleAnimInstance final : public UFortVehicleAnimInstance
{
public:
	float                                         FrontTurretAimPitch;                               // 0x05A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RearTurretAimPitch;                                // 0x05A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FrontYawDeltaSmoothed;                             // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RearYawDeltaSmoothed;                              // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothedVehicleYawRate;                            // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FrontYawDeltaSmoothedAlpha;                        // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RearYawDeltaSmoothedAlpha;                         // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               FrontWeaponYaw;                                    // 0x05C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               RearWeaponYaw;                                     // 0x05D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               PreviousVehicleRotator;                            // 0x05F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bHasFrontTurretPassenger;                          // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasRearTurretPassenger;                           // 0x0609(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60A[0x2];                                      // 0x060A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NetworkEaseRate;                                   // 0x060C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpdateYawDeltaSmoothedLerpRate;                    // 0x0610(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FrontPassengerSeatIndex;                           // 0x0614(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RearPassengerSeatIndex;                            // 0x0618(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FrontPassengerYawOffset;                           // 0x061C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RearPassengerYawOffset;                            // 0x0620(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FrontPassengerBoneName;                            // 0x0624(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RearPassengerBoneName;                             // 0x0628(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GetPitchAndYaw(const class AFortAthenaVehicle* VehicleActor, const class AFortPlayerPawn* GunnerActor, float* AdjustedPitch, float* AdjustedYaw, bool* bIsLocalPlayerControlled, struct FRotator* YawRotator);
	float UpdateSmoothedVehicleYawRate(const class AFortAthenaVehicle* VehicleActor, const struct FRotator& PreviousRotator);
	void UpdateTurretAimPitchWeaponYaw(const class AFortAthenaVehicle* OwnerVehicle, const class AFortPlayerPawn* GunnerActor, const class FName SocketName, const float YawOffset, float* TurretAimPitch, float* YawDeltaSmoothed, struct FRotator* WeaponYaw);
	float UpdateYawDeltaSmoothed(const class AFortAthenaVehicle* VehicleActor, const class FName SocketName, const struct FRotator& NewRotation, const float SmoothedYawValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortArmoredBattleBusVehicleAnimInstance">();
	}
	static class UFortArmoredBattleBusVehicleAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortArmoredBattleBusVehicleAnimInstance>();
	}
};
static_assert(alignof(UFortArmoredBattleBusVehicleAnimInstance) == 0x000010, "Wrong alignment on UFortArmoredBattleBusVehicleAnimInstance");
static_assert(sizeof(UFortArmoredBattleBusVehicleAnimInstance) == 0x000630, "Wrong size on UFortArmoredBattleBusVehicleAnimInstance");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, FrontTurretAimPitch) == 0x0005A0, "Member 'UFortArmoredBattleBusVehicleAnimInstance::FrontTurretAimPitch' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, RearTurretAimPitch) == 0x0005A4, "Member 'UFortArmoredBattleBusVehicleAnimInstance::RearTurretAimPitch' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, FrontYawDeltaSmoothed) == 0x0005A8, "Member 'UFortArmoredBattleBusVehicleAnimInstance::FrontYawDeltaSmoothed' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, RearYawDeltaSmoothed) == 0x0005AC, "Member 'UFortArmoredBattleBusVehicleAnimInstance::RearYawDeltaSmoothed' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, SmoothedVehicleYawRate) == 0x0005B0, "Member 'UFortArmoredBattleBusVehicleAnimInstance::SmoothedVehicleYawRate' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, FrontYawDeltaSmoothedAlpha) == 0x0005B4, "Member 'UFortArmoredBattleBusVehicleAnimInstance::FrontYawDeltaSmoothedAlpha' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, RearYawDeltaSmoothedAlpha) == 0x0005B8, "Member 'UFortArmoredBattleBusVehicleAnimInstance::RearYawDeltaSmoothedAlpha' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, FrontWeaponYaw) == 0x0005C0, "Member 'UFortArmoredBattleBusVehicleAnimInstance::FrontWeaponYaw' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, RearWeaponYaw) == 0x0005D8, "Member 'UFortArmoredBattleBusVehicleAnimInstance::RearWeaponYaw' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, PreviousVehicleRotator) == 0x0005F0, "Member 'UFortArmoredBattleBusVehicleAnimInstance::PreviousVehicleRotator' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, bHasFrontTurretPassenger) == 0x000608, "Member 'UFortArmoredBattleBusVehicleAnimInstance::bHasFrontTurretPassenger' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, bHasRearTurretPassenger) == 0x000609, "Member 'UFortArmoredBattleBusVehicleAnimInstance::bHasRearTurretPassenger' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, NetworkEaseRate) == 0x00060C, "Member 'UFortArmoredBattleBusVehicleAnimInstance::NetworkEaseRate' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, UpdateYawDeltaSmoothedLerpRate) == 0x000610, "Member 'UFortArmoredBattleBusVehicleAnimInstance::UpdateYawDeltaSmoothedLerpRate' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, FrontPassengerSeatIndex) == 0x000614, "Member 'UFortArmoredBattleBusVehicleAnimInstance::FrontPassengerSeatIndex' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, RearPassengerSeatIndex) == 0x000618, "Member 'UFortArmoredBattleBusVehicleAnimInstance::RearPassengerSeatIndex' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, FrontPassengerYawOffset) == 0x00061C, "Member 'UFortArmoredBattleBusVehicleAnimInstance::FrontPassengerYawOffset' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, RearPassengerYawOffset) == 0x000620, "Member 'UFortArmoredBattleBusVehicleAnimInstance::RearPassengerYawOffset' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, FrontPassengerBoneName) == 0x000624, "Member 'UFortArmoredBattleBusVehicleAnimInstance::FrontPassengerBoneName' has a wrong offset!");
static_assert(offsetof(UFortArmoredBattleBusVehicleAnimInstance, RearPassengerBoneName) == 0x000628, "Member 'UFortArmoredBattleBusVehicleAnimInstance::RearPassengerBoneName' has a wrong offset!");

}

