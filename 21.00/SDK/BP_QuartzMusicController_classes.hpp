#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuartzMusicController

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_QuartzMusicController.BP_QuartzMusicController_C
// 0x0020 (0x0290 - 0x0270)
class ABP_QuartzMusicController_C final : public AFortTimeSynthController
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UQuartzMusicTrackComponent_C*           CurrentTrack;                                      // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class FName Clock_Name, class UQuartzClockHandle* Clock_Handle)> OnClockCreated;                                    // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void PlayTrack(class UQuartzMusicTrackComponent_C* Track_Component);
	void RequestTrackPlayback(class UQuartzMusicTrackComponent_C* Requesting_Track, bool* Result);
	void StopCurrentTrack();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_QuartzMusicController_C">();
	}
	static class ABP_QuartzMusicController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_QuartzMusicController_C>();
	}
};
static_assert(alignof(ABP_QuartzMusicController_C) == 0x000008, "Wrong alignment on ABP_QuartzMusicController_C");
static_assert(sizeof(ABP_QuartzMusicController_C) == 0x000290, "Wrong size on ABP_QuartzMusicController_C");
static_assert(offsetof(ABP_QuartzMusicController_C, DefaultSceneRoot) == 0x000270, "Member 'ABP_QuartzMusicController_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_QuartzMusicController_C, CurrentTrack) == 0x000278, "Member 'ABP_QuartzMusicController_C::CurrentTrack' has a wrong offset!");
static_assert(offsetof(ABP_QuartzMusicController_C, OnClockCreated) == 0x000280, "Member 'ABP_QuartzMusicController_C::OnClockCreated' has a wrong offset!");

}

