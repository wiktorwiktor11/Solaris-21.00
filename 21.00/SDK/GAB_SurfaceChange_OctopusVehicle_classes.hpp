#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_SurfaceChange_OctopusVehicle

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_SurfaceChange_OctopusVehicle.GAB_SurfaceChange_OctopusVehicle_C
// 0x0188 (0x0C98 - 0x0B10)
class UGAB_SurfaceChange_OctopusVehicle_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Debug;                                             // 0x0B18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B19[0x7];                                      // 0x0B19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         RemovalDelay;                                      // 0x0B20(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_SurfaceChange_Ice;                              // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         BaseVerticalBounceVelocity;                        // 0x0B50(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         BaseLateralBounceVelocity;                         // 0x0B78(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         LavaBounceMultiplier;                              // 0x0BA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA4[0x4];                                      // 0x0BA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         BounceMultiplierStepAmount;                        // 0x0BA8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxBounceMultiplier;                               // 0x0BD0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         RandomConeAngle;                                   // 0x0BF8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ReplicatedRandomAngle;                             // 0x0C20(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C24[0x4];                                      // 0x0C24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         FacingAngleVelocityComponent;                      // 0x0C28(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  IceTags;                                           // 0x0C50(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  LavaTags;                                          // 0x0C70(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           LavaBounceCue;                                     // 0x0C90(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAB_SurfaceChange_OctopusVehicle(int32 EntryPoint);
	void HotfixableGEApplication(const struct FScalableFloat& Input, class UClass* GameplayEffectAppliedOnTrue, class UClass* GameplayEffectAppliedOnFalse);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void LavaBounce(class UObject* AvatarActor);
	void MulticastLavaBounce(class UObject* AvatarActor);
	void RemoveGameplayEffects();
	void SurfaceCleanup(EPhysicalSurface SurfaceType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_SurfaceChange_OctopusVehicle_C">();
	}
	static class UGAB_SurfaceChange_OctopusVehicle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_SurfaceChange_OctopusVehicle_C>();
	}
};
static_assert(alignof(UGAB_SurfaceChange_OctopusVehicle_C) == 0x000008, "Wrong alignment on UGAB_SurfaceChange_OctopusVehicle_C");
static_assert(sizeof(UGAB_SurfaceChange_OctopusVehicle_C) == 0x000C98, "Wrong size on UGAB_SurfaceChange_OctopusVehicle_C");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, UberGraphFrame) == 0x000B10, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, Debug) == 0x000B18, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::Debug' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, RemovalDelay) == 0x000B20, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::RemovalDelay' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, GE_SurfaceChange_Ice) == 0x000B48, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::GE_SurfaceChange_Ice' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, BaseVerticalBounceVelocity) == 0x000B50, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::BaseVerticalBounceVelocity' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, BaseLateralBounceVelocity) == 0x000B78, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::BaseLateralBounceVelocity' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, LavaBounceMultiplier) == 0x000BA0, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::LavaBounceMultiplier' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, BounceMultiplierStepAmount) == 0x000BA8, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::BounceMultiplierStepAmount' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, MaxBounceMultiplier) == 0x000BD0, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::MaxBounceMultiplier' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, RandomConeAngle) == 0x000BF8, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::RandomConeAngle' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, ReplicatedRandomAngle) == 0x000C20, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::ReplicatedRandomAngle' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, FacingAngleVelocityComponent) == 0x000C28, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::FacingAngleVelocityComponent' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, IceTags) == 0x000C50, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::IceTags' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, LavaTags) == 0x000C70, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::LavaTags' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_OctopusVehicle_C, LavaBounceCue) == 0x000C90, "Member 'UGAB_SurfaceChange_OctopusVehicle_C::LavaBounceCue' has a wrong offset!");

}

