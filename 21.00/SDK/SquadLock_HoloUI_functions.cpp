#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SquadLock_HoloUI

#include "Basic.hpp"

#include "SquadLock_HoloUI_classes.hpp"
#include "SquadLock_HoloUI_parameters.hpp"


namespace SDK
{

// Function SquadLock_HoloUI.SquadLock_HoloUI_C.EventFail
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ScreenText                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void USquadLock_HoloUI_C::EventFail(const class FText& ScreenText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "EventFail");

	Params::SquadLock_HoloUI_C_EventFail Parms{};

	Parms.ScreenText = std::move(ScreenText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SquadLock_HoloUI.SquadLock_HoloUI_C.EventScanning
// (BlueprintCallable, BlueprintEvent)

void USquadLock_HoloUI_C::EventScanning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "EventScanning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SquadLock_HoloUI.SquadLock_HoloUI_C.EventSuccess
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ScreenText                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void USquadLock_HoloUI_C::EventSuccess(const class FText& ScreenText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "EventSuccess");

	Params::SquadLock_HoloUI_C_EventSuccess Parms{};

	Parms.ScreenText = std::move(ScreenText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SquadLock_HoloUI.SquadLock_HoloUI_C.EventTargetLost
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ScreenText                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void USquadLock_HoloUI_C::EventTargetLost(const class FText& ScreenText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "EventTargetLost");

	Params::SquadLock_HoloUI_C_EventTargetLost Parms{};

	Parms.ScreenText = std::move(ScreenText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SquadLock_HoloUI.SquadLock_HoloUI_C.ExecuteUbergraph_SquadLock_HoloUI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USquadLock_HoloUI_C::ExecuteUbergraph_SquadLock_HoloUI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "ExecuteUbergraph_SquadLock_HoloUI");

	Params::SquadLock_HoloUI_C_ExecuteUbergraph_SquadLock_HoloUI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SquadLock_HoloUI.SquadLock_HoloUI_C.PlayUnlockAnim
// (BlueprintCallable, BlueprintEvent)

void USquadLock_HoloUI_C::PlayUnlockAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "PlayUnlockAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SquadLock_HoloUI.SquadLock_HoloUI_C.SetMeepleVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USquadLock_HoloUI_C::SetMeepleVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "SetMeepleVisibility");

	Params::SquadLock_HoloUI_C_SetMeepleVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SquadLock_HoloUI.SquadLock_HoloUI_C.ShowPadlock
// (BlueprintCallable, BlueprintEvent)

void USquadLock_HoloUI_C::ShowPadlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "ShowPadlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SquadLock_HoloUI.SquadLock_HoloUI_C.UpdateCurrentPlayerCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumPlayers                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumPendingPlayers                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USquadLock_HoloUI_C::UpdateCurrentPlayerCount(int32 NumPlayers, int32 NumPendingPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "UpdateCurrentPlayerCount");

	Params::SquadLock_HoloUI_C_UpdateCurrentPlayerCount Parms{};

	Parms.NumPlayers = NumPlayers;
	Parms.NumPendingPlayers = NumPendingPlayers;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SquadLock_HoloUI.SquadLock_HoloUI_C.UpdateMaxPlayerCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CountNeeded                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USquadLock_HoloUI_C::UpdateMaxPlayerCount(int32 CountNeeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "UpdateMaxPlayerCount");

	Params::SquadLock_HoloUI_C_UpdateMaxPlayerCount Parms{};

	Parms.CountNeeded = CountNeeded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SquadLock_HoloUI.SquadLock_HoloUI_C.UpdateUnlockState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInLocked                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USquadLock_HoloUI_C::UpdateUnlockState(bool bInLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquadLock_HoloUI_C", "UpdateUnlockState");

	Params::SquadLock_HoloUI_C_UpdateUnlockState Parms{};

	Parms.bInLocked = bInLocked;

	UObject::ProcessEvent(Func, &Parms);
}

}

