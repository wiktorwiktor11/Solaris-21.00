#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DuelObserver

#include "Basic.hpp"

#include "GA_DuelObserver_classes.hpp"
#include "GA_DuelObserver_parameters.hpp"


namespace SDK
{

// Function GA_DuelObserver.GA_DuelObserver_C.ExecuteUbergraph_GA_DuelObserver
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_DuelObserver_C::ExecuteUbergraph_GA_DuelObserver(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_DuelObserver_C", "ExecuteUbergraph_GA_DuelObserver");

	Params::GA_DuelObserver_C_ExecuteUbergraph_GA_DuelObserver Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_DuelObserver.GA_DuelObserver_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_DuelObserver_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_DuelObserver_C", "K2_ActivateAbilityFromEvent");

	Params::GA_DuelObserver_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_DuelObserver.GA_DuelObserver_C.OnDuelChange
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EDuelState                              NewDuelState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDuelOverlayData                 ChangedDuelOverlayData                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_DuelObserver_C::OnDuelChange(EDuelState NewDuelState, const struct FDuelOverlayData& ChangedDuelOverlayData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_DuelObserver_C", "OnDuelChange");

	Params::GA_DuelObserver_C_OnDuelChange Parms{};

	Parms.NewDuelState = NewDuelState;
	Parms.ChangedDuelOverlayData = std::move(ChangedDuelOverlayData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_DuelObserver.GA_DuelObserver_C.UpdateDuelUI
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDuelState                              Duel_State                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDuelOverlayData                 Cached_Duel_Overlay_Data                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_DuelObserver_C::UpdateDuelUI(EDuelState Duel_State, const struct FDuelOverlayData& Cached_Duel_Overlay_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_DuelObserver_C", "UpdateDuelUI");

	Params::GA_DuelObserver_C_UpdateDuelUI Parms{};

	Parms.Duel_State = Duel_State;
	Parms.Cached_Duel_Overlay_Data = std::move(Cached_Duel_Overlay_Data);

	UObject::ProcessEvent(Func, &Parms);
}

}

