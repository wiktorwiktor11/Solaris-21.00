#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SOGB_WaitOnSquadLock

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SOGB_WaitOnSquadLock.SOGB_WaitOnSquadLock_C.K2_OnTriggeredCharacter
// 0x0018 (0x0018 - 0x0000)
struct SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter final
{
public:
	class ACharacter*                             Avatar;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UGameplayBehaviorConfig*          Config;                                            // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SmartObjectOwner;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter) == 0x000008, "Wrong alignment on SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter");
static_assert(sizeof(SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter) == 0x000018, "Wrong size on SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter, Avatar) == 0x000000, "Member 'SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter::Avatar' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter, Config) == 0x000008, "Member 'SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter::Config' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter, SmartObjectOwner) == 0x000010, "Member 'SOGB_WaitOnSquadLock_C_K2_OnTriggeredCharacter::SmartObjectOwner' has a wrong offset!");

// Function SOGB_WaitOnSquadLock.SOGB_WaitOnSquadLock_C.K2_OnFinishedCharacter
// 0x0010 (0x0010 - 0x0000)
struct SOGB_WaitOnSquadLock_C_K2_OnFinishedCharacter final
{
public:
	class ACharacter*                             Avatar;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasInterrupted;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SOGB_WaitOnSquadLock_C_K2_OnFinishedCharacter) == 0x000008, "Wrong alignment on SOGB_WaitOnSquadLock_C_K2_OnFinishedCharacter");
static_assert(sizeof(SOGB_WaitOnSquadLock_C_K2_OnFinishedCharacter) == 0x000010, "Wrong size on SOGB_WaitOnSquadLock_C_K2_OnFinishedCharacter");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_K2_OnFinishedCharacter, Avatar) == 0x000000, "Member 'SOGB_WaitOnSquadLock_C_K2_OnFinishedCharacter::Avatar' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_K2_OnFinishedCharacter, bWasInterrupted) == 0x000008, "Member 'SOGB_WaitOnSquadLock_C_K2_OnFinishedCharacter::bWasInterrupted' has a wrong offset!");

// Function SOGB_WaitOnSquadLock.SOGB_WaitOnSquadLock_C.ExecuteUbergraph_SOGB_WaitOnSquadLock
// 0x0088 (0x0088 - 0x0000)
struct SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_Event_Avatar;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasInterrupted;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        CallFunc_GetRandomEmote_RandomEmote;               // 0x0014(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPrimaryAssetId_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaAIBotController*             K2Node_DynamicCast_AsFort_Athena_AIBot_Controller; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_Event_Avatar_1;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UGameplayBehaviorConfig*          K2Node_Event_Config;                               // 0x0050(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_SmartObjectOwner;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaAIBotController*             K2Node_DynamicCast_AsFort_Athena_AIBot_Controller_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock) == 0x000008, "Wrong alignment on SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock");
static_assert(sizeof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock) == 0x000088, "Wrong size on SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, EntryPoint) == 0x000000, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::EntryPoint' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_Event_Avatar) == 0x000008, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_Event_Avatar' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_Event_bWasInterrupted) == 0x000010, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_Event_bWasInterrupted' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, CallFunc_GetRandomEmote_RandomEmote) == 0x000014, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::CallFunc_GetRandomEmote_RandomEmote' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000020, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, CallFunc_IsValidPrimaryAssetId_ReturnValue) == 0x000029, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::CallFunc_IsValidPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_DynamicCast_AsFort_Athena_AIBot_Controller) == 0x000038, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_DynamicCast_AsFort_Athena_AIBot_Controller' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_Event_Avatar_1) == 0x000048, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_Event_Avatar_1' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_Event_Config) == 0x000050, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_Event_Config' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_Event_SmartObjectOwner) == 0x000058, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_Event_SmartObjectOwner' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x000060, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, CallFunc_GetController_ReturnValue_1) == 0x000070, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_DynamicCast_AsFort_Athena_AIBot_Controller_1) == 0x000078, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_DynamicCast_AsFort_Athena_AIBot_Controller_1' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'SOGB_WaitOnSquadLock_C_ExecuteUbergraph_SOGB_WaitOnSquadLock::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function SOGB_WaitOnSquadLock.SOGB_WaitOnSquadLock_C.GetRandomEmote
// 0x0018 (0x0018 - 0x0000)
struct SOGB_WaitOnSquadLock_C_GetRandomEmote final
{
public:
	struct FPrimaryAssetId                        RandomEmote;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SOGB_WaitOnSquadLock_C_GetRandomEmote) == 0x000004, "Wrong alignment on SOGB_WaitOnSquadLock_C_GetRandomEmote");
static_assert(sizeof(SOGB_WaitOnSquadLock_C_GetRandomEmote) == 0x000018, "Wrong size on SOGB_WaitOnSquadLock_C_GetRandomEmote");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_GetRandomEmote, RandomEmote) == 0x000000, "Member 'SOGB_WaitOnSquadLock_C_GetRandomEmote::RandomEmote' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_GetRandomEmote, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'SOGB_WaitOnSquadLock_C_GetRandomEmote::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_GetRandomEmote, CallFunc_Array_IsEmpty_ReturnValue) == 0x00000C, "Member 'SOGB_WaitOnSquadLock_C_GetRandomEmote::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_GetRandomEmote, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'SOGB_WaitOnSquadLock_C_GetRandomEmote::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SOGB_WaitOnSquadLock_C_GetRandomEmote, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000014, "Member 'SOGB_WaitOnSquadLock_C_GetRandomEmote::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

}

