#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlidingLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "SlidingLayerAnimBP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass SlidingLayerAnimBP.SlidingLayerAnimBP_C
// 0x1290 (0x1700 - 0x0470)
class USlidingLayerAnimBP_C final : public UFortSlidingLayerAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0470(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct SlidingLayerAnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0478(0x0040)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x04B8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x04C0(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x04C8(0x00C0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_5;            // 0x0588(0x00D0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0658(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x0678(0x0068)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x06E0(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x0728(0x0010)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x0738(0x0068)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_4;            // 0x07A0(0x00D0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0870(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0890(0x00C0)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_1;                    // 0x0950(0x00A8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x09F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0A20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0A48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0A70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0A98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0AC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0AE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0B10(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0B38(0x0048)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_3;            // 0x0B80(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0C50(0x0040)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x0C90(0x0068)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_2;            // 0x0CF8(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0DC8(0x0068)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0E30(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0E70(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0E90(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0EF8(0x0020)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_1;            // 0x0F18(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0FE8(0x0040)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x1028(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1090(0x0020)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x10B0(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1180(0x0040)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x11C0(0x0068)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1228(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1248(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1300(0x0100)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1400(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1448(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1470(0x0028)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x1498(0x00A8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x1540(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1560(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1620(0x0040)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1660(0x0020)()
	bool                                          IsKneeSliding;                                     // 0x1680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          b_KneeSlideNote_bTransition_FullBody_Sprinting;    // 0x1681(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1682[0x6];                                     // 0x1682(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               KneeSlideLowerBodyInitialRot_0;                    // 0x1688(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               KneeSlideLowerBodyInitialRotSmooth_0;              // 0x16A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AFortPlayerPawn*                        FortPlayerPawn_0;                                  // 0x16B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                Fort_Player_Anim_Instance;                         // 0x16C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time_;                                       // 0x16C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KneeSlideLowerBodyYawOffset;                       // 0x16CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KneeSlideRootYawOffset_0;                          // 0x16D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VelocityAimYawDelta_0;                             // 0x16D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KneeSlideSlopeAngle_0;                             // 0x16D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KneeSlideSlopeYaw_0;                               // 0x16DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KneeSlideSlopeYawMinusRootRot_0;                   // 0x16E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitionToKneeSlide;                             // 0x16E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E5[0x3];                                     // 0x16E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         KneeSlideForwardVectorVelocityDelta_0;             // 0x16E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitiatedSlideUpHill;                              // 0x16EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BypassEntry_0;                                     // 0x16ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16EE[0x2];                                     // 0x16EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpineTweakLean_0;                                  // 0x16F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_SlidingLayerAnimBP(int32 EntryPoint);
	void MovementMode_LocomotionUpperBodyAdditive(const struct FPoseLink& InPose_0, struct FPoseLink* MovementMode_LocomotionUpperBodyAdditive_0);
	void MovementMode_LowerBodyOverride(const struct FPoseLink& InPose, struct FPoseLink* MovementMode_LowerBodyOverride_0);
	void MovementMode_UpperBodyPose(const struct FPoseLink& UppperBodyPose_BasePose, struct FPoseLink* MovementMode_UpperBodyPose_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SlidingLayerAnimBP_C">();
	}
	static class USlidingLayerAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USlidingLayerAnimBP_C>();
	}
};
static_assert(alignof(USlidingLayerAnimBP_C) == 0x000010, "Wrong alignment on USlidingLayerAnimBP_C");
static_assert(sizeof(USlidingLayerAnimBP_C) == 0x001700, "Wrong size on USlidingLayerAnimBP_C");
static_assert(offsetof(USlidingLayerAnimBP_C, UberGraphFrame) == 0x000470, "Member 'USlidingLayerAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, __AnimBlueprintMutables) == 0x000478, "Member 'USlidingLayerAnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x0004B8, "Member 'USlidingLayerAnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimBlueprintExtension_Base) == 0x0004C0, "Member 'USlidingLayerAnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_2) == 0x0004C8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_5) == 0x000588, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_3) == 0x000658, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x000678, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x0006E0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_IdentityPose) == 0x000728, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x000738, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_4) == 0x0007A0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_2) == 0x000870, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_1) == 0x000890, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_RotateRootBone_1) == 0x000950, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_RotateRootBone_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x0009F8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000A20, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000A48, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000A70, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000A98, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000AC0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000AE8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult) == 0x000B10, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000B38, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_3) == 0x000B80, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000C50, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x000C90, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_2) == 0x000CF8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000DC8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000E30, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_3) == 0x000E70, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000E90, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_2) == 0x000EF8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_1) == 0x000F18, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000FE8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x001028, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_1) == 0x001090, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x0010B0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001180, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x0011C0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult) == 0x001228, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateMachine) == 0x001248, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001300, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool) == 0x001400, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001448, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_UseCachedPose) == 0x001470, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_RotateRootBone) == 0x001498, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_1) == 0x001540, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose) == 0x001560, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer) == 0x001620, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root) == 0x001660, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, IsKneeSliding) == 0x001680, "Member 'USlidingLayerAnimBP_C::IsKneeSliding' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, b_KneeSlideNote_bTransition_FullBody_Sprinting) == 0x001681, "Member 'USlidingLayerAnimBP_C::b_KneeSlideNote_bTransition_FullBody_Sprinting' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyInitialRot_0) == 0x001688, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyInitialRot_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyInitialRotSmooth_0) == 0x0016A0, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyInitialRotSmooth_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, FortPlayerPawn_0) == 0x0016B8, "Member 'USlidingLayerAnimBP_C::FortPlayerPawn_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, Fort_Player_Anim_Instance) == 0x0016C0, "Member 'USlidingLayerAnimBP_C::Fort_Player_Anim_Instance' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, Delta_Time_) == 0x0016C8, "Member 'USlidingLayerAnimBP_C::Delta_Time_' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyYawOffset) == 0x0016CC, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyYawOffset' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideRootYawOffset_0) == 0x0016D0, "Member 'USlidingLayerAnimBP_C::KneeSlideRootYawOffset_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, VelocityAimYawDelta_0) == 0x0016D4, "Member 'USlidingLayerAnimBP_C::VelocityAimYawDelta_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeAngle_0) == 0x0016D8, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeAngle_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeYaw_0) == 0x0016DC, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeYaw_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeYawMinusRootRot_0) == 0x0016E0, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeYawMinusRootRot_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, TransitionToKneeSlide) == 0x0016E4, "Member 'USlidingLayerAnimBP_C::TransitionToKneeSlide' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideForwardVectorVelocityDelta_0) == 0x0016E8, "Member 'USlidingLayerAnimBP_C::KneeSlideForwardVectorVelocityDelta_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, InitiatedSlideUpHill) == 0x0016EC, "Member 'USlidingLayerAnimBP_C::InitiatedSlideUpHill' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, BypassEntry_0) == 0x0016ED, "Member 'USlidingLayerAnimBP_C::BypassEntry_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, SpineTweakLean_0) == 0x0016F0, "Member 'USlidingLayerAnimBP_C::SpineTweakLean_0' has a wrong offset!");

}

