#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KillerHealthAndShield

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass KillerHealthAndShield.KillerHealthAndShield_C
// 0x0058 (0x0310 - 0x02B8)
class UKillerHealthAndShield_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       CommonText_Health;                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonText_Shields;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Health_Bar;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_1;                                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               IconFixedSpacing;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               IconFixedSpacing_1;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              IconScale;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              IconScale_1;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Shield_Bar;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_KillerHealthAndShield(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Set_Health_And_Shield(float Health_PCT, float Shield_PCT);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"KillerHealthAndShield_C">();
	}
	static class UKillerHealthAndShield_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKillerHealthAndShield_C>();
	}
};
static_assert(alignof(UKillerHealthAndShield_C) == 0x000008, "Wrong alignment on UKillerHealthAndShield_C");
static_assert(sizeof(UKillerHealthAndShield_C) == 0x000310, "Wrong size on UKillerHealthAndShield_C");
static_assert(offsetof(UKillerHealthAndShield_C, UberGraphFrame) == 0x0002B8, "Member 'UKillerHealthAndShield_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UKillerHealthAndShield_C, CommonText_Health) == 0x0002C0, "Member 'UKillerHealthAndShield_C::CommonText_Health' has a wrong offset!");
static_assert(offsetof(UKillerHealthAndShield_C, CommonText_Shields) == 0x0002C8, "Member 'UKillerHealthAndShield_C::CommonText_Shields' has a wrong offset!");
static_assert(offsetof(UKillerHealthAndShield_C, Health_Bar) == 0x0002D0, "Member 'UKillerHealthAndShield_C::Health_Bar' has a wrong offset!");
static_assert(offsetof(UKillerHealthAndShield_C, Icon) == 0x0002D8, "Member 'UKillerHealthAndShield_C::Icon' has a wrong offset!");
static_assert(offsetof(UKillerHealthAndShield_C, Icon_1) == 0x0002E0, "Member 'UKillerHealthAndShield_C::Icon_1' has a wrong offset!");
static_assert(offsetof(UKillerHealthAndShield_C, IconFixedSpacing) == 0x0002E8, "Member 'UKillerHealthAndShield_C::IconFixedSpacing' has a wrong offset!");
static_assert(offsetof(UKillerHealthAndShield_C, IconFixedSpacing_1) == 0x0002F0, "Member 'UKillerHealthAndShield_C::IconFixedSpacing_1' has a wrong offset!");
static_assert(offsetof(UKillerHealthAndShield_C, IconScale) == 0x0002F8, "Member 'UKillerHealthAndShield_C::IconScale' has a wrong offset!");
static_assert(offsetof(UKillerHealthAndShield_C, IconScale_1) == 0x000300, "Member 'UKillerHealthAndShield_C::IconScale_1' has a wrong offset!");
static_assert(offsetof(UKillerHealthAndShield_C, Shield_Bar) == 0x000308, "Member 'UKillerHealthAndShield_C::Shield_Bar' has a wrong offset!");

}

