#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_Galileo_Lobster_Parent

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Athena_Galileo_Lobster_Parent.B_Athena_Galileo_Lobster_Parent_C
// 0x01D8 (0x11A8 - 0x0FD0)
class AB_Athena_Galileo_Lobster_Parent_C final : public AFortWeapon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0FD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_IdleFX;                                         // 0x0FD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_AnimTrail;                                      // 0x0FE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Galileo_Lobster_Blade_Masked_VisibleUnderwater_; // 0x0FE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Galileo_Lobster_Blade;                          // 0x0FF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        IdleAudio;                                         // 0x0FF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x1000(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Activation_A485AC534A744AA4695BBF8F84A8850F; // 0x1008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_A485AC534A744AA4695BBF8F84A8850F; // 0x100C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_100D[0x3];                                     // 0x100D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x1010(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerCharacter;                                   // 0x1018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BladeVisibility;                                   // 0x1020(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1021[0x7];                                     // 0x1021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     ImpactDecal;                                       // 0x1028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactTipLocation;                                 // 0x1030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SlashImpactColor;                                  // 0x1048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               MeleeImpact;                                       // 0x1060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OpenSound;                                         // 0x1068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CloseSound;                                        // 0x1070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BladeHueColorShift;                                // 0x1078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BladeRedBlueSwitch;                                // 0x107C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BladeEmissiveIntensity;                            // 0x1080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1084[0x4];                                     // 0x1084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BlockingImpactColor;                               // 0x1088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortSkeletalAudioComponent*            SkeletalAudioComponent;                            // 0x10A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_MeleeAttackAbility;                              // 0x10A8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_HudElementToHide;                                // 0x10C8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           Timer_ShowReticleStatus;                           // 0x10E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentPoise;                                      // 0x10F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F4[0x4];                                     // 0x10F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_BlockBreakWarning;                           // 0x10F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_ActionsThatHideBlade;                           // 0x1100(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TScriptInterface<class ICameraLensEffectInterface> LensEffectInterface_BlockBreakWarning;             // 0x1120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          InstantOn;                                         // 0x1130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1131[0x7];                                     // 0x1131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             IdleSound;                                         // 0x1138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IdleFXAttachSocket;                                // 0x1140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               IdleFX_Location_Rule;                              // 0x1144(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Idle_FX_Rotation_Rule;                             // 0x1145(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Idle_FX_Scale_Rule;                                // 0x1146(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1147[0x1];                                     // 0x1147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Swing_FX_Template;                                 // 0x1148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SwingFXSocket;                                     // 0x1150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               SwingFX_Location_Rule;                             // 0x1154(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Swing_FX_Rotation_Rule;                            // 0x1155(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachmentRule                               Swing_FX_Scale_Rule;                               // 0x1156(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAnimTrails;                                     // 0x1157(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Anim_Trail_Template;                               // 0x1158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UParticleSystem*                        AnimTrailsParticles;                               // 0x1160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FirstSocketName;                                   // 0x1168(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Second_Socket_Name;                                // 0x116C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Width;                                             // 0x1170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OverrideFirstSocketName;                           // 0x1174(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FName                                   OverrideSecond_Socket_Name;                        // 0x1178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FLinearColor                           Blade_Color_Hot;                                   // 0x117C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Blade_Color_Cool;                                  // 0x118C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119C[0x4];                                     // 0x119C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CloseAudio;                                        // 0x11A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimTrailNotifyBegin(bool bActive);
	void AnimTrailNotifyEnd();
	void Bind_Swing_and_Anim_Trail_Events();
	void BlockBreak();
	void CreateSkeletalAudioComp(class UFortSkeletalAudioComponent** Component);
	void CurrentPoiseChanged(float CurrentPoise_0);
	void DeactivateBlockBreakWarning();
	void DoBulletBlockEffect(const struct FVector& ImpactLocation);
	void ExecuteUbergraph_B_Athena_Galileo_Lobster_Parent(int32 EntryPoint);
	void Holstered();
	void InstantOnFX();
	void K2_OnUnEquip();
	void OnPlayImpactFX(const struct FHitResult& HitResult, EPhysicalSurface ImpactPhysicalSurface, class UFXSystemComponent* SpawnedPSC);
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnRep_BladeVisibility();
	void OnWeaponAttached();
	void OnWeaponDetached();
	void OnWeaponVisibilityChanged(bool bVisible, bool bSetForLocalControllerOnly);
	void ReceiveBeginPlay();
	void ReticleStatusDisplay(bool Hide);
	void RPCUnequip();
	void SetBladeVisibility(bool Visible);
	void ShowReticleStatusDisplay();
	void Spawn_Impact_Particle_Effects(const struct FRotator& Rotation_from_Tip, const struct FVector& ImpactPoint, class AActor* Hit_Actor, const struct FVector& Trace_Start);
	void StartIdleFX();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void ToggleDodgePrompt(bool Visible);
	void ToggleDynamicAudio(bool CanPlayIdleAudio);
	void TurnOnLobster();
	void UnbindSwingAndAnimTrailEvents();
	void Unholstered();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Athena_Galileo_Lobster_Parent_C">();
	}
	static class AB_Athena_Galileo_Lobster_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Athena_Galileo_Lobster_Parent_C>();
	}
};
static_assert(alignof(AB_Athena_Galileo_Lobster_Parent_C) == 0x000008, "Wrong alignment on AB_Athena_Galileo_Lobster_Parent_C");
static_assert(sizeof(AB_Athena_Galileo_Lobster_Parent_C) == 0x0011A8, "Wrong size on AB_Athena_Galileo_Lobster_Parent_C");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, UberGraphFrame) == 0x000FD0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, NS_IdleFX) == 0x000FD8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::NS_IdleFX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, NS_AnimTrail) == 0x000FE0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::NS_AnimTrail' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, SM_Galileo_Lobster_Blade_Masked_VisibleUnderwater_) == 0x000FE8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::SM_Galileo_Lobster_Blade_Masked_VisibleUnderwater_' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, SM_Galileo_Lobster_Blade) == 0x000FF0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::SM_Galileo_Lobster_Blade' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, IdleAudio) == 0x000FF8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::IdleAudio' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Scene) == 0x001000, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Scene' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Timeline_1_Activation_A485AC534A744AA4695BBF8F84A8850F) == 0x001008, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Timeline_1_Activation_A485AC534A744AA4695BBF8F84A8850F' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Timeline_1__Direction_A485AC534A744AA4695BBF8F84A8850F) == 0x00100C, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Timeline_1__Direction_A485AC534A744AA4695BBF8F84A8850F' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Timeline_1) == 0x001010, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, PlayerCharacter) == 0x001018, "Member 'AB_Athena_Galileo_Lobster_Parent_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BladeVisibility) == 0x001020, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BladeVisibility' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, ImpactDecal) == 0x001028, "Member 'AB_Athena_Galileo_Lobster_Parent_C::ImpactDecal' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, ImpactTipLocation) == 0x001030, "Member 'AB_Athena_Galileo_Lobster_Parent_C::ImpactTipLocation' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, SlashImpactColor) == 0x001048, "Member 'AB_Athena_Galileo_Lobster_Parent_C::SlashImpactColor' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, MeleeImpact) == 0x001060, "Member 'AB_Athena_Galileo_Lobster_Parent_C::MeleeImpact' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, OpenSound) == 0x001068, "Member 'AB_Athena_Galileo_Lobster_Parent_C::OpenSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, CloseSound) == 0x001070, "Member 'AB_Athena_Galileo_Lobster_Parent_C::CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BladeHueColorShift) == 0x001078, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BladeHueColorShift' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BladeRedBlueSwitch) == 0x00107C, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BladeRedBlueSwitch' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BladeEmissiveIntensity) == 0x001080, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BladeEmissiveIntensity' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BlockingImpactColor) == 0x001088, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BlockingImpactColor' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, SkeletalAudioComponent) == 0x0010A0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::SkeletalAudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, T_MeleeAttackAbility) == 0x0010A8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::T_MeleeAttackAbility' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, T_HudElementToHide) == 0x0010C8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::T_HudElementToHide' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Timer_ShowReticleStatus) == 0x0010E8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Timer_ShowReticleStatus' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, CurrentPoise) == 0x0010F0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::CurrentPoise' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Timer_BlockBreakWarning) == 0x0010F8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Timer_BlockBreakWarning' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, TC_ActionsThatHideBlade) == 0x001100, "Member 'AB_Athena_Galileo_Lobster_Parent_C::TC_ActionsThatHideBlade' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, LensEffectInterface_BlockBreakWarning) == 0x001120, "Member 'AB_Athena_Galileo_Lobster_Parent_C::LensEffectInterface_BlockBreakWarning' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, InstantOn) == 0x001130, "Member 'AB_Athena_Galileo_Lobster_Parent_C::InstantOn' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, IdleSound) == 0x001138, "Member 'AB_Athena_Galileo_Lobster_Parent_C::IdleSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, IdleFXAttachSocket) == 0x001140, "Member 'AB_Athena_Galileo_Lobster_Parent_C::IdleFXAttachSocket' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, IdleFX_Location_Rule) == 0x001144, "Member 'AB_Athena_Galileo_Lobster_Parent_C::IdleFX_Location_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Idle_FX_Rotation_Rule) == 0x001145, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Idle_FX_Rotation_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Idle_FX_Scale_Rule) == 0x001146, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Idle_FX_Scale_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Swing_FX_Template) == 0x001148, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Swing_FX_Template' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, SwingFXSocket) == 0x001150, "Member 'AB_Athena_Galileo_Lobster_Parent_C::SwingFXSocket' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, SwingFX_Location_Rule) == 0x001154, "Member 'AB_Athena_Galileo_Lobster_Parent_C::SwingFX_Location_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Swing_FX_Rotation_Rule) == 0x001155, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Swing_FX_Rotation_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Swing_FX_Scale_Rule) == 0x001156, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Swing_FX_Scale_Rule' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, UseAnimTrails) == 0x001157, "Member 'AB_Athena_Galileo_Lobster_Parent_C::UseAnimTrails' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Anim_Trail_Template) == 0x001158, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Anim_Trail_Template' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, AnimTrailsParticles) == 0x001160, "Member 'AB_Athena_Galileo_Lobster_Parent_C::AnimTrailsParticles' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, FirstSocketName) == 0x001168, "Member 'AB_Athena_Galileo_Lobster_Parent_C::FirstSocketName' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Second_Socket_Name) == 0x00116C, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Second_Socket_Name' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Width) == 0x001170, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Width' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, OverrideFirstSocketName) == 0x001174, "Member 'AB_Athena_Galileo_Lobster_Parent_C::OverrideFirstSocketName' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, OverrideSecond_Socket_Name) == 0x001178, "Member 'AB_Athena_Galileo_Lobster_Parent_C::OverrideSecond_Socket_Name' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Blade_Color_Hot) == 0x00117C, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Blade_Color_Hot' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Blade_Color_Cool) == 0x00118C, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Blade_Color_Cool' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, CloseAudio) == 0x0011A0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::CloseAudio' has a wrong offset!");

}

