#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RealitySaplingPingMarker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function RealitySaplingPingMarker.RealitySaplingPingMarker_C.ExecuteUbergraph_RealitySaplingPingMarker
// 0x0188 (0x0188 - 0x0000)
struct RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AB_SMA_Athena_RealitySapling_Parent_C* Sapling)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFortWorldMarkerData                   K2Node_Event_FortWorldMarkerData;                  // 0x0010(0x0160)(ConstParm)
	class AB_SMA_Athena_RealitySapling_Parent_C*  K2Node_CustomEvent_Sapling;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_SMA_Athena_RealitySapling_Parent_C*  K2Node_DynamicCast_AsB_SMA_Athena_Reality_Sapling_Parent; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker) == 0x000008, "Wrong alignment on RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker");
static_assert(sizeof(RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker) == 0x000188, "Wrong size on RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker");
static_assert(offsetof(RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker, EntryPoint) == 0x000000, "Member 'RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker::EntryPoint' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker, K2Node_Event_FortWorldMarkerData) == 0x000010, "Member 'RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker::K2Node_Event_FortWorldMarkerData' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker, K2Node_CustomEvent_Sapling) == 0x000170, "Member 'RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker::K2Node_CustomEvent_Sapling' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker, K2Node_DynamicCast_AsB_SMA_Athena_Reality_Sapling_Parent) == 0x000178, "Member 'RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker::K2Node_DynamicCast_AsB_SMA_Athena_Reality_Sapling_Parent' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'RealitySaplingPingMarker_C_ExecuteUbergraph_RealitySaplingPingMarker::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function RealitySaplingPingMarker.RealitySaplingPingMarker_C.OnSetMarkerData
// 0x0160 (0x0160 - 0x0000)
struct RealitySaplingPingMarker_C_OnSetMarkerData final
{
public:
	struct FFortWorldMarkerData                   FortWorldMarkerData;                               // 0x0000(0x0160)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(RealitySaplingPingMarker_C_OnSetMarkerData) == 0x000008, "Wrong alignment on RealitySaplingPingMarker_C_OnSetMarkerData");
static_assert(sizeof(RealitySaplingPingMarker_C_OnSetMarkerData) == 0x000160, "Wrong size on RealitySaplingPingMarker_C_OnSetMarkerData");
static_assert(offsetof(RealitySaplingPingMarker_C_OnSetMarkerData, FortWorldMarkerData) == 0x000000, "Member 'RealitySaplingPingMarker_C_OnSetMarkerData::FortWorldMarkerData' has a wrong offset!");

// Function RealitySaplingPingMarker.RealitySaplingPingMarker_C.SaplingUpdateEvent
// 0x0008 (0x0008 - 0x0000)
struct RealitySaplingPingMarker_C_SaplingUpdateEvent final
{
public:
	class AB_SMA_Athena_RealitySapling_Parent_C*  Sapling;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RealitySaplingPingMarker_C_SaplingUpdateEvent) == 0x000008, "Wrong alignment on RealitySaplingPingMarker_C_SaplingUpdateEvent");
static_assert(sizeof(RealitySaplingPingMarker_C_SaplingUpdateEvent) == 0x000008, "Wrong size on RealitySaplingPingMarker_C_SaplingUpdateEvent");
static_assert(offsetof(RealitySaplingPingMarker_C_SaplingUpdateEvent, Sapling) == 0x000000, "Member 'RealitySaplingPingMarker_C_SaplingUpdateEvent::Sapling' has a wrong offset!");

// Function RealitySaplingPingMarker.RealitySaplingPingMarker_C.UpdateColor
// 0x0048 (0x0048 - 0x0000)
struct RealitySaplingPingMarker_C_UpdateColor final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Reality_Sapling_Rarity_Data_IsFruitGrowing; // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_Reality_Sapling_Rarity_Data_RarityName; // 0x0018(0x0018)()
	struct FLinearColor                           CallFunc_Get_Reality_Sapling_Rarity_Data_RarityColor; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RealitySaplingPingMarker_C_UpdateColor) == 0x000008, "Wrong alignment on RealitySaplingPingMarker_C_UpdateColor");
static_assert(sizeof(RealitySaplingPingMarker_C_UpdateColor) == 0x000048, "Wrong size on RealitySaplingPingMarker_C_UpdateColor");
static_assert(offsetof(RealitySaplingPingMarker_C_UpdateColor, NewColor) == 0x000000, "Member 'RealitySaplingPingMarker_C_UpdateColor::NewColor' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_UpdateColor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'RealitySaplingPingMarker_C_UpdateColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_UpdateColor, CallFunc_Conv_IntToByte_ReturnValue) == 0x000011, "Member 'RealitySaplingPingMarker_C_UpdateColor::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_UpdateColor, CallFunc_Get_Reality_Sapling_Rarity_Data_IsFruitGrowing) == 0x000012, "Member 'RealitySaplingPingMarker_C_UpdateColor::CallFunc_Get_Reality_Sapling_Rarity_Data_IsFruitGrowing' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_UpdateColor, CallFunc_Get_Reality_Sapling_Rarity_Data_RarityName) == 0x000018, "Member 'RealitySaplingPingMarker_C_UpdateColor::CallFunc_Get_Reality_Sapling_Rarity_Data_RarityName' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_UpdateColor, CallFunc_Get_Reality_Sapling_Rarity_Data_RarityColor) == 0x000030, "Member 'RealitySaplingPingMarker_C_UpdateColor::CallFunc_Get_Reality_Sapling_Rarity_Data_RarityColor' has a wrong offset!");
static_assert(offsetof(RealitySaplingPingMarker_C_UpdateColor, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000040, "Member 'RealitySaplingPingMarker_C_UpdateColor::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

