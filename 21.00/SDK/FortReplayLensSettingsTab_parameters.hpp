#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortReplayLensSettingsTab

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.BndEvt__ApertureSelector_K2Node_ComponentBoundEvent_7_Selection Changed__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct FortReplayLensSettingsTab_C_BndEvt__ApertureSelector_K2Node_ComponentBoundEvent_7_Selection_Changed__DelegateSignature final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_BndEvt__ApertureSelector_K2Node_ComponentBoundEvent_7_Selection_Changed__DelegateSignature) == 0x000004, "Wrong alignment on FortReplayLensSettingsTab_C_BndEvt__ApertureSelector_K2Node_ComponentBoundEvent_7_Selection_Changed__DelegateSignature");
static_assert(sizeof(FortReplayLensSettingsTab_C_BndEvt__ApertureSelector_K2Node_ComponentBoundEvent_7_Selection_Changed__DelegateSignature) == 0x000004, "Wrong size on FortReplayLensSettingsTab_C_BndEvt__ApertureSelector_K2Node_ComponentBoundEvent_7_Selection_Changed__DelegateSignature");
static_assert(offsetof(FortReplayLensSettingsTab_C_BndEvt__ApertureSelector_K2Node_ComponentBoundEvent_7_Selection_Changed__DelegateSignature, Selected_Index) == 0x000000, "Member 'FortReplayLensSettingsTab_C_BndEvt__ApertureSelector_K2Node_ComponentBoundEvent_7_Selection_Changed__DelegateSignature::Selected_Index' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.BndEvt__AutoExposureSelector_K2Node_ComponentBoundEvent_0_Selection Changed__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct FortReplayLensSettingsTab_C_BndEvt__AutoExposureSelector_K2Node_ComponentBoundEvent_0_Selection_Changed__DelegateSignature final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_BndEvt__AutoExposureSelector_K2Node_ComponentBoundEvent_0_Selection_Changed__DelegateSignature) == 0x000004, "Wrong alignment on FortReplayLensSettingsTab_C_BndEvt__AutoExposureSelector_K2Node_ComponentBoundEvent_0_Selection_Changed__DelegateSignature");
static_assert(sizeof(FortReplayLensSettingsTab_C_BndEvt__AutoExposureSelector_K2Node_ComponentBoundEvent_0_Selection_Changed__DelegateSignature) == 0x000004, "Wrong size on FortReplayLensSettingsTab_C_BndEvt__AutoExposureSelector_K2Node_ComponentBoundEvent_0_Selection_Changed__DelegateSignature");
static_assert(offsetof(FortReplayLensSettingsTab_C_BndEvt__AutoExposureSelector_K2Node_ComponentBoundEvent_0_Selection_Changed__DelegateSignature, Selected_Index) == 0x000000, "Member 'FortReplayLensSettingsTab_C_BndEvt__AutoExposureSelector_K2Node_ComponentBoundEvent_0_Selection_Changed__DelegateSignature::Selected_Index' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.BndEvt__AutoFocusSelector_K2Node_ComponentBoundEvent_8_Selection Changed__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct FortReplayLensSettingsTab_C_BndEvt__AutoFocusSelector_K2Node_ComponentBoundEvent_8_Selection_Changed__DelegateSignature final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_BndEvt__AutoFocusSelector_K2Node_ComponentBoundEvent_8_Selection_Changed__DelegateSignature) == 0x000004, "Wrong alignment on FortReplayLensSettingsTab_C_BndEvt__AutoFocusSelector_K2Node_ComponentBoundEvent_8_Selection_Changed__DelegateSignature");
static_assert(sizeof(FortReplayLensSettingsTab_C_BndEvt__AutoFocusSelector_K2Node_ComponentBoundEvent_8_Selection_Changed__DelegateSignature) == 0x000004, "Wrong size on FortReplayLensSettingsTab_C_BndEvt__AutoFocusSelector_K2Node_ComponentBoundEvent_8_Selection_Changed__DelegateSignature");
static_assert(offsetof(FortReplayLensSettingsTab_C_BndEvt__AutoFocusSelector_K2Node_ComponentBoundEvent_8_Selection_Changed__DelegateSignature, Selected_Index) == 0x000000, "Member 'FortReplayLensSettingsTab_C_BndEvt__AutoFocusSelector_K2Node_ComponentBoundEvent_8_Selection_Changed__DelegateSignature::Selected_Index' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.BndEvt__ExposureSlider_K2Node_ComponentBoundEvent_4_SliderChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct FortReplayLensSettingsTab_C_BndEvt__ExposureSlider_K2Node_ComponentBoundEvent_4_SliderChanged__DelegateSignature final
{
public:
	float                                         Slider_Value;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_BndEvt__ExposureSlider_K2Node_ComponentBoundEvent_4_SliderChanged__DelegateSignature) == 0x000004, "Wrong alignment on FortReplayLensSettingsTab_C_BndEvt__ExposureSlider_K2Node_ComponentBoundEvent_4_SliderChanged__DelegateSignature");
static_assert(sizeof(FortReplayLensSettingsTab_C_BndEvt__ExposureSlider_K2Node_ComponentBoundEvent_4_SliderChanged__DelegateSignature) == 0x000004, "Wrong size on FortReplayLensSettingsTab_C_BndEvt__ExposureSlider_K2Node_ComponentBoundEvent_4_SliderChanged__DelegateSignature");
static_assert(offsetof(FortReplayLensSettingsTab_C_BndEvt__ExposureSlider_K2Node_ComponentBoundEvent_4_SliderChanged__DelegateSignature, Slider_Value) == 0x000000, "Member 'FortReplayLensSettingsTab_C_BndEvt__ExposureSlider_K2Node_ComponentBoundEvent_4_SliderChanged__DelegateSignature::Slider_Value' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.BndEvt__FocalLengthSelector_K2Node_ComponentBoundEvent_3_Selection Changed__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct FortReplayLensSettingsTab_C_BndEvt__FocalLengthSelector_K2Node_ComponentBoundEvent_3_Selection_Changed__DelegateSignature final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_BndEvt__FocalLengthSelector_K2Node_ComponentBoundEvent_3_Selection_Changed__DelegateSignature) == 0x000004, "Wrong alignment on FortReplayLensSettingsTab_C_BndEvt__FocalLengthSelector_K2Node_ComponentBoundEvent_3_Selection_Changed__DelegateSignature");
static_assert(sizeof(FortReplayLensSettingsTab_C_BndEvt__FocalLengthSelector_K2Node_ComponentBoundEvent_3_Selection_Changed__DelegateSignature) == 0x000004, "Wrong size on FortReplayLensSettingsTab_C_BndEvt__FocalLengthSelector_K2Node_ComponentBoundEvent_3_Selection_Changed__DelegateSignature");
static_assert(offsetof(FortReplayLensSettingsTab_C_BndEvt__FocalLengthSelector_K2Node_ComponentBoundEvent_3_Selection_Changed__DelegateSignature, Selected_Index) == 0x000000, "Member 'FortReplayLensSettingsTab_C_BndEvt__FocalLengthSelector_K2Node_ComponentBoundEvent_3_Selection_Changed__DelegateSignature::Selected_Index' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.BndEvt__FocusDistanceSlider_K2Node_ComponentBoundEvent_1_SliderChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct FortReplayLensSettingsTab_C_BndEvt__FocusDistanceSlider_K2Node_ComponentBoundEvent_1_SliderChanged__DelegateSignature final
{
public:
	float                                         Slider_Value;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_BndEvt__FocusDistanceSlider_K2Node_ComponentBoundEvent_1_SliderChanged__DelegateSignature) == 0x000004, "Wrong alignment on FortReplayLensSettingsTab_C_BndEvt__FocusDistanceSlider_K2Node_ComponentBoundEvent_1_SliderChanged__DelegateSignature");
static_assert(sizeof(FortReplayLensSettingsTab_C_BndEvt__FocusDistanceSlider_K2Node_ComponentBoundEvent_1_SliderChanged__DelegateSignature) == 0x000004, "Wrong size on FortReplayLensSettingsTab_C_BndEvt__FocusDistanceSlider_K2Node_ComponentBoundEvent_1_SliderChanged__DelegateSignature");
static_assert(offsetof(FortReplayLensSettingsTab_C_BndEvt__FocusDistanceSlider_K2Node_ComponentBoundEvent_1_SliderChanged__DelegateSignature, Slider_Value) == 0x000000, "Member 'FortReplayLensSettingsTab_C_BndEvt__FocusDistanceSlider_K2Node_ComponentBoundEvent_1_SliderChanged__DelegateSignature::Slider_Value' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.ExecuteUbergraph_FortReplayLensSettingsTab
// 0x00F0 (0x00F0 - 0x0000)
struct FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URotatorSelectorReplaySettings_C*       K2Node_DynamicCast_AsRotator_Selector_Replay_Settings; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_Selected_Index_3;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Selected_Index_2;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_Selected_Index_1;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Selected_Index;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URotatorSelectorReplaySettings_C*       K2Node_DynamicCast_AsRotator_Selector_Replay_Settings_1; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Slider_Value_1;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMappedValue_MappedValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Slider_Value;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMappedValue_MappedValue_1;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ManualFocusDistance;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAutoFocusEnabled;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PresetApertureIdx;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_Event_FocalLengthTexts;                     // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_Event_PresetFocalLengthIdx;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_ManualExposureBias;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAutoExposureEnabled;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab) == 0x000008, "Wrong alignment on FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab");
static_assert(sizeof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab) == 0x0000F0, "Wrong size on FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, EntryPoint) == 0x000000, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::EntryPoint' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_int_Variable) == 0x000004, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_bool_Variable) == 0x000008, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_byte_Variable) == 0x000009, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_byte_Variable_1) == 0x00000A, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_bool_Variable_1) == 0x00000B, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_byte_Variable_2) == 0x00000C, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_byte_Variable_3) == 0x00000D, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_MakeStruct_Margin) == 0x000010, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_int_Array_Index_Variable) == 0x000020, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Event_IsDesignTime) == 0x00002C, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_DynamicCast_AsRotator_Selector_Replay_Settings) == 0x000030, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_DynamicCast_AsRotator_Selector_Replay_Settings' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_ComponentBoundEvent_Selected_Index_3) == 0x00003C, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_ComponentBoundEvent_Selected_Index_3' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_ComponentBoundEvent_Selected_Index_2) == 0x000040, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_ComponentBoundEvent_Selected_Index_2' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_ComponentBoundEvent_Selected_Index_1) == 0x000048, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_ComponentBoundEvent_Selected_Index_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_ComponentBoundEvent_Selected_Index) == 0x00004C, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_ComponentBoundEvent_Selected_Index' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000050, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_DynamicCast_AsRotator_Selector_Replay_Settings_1) == 0x000058, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_DynamicCast_AsRotator_Selector_Replay_Settings_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_int_Variable_1) == 0x000064, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_bool_Variable_2) == 0x000068, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_int_Variable_2) == 0x00006C, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_ComponentBoundEvent_Slider_Value_1) == 0x000070, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_ComponentBoundEvent_Slider_Value_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, CallFunc_GetMappedValue_MappedValue) == 0x000074, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::CallFunc_GetMappedValue_MappedValue' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_ComponentBoundEvent_Slider_Value) == 0x000078, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_ComponentBoundEvent_Slider_Value' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, CallFunc_GetMappedValue_MappedValue_1) == 0x00007C, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::CallFunc_GetMappedValue_MappedValue_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, CallFunc_GetAllChildren_ReturnValue) == 0x000080, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, CallFunc_Array_Get_Item) == 0x000090, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x0000A0, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Event_ManualFocusDistance) == 0x0000AC, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Event_ManualFocusDistance' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Event_bAutoFocusEnabled) == 0x0000B0, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Event_bAutoFocusEnabled' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Select_Default) == 0x0000B4, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Select_Default_1) == 0x0000B8, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Event_PresetApertureIdx) == 0x0000BC, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Event_PresetApertureIdx' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Event_FocalLengthTexts) == 0x0000C0, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Event_FocalLengthTexts' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Event_PresetFocalLengthIdx) == 0x0000D0, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Event_PresetFocalLengthIdx' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_int_Variable_3) == 0x0000D4, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, Temp_bool_Variable_3) == 0x0000D8, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Event_ManualExposureBias) == 0x0000DC, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Event_ManualExposureBias' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Event_bAutoExposureEnabled) == 0x0000E0, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Event_bAutoExposureEnabled' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Select_Default_2) == 0x0000E4, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab, K2Node_Select_Default_3) == 0x0000E8, "Member 'FortReplayLensSettingsTab_C_ExecuteUbergraph_FortReplayLensSettingsTab::K2Node_Select_Default_3' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.InitializeWidgets
// 0x0070 (0x0070 - 0x0000)
struct FortReplayLensSettingsTab_C_InitializeWidgets final
{
public:
	float                                         CallFunc_GetMinMaxFocusDistance_MinFocusDistance;  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinMaxFocusDistance_MaxFocusDistance;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinMaxExposure_MinExposure;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinMaxExposure_MaxExposure;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetPresetApertureTexts_PresetApertureTexts; // 0x0030(0x0010)(ReferenceParm)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ReferenceParm)
	class URotatorSelectorReplaySettings_C*       K2Node_DynamicCast_AsRotator_Selector_Replay_Settings; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_InitializeWidgets) == 0x000008, "Wrong alignment on FortReplayLensSettingsTab_C_InitializeWidgets");
static_assert(sizeof(FortReplayLensSettingsTab_C_InitializeWidgets) == 0x000070, "Wrong size on FortReplayLensSettingsTab_C_InitializeWidgets");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, CallFunc_GetMinMaxFocusDistance_MinFocusDistance) == 0x000000, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::CallFunc_GetMinMaxFocusDistance_MinFocusDistance' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, CallFunc_GetMinMaxFocusDistance_MaxFocusDistance) == 0x000004, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::CallFunc_GetMinMaxFocusDistance_MaxFocusDistance' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, CallFunc_GetMinMaxExposure_MinExposure) == 0x000008, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::CallFunc_GetMinMaxExposure_MinExposure' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, CallFunc_GetMinMaxExposure_MaxExposure) == 0x00000C, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::CallFunc_GetMinMaxExposure_MaxExposure' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, CallFunc_MakeVector2D_ReturnValue_1) == 0x000020, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, CallFunc_GetPresetApertureTexts_PresetApertureTexts) == 0x000030, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::CallFunc_GetPresetApertureTexts_PresetApertureTexts' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, K2Node_MakeArray_Array) == 0x000040, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, K2Node_MakeArray_Array_1) == 0x000050, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, K2Node_DynamicCast_AsRotator_Selector_Replay_Settings) == 0x000060, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::K2Node_DynamicCast_AsRotator_Selector_Replay_Settings' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_InitializeWidgets, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'FortReplayLensSettingsTab_C_InitializeWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.OnApertureChanged
// 0x0004 (0x0004 - 0x0000)
struct FortReplayLensSettingsTab_C_OnApertureChanged final
{
public:
	int32                                         PresetApertureIdx;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_OnApertureChanged) == 0x000004, "Wrong alignment on FortReplayLensSettingsTab_C_OnApertureChanged");
static_assert(sizeof(FortReplayLensSettingsTab_C_OnApertureChanged) == 0x000004, "Wrong size on FortReplayLensSettingsTab_C_OnApertureChanged");
static_assert(offsetof(FortReplayLensSettingsTab_C_OnApertureChanged, PresetApertureIdx) == 0x000000, "Member 'FortReplayLensSettingsTab_C_OnApertureChanged::PresetApertureIdx' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.OnAutoExposureEnabledChanged
// 0x0001 (0x0001 - 0x0000)
struct FortReplayLensSettingsTab_C_OnAutoExposureEnabledChanged final
{
public:
	bool                                          bAutoExposureEnabled;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_OnAutoExposureEnabledChanged) == 0x000001, "Wrong alignment on FortReplayLensSettingsTab_C_OnAutoExposureEnabledChanged");
static_assert(sizeof(FortReplayLensSettingsTab_C_OnAutoExposureEnabledChanged) == 0x000001, "Wrong size on FortReplayLensSettingsTab_C_OnAutoExposureEnabledChanged");
static_assert(offsetof(FortReplayLensSettingsTab_C_OnAutoExposureEnabledChanged, bAutoExposureEnabled) == 0x000000, "Member 'FortReplayLensSettingsTab_C_OnAutoExposureEnabledChanged::bAutoExposureEnabled' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.OnAutoFocusEnabledChanged
// 0x0001 (0x0001 - 0x0000)
struct FortReplayLensSettingsTab_C_OnAutoFocusEnabledChanged final
{
public:
	bool                                          bAutoFocusEnabled;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_OnAutoFocusEnabledChanged) == 0x000001, "Wrong alignment on FortReplayLensSettingsTab_C_OnAutoFocusEnabledChanged");
static_assert(sizeof(FortReplayLensSettingsTab_C_OnAutoFocusEnabledChanged) == 0x000001, "Wrong size on FortReplayLensSettingsTab_C_OnAutoFocusEnabledChanged");
static_assert(offsetof(FortReplayLensSettingsTab_C_OnAutoFocusEnabledChanged, bAutoFocusEnabled) == 0x000000, "Member 'FortReplayLensSettingsTab_C_OnAutoFocusEnabledChanged::bAutoFocusEnabled' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.OnFocalLengthChanged
// 0x0018 (0x0018 - 0x0000)
struct FortReplayLensSettingsTab_C_OnFocalLengthChanged final
{
public:
	TArray<class FText>                           FocalLengthTexts;                                  // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         PresetFocalLengthIdx;                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_OnFocalLengthChanged) == 0x000008, "Wrong alignment on FortReplayLensSettingsTab_C_OnFocalLengthChanged");
static_assert(sizeof(FortReplayLensSettingsTab_C_OnFocalLengthChanged) == 0x000018, "Wrong size on FortReplayLensSettingsTab_C_OnFocalLengthChanged");
static_assert(offsetof(FortReplayLensSettingsTab_C_OnFocalLengthChanged, FocalLengthTexts) == 0x000000, "Member 'FortReplayLensSettingsTab_C_OnFocalLengthChanged::FocalLengthTexts' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_OnFocalLengthChanged, PresetFocalLengthIdx) == 0x000010, "Member 'FortReplayLensSettingsTab_C_OnFocalLengthChanged::PresetFocalLengthIdx' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.OnManualExposureBiasChanged
// 0x0004 (0x0004 - 0x0000)
struct FortReplayLensSettingsTab_C_OnManualExposureBiasChanged final
{
public:
	float                                         ManualExposureBias;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_OnManualExposureBiasChanged) == 0x000004, "Wrong alignment on FortReplayLensSettingsTab_C_OnManualExposureBiasChanged");
static_assert(sizeof(FortReplayLensSettingsTab_C_OnManualExposureBiasChanged) == 0x000004, "Wrong size on FortReplayLensSettingsTab_C_OnManualExposureBiasChanged");
static_assert(offsetof(FortReplayLensSettingsTab_C_OnManualExposureBiasChanged, ManualExposureBias) == 0x000000, "Member 'FortReplayLensSettingsTab_C_OnManualExposureBiasChanged::ManualExposureBias' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.OnManualFocusDistanceChanged
// 0x0004 (0x0004 - 0x0000)
struct FortReplayLensSettingsTab_C_OnManualFocusDistanceChanged final
{
public:
	float                                         ManualFocusDistance;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_OnManualFocusDistanceChanged) == 0x000004, "Wrong alignment on FortReplayLensSettingsTab_C_OnManualFocusDistanceChanged");
static_assert(sizeof(FortReplayLensSettingsTab_C_OnManualFocusDistanceChanged) == 0x000004, "Wrong size on FortReplayLensSettingsTab_C_OnManualFocusDistanceChanged");
static_assert(offsetof(FortReplayLensSettingsTab_C_OnManualFocusDistanceChanged, ManualFocusDistance) == 0x000000, "Member 'FortReplayLensSettingsTab_C_OnManualFocusDistanceChanged::ManualFocusDistance' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct FortReplayLensSettingsTab_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_PreConstruct) == 0x000001, "Wrong alignment on FortReplayLensSettingsTab_C_PreConstruct");
static_assert(sizeof(FortReplayLensSettingsTab_C_PreConstruct) == 0x000001, "Wrong size on FortReplayLensSettingsTab_C_PreConstruct");
static_assert(offsetof(FortReplayLensSettingsTab_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'FortReplayLensSettingsTab_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function FortReplayLensSettingsTab.FortReplayLensSettingsTab_C.RefreshDOFSettings
// 0x0018 (0x0018 - 0x0000)
struct FortReplayLensSettingsTab_C_RefreshDOFSettings final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDepthOfFieldActive_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortReplayLensSettingsTab_C_RefreshDOFSettings) == 0x000008, "Wrong alignment on FortReplayLensSettingsTab_C_RefreshDOFSettings");
static_assert(sizeof(FortReplayLensSettingsTab_C_RefreshDOFSettings) == 0x000018, "Wrong size on FortReplayLensSettingsTab_C_RefreshDOFSettings");
static_assert(offsetof(FortReplayLensSettingsTab_C_RefreshDOFSettings, Temp_bool_Variable) == 0x000000, "Member 'FortReplayLensSettingsTab_C_RefreshDOFSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_RefreshDOFSettings, Temp_byte_Variable) == 0x000001, "Member 'FortReplayLensSettingsTab_C_RefreshDOFSettings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_RefreshDOFSettings, Temp_byte_Variable_1) == 0x000002, "Member 'FortReplayLensSettingsTab_C_RefreshDOFSettings::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_RefreshDOFSettings, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'FortReplayLensSettingsTab_C_RefreshDOFSettings::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_RefreshDOFSettings, CallFunc_IsDepthOfFieldActive_ReturnValue) == 0x000010, "Member 'FortReplayLensSettingsTab_C_RefreshDOFSettings::CallFunc_IsDepthOfFieldActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortReplayLensSettingsTab_C_RefreshDOFSettings, K2Node_Select_Default) == 0x000011, "Member 'FortReplayLensSettingsTab_C_RefreshDOFSettings::K2Node_Select_Default' has a wrong offset!");

}

