#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuartzMusicTrackComponent_SpicySake

#include "Basic.hpp"

#include "GameplayTags_0_structs.hpp"
#include "QuartzMusicTrackComponent_DataTracker_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass QuartzMusicTrackComponent_SpicySake.QuartzMusicTrackComponent_SpicySake_C
// 0x0010 (0x01E0 - 0x01D0)
class UQuartzMusicTrackComponent_SpicySake_C final : public UQuartzMusicTrackComponent_DataTracker_C
{
public:
	float                                         InterpFloat_Circling;                              // 0x01D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpFloat_Attacking;                             // 0x01D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag_Circling;                                 // 0x01D8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag_Attacking;                                // 0x01DC(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void HandleMixState();
	void OnDataTrackerUpdate();
	float UpdateInterpValue(float InterpValue, const struct FGameplayTag& EventTag, float Attack_Speed, float Release_Speed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuartzMusicTrackComponent_SpicySake_C">();
	}
	static class UQuartzMusicTrackComponent_SpicySake_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuartzMusicTrackComponent_SpicySake_C>();
	}
};
static_assert(alignof(UQuartzMusicTrackComponent_SpicySake_C) == 0x000008, "Wrong alignment on UQuartzMusicTrackComponent_SpicySake_C");
static_assert(sizeof(UQuartzMusicTrackComponent_SpicySake_C) == 0x0001E0, "Wrong size on UQuartzMusicTrackComponent_SpicySake_C");
static_assert(offsetof(UQuartzMusicTrackComponent_SpicySake_C, InterpFloat_Circling) == 0x0001D0, "Member 'UQuartzMusicTrackComponent_SpicySake_C::InterpFloat_Circling' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_SpicySake_C, InterpFloat_Attacking) == 0x0001D4, "Member 'UQuartzMusicTrackComponent_SpicySake_C::InterpFloat_Attacking' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_SpicySake_C, EventTag_Circling) == 0x0001D8, "Member 'UQuartzMusicTrackComponent_SpicySake_C::EventTag_Circling' has a wrong offset!");
static_assert(offsetof(UQuartzMusicTrackComponent_SpicySake_C, EventTag_Attacking) == 0x0001DC, "Member 'UQuartzMusicTrackComponent_SpicySake_C::EventTag_Attacking' has a wrong offset!");

}

