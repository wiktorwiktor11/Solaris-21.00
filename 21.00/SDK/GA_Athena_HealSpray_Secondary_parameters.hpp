#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_HealSpray_Secondary

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Athena_HealSpray_Secondary.GA_Athena_HealSpray_Secondary_C.Cancelled_79A3F9314B40B2F7BBB018827DA65523
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_HealSpray_Secondary_C_Cancelled_79A3F9314B40B2F7BBB018827DA65523 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData_0;                                      // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag_0;                                  // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_Secondary_C_Cancelled_79A3F9314B40B2F7BBB018827DA65523) == 0x000008, "Wrong alignment on GA_Athena_HealSpray_Secondary_C_Cancelled_79A3F9314B40B2F7BBB018827DA65523");
static_assert(sizeof(GA_Athena_HealSpray_Secondary_C_Cancelled_79A3F9314B40B2F7BBB018827DA65523) == 0x000030, "Wrong size on GA_Athena_HealSpray_Secondary_C_Cancelled_79A3F9314B40B2F7BBB018827DA65523");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_Cancelled_79A3F9314B40B2F7BBB018827DA65523, TargetData_0) == 0x000000, "Member 'GA_Athena_HealSpray_Secondary_C_Cancelled_79A3F9314B40B2F7BBB018827DA65523::TargetData_0' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_Cancelled_79A3F9314B40B2F7BBB018827DA65523, ApplicationTag_0) == 0x000028, "Member 'GA_Athena_HealSpray_Secondary_C_Cancelled_79A3F9314B40B2F7BBB018827DA65523::ApplicationTag_0' has a wrong offset!");

// Function GA_Athena_HealSpray_Secondary.GA_Athena_HealSpray_Secondary_C.Completed_79A3F9314B40B2F7BBB018827DA65523
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_HealSpray_Secondary_C_Completed_79A3F9314B40B2F7BBB018827DA65523 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData_0;                                      // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag_0;                                  // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_Secondary_C_Completed_79A3F9314B40B2F7BBB018827DA65523) == 0x000008, "Wrong alignment on GA_Athena_HealSpray_Secondary_C_Completed_79A3F9314B40B2F7BBB018827DA65523");
static_assert(sizeof(GA_Athena_HealSpray_Secondary_C_Completed_79A3F9314B40B2F7BBB018827DA65523) == 0x000030, "Wrong size on GA_Athena_HealSpray_Secondary_C_Completed_79A3F9314B40B2F7BBB018827DA65523");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_Completed_79A3F9314B40B2F7BBB018827DA65523, TargetData_0) == 0x000000, "Member 'GA_Athena_HealSpray_Secondary_C_Completed_79A3F9314B40B2F7BBB018827DA65523::TargetData_0' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_Completed_79A3F9314B40B2F7BBB018827DA65523, ApplicationTag_0) == 0x000028, "Member 'GA_Athena_HealSpray_Secondary_C_Completed_79A3F9314B40B2F7BBB018827DA65523::ApplicationTag_0' has a wrong offset!");

// Function GA_Athena_HealSpray_Secondary.GA_Athena_HealSpray_Secondary_C.ExecuteUbergraph_GA_Athena_HealSpray_Secondary
// 0x02C8 (0x02C8 - 0x0000)
struct GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_1;                   // 0x0008(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_1;               // 0x0030(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0038(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0060(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0070(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable_1;                            // 0x0078(0x0028)()
	bool                                          Temp_bool_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageWaitTarget_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectContainer_ReturnValue; // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SprayFXActive;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_B_Execution_Happened_Variable;           // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           K2Node_MakeStruct_GameplayEffectContextHandle;     // 0x00E0(0x0018)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0130(0x00D0)(ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0200(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0210(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0240(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsFromTargetData_ReturnValue;   // 0x0250(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_A_Execution_Happened_Variable;           // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_2;                   // 0x0288(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_2;               // 0x02B0(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary) == 0x000008, "Wrong alignment on GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary");
static_assert(sizeof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary) == 0x0002C8, "Wrong size on GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, EntryPoint) == 0x000000, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CustomEvent_TargetData_1) == 0x000008, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CustomEvent_TargetData_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CustomEvent_ApplicationTag_1) == 0x000030, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CustomEvent_ApplicationTag_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CustomEvent_TargetData) == 0x000038, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CustomEvent_ApplicationTag) == 0x000060, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, Temp_struct_Variable) == 0x000070, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, Temp_struct_Variable_1) == 0x000078, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, Temp_bool_Variable) == 0x0000A0, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_Event_bWasCancelled) == 0x0000A1, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A4, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_PlayMontageWaitTarget_ReturnValue) == 0x0000B0, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_PlayMontageWaitTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_K2_CommitAbility_ReturnValue) == 0x0000B9, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_Not_PreBool_ReturnValue) == 0x0000BA, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000BB, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_BooleanAND_ReturnValue) == 0x0000BC, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000BD, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_BooleanAND_ReturnValue_1) == 0x0000BE, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_ApplyGameplayEffectContainer_ReturnValue) == 0x0000C0, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_ApplyGameplayEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CustomEvent_SprayFXActive) == 0x0000D4, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CustomEvent_SprayFXActive' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, Temp_bool_True_if_break_was_hit_Variable) == 0x0000D5, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, Temp_bool_B_Execution_Happened_Variable) == 0x0000D6, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::Temp_bool_B_Execution_Happened_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000D7, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_K2_HasAuthority_ReturnValue) == 0x0000D8, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_MakeStruct_GameplayEffectContextHandle) == 0x0000E0, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_MakeStruct_GameplayEffectContextHandle' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000F8, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_DynamicCast_AsFort_Pawn) == 0x000100, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_GetValueAtLevel_ReturnValue) == 0x00010C, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000110, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000130, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CreateDelegate_OutputDelegate_2) == 0x000200, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x00020C, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000210, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, Temp_int_Loop_Counter_Variable) == 0x000218, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000220, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000228, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_Add_IntInt_ReturnValue) == 0x000230, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_GetQuestManager_ReturnValue) == 0x000238, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CreateDelegate_OutputDelegate_3) == 0x000240, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_GetAllActorsFromTargetData_ReturnValue) == 0x000250, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_GetAllActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_Array_Get_Item) == 0x000260, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_Array_Length_ReturnValue) == 0x000268, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000270, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_DynamicCast_bSuccess_1) == 0x000280, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_Less_IntInt_ReturnValue) == 0x000281, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000282, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_BooleanAND_ReturnValue_2) == 0x000283, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, Temp_bool_A_Execution_Happened_Variable) == 0x000284, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::Temp_bool_A_Execution_Happened_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CustomEvent_TargetData_2) == 0x000288, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CustomEvent_TargetData_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, K2Node_CustomEvent_ApplicationTag_2) == 0x0002B0, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::K2Node_CustomEvent_ApplicationTag_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_BooleanAND_ReturnValue_3) == 0x0002B4, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_GetCurrentMontage_ReturnValue) == 0x0002B8, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary, CallFunc_IsValid_ReturnValue_1) == 0x0002C0, "Member 'GA_Athena_HealSpray_Secondary_C_ExecuteUbergraph_GA_Athena_HealSpray_Secondary::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GA_Athena_HealSpray_Secondary.GA_Athena_HealSpray_Secondary_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_HealSpray_Secondary_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_Secondary_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Athena_HealSpray_Secondary_C_K2_OnEndAbility");
static_assert(sizeof(GA_Athena_HealSpray_Secondary_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Athena_HealSpray_Secondary_C_K2_OnEndAbility");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Athena_HealSpray_Secondary_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Athena_HealSpray_Secondary.GA_Athena_HealSpray_Secondary_C.OnRep_SprayFXActive
// 0x0128 (0x0128 - 0x0000)
struct GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive final
{
public:
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_MakeStruct_GameplayEffectContextHandle;     // 0x0010(0x0018)()
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0058(0x00D0)(ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive) == 0x000008, "Wrong alignment on GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive");
static_assert(sizeof(GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive) == 0x000128, "Wrong size on GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000000, "Member 'GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive, K2Node_MakeStruct_GameplayEffectContextHandle) == 0x000010, "Member 'GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive::K2Node_MakeStruct_GameplayEffectContextHandle' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive, K2Node_DynamicCast_AsFort_Pawn) == 0x000028, "Member 'GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000050, "Member 'GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000058, "Member 'GA_Athena_HealSpray_Secondary_C_OnRep_SprayFXActive::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GA_Athena_HealSpray_Secondary.GA_Athena_HealSpray_Secondary_C.RepSetSprayActive
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_HealSpray_Secondary_C_RepSetSprayActive final
{
public:
	bool                                          SprayFXActive_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_Secondary_C_RepSetSprayActive) == 0x000001, "Wrong alignment on GA_Athena_HealSpray_Secondary_C_RepSetSprayActive");
static_assert(sizeof(GA_Athena_HealSpray_Secondary_C_RepSetSprayActive) == 0x000001, "Wrong size on GA_Athena_HealSpray_Secondary_C_RepSetSprayActive");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_RepSetSprayActive, SprayFXActive_0) == 0x000000, "Member 'GA_Athena_HealSpray_Secondary_C_RepSetSprayActive::SprayFXActive_0' has a wrong offset!");

// Function GA_Athena_HealSpray_Secondary.GA_Athena_HealSpray_Secondary_C.Triggered_79A3F9314B40B2F7BBB018827DA65523
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_HealSpray_Secondary_C_Triggered_79A3F9314B40B2F7BBB018827DA65523 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData_0;                                      // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag_0;                                  // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_HealSpray_Secondary_C_Triggered_79A3F9314B40B2F7BBB018827DA65523) == 0x000008, "Wrong alignment on GA_Athena_HealSpray_Secondary_C_Triggered_79A3F9314B40B2F7BBB018827DA65523");
static_assert(sizeof(GA_Athena_HealSpray_Secondary_C_Triggered_79A3F9314B40B2F7BBB018827DA65523) == 0x000030, "Wrong size on GA_Athena_HealSpray_Secondary_C_Triggered_79A3F9314B40B2F7BBB018827DA65523");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_Triggered_79A3F9314B40B2F7BBB018827DA65523, TargetData_0) == 0x000000, "Member 'GA_Athena_HealSpray_Secondary_C_Triggered_79A3F9314B40B2F7BBB018827DA65523::TargetData_0' has a wrong offset!");
static_assert(offsetof(GA_Athena_HealSpray_Secondary_C_Triggered_79A3F9314B40B2F7BBB018827DA65523, ApplicationTag_0) == 0x000028, "Member 'GA_Athena_HealSpray_Secondary_C_Triggered_79A3F9314B40B2F7BBB018827DA65523::ApplicationTag_0' has a wrong offset!");

}

