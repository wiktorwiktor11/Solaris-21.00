#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KillerInfoWidget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function KillerInfoWidget.KillerInfoWidget_C.BP_HandleExtensionWidgetCreated
// 0x0010 (0x0010 - 0x0000)
struct KillerInfoWidget_C_BP_HandleExtensionWidgetCreated final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIExtensionSlot                              SlotType;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KillerInfoWidget_C_BP_HandleExtensionWidgetCreated) == 0x000008, "Wrong alignment on KillerInfoWidget_C_BP_HandleExtensionWidgetCreated");
static_assert(sizeof(KillerInfoWidget_C_BP_HandleExtensionWidgetCreated) == 0x000010, "Wrong size on KillerInfoWidget_C_BP_HandleExtensionWidgetCreated");
static_assert(offsetof(KillerInfoWidget_C_BP_HandleExtensionWidgetCreated, Widget) == 0x000000, "Member 'KillerInfoWidget_C_BP_HandleExtensionWidgetCreated::Widget' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_BP_HandleExtensionWidgetCreated, SlotType) == 0x000008, "Member 'KillerInfoWidget_C_BP_HandleExtensionWidgetCreated::SlotType' has a wrong offset!");

// Function KillerInfoWidget.KillerInfoWidget_C.ExecuteUbergraph_KillerInfoWidget
// 0x00A8 (0x00A8 - 0x0000)
struct KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_IconTexture;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortWeaponItemDefinition*        K2Node_Event_ItemDef;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HealthPercent;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ShieldPercent;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_OvershieldPercent;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NumOfKillers;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_Event_Widget;                               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIExtensionSlot                              K2Node_Event_SlotType;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTacticalOvershieldEnabled_ReturnValue;  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_PlayerName;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_PlayerID;                             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0090(0x0018)()
};
static_assert(alignof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget) == 0x000008, "Wrong alignment on KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget");
static_assert(sizeof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget) == 0x0000A8, "Wrong size on KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, EntryPoint) == 0x000000, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_Event_IconTexture) == 0x000008, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_Event_IconTexture' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_Event_ItemDef) == 0x000010, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_Event_ItemDef' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_Event_HealthPercent) == 0x000018, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_Event_HealthPercent' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_Event_ShieldPercent) == 0x00001C, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_Event_ShieldPercent' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_Event_OvershieldPercent) == 0x000020, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_Event_OvershieldPercent' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_Event_NumOfKillers) == 0x000024, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_Event_NumOfKillers' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_Event_Widget) == 0x000028, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_Event_Widget' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_Event_SlotType) == 0x000030, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_Event_SlotType' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, CallFunc_AddChildToOverlay_ReturnValue) == 0x000038, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, CallFunc_IsTacticalOvershieldEnabled_ReturnValue) == 0x000040, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::CallFunc_IsTacticalOvershieldEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_MakeStruct_Margin) == 0x000044, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_Event_PlayerName) == 0x000058, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_Event_PlayerName' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, K2Node_Event_PlayerID) == 0x000068, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::K2Node_Event_PlayerID' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000090, "Member 'KillerInfoWidget_C_ExecuteUbergraph_KillerInfoWidget::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function KillerInfoWidget.KillerInfoWidget_C.SetKillerHealthAndShield
// 0x000C (0x000C - 0x0000)
struct KillerInfoWidget_C_SetKillerHealthAndShield final
{
public:
	float                                         HealthPercent;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldPercent;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OvershieldPercent;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KillerInfoWidget_C_SetKillerHealthAndShield) == 0x000004, "Wrong alignment on KillerInfoWidget_C_SetKillerHealthAndShield");
static_assert(sizeof(KillerInfoWidget_C_SetKillerHealthAndShield) == 0x00000C, "Wrong size on KillerInfoWidget_C_SetKillerHealthAndShield");
static_assert(offsetof(KillerInfoWidget_C_SetKillerHealthAndShield, HealthPercent) == 0x000000, "Member 'KillerInfoWidget_C_SetKillerHealthAndShield::HealthPercent' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_SetKillerHealthAndShield, ShieldPercent) == 0x000004, "Member 'KillerInfoWidget_C_SetKillerHealthAndShield::ShieldPercent' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_SetKillerHealthAndShield, OvershieldPercent) == 0x000008, "Member 'KillerInfoWidget_C_SetKillerHealthAndShield::OvershieldPercent' has a wrong offset!");

// Function KillerInfoWidget.KillerInfoWidget_C.SetKillerName
// 0x0020 (0x0020 - 0x0000)
struct KillerInfoWidget_C_SetKillerName final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PlayerId;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(KillerInfoWidget_C_SetKillerName) == 0x000008, "Wrong alignment on KillerInfoWidget_C_SetKillerName");
static_assert(sizeof(KillerInfoWidget_C_SetKillerName) == 0x000020, "Wrong size on KillerInfoWidget_C_SetKillerName");
static_assert(offsetof(KillerInfoWidget_C_SetKillerName, PlayerName) == 0x000000, "Member 'KillerInfoWidget_C_SetKillerName::PlayerName' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_SetKillerName, PlayerId) == 0x000010, "Member 'KillerInfoWidget_C_SetKillerName::PlayerId' has a wrong offset!");

// Function KillerInfoWidget.KillerInfoWidget_C.SetKillerWeaponIconAndName
// 0x0010 (0x0010 - 0x0000)
struct KillerInfoWidget_C_SetKillerWeaponIconAndName final
{
public:
	class UTexture2D*                             IconTexture;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortWeaponItemDefinition*        ItemDef;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KillerInfoWidget_C_SetKillerWeaponIconAndName) == 0x000008, "Wrong alignment on KillerInfoWidget_C_SetKillerWeaponIconAndName");
static_assert(sizeof(KillerInfoWidget_C_SetKillerWeaponIconAndName) == 0x000010, "Wrong size on KillerInfoWidget_C_SetKillerWeaponIconAndName");
static_assert(offsetof(KillerInfoWidget_C_SetKillerWeaponIconAndName, IconTexture) == 0x000000, "Member 'KillerInfoWidget_C_SetKillerWeaponIconAndName::IconTexture' has a wrong offset!");
static_assert(offsetof(KillerInfoWidget_C_SetKillerWeaponIconAndName, ItemDef) == 0x000008, "Member 'KillerInfoWidget_C_SetKillerWeaponIconAndName::ItemDef' has a wrong offset!");

// Function KillerInfoWidget.KillerInfoWidget_C.SetNumOfKillerKills
// 0x0004 (0x0004 - 0x0000)
struct KillerInfoWidget_C_SetNumOfKillerKills final
{
public:
	int32                                         NumOfKillers;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KillerInfoWidget_C_SetNumOfKillerKills) == 0x000004, "Wrong alignment on KillerInfoWidget_C_SetNumOfKillerKills");
static_assert(sizeof(KillerInfoWidget_C_SetNumOfKillerKills) == 0x000004, "Wrong size on KillerInfoWidget_C_SetNumOfKillerKills");
static_assert(offsetof(KillerInfoWidget_C_SetNumOfKillerKills, NumOfKillers) == 0x000000, "Member 'KillerInfoWidget_C_SetNumOfKillerKills::NumOfKillers' has a wrong offset!");

}

