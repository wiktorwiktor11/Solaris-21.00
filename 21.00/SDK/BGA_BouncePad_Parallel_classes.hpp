#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_BouncePad_Parallel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BGA_Athena_AppleSun_Environmental_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_BouncePad_Parallel.BGA_BouncePad_Parallel_C
// 0x0068 (0x1010 - 0x0FA8)
class ABGA_BouncePad_Parallel_C final : public ABGA_Athena_AppleSun_Environmental_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BGA_BouncePad_Parallel_C;           // 0x0FA8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Env_Web_Ambient;                                   // 0x0FB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABGA_BouncePad_Rope_Parallel_C*> AttachedRopes;                                     // 0x0FB8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate)
	int32                                         Int_RopesRemaining;                                // 0x0FC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Int_StartingRopes;                                 // 0x0FCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ropes_Left_Destruction_Threshold_;                 // 0x0FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD4[0x4];                                      // 0x0FD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineMeshComponent*>           ConnectorCollisionList_SidePawnBlock;              // 0x0FD8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USplineMeshComponent*>           ConnectorCollisionList_PlayerDetector;             // 0x0FE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USplineMeshComponent*>           ConnectorCollisionList_Box;                        // 0x0FF8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         MaxDistanceforShaderBounce;                        // 0x1008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Horizontal_Launch_Modifier;                        // 0x100C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Add_Spline_Deformed_Collision_Component_Box(const TArray<class USplineMeshComponent*>& TargetArray, const struct FVector& StartPos, const struct FVector& StartTangent, const struct FVector& EndPos, const struct FVector& EndTangent, const struct FVector2D& StartScale_0, const struct FVector2D& EndScale, float StartRoll, float EndRoll);
	void AddSplineDeformedCollisionComponent(const TArray<class USplineMeshComponent*>& TargetArray, const struct FVector& StartPos, const struct FVector& StartTangent, const struct FVector& EndPos, const struct FVector& EndTangent, const struct FVector2D& StartScale_0, const struct FVector2D& EndScale, float StartRoll, float EndRoll);
	void AddSplineDeformedCollisionComponent_PlayerDetector(const TArray<class USplineMeshComponent*>& TargetArray, const struct FVector& StartPos, const struct FVector& StartTangent, const struct FVector& EndPos, const struct FVector& EndTangent, const struct FVector2D& StartScale_0, const struct FVector2D& EndScale, float StartRoll, float EndRoll);
	void BounceMulticast(const struct FVector& Position, const float BounceIntensity, class AActor* Actor);
	void CheckMaxDistanceForBounceShader();
	void ExecuteUbergraph_BGA_BouncePad_Parallel(int32 EntryPoint);
	void MakeConnectorCollision();
	void OnComponentBeginOverlap_Event_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnComponentBeginOverlap_Event_1(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnComponentEndOverlap_Event_0(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnComponentHit_Event_0(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDied_Event(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void ReceiveBeginPlay();
	void Rope_Destroyed(class AActor* DestroyedActor);
	void SetMaxRadiusForShader();
	void Update();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_BouncePad_Parallel_C">();
	}
	static class ABGA_BouncePad_Parallel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_BouncePad_Parallel_C>();
	}
};
static_assert(alignof(ABGA_BouncePad_Parallel_C) == 0x000008, "Wrong alignment on ABGA_BouncePad_Parallel_C");
static_assert(sizeof(ABGA_BouncePad_Parallel_C) == 0x001010, "Wrong size on ABGA_BouncePad_Parallel_C");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, UberGraphFrame_BGA_BouncePad_Parallel_C) == 0x000FA8, "Member 'ABGA_BouncePad_Parallel_C::UberGraphFrame_BGA_BouncePad_Parallel_C' has a wrong offset!");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, Env_Web_Ambient) == 0x000FB0, "Member 'ABGA_BouncePad_Parallel_C::Env_Web_Ambient' has a wrong offset!");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, AttachedRopes) == 0x000FB8, "Member 'ABGA_BouncePad_Parallel_C::AttachedRopes' has a wrong offset!");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, Int_RopesRemaining) == 0x000FC8, "Member 'ABGA_BouncePad_Parallel_C::Int_RopesRemaining' has a wrong offset!");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, Int_StartingRopes) == 0x000FCC, "Member 'ABGA_BouncePad_Parallel_C::Int_StartingRopes' has a wrong offset!");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, Ropes_Left_Destruction_Threshold_) == 0x000FD0, "Member 'ABGA_BouncePad_Parallel_C::Ropes_Left_Destruction_Threshold_' has a wrong offset!");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, ConnectorCollisionList_SidePawnBlock) == 0x000FD8, "Member 'ABGA_BouncePad_Parallel_C::ConnectorCollisionList_SidePawnBlock' has a wrong offset!");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, ConnectorCollisionList_PlayerDetector) == 0x000FE8, "Member 'ABGA_BouncePad_Parallel_C::ConnectorCollisionList_PlayerDetector' has a wrong offset!");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, ConnectorCollisionList_Box) == 0x000FF8, "Member 'ABGA_BouncePad_Parallel_C::ConnectorCollisionList_Box' has a wrong offset!");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, MaxDistanceforShaderBounce) == 0x001008, "Member 'ABGA_BouncePad_Parallel_C::MaxDistanceforShaderBounce' has a wrong offset!");
static_assert(offsetof(ABGA_BouncePad_Parallel_C, Horizontal_Launch_Modifier) == 0x00100C, "Member 'ABGA_BouncePad_Parallel_C::Horizontal_Launch_Modifier' has a wrong offset!");

}

