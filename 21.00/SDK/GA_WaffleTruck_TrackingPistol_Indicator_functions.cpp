#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_WaffleTruck_TrackingPistol_Indicator

#include "Basic.hpp"

#include "GA_WaffleTruck_TrackingPistol_Indicator_classes.hpp"
#include "GA_WaffleTruck_TrackingPistol_Indicator_parameters.hpp"


namespace SDK
{

// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.ExecuteUbergraph_GA_WaffleTruck_TrackingPistol_Indicator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_WaffleTruck_TrackingPistol_Indicator_C::ExecuteUbergraph_GA_WaffleTruck_TrackingPistol_Indicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "ExecuteUbergraph_GA_WaffleTruck_TrackingPistol_Indicator");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_ExecuteUbergraph_GA_WaffleTruck_TrackingPistol_Indicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.GetAvatarAsFortPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AFortPawn*                        AsFort_Pawn                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_WaffleTruck_TrackingPistol_Indicator_C::GetAvatarAsFortPawn(class AFortPawn** AsFort_Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "GetAvatarAsFortPawn");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_GetAvatarAsFortPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsFort_Pawn != nullptr)
		*AsFort_Pawn = Parms.AsFort_Pawn;
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.GetAvatarAsFortPlayerController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AFortPlayerController*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AFortPlayerController* UGA_WaffleTruck_TrackingPistol_Indicator_C::GetAvatarAsFortPlayerController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "GetAvatarAsFortPlayerController");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_GetAvatarAsFortPlayerController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.GetHitActorsFromEventData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayEventData               GameplayEventData                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class AActor*> UGA_WaffleTruck_TrackingPistol_Indicator_C::GetHitActorsFromEventData(const struct FGameplayEventData& GameplayEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "GetHitActorsFromEventData");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_GetHitActorsFromEventData Parms{};

	Parms.GameplayEventData = std::move(GameplayEventData);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.IsDamgeFromSourceWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayEventData               GameplayEventData                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGA_WaffleTruck_TrackingPistol_Indicator_C::IsDamgeFromSourceWeapon(const struct FGameplayEventData& GameplayEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "IsDamgeFromSourceWeapon");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_IsDamgeFromSourceWeapon Parms{};

	Parms.GameplayEventData = std::move(GameplayEventData);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.IsPawnAndNotFriendly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           OwningController                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UGA_WaffleTruck_TrackingPistol_Indicator_C::IsPawnAndNotFriendly(const class AActor* OwningController, const class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "IsPawnAndNotFriendly");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_IsPawnAndNotFriendly Parms{};

	Parms.OwningController = OwningController;
	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_WaffleTruck_TrackingPistol_Indicator_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "K2_ActivateAbilityFromEvent");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}

}

