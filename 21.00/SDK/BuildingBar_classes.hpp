#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BuildingBar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BuildingBar.BuildingBar_C
// 0x00A0 (0x0380 - 0x02E0)
class UBuildingBar_C final : public UCommonUserWidget
{
public:
	class UWidgetSwitcher*                        BigHealthSwitcher;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBigHealthBar_C*                  CommonBigHealthBar;                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonHealthBar_C*                     CommonHealthBar;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TrapBox;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortMultiSizeItemCard*                 TrapItemCard;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TrapNameTextBlock;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TrapUsesText;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EFortBuildingInteraction                      DisplayMode;                                       // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Max_Durability_Value;                              // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Durability_Value;                          // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_Baseplate_Color;                           // 0x0324(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_HP_Color_A;                                // 0x0334(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_HP_Color_B;                                // 0x0344(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Alternate_HP_Color_A;                              // 0x0354(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Alternate_HP_Color_B;                              // 0x0364(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              TemporaryTrapInstance;                             // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Set_Display_Mode(EFortBuildingInteraction InDisplayMode);
	void SetBigHealthMode(bool BigHealth);
	void SetBigHealthPercentFill(float Percent);
	void SetBigHealthValue(const class FText& HP_Text);
	void Update_Current_Durability_Value(float CurrentDurability);
	void Update_Current_HP_Value(float Current);
	void Update_Durability_Text();
	void Update_Max_Durability_Value(float Max);
	void Update_Max_HP_Value(float Max);
	void UpdateBuildingTrap(class ABuildingTrap* BuildingTrap);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BuildingBar_C">();
	}
	static class UBuildingBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBuildingBar_C>();
	}
};
static_assert(alignof(UBuildingBar_C) == 0x000008, "Wrong alignment on UBuildingBar_C");
static_assert(sizeof(UBuildingBar_C) == 0x000380, "Wrong size on UBuildingBar_C");
static_assert(offsetof(UBuildingBar_C, BigHealthSwitcher) == 0x0002E0, "Member 'UBuildingBar_C::BigHealthSwitcher' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, CommonBigHealthBar) == 0x0002E8, "Member 'UBuildingBar_C::CommonBigHealthBar' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, CommonHealthBar) == 0x0002F0, "Member 'UBuildingBar_C::CommonHealthBar' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, TrapBox) == 0x0002F8, "Member 'UBuildingBar_C::TrapBox' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, TrapItemCard) == 0x000300, "Member 'UBuildingBar_C::TrapItemCard' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, TrapNameTextBlock) == 0x000308, "Member 'UBuildingBar_C::TrapNameTextBlock' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, TrapUsesText) == 0x000310, "Member 'UBuildingBar_C::TrapUsesText' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, DisplayMode) == 0x000318, "Member 'UBuildingBar_C::DisplayMode' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Max_Durability_Value) == 0x00031C, "Member 'UBuildingBar_C::Max_Durability_Value' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Current_Durability_Value) == 0x000320, "Member 'UBuildingBar_C::Current_Durability_Value' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Default_Baseplate_Color) == 0x000324, "Member 'UBuildingBar_C::Default_Baseplate_Color' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Default_HP_Color_A) == 0x000334, "Member 'UBuildingBar_C::Default_HP_Color_A' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Default_HP_Color_B) == 0x000344, "Member 'UBuildingBar_C::Default_HP_Color_B' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Alternate_HP_Color_A) == 0x000354, "Member 'UBuildingBar_C::Alternate_HP_Color_A' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, Alternate_HP_Color_B) == 0x000364, "Member 'UBuildingBar_C::Alternate_HP_Color_B' has a wrong offset!");
static_assert(offsetof(UBuildingBar_C, TemporaryTrapInstance) == 0x000378, "Member 'UBuildingBar_C::TemporaryTrapInstance' has a wrong offset!");

}

