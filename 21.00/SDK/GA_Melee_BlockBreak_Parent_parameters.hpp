#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Melee_BlockBreak_Parent

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Melee_BlockBreak_Parent.GA_Melee_BlockBreak_Parent_C.Cancelled_41F3CDFD476F32896B1318A02125652C
// 0x0030 (0x0030 - 0x0000)
struct GA_Melee_BlockBreak_Parent_C_Cancelled_41F3CDFD476F32896B1318A02125652C final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Melee_BlockBreak_Parent_C_Cancelled_41F3CDFD476F32896B1318A02125652C) == 0x000008, "Wrong alignment on GA_Melee_BlockBreak_Parent_C_Cancelled_41F3CDFD476F32896B1318A02125652C");
static_assert(sizeof(GA_Melee_BlockBreak_Parent_C_Cancelled_41F3CDFD476F32896B1318A02125652C) == 0x000030, "Wrong size on GA_Melee_BlockBreak_Parent_C_Cancelled_41F3CDFD476F32896B1318A02125652C");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_Cancelled_41F3CDFD476F32896B1318A02125652C, TargetData) == 0x000000, "Member 'GA_Melee_BlockBreak_Parent_C_Cancelled_41F3CDFD476F32896B1318A02125652C::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_Cancelled_41F3CDFD476F32896B1318A02125652C, ApplicationTag) == 0x000028, "Member 'GA_Melee_BlockBreak_Parent_C_Cancelled_41F3CDFD476F32896B1318A02125652C::ApplicationTag' has a wrong offset!");

// Function GA_Melee_BlockBreak_Parent.GA_Melee_BlockBreak_Parent_C.Completed_41F3CDFD476F32896B1318A02125652C
// 0x0030 (0x0030 - 0x0000)
struct GA_Melee_BlockBreak_Parent_C_Completed_41F3CDFD476F32896B1318A02125652C final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Melee_BlockBreak_Parent_C_Completed_41F3CDFD476F32896B1318A02125652C) == 0x000008, "Wrong alignment on GA_Melee_BlockBreak_Parent_C_Completed_41F3CDFD476F32896B1318A02125652C");
static_assert(sizeof(GA_Melee_BlockBreak_Parent_C_Completed_41F3CDFD476F32896B1318A02125652C) == 0x000030, "Wrong size on GA_Melee_BlockBreak_Parent_C_Completed_41F3CDFD476F32896B1318A02125652C");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_Completed_41F3CDFD476F32896B1318A02125652C, TargetData) == 0x000000, "Member 'GA_Melee_BlockBreak_Parent_C_Completed_41F3CDFD476F32896B1318A02125652C::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_Completed_41F3CDFD476F32896B1318A02125652C, ApplicationTag) == 0x000028, "Member 'GA_Melee_BlockBreak_Parent_C_Completed_41F3CDFD476F32896B1318A02125652C::ApplicationTag' has a wrong offset!");

// Function GA_Melee_BlockBreak_Parent.GA_Melee_BlockBreak_Parent_C.ExecuteUbergraph_GA_Melee_BlockBreak_Parent
// 0x0220 (0x0220 - 0x0000)
struct GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_2;                   // 0x0008(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_2;               // 0x0030(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData_1;                   // 0x0040(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag_1;               // 0x0068(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x006C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0078(0x0028)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x00A0(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x00B0(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable_1;                            // 0x00B8(0x0028)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00E0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0148(0x00D0)(ContainsInstancedReference)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0218(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent) == 0x000008, "Wrong alignment on GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent");
static_assert(sizeof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent) == 0x000220, "Wrong size on GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, EntryPoint) == 0x000000, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_CustomEvent_TargetData_2) == 0x000008, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_CustomEvent_TargetData_2' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_CustomEvent_ApplicationTag_2) == 0x000030, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_CustomEvent_ApplicationTag_2' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_CustomEvent_TargetData_1) == 0x000040, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_CustomEvent_TargetData_1' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_CustomEvent_ApplicationTag_1) == 0x000068, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_CustomEvent_ApplicationTag_1' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_CreateDelegate_OutputDelegate_1) == 0x00006C, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_CustomEvent_TargetData) == 0x000078, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_CustomEvent_ApplicationTag) == 0x0000A0, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A4, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, Temp_struct_Variable) == 0x0000B0, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, Temp_struct_Variable_1) == 0x0000B8, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000E0, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue) == 0x0000F0, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000100, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000108, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, CallFunc_Add_VectorVector_ReturnValue) == 0x000130, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000148, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000218, "Member 'GA_Melee_BlockBreak_Parent_C_ExecuteUbergraph_GA_Melee_BlockBreak_Parent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function GA_Melee_BlockBreak_Parent.GA_Melee_BlockBreak_Parent_C.Triggered_41F3CDFD476F32896B1318A02125652C
// 0x0030 (0x0030 - 0x0000)
struct GA_Melee_BlockBreak_Parent_C_Triggered_41F3CDFD476F32896B1318A02125652C final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Melee_BlockBreak_Parent_C_Triggered_41F3CDFD476F32896B1318A02125652C) == 0x000008, "Wrong alignment on GA_Melee_BlockBreak_Parent_C_Triggered_41F3CDFD476F32896B1318A02125652C");
static_assert(sizeof(GA_Melee_BlockBreak_Parent_C_Triggered_41F3CDFD476F32896B1318A02125652C) == 0x000030, "Wrong size on GA_Melee_BlockBreak_Parent_C_Triggered_41F3CDFD476F32896B1318A02125652C");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_Triggered_41F3CDFD476F32896B1318A02125652C, TargetData) == 0x000000, "Member 'GA_Melee_BlockBreak_Parent_C_Triggered_41F3CDFD476F32896B1318A02125652C::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Melee_BlockBreak_Parent_C_Triggered_41F3CDFD476F32896B1318A02125652C, ApplicationTag) == 0x000028, "Member 'GA_Melee_BlockBreak_Parent_C_Triggered_41F3CDFD476F32896B1318A02125652C::ApplicationTag' has a wrong offset!");

}

