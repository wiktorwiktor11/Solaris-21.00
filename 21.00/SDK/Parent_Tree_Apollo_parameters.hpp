#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Parent_Tree_Apollo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Tree_SeasonColorStruct_structs.hpp"
#include "Tree_Color_options_structs.hpp"


namespace SDK::Params
{

// Function Parent_Tree_Apollo.Parent_Tree_Apollo_C.UserConstructionScript
// 0x00E0 (0x00E0 - 0x0000)
struct Parent_Tree_Apollo_C_UserConstructionScript final
{
public:
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0000(0x0060)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue_1;     // 0x0070(0x0060)(IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue_1;               // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_Apollo_C_UserConstructionScript) == 0x000010, "Wrong alignment on Parent_Tree_Apollo_C_UserConstructionScript");
static_assert(sizeof(Parent_Tree_Apollo_C_UserConstructionScript) == 0x0000E0, "Wrong size on Parent_Tree_Apollo_C_UserConstructionScript");
static_assert(offsetof(Parent_Tree_Apollo_C_UserConstructionScript, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000000, "Member 'Parent_Tree_Apollo_C_UserConstructionScript::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'Parent_Tree_Apollo_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000068, "Member 'Parent_Tree_Apollo_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UserConstructionScript, CallFunc_Conv_VectorToTransform_ReturnValue_1) == 0x000070, "Member 'Parent_Tree_Apollo_C_UserConstructionScript::CallFunc_Conv_VectorToTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_1) == 0x0000D0, "Member 'Parent_Tree_Apollo_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");

// Function Parent_Tree_Apollo.Parent_Tree_Apollo_C.UpdateColor
// 0x0040 (0x0040 - 0x0000)
struct Parent_Tree_Apollo_C_UpdateColor final
{
public:
	ETree_Color_options                           Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0020(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_Apollo_C_UpdateColor) == 0x000010, "Wrong alignment on Parent_Tree_Apollo_C_UpdateColor");
static_assert(sizeof(Parent_Tree_Apollo_C_UpdateColor) == 0x000040, "Wrong size on Parent_Tree_Apollo_C_UpdateColor");
static_assert(offsetof(Parent_Tree_Apollo_C_UpdateColor, Temp_byte_Variable) == 0x000000, "Member 'Parent_Tree_Apollo_C_UpdateColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UpdateColor, Temp_float_Variable) == 0x000004, "Member 'Parent_Tree_Apollo_C_UpdateColor::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UpdateColor, Temp_float_Variable_1) == 0x000008, "Member 'Parent_Tree_Apollo_C_UpdateColor::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UpdateColor, Temp_float_Variable_2) == 0x00000C, "Member 'Parent_Tree_Apollo_C_UpdateColor::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UpdateColor, Temp_float_Variable_3) == 0x000010, "Member 'Parent_Tree_Apollo_C_UpdateColor::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UpdateColor, Temp_float_Variable_4) == 0x000014, "Member 'Parent_Tree_Apollo_C_UpdateColor::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UpdateColor, K2Node_Select_Default) == 0x000018, "Member 'Parent_Tree_Apollo_C_UpdateColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_UpdateColor, CallFunc_MakeVector4_ReturnValue) == 0x000020, "Member 'Parent_Tree_Apollo_C_UpdateColor::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");

// Function Parent_Tree_Apollo.Parent_Tree_Apollo_C.SetTreeSeasonalColor
// 0x0001 (0x0001 - 0x0000)
struct Parent_Tree_Apollo_C_SetTreeSeasonalColor final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_Apollo_C_SetTreeSeasonalColor) == 0x000001, "Wrong alignment on Parent_Tree_Apollo_C_SetTreeSeasonalColor");
static_assert(sizeof(Parent_Tree_Apollo_C_SetTreeSeasonalColor) == 0x000001, "Wrong size on Parent_Tree_Apollo_C_SetTreeSeasonalColor");
static_assert(offsetof(Parent_Tree_Apollo_C_SetTreeSeasonalColor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Parent_Tree_Apollo_C_SetTreeSeasonalColor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Parent_Tree_Apollo.Parent_Tree_Apollo_C.SetSeasonPresetColors
// 0x0038 (0x0038 - 0x0000)
struct Parent_Tree_Apollo_C_SetSeasonPresetColors final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTree_SeasonColorStruct                CallFunc_Array_Get_Item;                           // 0x0018(0x001C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_Apollo_C_SetSeasonPresetColors) == 0x000004, "Wrong alignment on Parent_Tree_Apollo_C_SetSeasonPresetColors");
static_assert(sizeof(Parent_Tree_Apollo_C_SetSeasonPresetColors) == 0x000038, "Wrong size on Parent_Tree_Apollo_C_SetSeasonPresetColors");
static_assert(offsetof(Parent_Tree_Apollo_C_SetSeasonPresetColors, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'Parent_Tree_Apollo_C_SetSeasonPresetColors::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_SetSeasonPresetColors, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Parent_Tree_Apollo_C_SetSeasonPresetColors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_SetSeasonPresetColors, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Parent_Tree_Apollo_C_SetSeasonPresetColors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_SetSeasonPresetColors, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Parent_Tree_Apollo_C_SetSeasonPresetColors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_SetSeasonPresetColors, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Parent_Tree_Apollo_C_SetSeasonPresetColors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_SetSeasonPresetColors, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'Parent_Tree_Apollo_C_SetSeasonPresetColors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_SetSeasonPresetColors, CallFunc_Array_Get_Item) == 0x000018, "Member 'Parent_Tree_Apollo_C_SetSeasonPresetColors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_SetSeasonPresetColors, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'Parent_Tree_Apollo_C_SetSeasonPresetColors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_SetSeasonPresetColors, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'Parent_Tree_Apollo_C_SetSeasonPresetColors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_SetSeasonPresetColors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000036, "Member 'Parent_Tree_Apollo_C_SetSeasonPresetColors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Parent_Tree_Apollo.Parent_Tree_Apollo_C.IsSubmergedByWater
// 0x0050 (0x0050 - 0x0000)
struct Parent_Tree_Apollo_C_IsSubmergedByWater final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWaterSubsystem*                        CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWaterSubsystem*                        CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOceanFloodHeight_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOceanTotalHeight_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_Apollo_C_IsSubmergedByWater) == 0x000008, "Wrong alignment on Parent_Tree_Apollo_C_IsSubmergedByWater");
static_assert(sizeof(Parent_Tree_Apollo_C_IsSubmergedByWater) == 0x000050, "Wrong size on Parent_Tree_Apollo_C_IsSubmergedByWater");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, ReturnValue) == 0x000000, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000010, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_GetOceanFloodHeight_ReturnValue) == 0x000018, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_GetOceanFloodHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_GetOceanTotalHeight_ReturnValue) == 0x00001C, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_GetOceanTotalHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_BreakVector_X) == 0x000040, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_BreakVector_Y) == 0x000044, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_BreakVector_Z) == 0x000048, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_IsSubmergedByWater, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'Parent_Tree_Apollo_C_IsSubmergedByWater::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Parent_Tree_Apollo.Parent_Tree_Apollo_C.ExecuteUbergraph_Parent_Tree_Apollo
// 0x0008 (0x0008 - 0x0000)
struct Parent_Tree_Apollo_C_ExecuteUbergraph_Parent_Tree_Apollo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_Apollo_C_ExecuteUbergraph_Parent_Tree_Apollo) == 0x000004, "Wrong alignment on Parent_Tree_Apollo_C_ExecuteUbergraph_Parent_Tree_Apollo");
static_assert(sizeof(Parent_Tree_Apollo_C_ExecuteUbergraph_Parent_Tree_Apollo) == 0x000008, "Wrong size on Parent_Tree_Apollo_C_ExecuteUbergraph_Parent_Tree_Apollo");
static_assert(offsetof(Parent_Tree_Apollo_C_ExecuteUbergraph_Parent_Tree_Apollo, EntryPoint) == 0x000000, "Member 'Parent_Tree_Apollo_C_ExecuteUbergraph_Parent_Tree_Apollo::EntryPoint' has a wrong offset!");
static_assert(offsetof(Parent_Tree_Apollo_C_ExecuteUbergraph_Parent_Tree_Apollo, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'Parent_Tree_Apollo_C_ExecuteUbergraph_Parent_Tree_Apollo::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

}

