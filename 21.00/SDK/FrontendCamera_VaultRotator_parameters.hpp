#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontendCamera_VaultRotator

#include "Basic.hpp"


namespace SDK::Params
{

// Function FrontendCamera_VaultRotator.FrontendCamera_VaultRotator_C.BP_OnActivated
// 0x0008 (0x0008 - 0x0000)
struct FrontendCamera_VaultRotator_C_BP_OnActivated final
{
public:
	class AFortPlayerController*                  PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontendCamera_VaultRotator_C_BP_OnActivated) == 0x000008, "Wrong alignment on FrontendCamera_VaultRotator_C_BP_OnActivated");
static_assert(sizeof(FrontendCamera_VaultRotator_C_BP_OnActivated) == 0x000008, "Wrong size on FrontendCamera_VaultRotator_C_BP_OnActivated");
static_assert(offsetof(FrontendCamera_VaultRotator_C_BP_OnActivated, PlayerController) == 0x000000, "Member 'FrontendCamera_VaultRotator_C_BP_OnActivated::PlayerController' has a wrong offset!");

// Function FrontendCamera_VaultRotator.FrontendCamera_VaultRotator_C.SetVaultRotatorLighting
// 0x0058 (0x0058 - 0x0000)
struct FrontendCamera_VaultRotator_C_SetVaultRotatorLighting final
{
public:
	class FName                                   ItemRotatorTag;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AVaultWorld_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	class AVaultWorld_C*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVaultRotator_C*                        CallFunc_GetVaultRotator_VaultRotator;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting) == 0x000008, "Wrong alignment on FrontendCamera_VaultRotator_C_SetVaultRotatorLighting");
static_assert(sizeof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting) == 0x000058, "Wrong size on FrontendCamera_VaultRotator_C_SetVaultRotatorLighting");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, ItemRotatorTag) == 0x000000, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::ItemRotatorTag' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, Temp_int_Array_Index_Variable) == 0x000004, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, CallFunc_Array_Get_Item) == 0x000020, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, CallFunc_GetVaultRotator_VaultRotator) == 0x000030, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::CallFunc_GetVaultRotator_VaultRotator' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_SetVaultRotatorLighting, CallFunc_ActorHasTag_ReturnValue) == 0x000050, "Member 'FrontendCamera_VaultRotator_C_SetVaultRotatorLighting::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");

// Function FrontendCamera_VaultRotator.FrontendCamera_VaultRotator_C.ExecuteUbergraph_FrontendCamera_VaultRotator
// 0x0048 (0x0048 - 0x0000)
struct FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_Event_PlayerController_1;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortTimeOfDayManager*                  CallFunc_GetTimeOfDayManagerFromContext_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ATVPostProcessBP_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class AFortPlayerController*                  K2Node_Event_PlayerController;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATVPostProcessBP_C*                     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator) == 0x000008, "Wrong alignment on FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator");
static_assert(sizeof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator) == 0x000048, "Wrong size on FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, EntryPoint) == 0x000000, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::EntryPoint' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, Temp_int_Array_Index_Variable) == 0x000004, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, K2Node_Event_PlayerController_1) == 0x000008, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::K2Node_Event_PlayerController_1' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, CallFunc_GetTimeOfDayManagerFromContext_ReturnValue) == 0x000010, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::CallFunc_GetTimeOfDayManagerFromContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, K2Node_Event_PlayerController) == 0x000028, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::K2Node_Event_PlayerController' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, CallFunc_Array_Get_Item) == 0x000030, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'FrontendCamera_VaultRotator_C_ExecuteUbergraph_FrontendCamera_VaultRotator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function FrontendCamera_VaultRotator.FrontendCamera_VaultRotator_C.BP_OnDeactivated
// 0x0008 (0x0008 - 0x0000)
struct FrontendCamera_VaultRotator_C_BP_OnDeactivated final
{
public:
	class AFortPlayerController*                  PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontendCamera_VaultRotator_C_BP_OnDeactivated) == 0x000008, "Wrong alignment on FrontendCamera_VaultRotator_C_BP_OnDeactivated");
static_assert(sizeof(FrontendCamera_VaultRotator_C_BP_OnDeactivated) == 0x000008, "Wrong size on FrontendCamera_VaultRotator_C_BP_OnDeactivated");
static_assert(offsetof(FrontendCamera_VaultRotator_C_BP_OnDeactivated, PlayerController) == 0x000000, "Member 'FrontendCamera_VaultRotator_C_BP_OnDeactivated::PlayerController' has a wrong offset!");

}

