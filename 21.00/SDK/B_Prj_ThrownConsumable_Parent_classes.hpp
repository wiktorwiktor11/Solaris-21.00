#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_ThrownConsumable_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_ThrownConsumable_Parent.B_Prj_ThrownConsumable_Parent_C
// 0x0018 (0x0A08 - 0x09F0)
class AB_Prj_ThrownConsumable_Parent_C : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         BouncePawnAgainstPawnGravityScale;                 // 0x09F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FuseTime;                                          // 0x09FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSimulationRunning;                                // 0x0A00(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldRestartSimulating;                          // 0x0A01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetBounceVelocityPawn();
	void SetBounceVelocity();
	void RestartSimulating();
	void ResetSimulatedComponents();
	void ReceiveBeginPlay();
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnRep_bSimulationRunning();
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void OnBounce(const struct FHitResult& Hit);
	void FuseEnded();
	void ExecuteUbergraph_B_Prj_ThrownConsumable_Parent(int32 EntryPoint);
	void Event_OnVehicleDestroyed(class AActor* DestroyedActor);
	void Event_BuildingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_ThrownConsumable_Parent_C">();
	}
	static class AB_Prj_ThrownConsumable_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_ThrownConsumable_Parent_C>();
	}
};
static_assert(alignof(AB_Prj_ThrownConsumable_Parent_C) == 0x000008, "Wrong alignment on AB_Prj_ThrownConsumable_Parent_C");
static_assert(sizeof(AB_Prj_ThrownConsumable_Parent_C) == 0x000A08, "Wrong size on AB_Prj_ThrownConsumable_Parent_C");
static_assert(offsetof(AB_Prj_ThrownConsumable_Parent_C, UberGraphFrame) == 0x0009F0, "Member 'AB_Prj_ThrownConsumable_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_ThrownConsumable_Parent_C, BouncePawnAgainstPawnGravityScale) == 0x0009F8, "Member 'AB_Prj_ThrownConsumable_Parent_C::BouncePawnAgainstPawnGravityScale' has a wrong offset!");
static_assert(offsetof(AB_Prj_ThrownConsumable_Parent_C, FuseTime) == 0x0009FC, "Member 'AB_Prj_ThrownConsumable_Parent_C::FuseTime' has a wrong offset!");
static_assert(offsetof(AB_Prj_ThrownConsumable_Parent_C, bSimulationRunning) == 0x000A00, "Member 'AB_Prj_ThrownConsumable_Parent_C::bSimulationRunning' has a wrong offset!");
static_assert(offsetof(AB_Prj_ThrownConsumable_Parent_C, bShouldRestartSimulating) == 0x000A01, "Member 'AB_Prj_ThrownConsumable_Parent_C::bShouldRestartSimulating' has a wrong offset!");

}

