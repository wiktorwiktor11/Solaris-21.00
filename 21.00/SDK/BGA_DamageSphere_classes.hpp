#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_DamageSphere

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_DamageSphere.BGA_DamageSphere_C
// 0x0018 (0x0988 - 0x0970)
class ABGA_DamageSphere_C final : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0970(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Sphere1;                                           // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_DamageSphere(int32 EntryPoint);
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_DamageSphere_C">();
	}
	static class ABGA_DamageSphere_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_DamageSphere_C>();
	}
};
static_assert(alignof(ABGA_DamageSphere_C) == 0x000008, "Wrong alignment on ABGA_DamageSphere_C");
static_assert(sizeof(ABGA_DamageSphere_C) == 0x000988, "Wrong size on ABGA_DamageSphere_C");
static_assert(offsetof(ABGA_DamageSphere_C, UberGraphFrame) == 0x000970, "Member 'ABGA_DamageSphere_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_DamageSphere_C, Sphere1) == 0x000978, "Member 'ABGA_DamageSphere_C::Sphere1' has a wrong offset!");
static_assert(offsetof(ABGA_DamageSphere_C, Sphere) == 0x000980, "Member 'ABGA_DamageSphere_C::Sphere' has a wrong offset!");

}

