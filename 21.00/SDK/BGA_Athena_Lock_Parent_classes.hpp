#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_Lock_Parent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Enum_Athena_Lock_structs.hpp"
#include "Enum_MANG_Security_ID_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_Lock_Parent.BGA_Athena_Lock_Parent_C
// 0x01D8 (0x0B48 - 0x0970)
class ABGA_Athena_Lock_Parent_C : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0970(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Lock;                                              // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLinkToActorComponent*              FortLinkToActor;                                   // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractionCollision;                              // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABuildingActor*                         AttachedLockActor;                                 // 0x0998(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          CanFirstInteract;                                  // 0x09A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSecondInteract;                                 // 0x09A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanInteractWhileUnlocked;                          // 0x09A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A3[0x5];                                      // 0x09A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FirstInteractText;                                 // 0x09A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SecondInteractText;                                // 0x09C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         FirstInteractTime;                                 // 0x09D8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         SecondInteractTime;                                // 0x0A00(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SetLockOnFirstInteract;                            // 0x0A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetLockOnSecondInteract;                           // 0x0A29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2A[0x6];                                      // 0x0A2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              LastInteractingPawn;                               // 0x0A30(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanMultipleInteract;                               // 0x0A38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Athena_Lock                              LockState;                                         // 0x0A39(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          EverInteractSetLock;                               // 0x0A3A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_A3B[0x1];                                      // 0x0A3B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Event_Locked;                                      // 0x0A3C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_Unlocked;                                    // 0x0A40(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DoLockCheckFirstInteract;                          // 0x0A44(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoLockCheckSecondInteract;                         // 0x0A45(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyEffectOnFailCheck;                            // 0x0A46(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A47[0x1];                                      // 0x0A47(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_FailedCheck;                                    // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxInteractAngle;                                  // 0x0A50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A54[0x4];                                      // 0x0A54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_RelockDelay;                                   // 0x0A58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AutoRelock;                                        // 0x0A80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A81[0x7];                                      // 0x0A81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_SelfInteractEnabled;                           // 0x0A88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_DoNotLockActor;                                // 0x0AB0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              OnUnlockedDispatcher;                              // 0x0AD8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnLockedDispatcher;                                // 0x0AE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          AutoAttachToParentActors;                          // 0x0AF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoCloseDoorOnLock;                               // 0x0AF9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoDoorOnUnlock;                                  // 0x0AFA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoOpenContainersOnUnlock;                        // 0x0AFB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetsAllowInteractOnUnlock;                         // 0x0AFC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_MANG_Security_ID                         Lock_ID;                                           // 0x0AFD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AFE[0x2];                                      // 0x0AFE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 BlankLinkedActor;                                  // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            UnlockedMesh;                                      // 0x0B08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     UnlockedMaterial;                                  // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            LockedMesh;                                        // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     LockedMaterial;                                    // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasMultipleLocks;                                  // 0x0B28(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B29[0x7];                                      // 0x0B29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABGA_Athena_Lock_Parent_C*>      OtherLocksOnActor;                                 // 0x0B30(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	struct FGameplayTag                           GC_Unlocked;                                       // 0x0B40(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Locked;                                         // 0x0B44(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UnlockOpenDoor();
	void TimedRelock();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void SetupMultipleLocks();
	void SetLockVisuals();
	void SetLock(Enum_Athena_Lock LockState_0);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void ParentActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OpenContainers();
	void OnUnLocked();
	void OnSecondInteract(class AFortPawn* InteractingPawn);
	void OnRep_LockState();
	void OnRep_EverInteractSetLock();
	void OnReady_19560710434050E125B3ADA0163CD609(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnLocked();
	void OnFirstInteract(class AFortPawn* InteractingPawn);
	void NotEnabled();
	void LockCloseDoor();
	void LockCheck(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, bool* CheckPassed);
	void Lock_Set_Interact_Collision(bool On);
	void HideAndKill();
	void FindOtherLocks();
	void ExecuteValidGC(const struct FGameplayTag& GameplayCueTag);
	void ExecuteUbergraph_BGA_Athena_Lock_Parent(int32 EntryPoint);
	void CallOpenVault();
	void BndEvt__FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature(class AActor* DamageCauser);
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted);
	void ApplyFailCheckEffect();
	void AllLocksUnlocked(bool* AllUnlocked);

	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_Lock_Parent_C">();
	}
	static class ABGA_Athena_Lock_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_Lock_Parent_C>();
	}
};
static_assert(alignof(ABGA_Athena_Lock_Parent_C) == 0x000008, "Wrong alignment on ABGA_Athena_Lock_Parent_C");
static_assert(sizeof(ABGA_Athena_Lock_Parent_C) == 0x000B48, "Wrong size on ABGA_Athena_Lock_Parent_C");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, UberGraphFrame) == 0x000970, "Member 'ABGA_Athena_Lock_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Lock) == 0x000978, "Member 'ABGA_Athena_Lock_Parent_C::Lock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, DefaultSceneRoot) == 0x000980, "Member 'ABGA_Athena_Lock_Parent_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, FortLinkToActor) == 0x000988, "Member 'ABGA_Athena_Lock_Parent_C::FortLinkToActor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, InteractionCollision) == 0x000990, "Member 'ABGA_Athena_Lock_Parent_C::InteractionCollision' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AttachedLockActor) == 0x000998, "Member 'ABGA_Athena_Lock_Parent_C::AttachedLockActor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, CanFirstInteract) == 0x0009A0, "Member 'ABGA_Athena_Lock_Parent_C::CanFirstInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, CanSecondInteract) == 0x0009A1, "Member 'ABGA_Athena_Lock_Parent_C::CanSecondInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, CanInteractWhileUnlocked) == 0x0009A2, "Member 'ABGA_Athena_Lock_Parent_C::CanInteractWhileUnlocked' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, FirstInteractText) == 0x0009A8, "Member 'ABGA_Athena_Lock_Parent_C::FirstInteractText' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, SecondInteractText) == 0x0009C0, "Member 'ABGA_Athena_Lock_Parent_C::SecondInteractText' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, FirstInteractTime) == 0x0009D8, "Member 'ABGA_Athena_Lock_Parent_C::FirstInteractTime' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, SecondInteractTime) == 0x000A00, "Member 'ABGA_Athena_Lock_Parent_C::SecondInteractTime' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, SetLockOnFirstInteract) == 0x000A28, "Member 'ABGA_Athena_Lock_Parent_C::SetLockOnFirstInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, SetLockOnSecondInteract) == 0x000A29, "Member 'ABGA_Athena_Lock_Parent_C::SetLockOnSecondInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, LastInteractingPawn) == 0x000A30, "Member 'ABGA_Athena_Lock_Parent_C::LastInteractingPawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, CanMultipleInteract) == 0x000A38, "Member 'ABGA_Athena_Lock_Parent_C::CanMultipleInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, LockState) == 0x000A39, "Member 'ABGA_Athena_Lock_Parent_C::LockState' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, EverInteractSetLock) == 0x000A3A, "Member 'ABGA_Athena_Lock_Parent_C::EverInteractSetLock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Event_Locked) == 0x000A3C, "Member 'ABGA_Athena_Lock_Parent_C::Event_Locked' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Event_Unlocked) == 0x000A40, "Member 'ABGA_Athena_Lock_Parent_C::Event_Unlocked' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, DoLockCheckFirstInteract) == 0x000A44, "Member 'ABGA_Athena_Lock_Parent_C::DoLockCheckFirstInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, DoLockCheckSecondInteract) == 0x000A45, "Member 'ABGA_Athena_Lock_Parent_C::DoLockCheckSecondInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, ApplyEffectOnFailCheck) == 0x000A46, "Member 'ABGA_Athena_Lock_Parent_C::ApplyEffectOnFailCheck' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, GE_FailedCheck) == 0x000A48, "Member 'ABGA_Athena_Lock_Parent_C::GE_FailedCheck' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, MaxInteractAngle) == 0x000A50, "Member 'ABGA_Athena_Lock_Parent_C::MaxInteractAngle' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Row_RelockDelay) == 0x000A58, "Member 'ABGA_Athena_Lock_Parent_C::Row_RelockDelay' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AutoRelock) == 0x000A80, "Member 'ABGA_Athena_Lock_Parent_C::AutoRelock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Row_SelfInteractEnabled) == 0x000A88, "Member 'ABGA_Athena_Lock_Parent_C::Row_SelfInteractEnabled' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Row_DoNotLockActor) == 0x000AB0, "Member 'ABGA_Athena_Lock_Parent_C::Row_DoNotLockActor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, OnUnlockedDispatcher) == 0x000AD8, "Member 'ABGA_Athena_Lock_Parent_C::OnUnlockedDispatcher' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, OnLockedDispatcher) == 0x000AE8, "Member 'ABGA_Athena_Lock_Parent_C::OnLockedDispatcher' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AutoAttachToParentActors) == 0x000AF8, "Member 'ABGA_Athena_Lock_Parent_C::AutoAttachToParentActors' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AutoCloseDoorOnLock) == 0x000AF9, "Member 'ABGA_Athena_Lock_Parent_C::AutoCloseDoorOnLock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AutoDoorOnUnlock) == 0x000AFA, "Member 'ABGA_Athena_Lock_Parent_C::AutoDoorOnUnlock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AutoOpenContainersOnUnlock) == 0x000AFB, "Member 'ABGA_Athena_Lock_Parent_C::AutoOpenContainersOnUnlock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, SetsAllowInteractOnUnlock) == 0x000AFC, "Member 'ABGA_Athena_Lock_Parent_C::SetsAllowInteractOnUnlock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Lock_ID) == 0x000AFD, "Member 'ABGA_Athena_Lock_Parent_C::Lock_ID' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, BlankLinkedActor) == 0x000B00, "Member 'ABGA_Athena_Lock_Parent_C::BlankLinkedActor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, UnlockedMesh) == 0x000B08, "Member 'ABGA_Athena_Lock_Parent_C::UnlockedMesh' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, UnlockedMaterial) == 0x000B10, "Member 'ABGA_Athena_Lock_Parent_C::UnlockedMaterial' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, LockedMesh) == 0x000B18, "Member 'ABGA_Athena_Lock_Parent_C::LockedMesh' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, LockedMaterial) == 0x000B20, "Member 'ABGA_Athena_Lock_Parent_C::LockedMaterial' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, HasMultipleLocks) == 0x000B28, "Member 'ABGA_Athena_Lock_Parent_C::HasMultipleLocks' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, OtherLocksOnActor) == 0x000B30, "Member 'ABGA_Athena_Lock_Parent_C::OtherLocksOnActor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, GC_Unlocked) == 0x000B40, "Member 'ABGA_Athena_Lock_Parent_C::GC_Unlocked' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, GC_Locked) == 0x000B44, "Member 'ABGA_Athena_Lock_Parent_C::GC_Locked' has a wrong offset!");

}

