#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ZipLine_Pole_Apollo

#include "Basic.hpp"

#include "IgnorePlayerStruct_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.UnbindZiplineStateChanged
// 0x0008 (0x0008 - 0x0000)
struct ZipLine_Pole_Apollo_C_UnbindZiplineStateChanged final
{
public:
	class AFortPlayerPawn*                        InFortPlayerPawn;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Apollo_C_UnbindZiplineStateChanged) == 0x000008, "Wrong alignment on ZipLine_Pole_Apollo_C_UnbindZiplineStateChanged");
static_assert(sizeof(ZipLine_Pole_Apollo_C_UnbindZiplineStateChanged) == 0x000008, "Wrong size on ZipLine_Pole_Apollo_C_UnbindZiplineStateChanged");
static_assert(offsetof(ZipLine_Pole_Apollo_C_UnbindZiplineStateChanged, InFortPlayerPawn) == 0x000000, "Member 'ZipLine_Pole_Apollo_C_UnbindZiplineStateChanged::InFortPlayerPawn' has a wrong offset!");

// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.RemovePawnFromPawnsOverlappingLarge
// 0x0018 (0x0018 - 0x0000)
struct ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge) == 0x000008, "Wrong alignment on ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge");
static_assert(sizeof(ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge) == 0x000018, "Wrong size on ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge");
static_assert(offsetof(ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge, PlayerPawn) == 0x000000, "Member 'ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge::PlayerPawn' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge, CallFunc_Array_Find_ReturnValue) == 0x000008, "Member 'ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge, CallFunc_Array_RemoveItem_ReturnValue) == 0x000015, "Member 'ZipLine_Pole_Apollo_C_RemovePawnFromPawnsOverlappingLarge::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.Remove Ignore Player
// 0x0010 (0x0010 - 0x0000)
struct ZipLine_Pole_Apollo_C_Remove_Ignore_Player final
{
public:
	class AFortPlayerPawn*                        InFortPlayerPawn;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindInIgnorePlayers_Index;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Apollo_C_Remove_Ignore_Player) == 0x000008, "Wrong alignment on ZipLine_Pole_Apollo_C_Remove_Ignore_Player");
static_assert(sizeof(ZipLine_Pole_Apollo_C_Remove_Ignore_Player) == 0x000010, "Wrong size on ZipLine_Pole_Apollo_C_Remove_Ignore_Player");
static_assert(offsetof(ZipLine_Pole_Apollo_C_Remove_Ignore_Player, InFortPlayerPawn) == 0x000000, "Member 'ZipLine_Pole_Apollo_C_Remove_Ignore_Player::InFortPlayerPawn' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_Remove_Ignore_Player, CallFunc_FindInIgnorePlayers_Index) == 0x000008, "Member 'ZipLine_Pole_Apollo_C_Remove_Ignore_Player::CallFunc_FindInIgnorePlayers_Index' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_Remove_Ignore_Player, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'ZipLine_Pole_Apollo_C_Remove_Ignore_Player::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.PlayerEndOverlappingLargeCapsule
// 0x0008 (0x0008 - 0x0000)
struct ZipLine_Pole_Apollo_C_PlayerEndOverlappingLargeCapsule final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Apollo_C_PlayerEndOverlappingLargeCapsule) == 0x000008, "Wrong alignment on ZipLine_Pole_Apollo_C_PlayerEndOverlappingLargeCapsule");
static_assert(sizeof(ZipLine_Pole_Apollo_C_PlayerEndOverlappingLargeCapsule) == 0x000008, "Wrong size on ZipLine_Pole_Apollo_C_PlayerEndOverlappingLargeCapsule");
static_assert(offsetof(ZipLine_Pole_Apollo_C_PlayerEndOverlappingLargeCapsule, FortPlayerPawn) == 0x000000, "Member 'ZipLine_Pole_Apollo_C_PlayerEndOverlappingLargeCapsule::FortPlayerPawn' has a wrong offset!");

// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.PlayerBeginOverlappingLargeCapsule
// 0x0008 (0x0008 - 0x0000)
struct ZipLine_Pole_Apollo_C_PlayerBeginOverlappingLargeCapsule final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Apollo_C_PlayerBeginOverlappingLargeCapsule) == 0x000008, "Wrong alignment on ZipLine_Pole_Apollo_C_PlayerBeginOverlappingLargeCapsule");
static_assert(sizeof(ZipLine_Pole_Apollo_C_PlayerBeginOverlappingLargeCapsule) == 0x000008, "Wrong size on ZipLine_Pole_Apollo_C_PlayerBeginOverlappingLargeCapsule");
static_assert(offsetof(ZipLine_Pole_Apollo_C_PlayerBeginOverlappingLargeCapsule, FortPlayerPawn) == 0x000000, "Member 'ZipLine_Pole_Apollo_C_PlayerBeginOverlappingLargeCapsule::FortPlayerPawn' has a wrong offset!");

// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.pawnZiplineStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ZipLine_Pole_Apollo_C_pawnZiplineStateChanged final
{
public:
	bool                                          bIsZiplining;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Apollo_C_pawnZiplineStateChanged) == 0x000001, "Wrong alignment on ZipLine_Pole_Apollo_C_pawnZiplineStateChanged");
static_assert(sizeof(ZipLine_Pole_Apollo_C_pawnZiplineStateChanged) == 0x000001, "Wrong size on ZipLine_Pole_Apollo_C_pawnZiplineStateChanged");
static_assert(offsetof(ZipLine_Pole_Apollo_C_pawnZiplineStateChanged, bIsZiplining) == 0x000000, "Member 'ZipLine_Pole_Apollo_C_pawnZiplineStateChanged::bIsZiplining' has a wrong offset!");

// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.FindInIgnorePlayers
// 0x0038 (0x0038 - 0x0000)
struct ZipLine_Pole_Apollo_C_FindInIgnorePlayers final
{
public:
	class AFortPlayerPawn*                        InFortPlayerPawn;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoundIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIgnorePlayerStruct                    CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers) == 0x000008, "Wrong alignment on ZipLine_Pole_Apollo_C_FindInIgnorePlayers");
static_assert(sizeof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers) == 0x000038, "Wrong size on ZipLine_Pole_Apollo_C_FindInIgnorePlayers");
static_assert(offsetof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers, InFortPlayerPawn) == 0x000000, "Member 'ZipLine_Pole_Apollo_C_FindInIgnorePlayers::InFortPlayerPawn' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers, Index_0) == 0x000008, "Member 'ZipLine_Pole_Apollo_C_FindInIgnorePlayers::Index_0' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers, FoundIndex) == 0x00000C, "Member 'ZipLine_Pole_Apollo_C_FindInIgnorePlayers::FoundIndex' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ZipLine_Pole_Apollo_C_FindInIgnorePlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'ZipLine_Pole_Apollo_C_FindInIgnorePlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ZipLine_Pole_Apollo_C_FindInIgnorePlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'ZipLine_Pole_Apollo_C_FindInIgnorePlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers, CallFunc_Array_Get_Item) == 0x000020, "Member 'ZipLine_Pole_Apollo_C_FindInIgnorePlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'ZipLine_Pole_Apollo_C_FindInIgnorePlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_FindInIgnorePlayers, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'ZipLine_Pole_Apollo_C_FindInIgnorePlayers::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.ExecuteUbergraph_ZipLine_Pole_Apollo
// 0x02A0 (0x02A0 - 0x0000)
struct ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_CustomEvent_InFortPlayerPawn;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_SelfActor;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0038(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindInIgnorePlayers_Index;                // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsZiplining;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0140(0x0060)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZipLine_Pole_Capsules_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_CustomEvent_FortPlayerPawn_1;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_CustomEvent_FortPlayerPawn;                 // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZiplining_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIgnorePlayerStruct                    CallFunc_Array_Get_Item;                           // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindInIgnorePlayers_Index_1;              // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIgnorePlayerStruct                    K2Node_MakeStruct_IgnorePlayerStruct;              // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_2;             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIgnorePlayerStruct                    K2Node_MakeStruct_IgnorePlayerStruct_1;            // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0240(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x024C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0258(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0260(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZiplining_ReturnValue_1;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item_1;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue_1;         // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo) == 0x000010, "Wrong alignment on ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo");
static_assert(sizeof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo) == 0x0002A0, "Wrong size on ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, EntryPoint) == 0x000000, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::EntryPoint' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CustomEvent_InFortPlayerPawn) == 0x000008, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CustomEvent_InFortPlayerPawn' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CustomEvent_SelfActor) == 0x000010, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CustomEvent_SelfActor' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CustomEvent_OtherActor) == 0x000018, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CustomEvent_NormalImpulse) == 0x000020, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CustomEvent_Hit) == 0x000038, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000118, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Array_Length_ReturnValue) == 0x000124, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_FindInIgnorePlayers_Index) == 0x000128, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_FindInIgnorePlayers_Index' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Subtract_IntInt_ReturnValue) == 0x00012C, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000130, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Max_ReturnValue) == 0x000134, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CustomEvent_bIsZiplining) == 0x000138, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CustomEvent_bIsZiplining' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_GetTransform_ReturnValue) == 0x000140, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001A0, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001A8, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CustomEvent_FortPlayerPawn_1) == 0x0001B0, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CustomEvent_FortPlayerPawn_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CustomEvent_FortPlayerPawn) == 0x0001B8, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CustomEvent_FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_IsZiplining_ReturnValue) == 0x0001C0, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_IsZiplining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001C1, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Array_Length_ReturnValue_1) == 0x0001C4, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001C8, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, Temp_int_Array_Index_Variable) == 0x0001CC, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Max_ReturnValue_1) == 0x0001D0, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0001E8, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_FindInIgnorePlayers_Index_1) == 0x0001EC, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_FindInIgnorePlayers_Index_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Array_AddUnique_ReturnValue) == 0x0001F0, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, Temp_int_Loop_Counter_Variable) == 0x0001F4, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_GetTimeSeconds_ReturnValue) == 0x0001F8, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0001FC, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_MakeStruct_IgnorePlayerStruct) == 0x000200, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_MakeStruct_IgnorePlayerStruct' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000210, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000214, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_GetTimeSeconds_ReturnValue_2) == 0x000218, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_GetTimeSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_MakeStruct_IgnorePlayerStruct_1) == 0x000220, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_MakeStruct_IgnorePlayerStruct_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000230, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Array_Add_ReturnValue) == 0x000234, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000238, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, Temp_int_Variable) == 0x00023C, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CreateDelegate_OutputDelegate) == 0x000240, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CreateDelegate_OutputDelegate_1) == 0x00024C, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000258, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, K2Node_CreateDelegate_OutputDelegate_2) == 0x000260, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Add_IntInt_ReturnValue) == 0x00026C, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_IsZiplining_ReturnValue_1) == 0x000270, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_IsZiplining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, Temp_int_Array_Index_Variable_1) == 0x000274, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_IsOverlappingActor_ReturnValue) == 0x000278, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Array_Get_Item_1) == 0x000280, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_IsOverlappingActor_ReturnValue_1) == 0x000288, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_IsOverlappingActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_BooleanOR_ReturnValue) == 0x000289, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, Temp_int_Loop_Counter_Variable_1) == 0x00028C, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000290, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000294, "Member 'ZipLine_Pole_Apollo_C_ExecuteUbergraph_ZipLine_Pole_Apollo::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function ZipLine_Pole_Apollo.ZipLine_Pole_Apollo_C.Actor Hit
// 0x0108 (0x0108 - 0x0000)
struct ZipLine_Pole_Apollo_C_Actor_Hit final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0028(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ZipLine_Pole_Apollo_C_Actor_Hit) == 0x000008, "Wrong alignment on ZipLine_Pole_Apollo_C_Actor_Hit");
static_assert(sizeof(ZipLine_Pole_Apollo_C_Actor_Hit) == 0x000108, "Wrong size on ZipLine_Pole_Apollo_C_Actor_Hit");
static_assert(offsetof(ZipLine_Pole_Apollo_C_Actor_Hit, SelfActor) == 0x000000, "Member 'ZipLine_Pole_Apollo_C_Actor_Hit::SelfActor' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_Actor_Hit, OtherActor) == 0x000008, "Member 'ZipLine_Pole_Apollo_C_Actor_Hit::OtherActor' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_Actor_Hit, NormalImpulse) == 0x000010, "Member 'ZipLine_Pole_Apollo_C_Actor_Hit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Apollo_C_Actor_Hit, Hit) == 0x000028, "Member 'ZipLine_Pole_Apollo_C_Actor_Hit::Hit' has a wrong offset!");

}

