#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Pistol_Revolver_SideAction_AnimBP1

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Pistol_Revolver_SideAction_AnimBP1.Pistol_Revolver_SideAction_AnimBP1_C
// 0x05E0 (0x0930 - 0x0350)
class UPistol_Revolver_SideAction_AnimBP1_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0388(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x03D0(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0498(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x04C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x04E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0510(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0538(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0560(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0588(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x05B0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x05F0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0610(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0650(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0670(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x06B0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x06D0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0710(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0730(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0770(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0790(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x07D0(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x07F0(0x0010)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0800(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0820(0x00B8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x08D8(0x0040)()
	int32                                         DrumPositionCount;                                 // 0x0918(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRotateToPos1;                                // 0x091C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRotateToPos2;                                // 0x091D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRotateToPos3;                                // 0x091E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRotateToPos4;                                // 0x091F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRotateToPos5;                                // 0x0920(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRotateToPos6;                                // 0x0921(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Revolver_RotChamber();
	void ExecuteUbergraph_Pistol_Revolver_SideAction_AnimBP1(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Pistol_Revolver_SideAction_AnimBP1_C">();
	}
	static class UPistol_Revolver_SideAction_AnimBP1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPistol_Revolver_SideAction_AnimBP1_C>();
	}
};
static_assert(alignof(UPistol_Revolver_SideAction_AnimBP1_C) == 0x000010, "Wrong alignment on UPistol_Revolver_SideAction_AnimBP1_C");
static_assert(sizeof(UPistol_Revolver_SideAction_AnimBP1_C) == 0x000930, "Wrong size on UPistol_Revolver_SideAction_AnimBP1_C");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, UberGraphFrame) == 0x000350, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_Root) == 0x000368, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_Slot) == 0x000388, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_ApplyAdditive) == 0x0003D0, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_TransitionResult_6) == 0x000498, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_TransitionResult_5) == 0x0004C0, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_TransitionResult_4) == 0x0004E8, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_TransitionResult_3) == 0x000510, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_TransitionResult_2) == 0x000538, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_TransitionResult_1) == 0x000560, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_TransitionResult) == 0x000588, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_SequencePlayer_6) == 0x0005B0, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_StateResult_6) == 0x0005F0, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_SequencePlayer_5) == 0x000610, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_StateResult_5) == 0x000650, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_SequencePlayer_4) == 0x000670, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_StateResult_4) == 0x0006B0, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_SequencePlayer_3) == 0x0006D0, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_StateResult_3) == 0x000710, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_SequencePlayer_2) == 0x000730, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_StateResult_2) == 0x000770, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_SequencePlayer_1) == 0x000790, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_StateResult_1) == 0x0007D0, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_IdentityPose) == 0x0007F0, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_StateResult) == 0x000800, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_StateMachine) == 0x000820, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, AnimGraphNode_SequencePlayer) == 0x0008D8, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, DrumPositionCount) == 0x000918, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::DrumPositionCount' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, ShouldRotateToPos1) == 0x00091C, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::ShouldRotateToPos1' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, ShouldRotateToPos2) == 0x00091D, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::ShouldRotateToPos2' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, ShouldRotateToPos3) == 0x00091E, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::ShouldRotateToPos3' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, ShouldRotateToPos4) == 0x00091F, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::ShouldRotateToPos4' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, ShouldRotateToPos5) == 0x000920, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::ShouldRotateToPos5' has a wrong offset!");
static_assert(offsetof(UPistol_Revolver_SideAction_AnimBP1_C, ShouldRotateToPos6) == 0x000921, "Member 'UPistol_Revolver_SideAction_AnimBP1_C::ShouldRotateToPos6' has a wrong offset!");

}

