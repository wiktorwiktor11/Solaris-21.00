#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaSpectatorHitPointBar

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function AthenaSpectatorHitPointBar.AthenaSpectatorHitPointBar_C.ChangeTextVisibility
// 0x0001 (0x0001 - 0x0000)
struct AthenaSpectatorHitPointBar_C_ChangeTextVisibility final
{
public:
	bool                                          bIsVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSpectatorHitPointBar_C_ChangeTextVisibility) == 0x000001, "Wrong alignment on AthenaSpectatorHitPointBar_C_ChangeTextVisibility");
static_assert(sizeof(AthenaSpectatorHitPointBar_C_ChangeTextVisibility) == 0x000001, "Wrong size on AthenaSpectatorHitPointBar_C_ChangeTextVisibility");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ChangeTextVisibility, bIsVisible) == 0x000000, "Member 'AthenaSpectatorHitPointBar_C_ChangeTextVisibility::bIsVisible' has a wrong offset!");

// Function AthenaSpectatorHitPointBar.AthenaSpectatorHitPointBar_C.ExecuteUbergraph_AthenaSpectatorHitPointBar
// 0x0078 (0x0078 - 0x0000)
struct AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthBarType                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlateTextureAtlasInterface> Temp_interface_Variable;                           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISlateTextureAtlasInterface> Temp_interface_Variable_1;                         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISlateTextureAtlasInterface> Temp_interface_Variable_2;                         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISlateTextureAtlasInterface> Temp_interface_Variable_3;                         // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsDBNO;                            // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InCurrentValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InDeltaValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlateTextureAtlasInterface> K2Node_Select_Default_1;                           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVisible;                           // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar) == 0x000008, "Wrong alignment on AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar");
static_assert(sizeof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar) == 0x000078, "Wrong size on AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, EntryPoint) == 0x000000, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_byte_Variable) == 0x000004, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_interface_Variable) == 0x000008, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_interface_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_interface_Variable_1) == 0x000018, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_interface_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_interface_Variable_2) == 0x000028, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_interface_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_interface_Variable_3) == 0x000038, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_interface_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_bool_Variable) == 0x000048, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_byte_Variable_1) == 0x000049, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_byte_Variable_2) == 0x00004A, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, K2Node_Event_IsDesignTime) == 0x00004B, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, K2Node_SwitchEnum_CmpSuccess) == 0x00004C, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_byte_Variable_3) == 0x00004D, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_byte_Variable_4) == 0x00004E, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, K2Node_Event_bInIsDBNO) == 0x00004F, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::K2Node_Event_bInIsDBNO' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_bool_Variable_1) == 0x000050, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, K2Node_Event_InCurrentValue) == 0x000054, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::K2Node_Event_InCurrentValue' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, K2Node_Event_InDeltaValue) == 0x000058, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::K2Node_Event_InDeltaValue' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, K2Node_Select_Default) == 0x00005C, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, K2Node_Select_Default_1) == 0x000060, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_byte_Variable_5) == 0x000070, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000071, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_byte_Variable_6) == 0x000072, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, Temp_bool_Variable_2) == 0x000073, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, CallFunc_BooleanAND_ReturnValue) == 0x000074, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, K2Node_Event_bIsVisible) == 0x000075, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::K2Node_Event_bIsVisible' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, K2Node_Select_Default_2) == 0x000076, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar, K2Node_Select_Default_3) == 0x000077, "Member 'AthenaSpectatorHitPointBar_C_ExecuteUbergraph_AthenaSpectatorHitPointBar::K2Node_Select_Default_3' has a wrong offset!");

// Function AthenaSpectatorHitPointBar.AthenaSpectatorHitPointBar_C.InitializeBar
// 0x0154 (0x0154 - 0x0000)
struct AthenaSpectatorHitPointBar_C_InitializeBar final
{
public:
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthBarType                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthBarType                                Temp_byte_Variable_1;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthBarType                                Temp_byte_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthBarType                                Temp_byte_Variable_3;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthBarType                                Temp_byte_Variable_4;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSpectatorHitPointBar_C_InitializeBar) == 0x000004, "Wrong alignment on AthenaSpectatorHitPointBar_C_InitializeBar");
static_assert(sizeof(AthenaSpectatorHitPointBar_C_InitializeBar) == 0x000154, "Wrong size on AthenaSpectatorHitPointBar_C_InitializeBar");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable) == 0x000000, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_byte_Variable) == 0x000010, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_1) == 0x000014, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_2) == 0x000024, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_3) == 0x000034, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_byte_Variable_1) == 0x000044, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_4) == 0x000048, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_5) == 0x000058, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_6) == 0x000068, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_byte_Variable_2) == 0x000078, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_7) == 0x00007C, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_8) == 0x00008C, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_9) == 0x00009C, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_byte_Variable_3) == 0x0000AC, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_10) == 0x0000B0, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_11) == 0x0000C0, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_12) == 0x0000D0, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_13) == 0x0000E0, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_struct_Variable_14) == 0x0000F0, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, Temp_byte_Variable_4) == 0x000100, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, K2Node_Select_Default) == 0x000104, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, K2Node_Select_Default_1) == 0x000114, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, K2Node_Select_Default_2) == 0x000124, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, K2Node_Select_Default_3) == 0x000134, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_InitializeBar, K2Node_Select_Default_4) == 0x000144, "Member 'AthenaSpectatorHitPointBar_C_InitializeBar::K2Node_Select_Default_4' has a wrong offset!");

// Function AthenaSpectatorHitPointBar.AthenaSpectatorHitPointBar_C.OnCurrentValueChanged
// 0x0004 (0x0004 - 0x0000)
struct AthenaSpectatorHitPointBar_C_OnCurrentValueChanged final
{
public:
	float                                         InCurrentValue;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSpectatorHitPointBar_C_OnCurrentValueChanged) == 0x000004, "Wrong alignment on AthenaSpectatorHitPointBar_C_OnCurrentValueChanged");
static_assert(sizeof(AthenaSpectatorHitPointBar_C_OnCurrentValueChanged) == 0x000004, "Wrong size on AthenaSpectatorHitPointBar_C_OnCurrentValueChanged");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_OnCurrentValueChanged, InCurrentValue) == 0x000000, "Member 'AthenaSpectatorHitPointBar_C_OnCurrentValueChanged::InCurrentValue' has a wrong offset!");

// Function AthenaSpectatorHitPointBar.AthenaSpectatorHitPointBar_C.OnDBNOChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaSpectatorHitPointBar_C_OnDBNOChanged final
{
public:
	bool                                          bInIsDBNO;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSpectatorHitPointBar_C_OnDBNOChanged) == 0x000001, "Wrong alignment on AthenaSpectatorHitPointBar_C_OnDBNOChanged");
static_assert(sizeof(AthenaSpectatorHitPointBar_C_OnDBNOChanged) == 0x000001, "Wrong size on AthenaSpectatorHitPointBar_C_OnDBNOChanged");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_OnDBNOChanged, bInIsDBNO) == 0x000000, "Member 'AthenaSpectatorHitPointBar_C_OnDBNOChanged::bInIsDBNO' has a wrong offset!");

// Function AthenaSpectatorHitPointBar.AthenaSpectatorHitPointBar_C.OnDeltaValueChanged
// 0x0004 (0x0004 - 0x0000)
struct AthenaSpectatorHitPointBar_C_OnDeltaValueChanged final
{
public:
	float                                         InDeltaValue;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSpectatorHitPointBar_C_OnDeltaValueChanged) == 0x000004, "Wrong alignment on AthenaSpectatorHitPointBar_C_OnDeltaValueChanged");
static_assert(sizeof(AthenaSpectatorHitPointBar_C_OnDeltaValueChanged) == 0x000004, "Wrong size on AthenaSpectatorHitPointBar_C_OnDeltaValueChanged");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_OnDeltaValueChanged, InDeltaValue) == 0x000000, "Member 'AthenaSpectatorHitPointBar_C_OnDeltaValueChanged::InDeltaValue' has a wrong offset!");

// Function AthenaSpectatorHitPointBar.AthenaSpectatorHitPointBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaSpectatorHitPointBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaSpectatorHitPointBar_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaSpectatorHitPointBar_C_PreConstruct");
static_assert(sizeof(AthenaSpectatorHitPointBar_C_PreConstruct) == 0x000001, "Wrong size on AthenaSpectatorHitPointBar_C_PreConstruct");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaSpectatorHitPointBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaSpectatorHitPointBar.AthenaSpectatorHitPointBar_C.UpdateCurrentValueText
// 0x0038 (0x0038 - 0x0000)
struct AthenaSpectatorHitPointBar_C_UpdateCurrentValueText final
{
public:
	float                                         InCurrentValue;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthBarType                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVehicleHealth_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
};
static_assert(alignof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText) == 0x000008, "Wrong alignment on AthenaSpectatorHitPointBar_C_UpdateCurrentValueText");
static_assert(sizeof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText) == 0x000038, "Wrong size on AthenaSpectatorHitPointBar_C_UpdateCurrentValueText");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText, InCurrentValue) == 0x000000, "Member 'AthenaSpectatorHitPointBar_C_UpdateCurrentValueText::InCurrentValue' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText, Temp_byte_Variable) == 0x000004, "Member 'AthenaSpectatorHitPointBar_C_UpdateCurrentValueText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText, Temp_float_Variable) == 0x000008, "Member 'AthenaSpectatorHitPointBar_C_UpdateCurrentValueText::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText, Temp_float_Variable_1) == 0x00000C, "Member 'AthenaSpectatorHitPointBar_C_UpdateCurrentValueText::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText, Temp_float_Variable_2) == 0x000010, "Member 'AthenaSpectatorHitPointBar_C_UpdateCurrentValueText::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'AthenaSpectatorHitPointBar_C_UpdateCurrentValueText::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText, CallFunc_GetVehicleHealth_ReturnValue) == 0x000018, "Member 'AthenaSpectatorHitPointBar_C_UpdateCurrentValueText::CallFunc_GetVehicleHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText, K2Node_Select_Default) == 0x00001C, "Member 'AthenaSpectatorHitPointBar_C_UpdateCurrentValueText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateCurrentValueText, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'AthenaSpectatorHitPointBar_C_UpdateCurrentValueText::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function AthenaSpectatorHitPointBar.AthenaSpectatorHitPointBar_C.UpdateMaxValueText
// 0x0048 (0x0048 - 0x0000)
struct AthenaSpectatorHitPointBar_C_UpdateMaxValueText final
{
public:
	EHealthBarType                                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetShield_Shield;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetShield_ShieldMax;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_Health;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_HealthMax;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVehicleMaxHealth_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0030(0x0018)()
};
static_assert(alignof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText) == 0x000008, "Wrong alignment on AthenaSpectatorHitPointBar_C_UpdateMaxValueText");
static_assert(sizeof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText) == 0x000048, "Wrong size on AthenaSpectatorHitPointBar_C_UpdateMaxValueText");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, Temp_byte_Variable) == 0x000000, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, Temp_float_Variable) == 0x000004, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, Temp_float_Variable_1) == 0x000008, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, Temp_float_Variable_2) == 0x00000C, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, CallFunc_GetShield_Shield) == 0x000014, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::CallFunc_GetShield_Shield' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, CallFunc_GetShield_ShieldMax) == 0x000018, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::CallFunc_GetShield_ShieldMax' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, CallFunc_GetHealth_Health) == 0x00001C, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::CallFunc_GetHealth_Health' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, CallFunc_GetHealth_HealthMax) == 0x000020, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::CallFunc_GetHealth_HealthMax' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, CallFunc_GetVehicleMaxHealth_ReturnValue) == 0x000024, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::CallFunc_GetVehicleMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, K2Node_Select_Default) == 0x000028, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaSpectatorHitPointBar_C_UpdateMaxValueText, CallFunc_Conv_FloatToText_ReturnValue) == 0x000030, "Member 'AthenaSpectatorHitPointBar_C_UpdateMaxValueText::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

}

