#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProjectileTrajectory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ProjectileTrajectory.BP_ProjectileTrajectory_C
// 0x0038 (0x02C0 - 0x0288)
class ABP_ProjectileTrajectory_C : public AFortProjectileTrajectory
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Target;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxMeshCount;                                      // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               SplineMID;                                         // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SplineFadeDistance;                                // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SplineFadeStartDistance;                           // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Trajectory_Owner;                                  // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldUpdate;                                      // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ProjectileTrajectory(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetShouldUpdateFromOwner(bool ShouldUpdate_0, class UObject* Owner_0);
	void SetTrajectorySpline(const TArray<struct FVector>& SplinePoints, const TArray<struct FVector>& SplineTangents);
	void UpdateFromTrajectoryOwner();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ProjectileTrajectory_C">();
	}
	static class ABP_ProjectileTrajectory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ProjectileTrajectory_C>();
	}
};
static_assert(alignof(ABP_ProjectileTrajectory_C) == 0x000008, "Wrong alignment on ABP_ProjectileTrajectory_C");
static_assert(sizeof(ABP_ProjectileTrajectory_C) == 0x0002C0, "Wrong size on ABP_ProjectileTrajectory_C");
static_assert(offsetof(ABP_ProjectileTrajectory_C, UberGraphFrame) == 0x000288, "Member 'ABP_ProjectileTrajectory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_C, Target) == 0x000290, "Member 'ABP_ProjectileTrajectory_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_C, MaxMeshCount) == 0x000298, "Member 'ABP_ProjectileTrajectory_C::MaxMeshCount' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_C, SplineMID) == 0x0002A0, "Member 'ABP_ProjectileTrajectory_C::SplineMID' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_C, SplineFadeDistance) == 0x0002A8, "Member 'ABP_ProjectileTrajectory_C::SplineFadeDistance' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_C, SplineFadeStartDistance) == 0x0002AC, "Member 'ABP_ProjectileTrajectory_C::SplineFadeStartDistance' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_C, Trajectory_Owner) == 0x0002B0, "Member 'ABP_ProjectileTrajectory_C::Trajectory_Owner' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_C, ShouldUpdate) == 0x0002B8, "Member 'ABP_ProjectileTrajectory_C::ShouldUpdate' has a wrong offset!");

}

