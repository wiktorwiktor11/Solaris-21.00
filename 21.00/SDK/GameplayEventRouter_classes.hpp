#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayEventRouter

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GameplayEventRouter_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class GameplayEventRouter.AsyncAction_StartListeningToEvent
// 0x0050 (0x0080 - 0x0030)
class UAsyncAction_StartListeningToEvent final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(class UAsyncAction_StartListeningToEvent* ProxyObject)> OnEventReceived;                                   // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x40];                                      // 0x0040(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAsyncAction_StartListeningToEvent* StartListeningToEvent(class UObject* WorldContextObject, class UGameplayEventRouterComponent* Target, class UScriptStruct* EventType, class UObject* Context);

	bool GetPayload(int32& OutPayload);
	void StopListeningToEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AsyncAction_StartListeningToEvent">();
	}
	static class UAsyncAction_StartListeningToEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncAction_StartListeningToEvent>();
	}
};
static_assert(alignof(UAsyncAction_StartListeningToEvent) == 0x000008, "Wrong alignment on UAsyncAction_StartListeningToEvent");
static_assert(sizeof(UAsyncAction_StartListeningToEvent) == 0x000080, "Wrong size on UAsyncAction_StartListeningToEvent");
static_assert(offsetof(UAsyncAction_StartListeningToEvent, OnEventReceived) == 0x000030, "Member 'UAsyncAction_StartListeningToEvent::OnEventReceived' has a wrong offset!");

// Class GameplayEventRouter.AsyncAction_StartListeningToStatefulEvent
// 0x0070 (0x00A0 - 0x0030)
class UAsyncAction_StartListeningToStatefulEvent final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(class UAsyncAction_StartListeningToStatefulEvent* ProxyObject)> OnEventReceived;                                   // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UAsyncAction_StartListeningToStatefulEvent* ProxyObject)> OnSavedEventStateExists;                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UAsyncAction_StartListeningToStatefulEvent* ProxyObject)> OnEventStateCleared;                               // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x40];                                      // 0x0060(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAsyncAction_StartListeningToStatefulEvent* StartListeningToStatefulEvent(class UObject* WorldContextObject, class UGameplayEventRouterComponent* Target, class UScriptStruct* EventType, class UObject* Context);

	bool GetPayload(int32& OutPayload);
	void StopListeningToStatefulEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AsyncAction_StartListeningToStatefulEvent">();
	}
	static class UAsyncAction_StartListeningToStatefulEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAsyncAction_StartListeningToStatefulEvent>();
	}
};
static_assert(alignof(UAsyncAction_StartListeningToStatefulEvent) == 0x000008, "Wrong alignment on UAsyncAction_StartListeningToStatefulEvent");
static_assert(sizeof(UAsyncAction_StartListeningToStatefulEvent) == 0x0000A0, "Wrong size on UAsyncAction_StartListeningToStatefulEvent");
static_assert(offsetof(UAsyncAction_StartListeningToStatefulEvent, OnEventReceived) == 0x000030, "Member 'UAsyncAction_StartListeningToStatefulEvent::OnEventReceived' has a wrong offset!");
static_assert(offsetof(UAsyncAction_StartListeningToStatefulEvent, OnSavedEventStateExists) == 0x000040, "Member 'UAsyncAction_StartListeningToStatefulEvent::OnSavedEventStateExists' has a wrong offset!");
static_assert(offsetof(UAsyncAction_StartListeningToStatefulEvent, OnEventStateCleared) == 0x000050, "Member 'UAsyncAction_StartListeningToStatefulEvent::OnEventStateCleared' has a wrong offset!");

// Class GameplayEventRouter.GameplayEventRouterComponent
// 0x00A0 (0x0140 - 0x00A0)
class UGameplayEventRouterComponent final : public UActorComponent
{
public:
	TMap<class FString, struct FGameplayEventListenerList> ListenerMap;                                       // 0x00A0(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_F0[0x50];                                      // 0x00F0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UGameplayEventRouterComponent* GetEventRouter(const class UObject* WorldContextObject, class UClass* Scope, class AActor* ContextActor);

	void ClearEventState(const class UScriptStruct* EventType);
	void K2_BroadcastEvent(const int32& EventData, class UObject* EventContext);
	void K2_BroadcastStatefulEvent(const int32& EventData, class UObject* EventContext);
	void StopListeningToEvent(struct FGameplayEventListenerHandle& HandleToRemove);

	bool HasValidEventState(const class UScriptStruct* EventType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayEventRouterComponent">();
	}
	static class UGameplayEventRouterComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayEventRouterComponent>();
	}
};
static_assert(alignof(UGameplayEventRouterComponent) == 0x000008, "Wrong alignment on UGameplayEventRouterComponent");
static_assert(sizeof(UGameplayEventRouterComponent) == 0x000140, "Wrong size on UGameplayEventRouterComponent");
static_assert(offsetof(UGameplayEventRouterComponent, ListenerMap) == 0x0000A0, "Member 'UGameplayEventRouterComponent::ListenerMap' has a wrong offset!");

// Class GameplayEventRouter.GameplayEventRouterOwnerInterface
// 0x0000 (0x0028 - 0x0028)
class IGameplayEventRouterOwnerInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayEventRouterOwnerInterface">();
	}
	static class IGameplayEventRouterOwnerInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGameplayEventRouterOwnerInterface>();
	}
};
static_assert(alignof(IGameplayEventRouterOwnerInterface) == 0x000008, "Wrong alignment on IGameplayEventRouterOwnerInterface");
static_assert(sizeof(IGameplayEventRouterOwnerInterface) == 0x000028, "Wrong size on IGameplayEventRouterOwnerInterface");

// Class GameplayEventRouter.GameplayEventRouterSubsytem
// 0x0050 (0x0080 - 0x0030)
class UGameplayEventRouterSubsytem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x50];                                      // 0x0030(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplayEventRouterSubsytem">();
	}
	static class UGameplayEventRouterSubsytem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplayEventRouterSubsytem>();
	}
};
static_assert(alignof(UGameplayEventRouterSubsytem) == 0x000008, "Wrong alignment on UGameplayEventRouterSubsytem");
static_assert(sizeof(UGameplayEventRouterSubsytem) == 0x000080, "Wrong size on UGameplayEventRouterSubsytem");

}

