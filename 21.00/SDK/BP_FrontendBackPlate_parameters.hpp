#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontendBackPlate

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.CreateUniqueMaterialName
// 0x0098 (0x0098 - 0x0000)
struct BP_FrontendBackPlate_C_CreateUniqueMaterialName final
{
public:
	class FString                                 PostFix;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 UniqueString;                                      // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_CreateUniqueMaterialName) == 0x000008, "Wrong alignment on BP_FrontendBackPlate_C_CreateUniqueMaterialName");
static_assert(sizeof(BP_FrontendBackPlate_C_CreateUniqueMaterialName) == 0x000098, "Wrong size on BP_FrontendBackPlate_C_CreateUniqueMaterialName");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, PostFix) == 0x000000, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::PostFix' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, UniqueString) == 0x000010, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::UniqueString' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_FTrunc_ReturnValue) == 0x000060, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_CreateUniqueMaterialName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'BP_FrontendBackPlate_C_CreateUniqueMaterialName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.EnableRealtimeUpdate
// 0x0010 (0x0010 - 0x0000)
struct BP_FrontendBackPlate_C_EnableRealtimeUpdate final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_EnableRealtimeUpdate) == 0x000008, "Wrong alignment on BP_FrontendBackPlate_C_EnableRealtimeUpdate");
static_assert(sizeof(BP_FrontendBackPlate_C_EnableRealtimeUpdate) == 0x000010, "Wrong size on BP_FrontendBackPlate_C_EnableRealtimeUpdate");
static_assert(offsetof(BP_FrontendBackPlate_C_EnableRealtimeUpdate, Enabled) == 0x000000, "Member 'BP_FrontendBackPlate_C_EnableRealtimeUpdate::Enabled' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_EnableRealtimeUpdate, Temp_bool_Variable) == 0x000001, "Member 'BP_FrontendBackPlate_C_EnableRealtimeUpdate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_EnableRealtimeUpdate, K2Node_Select_Default) == 0x000008, "Member 'BP_FrontendBackPlate_C_EnableRealtimeUpdate::K2Node_Select_Default' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.ExecuteUbergraph_BP_FrontendBackPlate
// 0x0070 (0x0070 - 0x0000)
struct BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue_1;     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bTransitionToSpecialEvent;      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_AllowInteraction;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasSuccess;                          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate) == 0x000008, "Wrong alignment on BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate");
static_assert(sizeof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate) == 0x000070, "Wrong size on BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, EntryPoint) == 0x000000, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, Temp_bool_Variable) == 0x000004, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, Temp_bool_Variable_1) == 0x000014, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, Temp_bool_Variable_2) == 0x000015, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_GetGameUserSettings_ReturnValue) == 0x000020, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x000028, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_GetGameUserSettings_ReturnValue_1) == 0x000030, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_GetGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_GetVisualEffectQuality_ReturnValue_1) == 0x00003C, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_GetVisualEffectQuality_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_SelectFloat_ReturnValue_1) == 0x000044, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_CustomEvent_IsEnabled) == 0x000048, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_Select_Default) == 0x000049, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_CustomEvent_bTransitionToSpecialEvent) == 0x00004A, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_CustomEvent_bTransitionToSpecialEvent' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_Event_DeltaSeconds) == 0x00004C, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_SpawnSound2D_ReturnValue) == 0x000050, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_CustomEvent_AllowInteraction) == 0x000059, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_CustomEvent_AllowInteraction' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_CustomEvent_Success) == 0x00005A, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_IsValid_ReturnValue_1) == 0x00005B, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_IsValid_ReturnValue_2) == 0x00005C, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, CallFunc_CreateSound2D_ReturnValue) == 0x000060, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::CallFunc_CreateSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate, K2Node_Event_bWasSuccess) == 0x000068, "Member 'BP_FrontendBackPlate_C_ExecuteUbergraph_BP_FrontendBackPlate::K2Node_Event_bWasSuccess' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.GetUIColorScheme
// 0x0014 (0x0014 - 0x0000)
struct BP_FrontendBackPlate_C_GetUIColorScheme final
{
public:
	struct FLinearColor                           colorscheme;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasOverride;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_GetUIColorScheme) == 0x000004, "Wrong alignment on BP_FrontendBackPlate_C_GetUIColorScheme");
static_assert(sizeof(BP_FrontendBackPlate_C_GetUIColorScheme) == 0x000014, "Wrong size on BP_FrontendBackPlate_C_GetUIColorScheme");
static_assert(offsetof(BP_FrontendBackPlate_C_GetUIColorScheme, colorscheme) == 0x000000, "Member 'BP_FrontendBackPlate_C_GetUIColorScheme::colorscheme' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_GetUIColorScheme, bHasOverride) == 0x000010, "Member 'BP_FrontendBackPlate_C_GetUIColorScheme::bHasOverride' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.HandleSpecialEventAudioOnMatchmakingEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontendBackPlate_C_HandleSpecialEventAudioOnMatchmakingEnd final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_HandleSpecialEventAudioOnMatchmakingEnd) == 0x000001, "Wrong alignment on BP_FrontendBackPlate_C_HandleSpecialEventAudioOnMatchmakingEnd");
static_assert(sizeof(BP_FrontendBackPlate_C_HandleSpecialEventAudioOnMatchmakingEnd) == 0x000001, "Wrong size on BP_FrontendBackPlate_C_HandleSpecialEventAudioOnMatchmakingEnd");
static_assert(offsetof(BP_FrontendBackPlate_C_HandleSpecialEventAudioOnMatchmakingEnd, Success) == 0x000000, "Member 'BP_FrontendBackPlate_C_HandleSpecialEventAudioOnMatchmakingEnd::Success' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.HasMatcmakingInteraction
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontendBackPlate_C_HasMatcmakingInteraction final
{
public:
	bool                                          HasInteraction;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_HasMatcmakingInteraction) == 0x000001, "Wrong alignment on BP_FrontendBackPlate_C_HasMatcmakingInteraction");
static_assert(sizeof(BP_FrontendBackPlate_C_HasMatcmakingInteraction) == 0x000001, "Wrong size on BP_FrontendBackPlate_C_HasMatcmakingInteraction");
static_assert(offsetof(BP_FrontendBackPlate_C_HasMatcmakingInteraction, HasInteraction) == 0x000000, "Member 'BP_FrontendBackPlate_C_HasMatcmakingInteraction::HasInteraction' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.HasUIColorOverride
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontendBackPlate_C_HasUIColorOverride final
{
public:
	bool                                          HasUIColorOverride_0;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_HasUIColorOverride) == 0x000001, "Wrong alignment on BP_FrontendBackPlate_C_HasUIColorOverride");
static_assert(sizeof(BP_FrontendBackPlate_C_HasUIColorOverride) == 0x000001, "Wrong size on BP_FrontendBackPlate_C_HasUIColorOverride");
static_assert(offsetof(BP_FrontendBackPlate_C_HasUIColorOverride, HasUIColorOverride_0) == 0x000000, "Member 'BP_FrontendBackPlate_C_HasUIColorOverride::HasUIColorOverride_0' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.MatchmakingEnded
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontendBackPlate_C_MatchmakingEnded final
{
public:
	bool                                          bWasSuccess;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_MatchmakingEnded) == 0x000001, "Wrong alignment on BP_FrontendBackPlate_C_MatchmakingEnded");
static_assert(sizeof(BP_FrontendBackPlate_C_MatchmakingEnded) == 0x000001, "Wrong size on BP_FrontendBackPlate_C_MatchmakingEnded");
static_assert(offsetof(BP_FrontendBackPlate_C_MatchmakingEnded, bWasSuccess) == 0x000000, "Member 'BP_FrontendBackPlate_C_MatchmakingEnded::bWasSuccess' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.PlayUISpecialEventTransition
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontendBackPlate_C_PlayUISpecialEventTransition final
{
public:
	bool                                          bTransitionToSpecialEvent;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_PlayUISpecialEventTransition) == 0x000001, "Wrong alignment on BP_FrontendBackPlate_C_PlayUISpecialEventTransition");
static_assert(sizeof(BP_FrontendBackPlate_C_PlayUISpecialEventTransition) == 0x000001, "Wrong size on BP_FrontendBackPlate_C_PlayUISpecialEventTransition");
static_assert(offsetof(BP_FrontendBackPlate_C_PlayUISpecialEventTransition, bTransitionToSpecialEvent) == 0x000000, "Member 'BP_FrontendBackPlate_C_PlayUISpecialEventTransition::bTransitionToSpecialEvent' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FrontendBackPlate_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FrontendBackPlate_C_ReceiveTick");
static_assert(sizeof(BP_FrontendBackPlate_C_ReceiveTick) == 0x000004, "Wrong size on BP_FrontendBackPlate_C_ReceiveTick");
static_assert(offsetof(BP_FrontendBackPlate_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_FrontendBackPlate_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.RequestUIColorScheme
// 0x0014 (0x0014 - 0x0000)
struct BP_FrontendBackPlate_C_RequestUIColorScheme final
{
public:
	struct FLinearColor                           MainUIColor;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_RequestUIColorScheme) == 0x000004, "Wrong alignment on BP_FrontendBackPlate_C_RequestUIColorScheme");
static_assert(sizeof(BP_FrontendBackPlate_C_RequestUIColorScheme) == 0x000014, "Wrong size on BP_FrontendBackPlate_C_RequestUIColorScheme");
static_assert(offsetof(BP_FrontendBackPlate_C_RequestUIColorScheme, MainUIColor) == 0x000000, "Member 'BP_FrontendBackPlate_C_RequestUIColorScheme::MainUIColor' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_RequestUIColorScheme, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_FrontendBackPlate_C_RequestUIColorScheme::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.ResetUIColorScheme
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontendBackPlate_C_ResetUIColorScheme final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_ResetUIColorScheme) == 0x000001, "Wrong alignment on BP_FrontendBackPlate_C_ResetUIColorScheme");
static_assert(sizeof(BP_FrontendBackPlate_C_ResetUIColorScheme) == 0x000001, "Wrong size on BP_FrontendBackPlate_C_ResetUIColorScheme");
static_assert(offsetof(BP_FrontendBackPlate_C_ResetUIColorScheme, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_FrontendBackPlate_C_ResetUIColorScheme::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.SetAllowMatchmakingInteraction
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontendBackPlate_C_SetAllowMatchmakingInteraction final
{
public:
	bool                                          AllowInteraction;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_SetAllowMatchmakingInteraction) == 0x000001, "Wrong alignment on BP_FrontendBackPlate_C_SetAllowMatchmakingInteraction");
static_assert(sizeof(BP_FrontendBackPlate_C_SetAllowMatchmakingInteraction) == 0x000001, "Wrong size on BP_FrontendBackPlate_C_SetAllowMatchmakingInteraction");
static_assert(offsetof(BP_FrontendBackPlate_C_SetAllowMatchmakingInteraction, AllowInteraction) == 0x000000, "Member 'BP_FrontendBackPlate_C_SetAllowMatchmakingInteraction::AllowInteraction' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.SetBackgroundTexture
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FrontendBackPlate_C_SetBackgroundTexture final
{
public:
	class UTexture*                               InTexture;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     InMaterial;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     InPreBlurMaterial;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               LocalMIDTexture;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CreateUniqueMaterialName_UniqueString;    // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_CreateUniqueMaterialName_UniqueString_1;  // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CreateUniqueMaterialName_UniqueString_2;  // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_2;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_SetBackgroundTexture) == 0x000008, "Wrong alignment on BP_FrontendBackPlate_C_SetBackgroundTexture");
static_assert(sizeof(BP_FrontendBackPlate_C_SetBackgroundTexture) == 0x0000A8, "Wrong size on BP_FrontendBackPlate_C_SetBackgroundTexture");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, InTexture) == 0x000000, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::InTexture' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, InMaterial) == 0x000008, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::InMaterial' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, InPreBlurMaterial) == 0x000010, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::InPreBlurMaterial' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, LocalMIDTexture) == 0x000018, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::LocalMIDTexture' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, Temp_bool_Variable) == 0x000020, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, Temp_object_Variable) == 0x000028, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, Temp_bool_Variable_1) == 0x000030, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, Temp_bool_Variable_2) == 0x000031, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_IsValid_ReturnValue_1) == 0x000033, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_IsValid_ReturnValue_2) == 0x000034, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_IsValid_ReturnValue_3) == 0x000035, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, K2Node_Select_Default) == 0x000038, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_CreateUniqueMaterialName_UniqueString) == 0x000040, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_CreateUniqueMaterialName_UniqueString' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_Conv_StringToName_ReturnValue) == 0x000050, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_CreateUniqueMaterialName_UniqueString_1) == 0x000058, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_CreateUniqueMaterialName_UniqueString_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_CreateUniqueMaterialName_UniqueString_2) == 0x000068, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_CreateUniqueMaterialName_UniqueString_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000078, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_Conv_StringToName_ReturnValue_2) == 0x00007C, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000080, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, K2Node_Select_Default_1) == 0x000088, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, K2Node_Select_Default_2) == 0x000090, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000098, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetBackgroundTexture, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x0000A0, "Member 'BP_FrontendBackPlate_C_SetBackgroundTexture::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.SetEnableBlackMondayFX
// 0x0001 (0x0001 - 0x0000)
struct BP_FrontendBackPlate_C_SetEnableBlackMondayFX final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_SetEnableBlackMondayFX) == 0x000001, "Wrong alignment on BP_FrontendBackPlate_C_SetEnableBlackMondayFX");
static_assert(sizeof(BP_FrontendBackPlate_C_SetEnableBlackMondayFX) == 0x000001, "Wrong size on BP_FrontendBackPlate_C_SetEnableBlackMondayFX");
static_assert(offsetof(BP_FrontendBackPlate_C_SetEnableBlackMondayFX, IsEnabled) == 0x000000, "Member 'BP_FrontendBackPlate_C_SetEnableBlackMondayFX::IsEnabled' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.SetFloatingShapeVisibility
// 0x0028 (0x0028 - 0x0000)
struct BP_FrontendBackPlate_C_SetFloatingShapeVisibility final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility) == 0x000008, "Wrong alignment on BP_FrontendBackPlate_C_SetFloatingShapeVisibility");
static_assert(sizeof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility) == 0x000028, "Wrong size on BP_FrontendBackPlate_C_SetFloatingShapeVisibility");
static_assert(offsetof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility, Show) == 0x000000, "Member 'BP_FrontendBackPlate_C_SetFloatingShapeVisibility::Show' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_FrontendBackPlate_C_SetFloatingShapeVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_FrontendBackPlate_C_SetFloatingShapeVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_FrontendBackPlate_C_SetFloatingShapeVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FrontendBackPlate_C_SetFloatingShapeVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_FrontendBackPlate_C_SetFloatingShapeVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_FrontendBackPlate_C_SetFloatingShapeVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_FrontendBackPlate_C_SetFloatingShapeVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetFloatingShapeVisibility, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_FrontendBackPlate_C_SetFloatingShapeVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.SetSpecialEventUIColorScheme
// 0x0078 (0x0078 - 0x0000)
struct BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme final
{
public:
	bool                                          SetUIPanelColors;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Backing;                                           // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Backing_Hover;                                     // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Backing_Selection;                                 // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetFontColors;                                     // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Primary;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Secondary;                                         // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Tertiary;                                          // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Quaternary;                                        // 0x0068(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme) == 0x000004, "Wrong alignment on BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme");
static_assert(sizeof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme) == 0x000078, "Wrong size on BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme");
static_assert(offsetof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme, SetUIPanelColors) == 0x000000, "Member 'BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme::SetUIPanelColors' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme, Backing) == 0x000004, "Member 'BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme::Backing' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme, Backing_Hover) == 0x000014, "Member 'BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme::Backing_Hover' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme, Backing_Selection) == 0x000024, "Member 'BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme::Backing_Selection' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme, SetFontColors) == 0x000034, "Member 'BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme::SetFontColors' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme, Primary) == 0x000038, "Member 'BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme::Primary' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme, Secondary) == 0x000048, "Member 'BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme::Secondary' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme, Tertiary) == 0x000058, "Member 'BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme::Tertiary' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme, Quaternary) == 0x000068, "Member 'BP_FrontendBackPlate_C_SetSpecialEventUIColorScheme::Quaternary' has a wrong offset!");

// Function BP_FrontendBackPlate.BP_FrontendBackPlate_C.UserConstructionScript
// 0x0078 (0x0078 - 0x0000)
struct BP_FrontendBackPlate_C_UserConstructionScript final
{
public:
	class FString                                 CallFunc_CreateUniqueMaterialName_UniqueString;    // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CreateUniqueMaterialName_UniqueString_1;  // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CreateUniqueMaterialName_UniqueString_2;  // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SortActorArray_OutSortedActors;           // 0x0050(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FrontendBackPlate_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_FrontendBackPlate_C_UserConstructionScript");
static_assert(sizeof(BP_FrontendBackPlate_C_UserConstructionScript) == 0x000078, "Wrong size on BP_FrontendBackPlate_C_UserConstructionScript");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_CreateUniqueMaterialName_UniqueString) == 0x000000, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_CreateUniqueMaterialName_UniqueString' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_CreateUniqueMaterialName_UniqueString_1) == 0x000010, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_CreateUniqueMaterialName_UniqueString_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000024, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_CreateUniqueMaterialName_UniqueString_2) == 0x000028, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_CreateUniqueMaterialName_UniqueString_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_GetAllActorsWithTag_OutActors) == 0x000038, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000048, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_SortActorArray_OutSortedActors) == 0x000050, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_SortActorArray_OutSortedActors' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000060, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000068, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FrontendBackPlate_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000070, "Member 'BP_FrontendBackPlate_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

}

