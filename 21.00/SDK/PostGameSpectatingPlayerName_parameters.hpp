#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameSpectatingPlayerName

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PostGameSpectatingPlayerName.PostGameSpectatingPlayerName_C.ExecuteUbergraph_PostGameSpectatingPlayerName
// 0x00D8 (0x00D8 - 0x0000)
struct PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_PlayerName;                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_PlayerID;                             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0048(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
};
static_assert(alignof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName) == 0x000008, "Wrong alignment on PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName");
static_assert(sizeof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName) == 0x0000D8, "Wrong size on PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName, EntryPoint) == 0x000000, "Member 'PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName::EntryPoint' has a wrong offset!");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName, K2Node_Event_PlayerName) == 0x000010, "Member 'PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName::K2Node_Event_PlayerName' has a wrong offset!");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName, K2Node_Event_PlayerID) == 0x000020, "Member 'PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName::K2Node_Event_PlayerID' has a wrong offset!");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000048, "Member 'PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName, K2Node_MakeArray_Array) == 0x0000B0, "Member 'PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'PostGameSpectatingPlayerName_C_ExecuteUbergraph_PostGameSpectatingPlayerName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function PostGameSpectatingPlayerName.PostGameSpectatingPlayerName_C.ShowWidget
// 0x0020 (0x0020 - 0x0000)
struct PostGameSpectatingPlayerName_C_ShowWidget final
{
public:
	class FString                                 PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PlayerId;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameSpectatingPlayerName_C_ShowWidget) == 0x000008, "Wrong alignment on PostGameSpectatingPlayerName_C_ShowWidget");
static_assert(sizeof(PostGameSpectatingPlayerName_C_ShowWidget) == 0x000020, "Wrong size on PostGameSpectatingPlayerName_C_ShowWidget");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ShowWidget, PlayerName) == 0x000000, "Member 'PostGameSpectatingPlayerName_C_ShowWidget::PlayerName' has a wrong offset!");
static_assert(offsetof(PostGameSpectatingPlayerName_C_ShowWidget, PlayerId) == 0x000010, "Member 'PostGameSpectatingPlayerName_C_ShowWidget::PlayerId' has a wrong offset!");

}

