#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshNetwork

#include "Basic.hpp"


namespace SDK
{

// Enum MeshNetwork.EMeshNetworkNodeType
// NumValues: 0x0006
enum class EMeshNetworkNodeType : uint8
{
	Root                                     = 0,
	Inner                                    = 1,
	Edge                                     = 2,
	Client                                   = 3,
	Unknown                                  = 4,
	EMeshNetworkNodeType_MAX                 = 5,
};

// Enum MeshNetwork.EMeshNetworkRelevancy
// NumValues: 0x0004
enum class EMeshNetworkRelevancy : uint8
{
	NotRelevant                              = 0,
	RelevantToEdgeNodes                      = 1,
	RelevantToClients                        = 2,
	EMeshNetworkRelevancy_MAX                = 3,
};

// ScriptStruct MeshNetwork.MeshMetaDataStruct
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FMeshMetaDataStruct
{
};
#pragma pack(pop)
static_assert(alignof(FMeshMetaDataStruct) == 0x000001, "Wrong alignment on FMeshMetaDataStruct");
static_assert(sizeof(FMeshMetaDataStruct) == 0x000001, "Wrong size on FMeshMetaDataStruct");

// ScriptStruct MeshNetwork.AggregatedFunction
// 0x0028 (0x0028 - 0x0000)
struct FAggregatedFunction final
{
public:
	class UFunction*                              Function;                                          // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x20];                                       // 0x0008(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAggregatedFunction) == 0x000008, "Wrong alignment on FAggregatedFunction");
static_assert(sizeof(FAggregatedFunction) == 0x000028, "Wrong size on FAggregatedFunction");
static_assert(offsetof(FAggregatedFunction, Function) == 0x000000, "Member 'FAggregatedFunction::Function' has a wrong offset!");

// ScriptStruct MeshNetwork.AggregatedFunctionConfig
// 0x0060 (0x0060 - 0x0000)
struct FAggregatedFunctionConfig final
{
public:
	double                                        AggregationTimeout;                                // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAggregationEnabled;                               // 0x0008(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             NoAggregationParameters;                           // 0x0010(0x0050)(Edit, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAggregatedFunctionConfig) == 0x000008, "Wrong alignment on FAggregatedFunctionConfig");
static_assert(sizeof(FAggregatedFunctionConfig) == 0x000060, "Wrong size on FAggregatedFunctionConfig");
static_assert(offsetof(FAggregatedFunctionConfig, AggregationTimeout) == 0x000000, "Member 'FAggregatedFunctionConfig::AggregationTimeout' has a wrong offset!");
static_assert(offsetof(FAggregatedFunctionConfig, bAggregationEnabled) == 0x000008, "Member 'FAggregatedFunctionConfig::bAggregationEnabled' has a wrong offset!");
static_assert(offsetof(FAggregatedFunctionConfig, NoAggregationParameters) == 0x000010, "Member 'FAggregatedFunctionConfig::NoAggregationParameters' has a wrong offset!");

}

