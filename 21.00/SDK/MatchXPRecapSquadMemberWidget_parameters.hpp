#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchXPRecapSquadMemberWidget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function MatchXPRecapSquadMemberWidget.MatchXPRecapSquadMemberWidget_C.BP_HandleExtensionWidgetCreated
// 0x0010 (0x0010 - 0x0000)
struct MatchXPRecapSquadMemberWidget_C_BP_HandleExtensionWidgetCreated final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIExtensionSlot                              SlotType;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecapSquadMemberWidget_C_BP_HandleExtensionWidgetCreated) == 0x000008, "Wrong alignment on MatchXPRecapSquadMemberWidget_C_BP_HandleExtensionWidgetCreated");
static_assert(sizeof(MatchXPRecapSquadMemberWidget_C_BP_HandleExtensionWidgetCreated) == 0x000010, "Wrong size on MatchXPRecapSquadMemberWidget_C_BP_HandleExtensionWidgetCreated");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_BP_HandleExtensionWidgetCreated, Widget) == 0x000000, "Member 'MatchXPRecapSquadMemberWidget_C_BP_HandleExtensionWidgetCreated::Widget' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_BP_HandleExtensionWidgetCreated, SlotType) == 0x000008, "Member 'MatchXPRecapSquadMemberWidget_C_BP_HandleExtensionWidgetCreated::SlotType' has a wrong offset!");

// Function MatchXPRecapSquadMemberWidget.MatchXPRecapSquadMemberWidget_C.ExecuteUbergraph_MatchXPRecapSquadMemberWidget
// 0x0050 (0x0050 - 0x0000)
struct MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_Event_Widget;                               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIExtensionSlot                              K2Node_Event_SlotType;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsPartyLeader;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKeepPlayingTogetherVotingStatus              K2Node_Event_NewStatus;                            // 0x0020(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasOptedIn_1;                        // 0x0021(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasOptedIn;                          // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget) == 0x000008, "Wrong alignment on MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget");
static_assert(sizeof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget) == 0x000050, "Wrong size on MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, EntryPoint) == 0x000000, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, K2Node_Event_Widget) == 0x000008, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::K2Node_Event_Widget' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, K2Node_Event_SlotType) == 0x000010, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::K2Node_Event_SlotType' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, K2Node_Event_bIsPartyLeader) == 0x000011, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::K2Node_Event_bIsPartyLeader' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000012, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, K2Node_Event_IsDesignTime) == 0x000013, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, K2Node_Event_NewStatus) == 0x000020, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::K2Node_Event_NewStatus' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, K2Node_Event_bWasOptedIn_1) == 0x000021, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::K2Node_Event_bWasOptedIn_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, Temp_byte_Variable) == 0x000022, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, K2Node_SwitchEnum_CmpSuccess_1) == 0x000023, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, CallFunc_PlayAnimation_ReturnValue_2) == 0x000030, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, K2Node_Event_bWasOptedIn) == 0x000038, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::K2Node_Event_bWasOptedIn' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, Temp_byte_Variable_1) == 0x000039, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, Temp_bool_Variable) == 0x00003A, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, CallFunc_AddChildToOverlay_ReturnValue) == 0x000040, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget, K2Node_Select_Default) == 0x000048, "Member 'MatchXPRecapSquadMemberWidget_C_ExecuteUbergraph_MatchXPRecapSquadMemberWidget::K2Node_Select_Default' has a wrong offset!");

// Function MatchXPRecapSquadMemberWidget.MatchXPRecapSquadMemberWidget_C.OnIsPartyLeaderChanged
// 0x0001 (0x0001 - 0x0000)
struct MatchXPRecapSquadMemberWidget_C_OnIsPartyLeaderChanged final
{
public:
	bool                                          bIsPartyLeader;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecapSquadMemberWidget_C_OnIsPartyLeaderChanged) == 0x000001, "Wrong alignment on MatchXPRecapSquadMemberWidget_C_OnIsPartyLeaderChanged");
static_assert(sizeof(MatchXPRecapSquadMemberWidget_C_OnIsPartyLeaderChanged) == 0x000001, "Wrong size on MatchXPRecapSquadMemberWidget_C_OnIsPartyLeaderChanged");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_OnIsPartyLeaderChanged, bIsPartyLeader) == 0x000000, "Member 'MatchXPRecapSquadMemberWidget_C_OnIsPartyLeaderChanged::bIsPartyLeader' has a wrong offset!");

// Function MatchXPRecapSquadMemberWidget.MatchXPRecapSquadMemberWidget_C.OnKeepPlayingTogetherVotingStatusChanged
// 0x0002 (0x0002 - 0x0000)
struct MatchXPRecapSquadMemberWidget_C_OnKeepPlayingTogetherVotingStatusChanged final
{
public:
	EKeepPlayingTogetherVotingStatus              NewStatus;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasOptedIn;                                       // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecapSquadMemberWidget_C_OnKeepPlayingTogetherVotingStatusChanged) == 0x000001, "Wrong alignment on MatchXPRecapSquadMemberWidget_C_OnKeepPlayingTogetherVotingStatusChanged");
static_assert(sizeof(MatchXPRecapSquadMemberWidget_C_OnKeepPlayingTogetherVotingStatusChanged) == 0x000002, "Wrong size on MatchXPRecapSquadMemberWidget_C_OnKeepPlayingTogetherVotingStatusChanged");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_OnKeepPlayingTogetherVotingStatusChanged, NewStatus) == 0x000000, "Member 'MatchXPRecapSquadMemberWidget_C_OnKeepPlayingTogetherVotingStatusChanged::NewStatus' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_OnKeepPlayingTogetherVotingStatusChanged, bWasOptedIn) == 0x000001, "Member 'MatchXPRecapSquadMemberWidget_C_OnKeepPlayingTogetherVotingStatusChanged::bWasOptedIn' has a wrong offset!");

// Function MatchXPRecapSquadMemberWidget.MatchXPRecapSquadMemberWidget_C.OnMatchmakingStarted
// 0x0001 (0x0001 - 0x0000)
struct MatchXPRecapSquadMemberWidget_C_OnMatchmakingStarted final
{
public:
	bool                                          bWasOptedIn;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecapSquadMemberWidget_C_OnMatchmakingStarted) == 0x000001, "Wrong alignment on MatchXPRecapSquadMemberWidget_C_OnMatchmakingStarted");
static_assert(sizeof(MatchXPRecapSquadMemberWidget_C_OnMatchmakingStarted) == 0x000001, "Wrong size on MatchXPRecapSquadMemberWidget_C_OnMatchmakingStarted");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_OnMatchmakingStarted, bWasOptedIn) == 0x000000, "Member 'MatchXPRecapSquadMemberWidget_C_OnMatchmakingStarted::bWasOptedIn' has a wrong offset!");

// Function MatchXPRecapSquadMemberWidget.MatchXPRecapSquadMemberWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct MatchXPRecapSquadMemberWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecapSquadMemberWidget_C_PreConstruct) == 0x000001, "Wrong alignment on MatchXPRecapSquadMemberWidget_C_PreConstruct");
static_assert(sizeof(MatchXPRecapSquadMemberWidget_C_PreConstruct) == 0x000001, "Wrong size on MatchXPRecapSquadMemberWidget_C_PreConstruct");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'MatchXPRecapSquadMemberWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function MatchXPRecapSquadMemberWidget.MatchXPRecapSquadMemberWidget_C.UnreadyAndCollapse
// 0x0010 (0x0010 - 0x0000)
struct MatchXPRecapSquadMemberWidget_C_UnreadyAndCollapse final
{
public:
	bool                                          WasOptedIn;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecapSquadMemberWidget_C_UnreadyAndCollapse) == 0x000008, "Wrong alignment on MatchXPRecapSquadMemberWidget_C_UnreadyAndCollapse");
static_assert(sizeof(MatchXPRecapSquadMemberWidget_C_UnreadyAndCollapse) == 0x000010, "Wrong size on MatchXPRecapSquadMemberWidget_C_UnreadyAndCollapse");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_UnreadyAndCollapse, WasOptedIn) == 0x000000, "Member 'MatchXPRecapSquadMemberWidget_C_UnreadyAndCollapse::WasOptedIn' has a wrong offset!");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_UnreadyAndCollapse, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'MatchXPRecapSquadMemberWidget_C_UnreadyAndCollapse::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function MatchXPRecapSquadMemberWidget.MatchXPRecapSquadMemberWidget_C.UpdatePortraitUserSpecifiedScale
// 0x0004 (0x0004 - 0x0000)
struct MatchXPRecapSquadMemberWidget_C_UpdatePortraitUserSpecifiedScale final
{
public:
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MatchXPRecapSquadMemberWidget_C_UpdatePortraitUserSpecifiedScale) == 0x000004, "Wrong alignment on MatchXPRecapSquadMemberWidget_C_UpdatePortraitUserSpecifiedScale");
static_assert(sizeof(MatchXPRecapSquadMemberWidget_C_UpdatePortraitUserSpecifiedScale) == 0x000004, "Wrong size on MatchXPRecapSquadMemberWidget_C_UpdatePortraitUserSpecifiedScale");
static_assert(offsetof(MatchXPRecapSquadMemberWidget_C_UpdatePortraitUserSpecifiedScale, CallFunc_SelectFloat_ReturnValue) == 0x000000, "Member 'MatchXPRecapSquadMemberWidget_C_UpdatePortraitUserSpecifiedScale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

}

