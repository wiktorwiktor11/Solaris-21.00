#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RaceTrack

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RaceTrack.BP_RaceTrack_C
// 0x01E0 (0x0450 - 0x0270)
class ABP_RaceTrack_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        FinishFX08;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FinishFX07;                                        // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FinishFX06;                                        // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FinishFX05;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FinishFX04;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FinishFX03;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Racetrack_StartLight_Scoreboard;                 // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ParentFinishFX;                                    // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        WinnerFXLocation;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Racetrack_StartLight_Timer;                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Racetrack_StartLight_Lights;                     // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          EnableRaceVolume;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Racetrack_StartLight;                            // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_FalseStart_FS_Value_1FCBA28348FC35E8247AA8A0DF727B44; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_FalseStart__Direction_1FCBA28348FC35E8247AA8A0DF727B44; // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_FalseStart;                                     // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_PreCountdown_DigitLoc_AF93D3194B85843FC6ACBC953E59DF9B; // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_PreCountdown_TimerNumber_AF93D3194B85843FC6ACBC953E59DF9B; // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_PreCountdown_OutputZero_AF93D3194B85843FC6ACBC953E59DF9B; // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_PreCountdown_OutputOne_AF93D3194B85843FC6ACBC953E59DF9B; // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_PreCountdown_FlashControl_AF93D3194B85843FC6ACBC953E59DF9B; // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_PreCountdown_FlashTrack_AF93D3194B85843FC6ACBC953E59DF9B; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_PreCountdown__Direction_AF93D3194B85843FC6ACBC953E59DF9B; // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_PreCountdown;                                   // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CountdownAnim_RemoveOneSecond_37F025B9461BD4EE87760193609200EF; // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CountdownAnim_NumberSlideIn_37F025B9461BD4EE87760193609200EF; // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CountdownAnim__Direction_37F025B9461BD4EE87760193609200EF; // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CountdownAnim;                                     // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_Arrows_Track_180F6F1647B948DBC4A8FF987463013F; // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_BrightnessDigits_180F6F1647B948DBC4A8FF987463013F; // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_DigitB_Track_180F6F1647B948DBC4A8FF987463013F; // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_DigitA_Track_180F6F1647B948DBC4A8FF987463013F; // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_Use2Digits_Track_180F6F1647B948DBC4A8FF987463013F; // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_L5_180F6F1647B948DBC4A8FF987463013F; // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_L4_Track_180F6F1647B948DBC4A8FF987463013F; // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_L3_Track_180F6F1647B948DBC4A8FF987463013F; // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_L2_Track_180F6F1647B948DBC4A8FF987463013F; // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_L1_Track_180F6F1647B948DBC4A8FF987463013F; // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RaceCountdown_CountdownTrack_180F6F1647B948DBC4A8FF987463013F; // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RaceCountdown__Direction_180F6F1647B948DBC4A8FF987463013F; // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RaceCountdown;                                     // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_StartLights;                                   // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Timer;                                         // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CheckpointLocations;                               // 0x0380(0x0010)(Edit, BlueprintVisible)
	TArray<class ABP_RaceTrack_Checkpoint_C*>     AllCheckpoints;                                    // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          RaceInProgress;                                    // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         PlayersPreparingToRace;                            // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          PreparingRace;                                     // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MID_Scoreboard1;                                   // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Scoreboard2;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Scoreboard3;                                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 Placement;                                         // 0x03D8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	float                                         RaceStartTime;                                     // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RN_1stPlaceTime;                                   // 0x03EC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         RN_2ndPlaceTime;                                   // 0x03F0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         RN_3rdPlaceTime;                                   // 0x03F4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         RN_TimerFlag;                                      // 0x03F8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         RN_CountdownTimer;                                 // 0x03FC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         RN_SmallScreenLapTime;                             // 0x0400(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowSmallScreenLapTime;                            // 0x0404(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405[0x3];                                      // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  SourceTags;                                        // 0x0408(0x0020)(Edit, BlueprintVisible)
	bool                                          RequireVehicle;                                    // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RequiredVehicleTag;                                // 0x0430(0x0020)(Edit, BlueprintVisible)

public:
	void BndEvt__EnableRaceVolume_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__EnableRaceVolume_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CheckpointUpdated();
	void CountdownAnim__FinishedFunc();
	void CountdownAnim__SecondsEvent__EventFunc();
	void CountdownAnim__UpdateFunc();
	void ExecuteUbergraph_BP_RaceTrack(int32 EntryPoint);
	void FalseStart(class AFortPlayerPawn* PlayerFalseStart);
	void OnRep_RN_1stPlaceTime();
	void OnRep_RN_2ndPlaceTime();
	void OnRep_RN_3rdPlaceTime();
	void OnRep_RN_CountdownTimer();
	void OnRep_RN_SmallScreenLapTime();
	void OnRep_RN_TimerFlag();
	void OnRep_ShowSmallScreenLapTime();
	void PrepareToRace();
	void RaceCountdown__EverySecondEvent__EventFunc();
	void RaceCountdown__FinishedFunc();
	void RaceCountdown__Go__EventFunc();
	void RaceCountdown__UpdateFunc();
	void RacerFinished(int32 Placement_0, float TotalTime, const TArray<class AFortPlayerPawn*>& PlayersWhoFinished);
	void ReceiveBeginPlay();
	void ResetMaterialSettings();
	void ResetRace();
	void SetScoreboardWithRacerTime(float TrackTimeInput, int32 RacerIndexInput);
	void TL_FalseStart__FinishedFunc();
	void TL_FalseStart__UpdateFunc();
	void TL_PreCountdown__FinishedFunc();
	void TL_PreCountdown__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RaceTrack_C">();
	}
	static class ABP_RaceTrack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RaceTrack_C>();
	}
};
static_assert(alignof(ABP_RaceTrack_C) == 0x000008, "Wrong alignment on ABP_RaceTrack_C");
static_assert(sizeof(ABP_RaceTrack_C) == 0x000450, "Wrong size on ABP_RaceTrack_C");
static_assert(offsetof(ABP_RaceTrack_C, UberGraphFrame) == 0x000270, "Member 'ABP_RaceTrack_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, FinishFX08) == 0x000278, "Member 'ABP_RaceTrack_C::FinishFX08' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, FinishFX07) == 0x000280, "Member 'ABP_RaceTrack_C::FinishFX07' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, FinishFX06) == 0x000288, "Member 'ABP_RaceTrack_C::FinishFX06' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, FinishFX05) == 0x000290, "Member 'ABP_RaceTrack_C::FinishFX05' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, FinishFX04) == 0x000298, "Member 'ABP_RaceTrack_C::FinishFX04' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, FinishFX03) == 0x0002A0, "Member 'ABP_RaceTrack_C::FinishFX03' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, S_Racetrack_StartLight_Scoreboard) == 0x0002A8, "Member 'ABP_RaceTrack_C::S_Racetrack_StartLight_Scoreboard' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, ParentFinishFX) == 0x0002B0, "Member 'ABP_RaceTrack_C::ParentFinishFX' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, WinnerFXLocation) == 0x0002B8, "Member 'ABP_RaceTrack_C::WinnerFXLocation' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, S_Racetrack_StartLight_Timer) == 0x0002C0, "Member 'ABP_RaceTrack_C::S_Racetrack_StartLight_Timer' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, S_Racetrack_StartLight_Lights) == 0x0002C8, "Member 'ABP_RaceTrack_C::S_Racetrack_StartLight_Lights' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, EnableRaceVolume) == 0x0002D0, "Member 'ABP_RaceTrack_C::EnableRaceVolume' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, S_Racetrack_StartLight) == 0x0002D8, "Member 'ABP_RaceTrack_C::S_Racetrack_StartLight' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_RaceTrack_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_FalseStart_FS_Value_1FCBA28348FC35E8247AA8A0DF727B44) == 0x0002E8, "Member 'ABP_RaceTrack_C::TL_FalseStart_FS_Value_1FCBA28348FC35E8247AA8A0DF727B44' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_FalseStart__Direction_1FCBA28348FC35E8247AA8A0DF727B44) == 0x0002EC, "Member 'ABP_RaceTrack_C::TL_FalseStart__Direction_1FCBA28348FC35E8247AA8A0DF727B44' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_FalseStart) == 0x0002F0, "Member 'ABP_RaceTrack_C::TL_FalseStart' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_PreCountdown_DigitLoc_AF93D3194B85843FC6ACBC953E59DF9B) == 0x0002F8, "Member 'ABP_RaceTrack_C::TL_PreCountdown_DigitLoc_AF93D3194B85843FC6ACBC953E59DF9B' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_PreCountdown_TimerNumber_AF93D3194B85843FC6ACBC953E59DF9B) == 0x0002FC, "Member 'ABP_RaceTrack_C::TL_PreCountdown_TimerNumber_AF93D3194B85843FC6ACBC953E59DF9B' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_PreCountdown_OutputZero_AF93D3194B85843FC6ACBC953E59DF9B) == 0x000300, "Member 'ABP_RaceTrack_C::TL_PreCountdown_OutputZero_AF93D3194B85843FC6ACBC953E59DF9B' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_PreCountdown_OutputOne_AF93D3194B85843FC6ACBC953E59DF9B) == 0x000304, "Member 'ABP_RaceTrack_C::TL_PreCountdown_OutputOne_AF93D3194B85843FC6ACBC953E59DF9B' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_PreCountdown_FlashControl_AF93D3194B85843FC6ACBC953E59DF9B) == 0x000308, "Member 'ABP_RaceTrack_C::TL_PreCountdown_FlashControl_AF93D3194B85843FC6ACBC953E59DF9B' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_PreCountdown_FlashTrack_AF93D3194B85843FC6ACBC953E59DF9B) == 0x00030C, "Member 'ABP_RaceTrack_C::TL_PreCountdown_FlashTrack_AF93D3194B85843FC6ACBC953E59DF9B' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_PreCountdown__Direction_AF93D3194B85843FC6ACBC953E59DF9B) == 0x000310, "Member 'ABP_RaceTrack_C::TL_PreCountdown__Direction_AF93D3194B85843FC6ACBC953E59DF9B' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, TL_PreCountdown) == 0x000318, "Member 'ABP_RaceTrack_C::TL_PreCountdown' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, CountdownAnim_RemoveOneSecond_37F025B9461BD4EE87760193609200EF) == 0x000320, "Member 'ABP_RaceTrack_C::CountdownAnim_RemoveOneSecond_37F025B9461BD4EE87760193609200EF' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, CountdownAnim_NumberSlideIn_37F025B9461BD4EE87760193609200EF) == 0x000324, "Member 'ABP_RaceTrack_C::CountdownAnim_NumberSlideIn_37F025B9461BD4EE87760193609200EF' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, CountdownAnim__Direction_37F025B9461BD4EE87760193609200EF) == 0x000328, "Member 'ABP_RaceTrack_C::CountdownAnim__Direction_37F025B9461BD4EE87760193609200EF' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, CountdownAnim) == 0x000330, "Member 'ABP_RaceTrack_C::CountdownAnim' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_Arrows_Track_180F6F1647B948DBC4A8FF987463013F) == 0x000338, "Member 'ABP_RaceTrack_C::RaceCountdown_Arrows_Track_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_BrightnessDigits_180F6F1647B948DBC4A8FF987463013F) == 0x00033C, "Member 'ABP_RaceTrack_C::RaceCountdown_BrightnessDigits_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_DigitB_Track_180F6F1647B948DBC4A8FF987463013F) == 0x000340, "Member 'ABP_RaceTrack_C::RaceCountdown_DigitB_Track_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_DigitA_Track_180F6F1647B948DBC4A8FF987463013F) == 0x000344, "Member 'ABP_RaceTrack_C::RaceCountdown_DigitA_Track_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_Use2Digits_Track_180F6F1647B948DBC4A8FF987463013F) == 0x000348, "Member 'ABP_RaceTrack_C::RaceCountdown_Use2Digits_Track_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_L5_180F6F1647B948DBC4A8FF987463013F) == 0x00034C, "Member 'ABP_RaceTrack_C::RaceCountdown_L5_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_L4_Track_180F6F1647B948DBC4A8FF987463013F) == 0x000350, "Member 'ABP_RaceTrack_C::RaceCountdown_L4_Track_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_L3_Track_180F6F1647B948DBC4A8FF987463013F) == 0x000354, "Member 'ABP_RaceTrack_C::RaceCountdown_L3_Track_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_L2_Track_180F6F1647B948DBC4A8FF987463013F) == 0x000358, "Member 'ABP_RaceTrack_C::RaceCountdown_L2_Track_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_L1_Track_180F6F1647B948DBC4A8FF987463013F) == 0x00035C, "Member 'ABP_RaceTrack_C::RaceCountdown_L1_Track_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown_CountdownTrack_180F6F1647B948DBC4A8FF987463013F) == 0x000360, "Member 'ABP_RaceTrack_C::RaceCountdown_CountdownTrack_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown__Direction_180F6F1647B948DBC4A8FF987463013F) == 0x000364, "Member 'ABP_RaceTrack_C::RaceCountdown__Direction_180F6F1647B948DBC4A8FF987463013F' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceCountdown) == 0x000368, "Member 'ABP_RaceTrack_C::RaceCountdown' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, MID_StartLights) == 0x000370, "Member 'ABP_RaceTrack_C::MID_StartLights' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, MID_Timer) == 0x000378, "Member 'ABP_RaceTrack_C::MID_Timer' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, CheckpointLocations) == 0x000380, "Member 'ABP_RaceTrack_C::CheckpointLocations' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, AllCheckpoints) == 0x000390, "Member 'ABP_RaceTrack_C::AllCheckpoints' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceInProgress) == 0x0003A0, "Member 'ABP_RaceTrack_C::RaceInProgress' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, PlayersPreparingToRace) == 0x0003A8, "Member 'ABP_RaceTrack_C::PlayersPreparingToRace' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, PreparingRace) == 0x0003B8, "Member 'ABP_RaceTrack_C::PreparingRace' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, MID_Scoreboard1) == 0x0003C0, "Member 'ABP_RaceTrack_C::MID_Scoreboard1' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, MID_Scoreboard2) == 0x0003C8, "Member 'ABP_RaceTrack_C::MID_Scoreboard2' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, MID_Scoreboard3) == 0x0003D0, "Member 'ABP_RaceTrack_C::MID_Scoreboard3' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, Placement) == 0x0003D8, "Member 'ABP_RaceTrack_C::Placement' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RaceStartTime) == 0x0003E8, "Member 'ABP_RaceTrack_C::RaceStartTime' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RN_1stPlaceTime) == 0x0003EC, "Member 'ABP_RaceTrack_C::RN_1stPlaceTime' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RN_2ndPlaceTime) == 0x0003F0, "Member 'ABP_RaceTrack_C::RN_2ndPlaceTime' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RN_3rdPlaceTime) == 0x0003F4, "Member 'ABP_RaceTrack_C::RN_3rdPlaceTime' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RN_TimerFlag) == 0x0003F8, "Member 'ABP_RaceTrack_C::RN_TimerFlag' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RN_CountdownTimer) == 0x0003FC, "Member 'ABP_RaceTrack_C::RN_CountdownTimer' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RN_SmallScreenLapTime) == 0x000400, "Member 'ABP_RaceTrack_C::RN_SmallScreenLapTime' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, ShowSmallScreenLapTime) == 0x000404, "Member 'ABP_RaceTrack_C::ShowSmallScreenLapTime' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, SourceTags) == 0x000408, "Member 'ABP_RaceTrack_C::SourceTags' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RequireVehicle) == 0x000428, "Member 'ABP_RaceTrack_C::RequireVehicle' has a wrong offset!");
static_assert(offsetof(ABP_RaceTrack_C, RequiredVehicleTag) == 0x000430, "Member 'ABP_RaceTrack_C::RequiredVehicleTag' has a wrong offset!");

}

