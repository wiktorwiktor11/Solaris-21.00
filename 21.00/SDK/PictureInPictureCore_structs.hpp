#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PictureInPictureCore

#include "Basic.hpp"

#include "PictureInPictureDescriptors_structs.hpp"


namespace SDK
{

// Enum PictureInPictureCore.PictureInPictureAuthState
// NumValues: 0x0004
enum class EPictureInPictureAuthState : uint8
{
	UNKNOWN                                  = 0,
	NOT_AUTHORIZED                           = 1,
	AUTHORIZED                               = 2,
	PictureInPictureAuthState_MAX            = 3,
};

// Enum PictureInPictureCore.PictureInPictureAuthType
// NumValues: 0x0004
enum class EPictureInPictureAuthType : uint8
{
	AUTH_NONE                                = 0,
	AUTH_USER_PASS                           = 1,
	AUTH_QR_CODE                             = 2,
	AUTH_MAX                                 = 3,
};

// ScriptStruct PictureInPictureCore.PiPSuspendInfo
// 0x0130 (0x0130 - 0x0000)
struct FPiPSuspendInfo final
{
public:
	struct FPiPPartnerSource                      SourceSnapshot;                                    // 0x0000(0x0128)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bEnabledState;                                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPiPSuspendInfo) == 0x000008, "Wrong alignment on FPiPSuspendInfo");
static_assert(sizeof(FPiPSuspendInfo) == 0x000130, "Wrong size on FPiPSuspendInfo");
static_assert(offsetof(FPiPSuspendInfo, SourceSnapshot) == 0x000000, "Member 'FPiPSuspendInfo::SourceSnapshot' has a wrong offset!");
static_assert(offsetof(FPiPSuspendInfo, bEnabledState) == 0x000128, "Member 'FPiPSuspendInfo::bEnabledState' has a wrong offset!");

}

