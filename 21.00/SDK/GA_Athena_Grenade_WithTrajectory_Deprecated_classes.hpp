#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Grenade_WithTrajectory_Deprecated

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayTags_0_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Grenade_WithTrajectory_Deprecated.GA_Athena_Grenade_WithTrajectory_Deprecated_C
// 0x03D0 (0x0EE0 - 0x0B10)
class UGA_Athena_Grenade_WithTrajectory_Deprecated_C : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           EventActivation;                                   // 0x0B18(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventComplete;                                     // 0x0B1C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Prj_Grenade;                                       // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrenadeSpeedMin;                                   // 0x0B28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrenadeSpeedMax;                                   // 0x0B2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x0B30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B34[0x4];                                      // 0x0B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             GrenadeSound;                                      // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EC_DefaultExplosion;                               // 0x0B40(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B44[0x4];                                      // 0x0B44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortGameplayEffectContainerSpec       EC_ReturnedEffect;                                 // 0x0B48(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFortGameplayEffectContainerSpec       EC_AdditionalReturnedEffect;                       // 0x0C00(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ExplosionRadius;                                   // 0x0CB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalThrowAngle;                              // 0x0CBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortFeedbackHandle                    GrenadeDialogFeedback;                             // 0x0CC0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          GrenadeAmmo;                                       // 0x0CD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlasmaGrenades;                                    // 0x0CD1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flashbang;                                         // 0x0CD2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD3[0x5];                                      // 0x0CD3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GrenadeTargetingOriginOffset;                      // 0x0CD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DummyShouldBounce;                                 // 0x0CF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF1[0x3];                                      // 0x0CF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DummyBounciness;                                   // 0x0CF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyFriction;                                     // 0x0CF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyMaxSpeed;                                     // 0x0CFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyGravity;                                      // 0x0D00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyTimeStep;                                     // 0x0D04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyExtent;                                       // 0x0D08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D0C[0x4];                                      // 0x0D0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GrenadeTargetingOriginOffset_Crouched;             // 0x0D10(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InThrowWindup;                                     // 0x0D28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D29[0x7];                                      // 0x0D29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ProjectileTrajectory_C*             TrajectoryIndicator;                               // 0x0D30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TrajectoryIndicatorClass;                          // 0x0D38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortGameplayAbilityMontageInfo        ThrowWindupMontage;                                // 0x0D40(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AbilityKeyPressed;                                 // 0x0D98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D99[0x3];                                      // 0x0D99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxSpeedPitch;                                     // 0x0D9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSpeedPitch;                                     // 0x0DA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA4[0x4];                                      // 0x0DA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Event_Data;                                        // 0x0DA8(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTossPitch;                                      // 0x0E60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrajectoryBounces;                              // 0x0E64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PostThrowCancelDelay;                              // 0x0E68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PostThrowEndDelay;                                 // 0x0E6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    ProjectileReference;                               // 0x0E70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceFromInstigatorCheck;                       // 0x0E78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E7C[0x4];                                      // 0x0E7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           UpdateTrajectoryTimerHandle;                       // 0x0E80(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned_On_Equip;                                  // 0x0E88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             DummyCollisionChannel;                             // 0x0E89(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8A[0x6];                                      // 0x0E8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortProjectileDecoHelper*              GrenadeDecoHelper;                                 // 0x0E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortDecoTool_ContextTrap*              GrenadeDecoTool;                                   // 0x0E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnProjectileSpawn;                                 // 0x0EA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTagContainer                  QuestCreditTargetTag;                              // 0x0EB0(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int32                                         DummyMaxSteps;                                     // 0x0ED0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_CookLoop;                                       // 0x0ED4(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_OnThrow;                                        // 0x0ED8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AddCookGC();
	void AthenaProjectileSpawned(class AFortProjectileBase* ProjectileReference_0);
	void Cancelled_323490334D0637A64B5A0B8A74BD8BBA(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_B08560984B3818F6EECB3C9A92E61ADC(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cleanup_Trajectory_Display_On_End();
	void CleanupTrajectoryDisplay();
	void CleanupTrajectoryIndicatorOnUnequip();
	void Completed_323490334D0637A64B5A0B8A74BD8BBA(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_B08560984B3818F6EECB3C9A92E61ADC(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void ExecuteThrowGC();
	void ExecuteUbergraph_GA_Athena_Grenade_WithTrajectory_Deprecated(int32 EntryPoint);
	void GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult);
	void InitTrajectoryVariables();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnAbilityInputReleased();
	void OnBlendOut_758AC809498064C01C71318E141D1E46();
	void OnCancelled_758AC809498064C01C71318E141D1E46();
	void OnCompleted_758AC809498064C01C71318E141D1E46();
	void OnFinish_4B1D92B7427697E6BD9D58ACA0F87155();
	void OnFinish_D7F9D67243A9BA307AFBF7839EC5CA1C();
	void OnInterrupted_758AC809498064C01C71318E141D1E46();
	void RemoveCookGC();
	void Server_Replicate_Toss_Animation();
	void Server_SpawnProjectile(const struct FVector& Location, const struct FRotator& Direction);
	void SetupDummyProjectile();
	void SetupGrenade(float AimPitch, class UClass** Base_Grenade, float* Projectile_Speed, struct FFortGameplayEffectContainerSpec* Explosion_Gameplay_Spec, float* Projectile_Gravity_Scale, struct FFortGameplayEffectContainerSpec* Additional_Explosion_Gameplay_Spec);
	class AFortProjectileTrajectory* SpawnTrajectoryIndicator(bool bSpawnOnEquip);
	void TossGrenade();
	void Triggered_323490334D0637A64B5A0B8A74BD8BBA(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Triggered_B08560984B3818F6EECB3C9A92E61ADC(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void UpdateTrajectory();
	void UpdateTrajectorySpline();

	void CalcGrenadeSpeedFromPitch(float AimPitch, float* GrenadeSpeed) const;
	void GetOwningPlayer(class AFortPlayerPawn** Player_Pawn) const;
	TSubclassOf<class AFortProjectileTrajectory> GetProjectileTrajectoryActor() const;
	bool ShouldOnlyShowTrajectoryOnUse() const;
	void SpawnLocationAndRotation(struct FVector* OutLoc, struct FRotator* OutRot) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Grenade_WithTrajectory_Deprecated_C">();
	}
	static class UGA_Athena_Grenade_WithTrajectory_Deprecated_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Grenade_WithTrajectory_Deprecated_C>();
	}
};
static_assert(alignof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C) == 0x000008, "Wrong alignment on UGA_Athena_Grenade_WithTrajectory_Deprecated_C");
static_assert(sizeof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C) == 0x000EE0, "Wrong size on UGA_Athena_Grenade_WithTrajectory_Deprecated_C");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, UberGraphFrame) == 0x000B10, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, EventActivation) == 0x000B18, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, EventComplete) == 0x000B1C, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, Prj_Grenade) == 0x000B20, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::Prj_Grenade' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GrenadeSpeedMin) == 0x000B28, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GrenadeSpeedMin' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GrenadeSpeedMax) == 0x000B2C, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GrenadeSpeedMax' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GravityScale) == 0x000B30, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GravityScale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GrenadeSound) == 0x000B38, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GrenadeSound' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, EC_DefaultExplosion) == 0x000B40, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::EC_DefaultExplosion' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, EC_ReturnedEffect) == 0x000B48, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::EC_ReturnedEffect' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, EC_AdditionalReturnedEffect) == 0x000C00, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::EC_AdditionalReturnedEffect' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, ExplosionRadius) == 0x000CB8, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, AdditionalThrowAngle) == 0x000CBC, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::AdditionalThrowAngle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GrenadeDialogFeedback) == 0x000CC0, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GrenadeDialogFeedback' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GrenadeAmmo) == 0x000CD0, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GrenadeAmmo' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, PlasmaGrenades) == 0x000CD1, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::PlasmaGrenades' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, Flashbang) == 0x000CD2, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::Flashbang' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GrenadeTargetingOriginOffset) == 0x000CD8, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GrenadeTargetingOriginOffset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, DummyShouldBounce) == 0x000CF0, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::DummyShouldBounce' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, DummyBounciness) == 0x000CF4, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::DummyBounciness' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, DummyFriction) == 0x000CF8, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::DummyFriction' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, DummyMaxSpeed) == 0x000CFC, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::DummyMaxSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, DummyGravity) == 0x000D00, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::DummyGravity' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, DummyTimeStep) == 0x000D04, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::DummyTimeStep' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, DummyExtent) == 0x000D08, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::DummyExtent' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GrenadeTargetingOriginOffset_Crouched) == 0x000D10, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GrenadeTargetingOriginOffset_Crouched' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, InThrowWindup) == 0x000D28, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::InThrowWindup' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, TrajectoryIndicator) == 0x000D30, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::TrajectoryIndicator' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, TrajectoryIndicatorClass) == 0x000D38, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::TrajectoryIndicatorClass' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, ThrowWindupMontage) == 0x000D40, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::ThrowWindupMontage' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, AbilityKeyPressed) == 0x000D98, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::AbilityKeyPressed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, MaxSpeedPitch) == 0x000D9C, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::MaxSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, MinSpeedPitch) == 0x000DA0, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::MinSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, Event_Data) == 0x000DA8, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::Event_Data' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, PlayerPawn) == 0x000E58, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, MaxTossPitch) == 0x000E60, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::MaxTossPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, MaxTrajectoryBounces) == 0x000E64, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::MaxTrajectoryBounces' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, PostThrowCancelDelay) == 0x000E68, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::PostThrowCancelDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, PostThrowEndDelay) == 0x000E6C, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::PostThrowEndDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, ProjectileReference) == 0x000E70, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::ProjectileReference' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, DistanceFromInstigatorCheck) == 0x000E78, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::DistanceFromInstigatorCheck' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, UpdateTrajectoryTimerHandle) == 0x000E80, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::UpdateTrajectoryTimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, Spawned_On_Equip) == 0x000E88, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::Spawned_On_Equip' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, DummyCollisionChannel) == 0x000E89, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::DummyCollisionChannel' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GrenadeDecoHelper) == 0x000E90, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GrenadeDecoHelper' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GrenadeDecoTool) == 0x000E98, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GrenadeDecoTool' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, OnProjectileSpawn) == 0x000EA0, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::OnProjectileSpawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, QuestCreditTargetTag) == 0x000EB0, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::QuestCreditTargetTag' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, DummyMaxSteps) == 0x000ED0, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::DummyMaxSteps' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GC_CookLoop) == 0x000ED4, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GC_CookLoop' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Grenade_WithTrajectory_Deprecated_C, GC_OnThrow) == 0x000ED8, "Member 'UGA_Athena_Grenade_WithTrajectory_Deprecated_C::GC_OnThrow' has a wrong offset!");

}

