#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ZipLine_Pole_Capsules

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ZipLine_Pole_Capsules.ZipLine_Pole_Capsules_C.Set Small Overlap Collision Enabled
// 0x0002 (0x0002 - 0x0000)
struct ZipLine_Pole_Capsules_C_Set_Small_Overlap_Collision_Enabled final
{
public:
	bool                                          SetTo;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Capsules_C_Set_Small_Overlap_Collision_Enabled) == 0x000001, "Wrong alignment on ZipLine_Pole_Capsules_C_Set_Small_Overlap_Collision_Enabled");
static_assert(sizeof(ZipLine_Pole_Capsules_C_Set_Small_Overlap_Collision_Enabled) == 0x000002, "Wrong size on ZipLine_Pole_Capsules_C_Set_Small_Overlap_Collision_Enabled");
static_assert(offsetof(ZipLine_Pole_Capsules_C_Set_Small_Overlap_Collision_Enabled, SetTo) == 0x000000, "Member 'ZipLine_Pole_Capsules_C_Set_Small_Overlap_Collision_Enabled::SetTo' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_Set_Small_Overlap_Collision_Enabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ZipLine_Pole_Capsules_C_Set_Small_Overlap_Collision_Enabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ZipLine_Pole_Capsules.ZipLine_Pole_Capsules_C.ExecuteUbergraph_ZipLine_Pole_Capsules
// 0x0160 (0x0160 - 0x0000)
struct ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0070(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules) == 0x000008, "Wrong alignment on ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules");
static_assert(sizeof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules) == 0x000160, "Wrong size on ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, EntryPoint) == 0x000000, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::EntryPoint' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CustomEvent_OverlappedComponent_1) == 0x000020, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CustomEvent_OtherActor_1) == 0x000028, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CustomEvent_OtherComp_1) == 0x000030, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000038, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000040, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CustomEvent_OverlappedComponent) == 0x000050, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CustomEvent_OtherActor) == 0x000058, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CustomEvent_OtherComp) == 0x000060, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CustomEvent_OtherBodyIndex) == 0x000068, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CustomEvent_bFromSweep) == 0x00006C, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_CustomEvent_SweepResult) == 0x000070, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x000150, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'ZipLine_Pole_Capsules_C_ExecuteUbergraph_ZipLine_Pole_Capsules::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ZipLine_Pole_Capsules.ZipLine_Pole_Capsules_C.EndLargeCapsuleOverlap
// 0x0020 (0x0020 - 0x0000)
struct ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap) == 0x000008, "Wrong alignment on ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap");
static_assert(sizeof(ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap) == 0x000020, "Wrong size on ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap");
static_assert(offsetof(ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap, OverlappedComponent) == 0x000000, "Member 'ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap, OtherActor) == 0x000008, "Member 'ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap, OtherComp) == 0x000010, "Member 'ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap, OtherBodyIndex) == 0x000018, "Member 'ZipLine_Pole_Capsules_C_EndLargeCapsuleOverlap::OtherBodyIndex' has a wrong offset!");

// Function ZipLine_Pole_Capsules.ZipLine_Pole_Capsules_C.BeginLargeCapsuleOverlap
// 0x0100 (0x0100 - 0x0000)
struct ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap) == 0x000008, "Wrong alignment on ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap");
static_assert(sizeof(ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap) == 0x000100, "Wrong size on ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap");
static_assert(offsetof(ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap, OverlappedComponent) == 0x000000, "Member 'ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap, OtherActor) == 0x000008, "Member 'ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap, OtherComp) == 0x000010, "Member 'ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap, OtherBodyIndex) == 0x000018, "Member 'ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap, bFromSweep) == 0x00001C, "Member 'ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap, SweepResult) == 0x000020, "Member 'ZipLine_Pole_Capsules_C_BeginLargeCapsuleOverlap::SweepResult' has a wrong offset!");

}

