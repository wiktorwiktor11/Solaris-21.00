#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ResourceCountWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ResourceCountWidget.ResourceCountWidget_C.ExecuteUbergraph_ResourceCountWidget
// 0x0110 (0x0110 - 0x0000)
struct ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ResourceCount;                        // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ResourceCost;                         // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasInfiniteResources;                // 0x0014(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0018(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x002C(0x0014)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0040(0x00C0)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget) == 0x000010, "Wrong alignment on ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget");
static_assert(sizeof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget) == 0x000110, "Wrong size on ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, EntryPoint) == 0x000000, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, Temp_bool_Variable) == 0x000004, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, Temp_bool_Variable_1) == 0x000005, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, Temp_bool_Variable_2) == 0x000006, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, Temp_byte_Variable) == 0x000007, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, Temp_byte_Variable_1) == 0x000008, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, K2Node_Event_ResourceCount) == 0x00000C, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::K2Node_Event_ResourceCount' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, K2Node_Event_ResourceCost) == 0x000010, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::K2Node_Event_ResourceCost' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, K2Node_Event_bHasInfiniteResources) == 0x000014, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::K2Node_Event_bHasInfiniteResources' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000015, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, K2Node_Select_Default) == 0x000018, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, K2Node_Select_Default_1) == 0x00002C, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, K2Node_MakeStruct_SlateBrush) == 0x000040, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget, K2Node_Select_Default_2) == 0x000100, "Member 'ResourceCountWidget_C_ExecuteUbergraph_ResourceCountWidget::K2Node_Select_Default_2' has a wrong offset!");

// Function ResourceCountWidget.ResourceCountWidget_C.OnResourceCostSet
// 0x000C (0x000C - 0x0000)
struct ResourceCountWidget_C_OnResourceCostSet final
{
public:
	int32                                         ResourceCount;                                     // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ResourceCost;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasInfiniteResources;                             // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ResourceCountWidget_C_OnResourceCostSet) == 0x000004, "Wrong alignment on ResourceCountWidget_C_OnResourceCostSet");
static_assert(sizeof(ResourceCountWidget_C_OnResourceCostSet) == 0x00000C, "Wrong size on ResourceCountWidget_C_OnResourceCostSet");
static_assert(offsetof(ResourceCountWidget_C_OnResourceCostSet, ResourceCount) == 0x000000, "Member 'ResourceCountWidget_C_OnResourceCostSet::ResourceCount' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_OnResourceCostSet, ResourceCost) == 0x000004, "Member 'ResourceCountWidget_C_OnResourceCostSet::ResourceCost' has a wrong offset!");
static_assert(offsetof(ResourceCountWidget_C_OnResourceCostSet, bHasInfiniteResources) == 0x000008, "Member 'ResourceCountWidget_C_OnResourceCostSet::bHasInfiniteResources' has a wrong offset!");

}

