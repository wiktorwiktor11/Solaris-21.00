#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemAnimLayerInterface

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemAimOffset
// 0x0040 (0x0040 - 0x0000)
struct ItemAnimLayerInterface_C_ItemAimOffset final
{
public:
	struct FPoseLink                              InPose_AimOffset;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         AimOffsetAlpha;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              InPose_UpperLowerPreMeleeAO;                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemAimOffset_0;                                   // 0x0030(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemAimOffset) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemAimOffset");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemAimOffset) == 0x000040, "Wrong size on ItemAnimLayerInterface_C_ItemAimOffset");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemAimOffset, InPose_AimOffset) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemAimOffset::InPose_AimOffset' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemAimOffset, AimOffsetAlpha) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemAimOffset::AimOffsetAlpha' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemAimOffset, Yaw) == 0x000014, "Member 'ItemAnimLayerInterface_C_ItemAimOffset::Yaw' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemAimOffset, Pitch) == 0x000018, "Member 'ItemAnimLayerInterface_C_ItemAimOffset::Pitch' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemAimOffset, InPose_UpperLowerPreMeleeAO) == 0x000020, "Member 'ItemAnimLayerInterface_C_ItemAimOffset::InPose_UpperLowerPreMeleeAO' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemAimOffset, ItemAimOffset_0) == 0x000030, "Member 'ItemAnimLayerInterface_C_ItemAimOffset::ItemAimOffset_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemCrouchTurningAdditive
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemCrouchTurningAdditive final
{
public:
	struct FPoseLink                              ItemCrouchTurningAdditive_0;                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemCrouchTurningAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemCrouchTurningAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemCrouchTurningAdditive) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemCrouchTurningAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemCrouchTurningAdditive, ItemCrouchTurningAdditive_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemCrouchTurningAdditive::ItemCrouchTurningAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemFallAdditive
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemFallAdditive final
{
public:
	struct FPoseLink                              ItemFallAdditive_0;                                // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemFallAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemFallAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemFallAdditive) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemFallAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemFallAdditive, ItemFallAdditive_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemFallAdditive::ItemFallAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemFallLandAdditive
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemFallLandAdditive final
{
public:
	struct FPoseLink                              ItemFallLandAdditive_0;                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemFallLandAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemFallLandAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemFallLandAdditive) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemFallLandAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemFallLandAdditive, ItemFallLandAdditive_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemFallLandAdditive::ItemFallLandAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemFlyModeLoopAdditive
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemFlyModeLoopAdditive final
{
public:
	struct FPoseLink                              ItemFlyModeLoopAdditive_0;                         // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemFlyModeLoopAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemFlyModeLoopAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemFlyModeLoopAdditive) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemFlyModeLoopAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemFlyModeLoopAdditive, ItemFlyModeLoopAdditive_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemFlyModeLoopAdditive::ItemFlyModeLoopAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemFlyModeStartAdditive
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemFlyModeStartAdditive final
{
public:
	struct FPoseLink                              ItemFlyModeStartAdditive_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemFlyModeStartAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemFlyModeStartAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemFlyModeStartAdditive) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemFlyModeStartAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemFlyModeStartAdditive, ItemFlyModeStartAdditive_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemFlyModeStartAdditive::ItemFlyModeStartAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemFullBodyOverride
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemFullBodyOverride final
{
public:
	struct FPoseLink                              InPoseFullBody;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemFullBodyOverride_0;                            // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemFullBodyOverride) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemFullBodyOverride");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemFullBodyOverride) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemFullBodyOverride");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemFullBodyOverride, InPoseFullBody) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemFullBodyOverride::InPoseFullBody' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemFullBodyOverride, ItemFullBodyOverride_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemFullBodyOverride::ItemFullBodyOverride_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemFullBodySprint
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemFullBodySprint final
{
public:
	struct FPoseLink                              InPoseSprint;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemFullBodySprint_0;                              // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemFullBodySprint) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemFullBodySprint");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemFullBodySprint) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemFullBodySprint");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemFullBodySprint, InPoseSprint) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemFullBodySprint::InPoseSprint' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemFullBodySprint, ItemFullBodySprint_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemFullBodySprint::ItemFullBodySprint_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemIdleAdditive
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemIdleAdditive final
{
public:
	struct FPoseLink                              InPoseIdleAdditive;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemIdleAdditive_0;                                // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemIdleAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemIdleAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemIdleAdditive) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemIdleAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemIdleAdditive, InPoseIdleAdditive) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemIdleAdditive::InPoseIdleAdditive' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemIdleAdditive, ItemIdleAdditive_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemIdleAdditive::ItemIdleAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemJetPackJumpAdditive
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemJetPackJumpAdditive final
{
public:
	struct FPoseLink                              ItemJetPackJumpAdditive_0;                         // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemJetPackJumpAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemJetPackJumpAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemJetPackJumpAdditive) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemJetPackJumpAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJetPackJumpAdditive, ItemJetPackJumpAdditive_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemJetPackJumpAdditive::ItemJetPackJumpAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemJetPackStartAdditive
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemJetPackStartAdditive final
{
public:
	struct FPoseLink                              ItemJetPackStartAdditive_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemJetPackStartAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemJetPackStartAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemJetPackStartAdditive) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemJetPackStartAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJetPackStartAdditive, ItemJetPackStartAdditive_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemJetPackStartAdditive::ItemJetPackStartAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemJogPostPivotAdditive
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemJogPostPivotAdditive final
{
public:
	struct FPoseLink                              InPosePostPivotAdditive;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemJogPostPivotAdditive_0;                        // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemJogPostPivotAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemJogPostPivotAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemJogPostPivotAdditive) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemJogPostPivotAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJogPostPivotAdditive, InPosePostPivotAdditive) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemJogPostPivotAdditive::InPosePostPivotAdditive' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJogPostPivotAdditive, ItemJogPostPivotAdditive_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemJogPostPivotAdditive::ItemJogPostPivotAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemJogPrePivotAdditive
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemJogPrePivotAdditive final
{
public:
	struct FPoseLink                              InPosePrePivotAdditive;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemJogPrePivotAdditive_0;                         // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemJogPrePivotAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemJogPrePivotAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemJogPrePivotAdditive) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemJogPrePivotAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJogPrePivotAdditive, InPosePrePivotAdditive) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemJogPrePivotAdditive::InPosePrePivotAdditive' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJogPrePivotAdditive, ItemJogPrePivotAdditive_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemJogPrePivotAdditive::ItemJogPrePivotAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemJogStartAdditive
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemJogStartAdditive final
{
public:
	struct FPoseLink                              InPoseJogStartAdditive;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemJogStartAdditive_0;                            // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemJogStartAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemJogStartAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemJogStartAdditive) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemJogStartAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJogStartAdditive, InPoseJogStartAdditive) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemJogStartAdditive::InPoseJogStartAdditive' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJogStartAdditive, ItemJogStartAdditive_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemJogStartAdditive::ItemJogStartAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemJogStopAdditive
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemJogStopAdditive final
{
public:
	struct FPoseLink                              InPoseJogStopAdditive;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemJogStopAdditive_0;                             // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemJogStopAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemJogStopAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemJogStopAdditive) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemJogStopAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJogStopAdditive, InPoseJogStopAdditive) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemJogStopAdditive::InPoseJogStopAdditive' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJogStopAdditive, ItemJogStopAdditive_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemJogStopAdditive::ItemJogStopAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemJumpLoopAdditive
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemJumpLoopAdditive final
{
public:
	struct FPoseLink                              ItemJumpLoopAdditive_0;                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemJumpLoopAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemJumpLoopAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemJumpLoopAdditive) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemJumpLoopAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJumpLoopAdditive, ItemJumpLoopAdditive_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemJumpLoopAdditive::ItemJumpLoopAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemJumpUpAdditive
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemJumpUpAdditive final
{
public:
	struct FPoseLink                              ItemJumpUpAdditive_0;                              // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemJumpUpAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemJumpUpAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemJumpUpAdditive) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemJumpUpAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemJumpUpAdditive, ItemJumpUpAdditive_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemJumpUpAdditive::ItemJumpUpAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemLowerBodyJogPostPivot
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemLowerBodyJogPostPivot final
{
public:
	struct FPoseLink                              InPoseLowerBodyJogPostPivot;                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemLowerBodyJogPostPivot_0;                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemLowerBodyJogPostPivot) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemLowerBodyJogPostPivot");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemLowerBodyJogPostPivot) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemLowerBodyJogPostPivot");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyJogPostPivot, InPoseLowerBodyJogPostPivot) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyJogPostPivot::InPoseLowerBodyJogPostPivot' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyJogPostPivot, ItemLowerBodyJogPostPivot_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyJogPostPivot::ItemLowerBodyJogPostPivot_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemLowerBodyJogPrePivot
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemLowerBodyJogPrePivot final
{
public:
	struct FPoseLink                              InPoseLowerBodyJogPrePivot;                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemLowerBodyJogPrePivot_0;                        // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemLowerBodyJogPrePivot) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemLowerBodyJogPrePivot");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemLowerBodyJogPrePivot) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemLowerBodyJogPrePivot");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyJogPrePivot, InPoseLowerBodyJogPrePivot) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyJogPrePivot::InPoseLowerBodyJogPrePivot' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyJogPrePivot, ItemLowerBodyJogPrePivot_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyJogPrePivot::ItemLowerBodyJogPrePivot_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemLowerBodyJogStart
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemLowerBodyJogStart final
{
public:
	struct FPoseLink                              InPoseLowerBodyJogStart;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemLowerBodyJogStart_0;                           // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemLowerBodyJogStart) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemLowerBodyJogStart");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemLowerBodyJogStart) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemLowerBodyJogStart");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyJogStart, InPoseLowerBodyJogStart) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyJogStart::InPoseLowerBodyJogStart' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyJogStart, ItemLowerBodyJogStart_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyJogStart::ItemLowerBodyJogStart_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemLowerBodyJogStop
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemLowerBodyJogStop final
{
public:
	struct FPoseLink                              InPoseLowerBodyJogStop;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemLowerBodyJogStop_0;                            // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemLowerBodyJogStop) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemLowerBodyJogStop");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemLowerBodyJogStop) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemLowerBodyJogStop");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyJogStop, InPoseLowerBodyJogStop) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyJogStop::InPoseLowerBodyJogStop' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyJogStop, ItemLowerBodyJogStop_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyJogStop::ItemLowerBodyJogStop_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemLowerBodyLeanAdditive
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemLowerBodyLeanAdditive final
{
public:
	struct FPoseLink                              InPoseLowerBodyLeanAdditive;                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemLowerBodyLeanAdditive_0;                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemLowerBodyLeanAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemLowerBodyLeanAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemLowerBodyLeanAdditive) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemLowerBodyLeanAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyLeanAdditive, InPoseLowerBodyLeanAdditive) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyLeanAdditive::InPoseLowerBodyLeanAdditive' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyLeanAdditive, ItemLowerBodyLeanAdditive_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyLeanAdditive::ItemLowerBodyLeanAdditive_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemLowerBodyMovement
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemLowerBodyMovement final
{
public:
	struct FPoseLink                              InPoseLowerBodyMovement;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemLowerBodyMovement_0;                           // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemLowerBodyMovement) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemLowerBodyMovement");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemLowerBodyMovement) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemLowerBodyMovement");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyMovement, InPoseLowerBodyMovement) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyMovement::InPoseLowerBodyMovement' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemLowerBodyMovement, ItemLowerBodyMovement_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemLowerBodyMovement::ItemLowerBodyMovement_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemPreIK
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemPreIK final
{
public:
	struct FPoseLink                              InPose_PreIK;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemPreIK_0;                                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemPreIK) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemPreIK");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemPreIK) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemPreIK");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemPreIK, InPose_PreIK) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemPreIK::InPose_PreIK' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemPreIK, ItemPreIK_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemPreIK::ItemPreIK_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemRelaxedEntry
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemRelaxedEntry final
{
public:
	struct FPoseLink                              InPoseRelaxedEntry;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemRelaxedEntry_0;                                // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemRelaxedEntry) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemRelaxedEntry");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemRelaxedEntry) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemRelaxedEntry");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemRelaxedEntry, InPoseRelaxedEntry) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemRelaxedEntry::InPoseRelaxedEntry' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemRelaxedEntry, ItemRelaxedEntry_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemRelaxedEntry::ItemRelaxedEntry_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemSkeletalControl
// 0x0020 (0x0020 - 0x0000)
struct ItemAnimLayerInterface_C_ItemSkeletalControl final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemSkeletalControl_0;                             // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemSkeletalControl) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemSkeletalControl");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemSkeletalControl) == 0x000020, "Wrong size on ItemAnimLayerInterface_C_ItemSkeletalControl");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemSkeletalControl, InPose) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemSkeletalControl::InPose' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemSkeletalControl, ItemSkeletalControl_0) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemSkeletalControl::ItemSkeletalControl_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemSlopeSliding
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemSlopeSliding final
{
public:
	struct FPoseLink                              ItemSlopeSliding_0;                                // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemSlopeSliding) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemSlopeSliding");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemSlopeSliding) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemSlopeSliding");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemSlopeSliding, ItemSlopeSliding_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemSlopeSliding::ItemSlopeSliding_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemSwimJumpFallLoop
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemSwimJumpFallLoop final
{
public:
	struct FPoseLink                              ItemSwimJumpFallLoop_0;                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemSwimJumpFallLoop) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemSwimJumpFallLoop");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemSwimJumpFallLoop) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemSwimJumpFallLoop");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemSwimJumpFallLoop, ItemSwimJumpFallLoop_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemSwimJumpFallLoop::ItemSwimJumpFallLoop_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemSwimJumpStart
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemSwimJumpStart final
{
public:
	struct FPoseLink                              ItemSwimJumpStart_0;                               // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemSwimJumpStart) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemSwimJumpStart");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemSwimJumpStart) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemSwimJumpStart");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemSwimJumpStart, ItemSwimJumpStart_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemSwimJumpStart::ItemSwimJumpStart_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemSwimJumpStartLoop
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemSwimJumpStartLoop final
{
public:
	struct FPoseLink                              ItemSwimJumpStartLoop_0;                           // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemSwimJumpStartLoop) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemSwimJumpStartLoop");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemSwimJumpStartLoop) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemSwimJumpStartLoop");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemSwimJumpStartLoop, ItemSwimJumpStartLoop_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemSwimJumpStartLoop::ItemSwimJumpStartLoop_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemSwimJumpSurfaceEnd
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemSwimJumpSurfaceEnd final
{
public:
	struct FPoseLink                              ItemSwimJumpSurfaceEnd_0;                          // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemSwimJumpSurfaceEnd) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemSwimJumpSurfaceEnd");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemSwimJumpSurfaceEnd) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemSwimJumpSurfaceEnd");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemSwimJumpSurfaceEnd, ItemSwimJumpSurfaceEnd_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemSwimJumpSurfaceEnd::ItemSwimJumpSurfaceEnd_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemSwimJumpSurfaceLoop
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemSwimJumpSurfaceLoop final
{
public:
	struct FPoseLink                              ItemSwimJumpSurfaceLoop_0;                         // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemSwimJumpSurfaceLoop) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemSwimJumpSurfaceLoop");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemSwimJumpSurfaceLoop) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemSwimJumpSurfaceLoop");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemSwimJumpSurfaceLoop, ItemSwimJumpSurfaceLoop_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemSwimJumpSurfaceLoop::ItemSwimJumpSurfaceLoop_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemUpperBody
// 0x0260 (0x0260 - 0x0000)
struct ItemAnimLayerInterface_C_ItemUpperBody final
{
public:
	struct FPoseLink                              InPoseUpperBody;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FFortAnimInput_AdjustedAim             InputParam;                                        // 0x0010(0x023C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              ItemUpperBody_0;                                   // 0x0250(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemUpperBody) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemUpperBody");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemUpperBody) == 0x000260, "Wrong size on ItemAnimLayerInterface_C_ItemUpperBody");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemUpperBody, InPoseUpperBody) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemUpperBody::InPoseUpperBody' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemUpperBody, InputParam) == 0x000010, "Member 'ItemAnimLayerInterface_C_ItemUpperBody::InputParam' has a wrong offset!");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemUpperBody, ItemUpperBody_0) == 0x000250, "Member 'ItemAnimLayerInterface_C_ItemUpperBody::ItemUpperBody_0' has a wrong offset!");

// Function ItemAnimLayerInterface.ItemAnimLayerInterface_C.ItemZipLineStartAdditive
// 0x0010 (0x0010 - 0x0000)
struct ItemAnimLayerInterface_C_ItemZipLineStartAdditive final
{
public:
	struct FPoseLink                              ItemZipLineStartAdditive_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ItemAnimLayerInterface_C_ItemZipLineStartAdditive) == 0x000008, "Wrong alignment on ItemAnimLayerInterface_C_ItemZipLineStartAdditive");
static_assert(sizeof(ItemAnimLayerInterface_C_ItemZipLineStartAdditive) == 0x000010, "Wrong size on ItemAnimLayerInterface_C_ItemZipLineStartAdditive");
static_assert(offsetof(ItemAnimLayerInterface_C_ItemZipLineStartAdditive, ItemZipLineStartAdditive_0) == 0x000000, "Member 'ItemAnimLayerInterface_C_ItemZipLineStartAdditive::ItemZipLineStartAdditive_0' has a wrong offset!");

}

