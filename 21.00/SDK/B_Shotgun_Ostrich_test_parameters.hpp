#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Shotgun_Ostrich_test

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_Shotgun_Ostrich_test.B_Shotgun_Ostrich_test_C.ExecuteUbergraph_B_Shotgun_Ostrich_test
// 0x00B0 (0x00B0 - 0x0000)
struct B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NumRocketsLoaded;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Event_AttachToMesh_2;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_AttachToSocket_2;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Event_AttachToMesh_1;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_AttachToSocket_1;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Event_AttachToMesh;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_AttachToSocket;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPersistentFire;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSecondaryFire;                       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_2;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue_2; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMagazineAmmoCount_ReturnValue;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test) == 0x000008, "Wrong alignment on B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test");
static_assert(sizeof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test) == 0x0000B0, "Wrong size on B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, EntryPoint) == 0x000000, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, K2Node_Event_NumRocketsLoaded) == 0x000004, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::K2Node_Event_NumRocketsLoaded' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, K2Node_Event_AttachToMesh_2) == 0x000008, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::K2Node_Event_AttachToMesh_2' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, K2Node_Event_AttachToSocket_2) == 0x000010, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::K2Node_Event_AttachToSocket_2' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000018, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, K2Node_Event_AttachToMesh_1) == 0x000020, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::K2Node_Event_AttachToMesh_1' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, K2Node_Event_AttachToSocket_1) == 0x000028, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::K2Node_Event_AttachToSocket_1' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000030, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, K2Node_Event_AttachToMesh) == 0x000038, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::K2Node_Event_AttachToMesh' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, K2Node_Event_AttachToSocket) == 0x000040, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::K2Node_Event_AttachToSocket' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_GetInstigator_ReturnValue) == 0x000060, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000068, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_GetInstigator_ReturnValue_1) == 0x000070, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, K2Node_Event_bPersistentFire) == 0x000078, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::K2Node_Event_bPersistentFire' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, K2Node_Event_bSecondaryFire) == 0x000079, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::K2Node_Event_bSecondaryFire' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1) == 0x000080, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_GetInstigator_ReturnValue_2) == 0x000088, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_GetInstigator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_GetFortPlayerControllerFromActor_ReturnValue_2) == 0x000090, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_GetFortPlayerControllerFromActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_GetMagazineAmmoCount_ReturnValue) == 0x000098, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_GetMagazineAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00009C, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_MapRangeUnclamped_ReturnValue) == 0x0000A0, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000A8, "Member 'B_Shotgun_Ostrich_test_C_ExecuteUbergraph_B_Shotgun_Ostrich_test::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function B_Shotgun_Ostrich_test.B_Shotgun_Ostrich_test_C.OnLoadedRockets
// 0x0004 (0x0004 - 0x0000)
struct B_Shotgun_Ostrich_test_C_OnLoadedRockets final
{
public:
	int32                                         NumRocketsLoaded;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Shotgun_Ostrich_test_C_OnLoadedRockets) == 0x000004, "Wrong alignment on B_Shotgun_Ostrich_test_C_OnLoadedRockets");
static_assert(sizeof(B_Shotgun_Ostrich_test_C_OnLoadedRockets) == 0x000004, "Wrong size on B_Shotgun_Ostrich_test_C_OnLoadedRockets");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_OnLoadedRockets, NumRocketsLoaded) == 0x000000, "Member 'B_Shotgun_Ostrich_test_C_OnLoadedRockets::NumRocketsLoaded' has a wrong offset!");

// Function B_Shotgun_Ostrich_test.B_Shotgun_Ostrich_test_C.OnPlayWeaponFireFX
// 0x0002 (0x0002 - 0x0000)
struct B_Shotgun_Ostrich_test_C_OnPlayWeaponFireFX final
{
public:
	bool                                          bPersistentFire;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSecondaryFire;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Shotgun_Ostrich_test_C_OnPlayWeaponFireFX) == 0x000001, "Wrong alignment on B_Shotgun_Ostrich_test_C_OnPlayWeaponFireFX");
static_assert(sizeof(B_Shotgun_Ostrich_test_C_OnPlayWeaponFireFX) == 0x000002, "Wrong size on B_Shotgun_Ostrich_test_C_OnPlayWeaponFireFX");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_OnPlayWeaponFireFX, bPersistentFire) == 0x000000, "Member 'B_Shotgun_Ostrich_test_C_OnPlayWeaponFireFX::bPersistentFire' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_OnPlayWeaponFireFX, bSecondaryFire) == 0x000001, "Member 'B_Shotgun_Ostrich_test_C_OnPlayWeaponFireFX::bSecondaryFire' has a wrong offset!");

// Function B_Shotgun_Ostrich_test.B_Shotgun_Ostrich_test_C.OnRocketFired
// 0x0010 (0x0010 - 0x0000)
struct B_Shotgun_Ostrich_test_C_OnRocketFired final
{
public:
	class USceneComponent*                        AttachToMesh;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachToSocket;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Shotgun_Ostrich_test_C_OnRocketFired) == 0x000008, "Wrong alignment on B_Shotgun_Ostrich_test_C_OnRocketFired");
static_assert(sizeof(B_Shotgun_Ostrich_test_C_OnRocketFired) == 0x000010, "Wrong size on B_Shotgun_Ostrich_test_C_OnRocketFired");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_OnRocketFired, AttachToMesh) == 0x000000, "Member 'B_Shotgun_Ostrich_test_C_OnRocketFired::AttachToMesh' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_OnRocketFired, AttachToSocket) == 0x000008, "Member 'B_Shotgun_Ostrich_test_C_OnRocketFired::AttachToSocket' has a wrong offset!");

// Function B_Shotgun_Ostrich_test.B_Shotgun_Ostrich_test_C.OnRocketFiringStarted
// 0x0010 (0x0010 - 0x0000)
struct B_Shotgun_Ostrich_test_C_OnRocketFiringStarted final
{
public:
	class USceneComponent*                        AttachToMesh;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachToSocket;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Shotgun_Ostrich_test_C_OnRocketFiringStarted) == 0x000008, "Wrong alignment on B_Shotgun_Ostrich_test_C_OnRocketFiringStarted");
static_assert(sizeof(B_Shotgun_Ostrich_test_C_OnRocketFiringStarted) == 0x000010, "Wrong size on B_Shotgun_Ostrich_test_C_OnRocketFiringStarted");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_OnRocketFiringStarted, AttachToMesh) == 0x000000, "Member 'B_Shotgun_Ostrich_test_C_OnRocketFiringStarted::AttachToMesh' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_OnRocketFiringStarted, AttachToSocket) == 0x000008, "Member 'B_Shotgun_Ostrich_test_C_OnRocketFiringStarted::AttachToSocket' has a wrong offset!");

// Function B_Shotgun_Ostrich_test.B_Shotgun_Ostrich_test_C.OnRocketLauncherSettle
// 0x0010 (0x0010 - 0x0000)
struct B_Shotgun_Ostrich_test_C_OnRocketLauncherSettle final
{
public:
	class USceneComponent*                        AttachToMesh;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachToSocket;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Shotgun_Ostrich_test_C_OnRocketLauncherSettle) == 0x000008, "Wrong alignment on B_Shotgun_Ostrich_test_C_OnRocketLauncherSettle");
static_assert(sizeof(B_Shotgun_Ostrich_test_C_OnRocketLauncherSettle) == 0x000010, "Wrong size on B_Shotgun_Ostrich_test_C_OnRocketLauncherSettle");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_OnRocketLauncherSettle, AttachToMesh) == 0x000000, "Member 'B_Shotgun_Ostrich_test_C_OnRocketLauncherSettle::AttachToMesh' has a wrong offset!");
static_assert(offsetof(B_Shotgun_Ostrich_test_C_OnRocketLauncherSettle, AttachToSocket) == 0x000008, "Member 'B_Shotgun_Ostrich_test_C_OnRocketLauncherSettle::AttachToSocket' has a wrong offset!");

}

