#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BoarRidingPlayerLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function BoarRidingPlayerLayerAnimBP.BoarRidingPlayerLayerAnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct BoarRidingPlayerLayerAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BoarRidingPlayerLayerAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on BoarRidingPlayerLayerAnimBP_C_AnimGraph");
static_assert(sizeof(BoarRidingPlayerLayerAnimBP_C_AnimGraph) == 0x000010, "Wrong size on BoarRidingPlayerLayerAnimBP_C_AnimGraph");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'BoarRidingPlayerLayerAnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function BoarRidingPlayerLayerAnimBP.BoarRidingPlayerLayerAnimBP_C.BlueprintCollectRidableAnimBPData
// 0x0008 (0x0008 - 0x0000)
struct BoarRidingPlayerLayerAnimBP_C_BlueprintCollectRidableAnimBPData final
{
public:
	const class UAnimInstance*                    RidableAnimInstance;                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BoarRidingPlayerLayerAnimBP_C_BlueprintCollectRidableAnimBPData) == 0x000008, "Wrong alignment on BoarRidingPlayerLayerAnimBP_C_BlueprintCollectRidableAnimBPData");
static_assert(sizeof(BoarRidingPlayerLayerAnimBP_C_BlueprintCollectRidableAnimBPData) == 0x000008, "Wrong size on BoarRidingPlayerLayerAnimBP_C_BlueprintCollectRidableAnimBPData");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_BlueprintCollectRidableAnimBPData, RidableAnimInstance) == 0x000000, "Member 'BoarRidingPlayerLayerAnimBP_C_BlueprintCollectRidableAnimBPData::RidableAnimInstance' has a wrong offset!");

// Function BoarRidingPlayerLayerAnimBP.BoarRidingPlayerLayerAnimBP_C.ExecuteUbergraph_BoarRidingPlayerLayerAnimBP
// 0x0010 (0x0010 - 0x0000)
struct BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAnimInstance*                    K2Node_Event_RidableAnimInstance;                  // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP) == 0x000008, "Wrong alignment on BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP");
static_assert(sizeof(BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP) == 0x000010, "Wrong size on BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP, EntryPoint) == 0x000000, "Member 'BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP, K2Node_Event_RidableAnimInstance) == 0x000008, "Member 'BoarRidingPlayerLayerAnimBP_C_ExecuteUbergraph_BoarRidingPlayerLayerAnimBP::K2Node_Event_RidableAnimInstance' has a wrong offset!");

// Function BoarRidingPlayerLayerAnimBP.BoarRidingPlayerLayerAnimBP_C.GetMainAnimBPData_Boar
// 0x0018 (0x0018 - 0x0000)
struct BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar final
{
public:
	class UObject*                                AnimInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBurt_AnimBP_C*                         K2Node_DynamicCast_AsBurt_Anim_BP;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar) == 0x000008, "Wrong alignment on BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar");
static_assert(sizeof(BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar) == 0x000018, "Wrong size on BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar, AnimInstance) == 0x000000, "Member 'BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar::AnimInstance' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar, K2Node_DynamicCast_AsBurt_Anim_BP) == 0x000008, "Member 'BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar::K2Node_DynamicCast_AsBurt_Anim_BP' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BoarRidingPlayerLayerAnimBP_C_GetMainAnimBPData_Boar::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BoarRidingPlayerLayerAnimBP.BoarRidingPlayerLayerAnimBP_C.VehicleFullBodyOverride
// 0x0030 (0x0030 - 0x0000)
struct BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride final
{
public:
	struct FPoseLink                              InPoseFullBody;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              InPoseUpperAndLowerCachePose;                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              VehicleFullBodyOverride_0;                         // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride) == 0x000008, "Wrong alignment on BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride");
static_assert(sizeof(BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride) == 0x000030, "Wrong size on BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride, InPoseFullBody) == 0x000000, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride::InPoseFullBody' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride, InPoseUpperAndLowerCachePose) == 0x000010, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride::InPoseUpperAndLowerCachePose' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride, VehicleFullBodyOverride_0) == 0x000020, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleFullBodyOverride::VehicleFullBodyOverride_0' has a wrong offset!");

// Function BoarRidingPlayerLayerAnimBP.BoarRidingPlayerLayerAnimBP_C.VehicleLowerBodyOverride
// 0x0030 (0x0030 - 0x0000)
struct BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride final
{
public:
	struct FPoseLink                              InPoseLowerBodyDefault;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              InPoseUpperBody;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              VehicleLowerBodyOverride_0;                        // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride) == 0x000008, "Wrong alignment on BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride");
static_assert(sizeof(BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride) == 0x000030, "Wrong size on BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride, InPoseLowerBodyDefault) == 0x000000, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride::InPoseLowerBodyDefault' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride, InPoseUpperBody) == 0x000010, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride::InPoseUpperBody' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride, VehicleLowerBodyOverride_0) == 0x000020, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleLowerBodyOverride::VehicleLowerBodyOverride_0' has a wrong offset!");

// Function BoarRidingPlayerLayerAnimBP.BoarRidingPlayerLayerAnimBP_C.VehicleSplitBodyOverride
// 0x00B8 (0x00B8 - 0x0000)
struct BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride final
{
public:
	struct FPoseLink                              InPoseSplitBody;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              InPoseUpperAndLowerBody;                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FFortAnimInput_TurnInPlace             TurnInPlace;                                       // 0x0020(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FPoseLink                              InPoseUpperAndLowerBodyRemoveRoot;                 // 0x0098(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              VehicleSplitBodyOverride_0;                        // 0x00A8(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride) == 0x000008, "Wrong alignment on BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride");
static_assert(sizeof(BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride) == 0x0000B8, "Wrong size on BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride, InPoseSplitBody) == 0x000000, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride::InPoseSplitBody' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride, InPoseUpperAndLowerBody) == 0x000010, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride::InPoseUpperAndLowerBody' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride, TurnInPlace) == 0x000020, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride::TurnInPlace' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride, InPoseUpperAndLowerBodyRemoveRoot) == 0x000098, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride::InPoseUpperAndLowerBodyRemoveRoot' has a wrong offset!");
static_assert(offsetof(BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride, VehicleSplitBodyOverride_0) == 0x0000A8, "Member 'BoarRidingPlayerLayerAnimBP_C_VehicleSplitBodyOverride::VehicleSplitBodyOverride_0' has a wrong offset!");

}

