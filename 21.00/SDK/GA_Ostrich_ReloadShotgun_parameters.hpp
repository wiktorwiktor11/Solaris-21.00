#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ostrich_ReloadShotgun

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_Ostrich_ReloadShotgun.GA_Ostrich_ReloadShotgun_C.ExecuteUbergraph_GA_Ostrich_ReloadShotgun
// 0x0050 (0x0050 - 0x0000)
struct GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetVehicleActor_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortCharacterVehicle_Ostrich*          K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun) == 0x000008, "Wrong alignment on GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun");
static_assert(sizeof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun) == 0x000050, "Wrong size on GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun, EntryPoint) == 0x000000, "Member 'GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000018, "Member 'GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000020, "Member 'GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun, CallFunc_GetVehicleActor_ReturnValue) == 0x000030, "Member 'GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun::CallFunc_GetVehicleActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun, K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich) == 0x000040, "Member 'GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun::K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'GA_Ostrich_ReloadShotgun_C_ExecuteUbergraph_GA_Ostrich_ReloadShotgun::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_Ostrich_ReloadShotgun.GA_Ostrich_ReloadShotgun_C.ServerReload
// 0x0028 (0x0028 - 0x0000)
struct GA_Ostrich_ReloadShotgun_C_ServerReload final
{
public:
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeaponRanged_Ostrich*              K2Node_DynamicCast_AsFort_Weapon_Ranged_Ostrich;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Ostrich_ReloadShotgun_C_ServerReload) == 0x000008, "Wrong alignment on GA_Ostrich_ReloadShotgun_C_ServerReload");
static_assert(sizeof(GA_Ostrich_ReloadShotgun_C_ServerReload) == 0x000028, "Wrong size on GA_Ostrich_ReloadShotgun_C_ServerReload");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ServerReload, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_Ostrich_ReloadShotgun_C_ServerReload::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ServerReload, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000008, "Member 'GA_Ostrich_ReloadShotgun_C_ServerReload::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ServerReload, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_Ostrich_ReloadShotgun_C_ServerReload::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ServerReload, K2Node_DynamicCast_AsFort_Weapon_Ranged_Ostrich) == 0x000018, "Member 'GA_Ostrich_ReloadShotgun_C_ServerReload::K2Node_DynamicCast_AsFort_Weapon_Ranged_Ostrich' has a wrong offset!");
static_assert(offsetof(GA_Ostrich_ReloadShotgun_C_ServerReload, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'GA_Ostrich_ReloadShotgun_C_ServerReload::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

